buddycloud-server (0.1) unstable; urgency=medium

  [ Astro ]
  * operations: all nodes in defaultConfiguration accessModel=authorize
  * operations: posts & subscriptions accessModel=authorize in defaultConfiguration
  * buddycloud-server 0.3.2
  * Cakefile: version.js + 

  * operations: fix run notifications control flow
  * build_binary.sh: get bin/buddycloud-server out of the way before npm i
  * buddycloud-server 0.3.1
  * package.json: honor all contributors
  * Merge remote-tracking branch 'schnouki/patch-1'
  * .npmignore: exclude debian/* from npm pkgs
  * buddycloud-server 0.3.0
  * package.json: bump dep versions
  * operations: prevent unsubscribing/demoting the node owner
  * operations: fix PushInbox callback
  * operations: run notifies first, then syncs, then calls back
  * pubsub_server: lower logging
  * operations: fix PushInbox newNodes
  * operations: move PushInbox syncNode post transaction
  * operations: PushInbox should work even if syncNode had hickups
  * operations: syncNode when PushInbox created it
  * operations: fix PushInbox notification & newModerators
  * model_postgres: fix & simplify purgeNode()
  * sync: fixes
  * sync: purge node if no local subscribers
  * purge node when local unsubscription is pushed from remote
  * operations: fix generateSubscriptionsNotifications followee
  * operations: fix PushInbox newModerators nodes
  * xmpp connection: doc, serialize stanzas only once
  * operations: NewModeratorNotify needs listener, not user
  * operations: fix NewModeratorNotify listener
  * operations: log Operation name
  * model_postgres: must quote "user" column for Postgres
  * operations: NewModeratorNotify must cb()
  * operations: Notify notifies w/ node
  * operations: fix Notify otherListeners
  * pubsub_client: rm debug
  * operations: NewModeratorNotify notifies w/ node & listener
  * model_postgres: optional Transaction callbacks
  * operations: fix Notify filterSubscription & filterAffiliation invokation
  * operations: fix this binding
  * operations: no pending subscriptions in subscriptions node
  * operations: NewModeratorNotify
  * operations: doc, filter subscriptions and affiliations for non-moderators
  * operations: reorganize
  * clean up logging
  * operations: posts node defaultAffiliation='publisher'
  * sync: fix AffiliationsSynchronization typo
  * buddycloud-server 0.2.3
  * package.json: fix install script
  * build_binary.sh: bump node.js version
  * buddycloud-server 0.2.2
  * package.json: add preinstall cake build
  * operations: fix notifications
  * build_binary.sh: bump node.js version
  * buddycloud-server 0.2.1
  * operations: fix Notify subscriptios node items
  * operations: fix Notify callback result
  * operations: BrowseNodeItems for subscriptions node calls getSubscriptions not getSubscription
  * operations: syntax fixes
  * operations: Notify subscriptions fixes
  * operations: subscriptions node notifications
  * operations: BrowseNodeItems for subscriptions node
  * sync: require errors
  * sync: avoid error output when omitting local node
  * router, sync: improve logging
  * backend_pubsub: PubsubBackend.notify listener robustness
  * operations: fix Subscribe defaultAffiliation
  * operations: fix ManageNodeAffiliations control flow
  * pubsub_server: PubsubOwnerSetAffiliationsRequest syntax fix
  * operations: fix requiredAffiliation()
  * operations: requiredAffiliation can be function to allow moderators approving topic channel subscribers
  * operations: ManageNodeSubscriptions refactor for efficiency
  * operations: ManageNodeSubscriptions should set new affiliations to defaultAffiliation
  * operations: fix Notify jid/user
  * operations: Notify should notify all users pertained by a subscription
  * operations: 'unsubscribe-node' notifies unsubscribed user
  * operations, pubsub_client: there's no "unsubscribed" subscription, only "none"
  * pubsub_server: PubsubOwnerSetSubscriptionsRequest syntax fix
  * operations: Unsubscribe needs PrivilegedOperation methods
  * operations: Unsubscribed is not a PrivilegedOperation but a ModelOperation
  * operations: fix callback scope
  * pubsub_server: robustify PubsubItemsRequest
  * operations: syntax
  * pubsub_server, operations: support for RetrieveItems by itemIds
  * build_binary.sh: bump node.js version to 0.6.10
  * buddycloud-server 0.2.0
  * operations: CreateNode should not allow creation with empty nodeUser username
  * operations: fix CreateNode defaults & creationDate
  * operations: fix CreateNode isTopic switcheroo
  * router: fix autosubscribeNewUsers operation name
  * router: autosubscribeNewUsers
  * config.js.example: default checkCreateNode hook checks for a specific topic domain
  * operations: fix CreateNode node typo
  * operations: fix CreateNode config
  * pubsub_server, operations: CreateNode with optional config
  * operations: fix CreateNode setSubscription()
  * operations: CreateNode catches missing checkCreateNode hook
  * operations: CreateNode default config
  * checkCreateNode config hook
  * model_postgres: fix getOwnersByNodePrefix SQL
  * operations: fix CreateNode setAffiliation()
  * operations: fix CreateNode getOwnersByNodePrefix()
  * operations: fix ../util require, CreateNode safety check
  * implement createNode with getOwnersByNodePrefix check
  * operations: begin creating topic channels
  * model_postgres: syntax fix
  * package.json: maintainer update
  * build_binary.sh: update to node 0.6.9
  * buddycloud-server 0.1.11
  * rsm_walk: fix logging
  * operations: checkAccessModel() before checkRequiredAffiliation()!
  * operations: Unsubscribe condition syntax fix
  * package.json: muffin dependency glob seems be incompatible in v3.*
  * operations: checkRequiredAffiliation should ignore no @requiredAffiliation
  * operations: fix isAffiliationAtLeast w/ invalid affiliation
  * jsconfig 0.2.0 is out! w00t!!!
  * Cakefile: lib/version.js from package.json
  * logger: update to ain2 1.0.0
  * main: fix config loading
  * buddycloud-server 0.1.10
  * router: fix syncServer()
  * buddycloud-server 0.1.9
  * bin/buddycloud-server: fix param quoting
  * bin/buddycloud-server: fix $cwd
  * buddycloud-server 0.1.8
  * .npmignore to package up built lib/* instead of src/*
  * build_binary.sh: install devDependencies beforehand
  * build_binary.sh: bump node.js version to 0.6.7
  * util: move getNodeUser(), getUserDomain()
  * main: "server successfully started"
  * sync: fix logging
  * model_postgres: fix writeItem() SQL parameter binding
  * sync: fix PaginatedSynchronization error callback
  * sync: rm TODO note
  * model_postgres: writeItem updated_query
  * operations: logging fixes
  * writeItem: move updated extraction from operations to model_postgres
  * model_postgres: writeItem should also INSERT existing updated value
  * model_postgres: fix syntax
  * model_postgres: SQL fixes
  * operations: PushInbox copies item published date
  * postgres schema: CREATE VIEW open_nodes + usage in model_postgres
  * model_postgres: fix query result handling
  * fix getTopFollowedNodes & getTopPublishedNodes parameters
  * model_postgres: fix SQL INTERVAL syntax
  * operations: BrowseNodes.fetchNodes() needs transaction
  * operations: BrowseNodes.transaction should use @fetchNodes()
  * operations: fetchNodes() typo
  * pubsub_server: browse /top-followed-nodes & /top-published-nodes does not request a particular node
  * getTopFollowedNodes & getTopPublishedNodes w/ XMPP disco interface
  * build_binary.sh: bump to node 0.6.6
  * buddycloud-server 0.1.7
  * package.json: rm cradle dependency
  * logger: syslog only with hostname
  * replace common-logger by underscore.logger
  * update ain2 dependency for node v0.6 compatibility
  * model_postgres walkListenerArchive: replace DISTINCT with GROUP BY
  * model_postgres: fix config order/limig
  * operations: ReplayArchive sorts results before capping
  * ReplayArchive/walkListenerArchive: properly cap result set
  * operations: ReplayArchive default max=50
  * build_binary.sh: use $PREFIX from environment if present
  * package.json: req node-stringprep >=0.1.1
  * router: fix
  * buddycloud-server 0.1.6
  * update to new node-waf paths
  * build_binary.sh: switch to node 0.6.4
  * package.json: depend on 0.3.1
  * router: RSM usage fix
  * logger: open logFile for appending, fixes issue #25
  * package.json: depend on node-xmpp >= 0.3.0
  * operations ReplayArchive: fix rsm max
  * operations: ReplayArchive RSM support
  * backend_pubsub: notificationPush updates include sender & actor
  * router: detectUserType fixes
  * router: detectUserType fixes
  * logger: fix argument iteration
  * main, backend_pubsub: logging improvements
  * backend_pubsub: include user in notfound error
  * connection: loopback stanzas to ourselves
  * router: add missing util.inspect include
  * router.run: trace req
  * router: add missing rsm include
  * logger: typo
  * logger: fix level
  * logging clean-up
  * router, pubsub_{server,client}: @type in <actor/>
  * buddycloud-server 0.1.5
  * router: sync fixes
  * buddycloud-server 0.1.4
  * ManageNodeAffiliations: non-owner may not elect a new owner
  * sync: log upon completion
  * sync: transaction fix
  * move some sync logic into router, lock per node
  * operations: BrowseNodeInfo/RetrieveNodeConfiguration w/o access control
  * buddycloud-server 0.1.3
  * operations: deny Unsubscribe from own nodes
  * logger: ain2 syslog transport
  * logger: message always as string
  * main: fix --stdout kludge
  * logger: avoid log level < 0
  * config.js.example: syslog on by default
  * config.js.example: logging section
  * syslog support with ain2
  * support --stdout logging
  * replace cnlogger by common-logger
  * buddycloud-server 0.1.2
  * build_binary: npm install globally (into /opt/buddycloud-server/)
  * build_binary: dedup node & npm versions
  * build_binary: default to /opt/buddycloud-server, bin/ script
  * main: process.title fix
  * version: fix package.json path
  * version from package.json in process.title and for jabber:iq:version
  * xmpp/connection: do not subscribe in probePresence()
  * buddycloud-server 0.1.1
  * build_binary: bump node & npm versions
  * backend_pubsub: reply() must also copy 'replay' field on MaxStanzaSizeExceeded
  * connection: more stanza output when MaxStanzaSizeExceeded
  * don't send ReplayArchive notifications to all online resources
  * pubsub_client/connection: wrap error replies into StanzaError earlier
  * logging fixes
  * port to cnlogger
  * port to broken winston logging
  * xmpp connection: always tell node-xmpp to reconnect
  * async.filter iterator does not take error parameter
  * model_postgres: fix nodeExists warning
  * backend_pubsub: fix notification matching
  * sync: fix router.authorizeFor() usage
  * sync: writeItem does not need author anymore
  * operations: typo
  * model_postgres: fix getListenerAffiliations() query
  * sync: careful
  * xmpp/forms: oops, s/creationTime/creationDate/
  * xmpp/connection: fix name
  * router: check for anonymous user to be online
  * anonymous user offline tracking & clean-up
  * model_postgres: fix walkListenerArchive() node in results
  * router: fix method binding
  * model_postgres: walkListenerArchive() should include node in results
  * operations: RemoveUser & model_postgres.getUserRemoteSubscriptions() & clearUserSubscriptions()
  * BuddycloudDiscovery::detectAnonymousUser
  * backend_pubsub: gracefully handle MaxStanzaSizeExceeded for notifications
  * xmpp pubsub_server & connection: fix graceful MaxStanzaSizeExceeded handling
  * errors: MaxStanzaSizeExceeded extends Error
  * operations: s/geoloc/geo/
  * operations: /subscription items shall contain jid=owner
  * metadata buddycloud#channel_type
  * proper metadata field names
  * support for creationDate
  * operations: clarify logging
  * router: fix remote backend selection
  * operations: Unsubscribe refactor & fix
  * operations: fix Register
  * buddycloud-server 0.1.0
  * operation: print opName on commit, rm debug
  * bin/buddycloud-server: don't cd so config can be loaded relatively
  * Merge remote-tracking branch 'origin/cli'
  * operations: RetractItems should allow anyone to remove their own posts
  * operations: preserve affiliation if previously affiliated
  * operations: unify into isAffiliationAtLeast()
  * operations: rm leftover TODO note
  * operations: refactor Register; should check if authoritative for user's domain
  * router.run: return 404 for nodes not locally subscribed but discovered ourselves
  * rm explicit author handling in postgres schema, model, operations
  * main: check sender authorization for authorizationPrompt
  * operations: RetrieveItems shall not virtualize items for cache case of remote nodes
  * Revert "Made the ownership of tables really clear. Should help avoid the problem that DD had the other day."
  * s/channel-server/buddycloud-server/g
  * build_binary.sh: fix invokation hint
  * README: rm some outdated stuff
  * main: fix defaultConfig stuff
  * build_binary.sh
  * operations: RetrieveItems.retrieveSubscriptionsItems() result set sorting, affiliations
  * virtual handling of /user/.../subscriptions node items
  * MAM replays subscription authorization requests
  * more authorization stuff
  * fixes
  * small fixes
  * package.json: fix bin path
  * further authorizationPrompt work
  * backend_pubsub: missedSomething was missing
  * package.json: fix coffeescript path (./node_modules/...)
  * sending authorize notification forms
  * package.json: fix .coffee compilation stage
  * operations: PrivilegedOperation.fetchActorAffilliation fetches all listener affiliations for inbox sync
  * pubsub_notifications: fix MAM stanzas
  * operations: subscribe defaultAffiliation, fixes
  * model_postgres: many fixes
  * operations: publishModel 'subscribers'
  * operations: access control fixes
  * begin access control, affiliations checking
  * model_postgres: fixes
  * errors: fix error classes
  * xmpp/connection: fix
  * xmpp/connection: fix @missedServerTimeouts usage
  * model_postgres: safety checks
  * readability, notes
  * rsm_walk: fix serious errors
  * globally refactor operation from function to value
  * sync: fixes
  * add forgotten rsm_walk file
  * move syncQueue from main.coffee to fine-grained sync.syncNode
  * xmpp/connection: readability
  * xmpp/connection: track <you-missed-something/> timers with @missedServerTimeouts
  * syncServer support, wired up to <you-missed-something/> 'syncNeeded'
  * model_postgres: for an actor, getSubscriptions() shall return not only users but also listeners
  * MAM time specification
  * primitive MAM implementation
  * send <you-missed-something/>
  * operations: PushInbox TODO note
  * sync: rm request.rsm.max clamp
  * synchronization with state resetting and subscriptions/affiliations support
  * pubsub_*: fix user/jid conventions
  * ConfigSynchronization should use browse-node-info to get node config
  * synchronizing!
  * synchronization kinda works, but hits RSM loops
  * further synchronization progress
  * begin synchronization
  * main: require async
  * measure stanza size, gracefully retry with smaller result set
  * synchronization groundwork
  * don't let backend_pubsub call router.runLocally(), return errors.SeeLocal() instead
  * errors: clean up
  * normalize: add <link rel="self" href="xmpp:...?pubsub;action=retrieve;..."/>
  * operations: Publish shall allow new items with specified @id
  * nodes browsing, with RSM
  * backend_pubsub: run() should bail out early on invalid node form
  * PostgreSQL tuning
  * complete RSM implementation
  * begin RSM for all operations
  * generify RSM stuff
  * pubsub_client: RSM
  * fixes from CCCamp11
  * RSM for local items retrieving
  * begin new RSM implementation
  * pubsub_server: publish-node-items shall reply with item ids
  * model_postgres: fix getNodeListeners() SQL
  * model_postgres: nodeExists() shall check for NOT NULL
  * model_postgres: getNodeListener() replace filter by SQL
  * model_postgres: getNodeListener() filter for null
  * model_postgres: fix setSubscription() INSERT w/o listener
  * error printout
  * forms: fix
  * operations: PushInbox author fix
  * debug
  * xml child robustness
  * model_postgres: fix nodeExists()
  * fix subscription listener for local users
  * logging cleanup
  * initiate presence tracking of users
  * xmpp/connection: use send() instead of specifying from jid
  * some logging cleanup
  * operations: push-inbox does not set subscription listener
  * fixes & TODO notes
  * operations: Notify.transaction() must call cb()
  * retrieve-node-configuration
  * forms: configToResultForm -> configToForm
  * pubsub_client: RetrieveNodeConfiguration & ManageNodeConfiguration
  * operations: catch reply cb exceptions
  * create-node operation
  * package.json: scripts
  * fixes
  * fix outgoing notifications
  * generify pubsub_notifications
  * many fixes for subscription pushing
  * router: if request writes, always go remote
  * push incoming notifications to local model
  * more subclassing of EventEmitter, incoming notifications handling
  * pubsub_server: unify PubsubRequest & PubsubOwnerRequest
  * merge request.coffee into pubsub_server.coffee
  * begin remote subscription pushing to local inbox
  * backend_pubsub: PubsubBackend.notify(): readability
  * tune to use single cb() instead of req.{reply,replyError}()
  * revive normalization
  * model_postgres: setSubscription(): coearce isSet to boolean
  * model_postgres: catch lost transactions
  * pubsub_client: error reporting, fix
  * subscribe reply status
  * model_postgres: setAffiliation() should check nodeExists()
  * fix disco.authorizeFor() usage
  * pubsub_client: fix <actor/> placement
  * refactor notifications a bit
  * pubsub_client: <actor/> placement fix
  * pubsub_client: fix <actor/> placement
  * pubsub_notifications: subscriptions/affiliations/config
  * fix registration/model callback parameters
  * operations: ManageNodeAffiliations validates accessModel & publishModel
  * setting configuration
  * fixes, fixes, config
  * only RegisterSetRequest should induce presence subscription
  * FIXME note
  * model_postgres: do not use rowCount
  * operations: Register created default configuration
  * pubsub_server: pubsub/inbox identity
  * fixes, StanzaError
  * implement pubsub_client operations
  * pubsub_notifications: byOperation()
  * fixes
  * fixes
  * fixes & debugging
  * fixes
  * debugging & fixes
  * fixes
  * begin discovering locally
  * fixes
  * Router.run: fix
  * fixes
  * operations: rename channel node to "posts"
  * begin notifications
  * a bit o' twiddling w/ subscription listeners
  * refactor router for remote requests
  * operations: subscribe/unsubscribe toggle affiliation none/member
  * router: rename frontend to backend
  * rename backend_postgres to model_postgres, revive router
  * main: move iqHandler to pubsub_server
  * manage, not only retrieve, subscriptions & affiliations
  * use subscribe sender as notification listener
  * backend_pubsub: replace ternary operator
  * need to store listener in subscriptions...
  * backend_pubsub: implement RequestCache
  * new untested buddycloud discovery with backend_pubsub.coffee
  * retrieve <actor/> generalized, begin using authorizeFor
  * ns: add BUDDYCLOUD_V1 xmlns
  * postgres.sql schema: updated column for more tables, author column for items
  * retrieving node affiliations
  * retrieving node subscriptions, fixes
  * backend_postgres: syntax fixes
  * operation: Register should set affiliation & subscription
  * retrieving subscriptions & affiliations
  * retracting items
  * publishing & retrieving items works
  * begin item retrieving
  * subscribe & unsubscribe
  * fix backend_postgres (user is a Pg keyword, must be quoted as column name)
  * publishing works
  * lots of fixes
  * fix disco requests
  * fix, fix, fix
  * begin implementing register & publish implementation
  * mv src/operations.coffee src/local/operations.coffee
  * revive backend
  * primitive operations
  * mv controller.coffee operations.coffee
  * dead code TODO
  * fixes
  * rm old dead code
  * rename iqhandler to request
  * begin some refactoring
  * begin hooking up handlers with operations
  * xmpp/pubsub_server: indicate operation types
  * notes
  * pubsub_server: PubsubOwnerHandlers
  * pubsub_server: flesh out more pubsub handlers
  * add affiliations checking
  * begin interweaving with local operations
  * a tad of interconnecting
  * pubsub_server: DiscoInfoHandler.reply()
  * xmpp client 'n stuff
  * README: draw new design
  * begin router
  * xmpp: move NS_* to ns.coffee
  * xmpp: primitive disco info works
  * begin iqhandler
  * xmpp/connection: port presence tracking
  * rm main.js
  * move src files around
  * rm model_couchdb from config, add preliminary main.coffee
  * a bit new controller
  * rm old test_controller
  * some controller work
  * old controller translated to coffeescript
  * port peripheral stuff over to coffeescript
  * README: change ejabberd port to the config default one
  * model_couchdb: s/doc.subscribers/doc.subscriptions/
  * xmpp_pubsub.js: fix typo
  * model_postgres: check nodeExists before any data modification
  * preliminary RSM (XEP-0059) implementation for retrieve-items/retrieve
  * model_couchdb: stub getUpdatesByTime()
  * MAM should result in direct message, not broadcast notification to all resources
  * MAM w/ working model_postgres backend
  * begin implementing MAM
  * controller: register/register should create /user/<jid>/subscriptions node
  * normalize fixes + tests
  * normalize
  * only one child element per item
  * model_postgres: fix setConfig()
  * model_postgres: listNodesByUser()
  * model_couchdb: listNodesByUser(), simplify listNodes()
  * controller, xmpp_pubsub: browse-nodes/by-user
  * model_postgres setConfig(): fixes
  * configuration notification
  * model_postgres setConfig(): do not set fields unspecified/without defaultConfig
  * model_postgres nodeExists(): indentation
  * controller: subscribe should not require preexisting affiliation
  * xmpp_pubsub: fix manage-subscriptions/retrieve result usage
  * controller: allow retrieving subscriptions & affiliations for members
  * xmpp_pubsub: syntax fix
  * model_postgres: fix queue pushing
  * xmpp_pubsub: fix info discovery reply FORM_TYPE
  * model_postgres: config fixes
  * more on extended config
  * model_couchdb, model_postgres: more flexible config schema
  * config: description, type, creationDate; setConfig() on create-node/register
  * xmpp_pubsub: optimize presence tracking
  * controller: requiredAffiliation='member' for config-node/retrieve
  * README: OpenFire
  * controller: defaultConfig() + use in feature 'config-node'
  * xmpp_pubsub: replace isOnline() with getOnlineResources()
  * model_postgres: fix transaction dequeueing
  * model_postgres: move cb() past process.nextTick/dbIsAvailable for safety
  * model_postgres: work around empty responses
  * test_controller: retract
  * xmpp_pubsub: disco <identity/> according to discovered @node
  * test_controller: browse-nodes
  * model_couchdb: fix preload() etag extraction + error reporting
  * xmpp_pubsub: FeatureNotImplemented message
  * controller: simulate a stack for debug info
  * test_controller: retract skeleton
  * controller unsubscribe: do not fetch affiliation from database but check by node path
  * implement & test unsubscribe
  * test_controller: skeletons
  * test_controller: publishing tests
  * test_controller: more publish testing + controller fix
  * test_controller: begin test publishing
  * model_postgres: fix forgotten variable
  * model_postgres: reconnect to database upon error
  * model_postgres: oops, syntax error
  * config.js.example: postgres is actually the one with a poolSize
  * model_postgres: oops, syntax errors
  * begin test_controller
  * fixes
  * subscriptionModified <message/>
  * xmpp_pubsub: "message" & approve() fixes
  * controller: replace ownerNotification with afterTransaction
  * access_model authorize
  * package.json & README
  * errors: pull inherits() from util/utils/sys for moving node api
  * browse open nodes with service discovery items
  * controller: refactor affiliations checking
  * xmpp_pubsub: fix subscriptions format
  * controller: treat missing accessModel as 'open'
  * model_couchdb: preload() etag fix
  * .gitignore with config.js
  * xmpp_pubsub: node config on disco info
  * model_couchdb: encodeURIComponent() only for db.head() & .get()
  * main.js: #!
  * rename config.js to config.js.example
  * restore default config.js
  * main.js: on uncaughtException
  * postgres doc & config
  * model_postgres
  * model_couchdb: fix item deserialization
  * model_couchdb: rm implemented TODOs
  * README: CouchDB configuration
  * README: TODO++
  * LICENSE
  * README: markdown fix
  * README: mention buddycloud :)
  * model_couchdb: fix views initialization
  * README & config
  * jabber:iq:register
  * model_couchdb: fixes
  * errors fixing
  * rm model_persistence
  * model_couchdb: assertNodeName()
  * main: catch uncaughtException
  * controller: fix
  * bugs, readability
  * model_couchdb: fixing
  * controller: implement affiliations checking
  * xmpp_pubsub: getAffiliations() result is now Array
  * model_couchdb: setSubscription() & setAffiliation() 'none'
  * model_couchdb: consolidate subscriptions & affiliations model
  * xmpp_pubsub: send notifications with type='headline'
  * xmpp_pubsub: subscribeIfNeeded() on <create/> & <subscribe/>
  * model_couchdb: load() shortcut when already cached
  * model_couchdb: createNode() fix
  * model_couchdb: preload()
  * model_couchdb: commit read documents too for integrity
  * model_couchdb: abstract views
  * CouchDB Optimistic Concurrency Control layer
  * controller: improve error propagation
  * defined error conditions
  * untested configuration getting/setting
  * service discovery
  * modify-affiliations
  * model_couchdb: getAffiliation()
  * begin permission checking infrastructure
  * presence probes
  * xmpp_pubsub: presence tracking
  * refactoring controller complete
  * continue refactoring controller into features/operations
  * begin refactoring controller into features/operations
  * subscribers
  * getting subscriptions & affiliations
  * createNode improvements
  * controller createNode: check node
  * model_couchdb: affiliations view
  * items getting
  * much more progress
  * implement retraction, s/notifySubscriber/notify/, s/writeItems/writeItem/
  * publish notification works
  * more frontend hooking
  * begin notification hooks
  * fixes
  * begin model_couchdb transactions
  * split model
  * some progress
  * some progress
  * createNode creates owner affiliation
  * model: indexes
  [ Thomas Jost ]
  * Add @denisw to contributors
  * Upgrade required node version to 0.8
  * We actually need remote subscriptions nodes
  * Merge branch 'feature/anon-fixes' into develop
  * Merge branch 'feature/really-validate-post-times' into develop
  * Reject remote posts with invalid dates
  * Add tests for remote posts with invalid dates
  * Force anon subscriptions to be temporary
  * Set default affiliation to 'none' for anon users
  * Merge branch 'feature/anon-fixes' into develop
  * Cleanup: remove some dead code
  * Purge remote nodes with no local subscription left
  * Merge branch 'feature/recent-items' into develop
  * Merge branch 'feature/validate-remote-items' into develop
  * Sort recent items by update time
  * Merge branch 'feature/validate-remote-items' into feature/recent-items
  * Fix tests that push remote items
  * Validate remote items
  * Add (failing) tests for invalid remote items
  * Implement recent items query
  * Add (failing) test for recent items query
  * PubSub replies can include several elements
  * Merge branch 'feature/pusher' into develop
  * Workaround callback woes
  * Fix MAM for pusher component
  * Pusher: test MAM
  * test_server: move makePublishIq into TestServer
  * Pusher: test node configuration
  * Pusher: test unsubscriptions
  * Merge branch 'feature/affiliations-fixes' into develop
  * Merge branch 'feature/pubsub-disco-features' into develop
  * Cleanup
  * Expose all implemented PubSub features
  * Pusher: test affiliations
  * Merge branch 'feature/affiliations-fixes' into feature/pusher
  * Fix affiliation in /subscriptions notifications
  * Accept PubSub-compliant affiliations notifications
  * Pusher: test subscriptions
  * Merge branch 'feature/fix-98' into develop
  * Fix SQL for updating replies
  * Add failing test for issue #98
  * Fix offline user cleanup
  * DB: drop anonymous column
  * Yet another federation test
  * Check if the example config file is valid JS
  * Add tests for pusher code
  * Pusher can MAM everything
  * Pusher is a listener for all notifications
  * Add config for pusher component
  * Merge branch 'feature/mam-fixes' into develop
  * Increase the default number of items in a MAM response
  * Make MAM return an error if there are too many results
  * Use RSM in MAM
  * Test MAM RSM
  * MAM: filter bad dates out
  * Test if MAM validates dates correctly
  * Ensure the giant MAM test doesn't pollute the test environment
  * Make affiliations notifications PubSub-compliant
  * Affiliations have update timestamps too
  * Avoid temporary subscriptions in MAM results
  * Advertise support for MAM in disco#info
  * Add a giant MAM test
  * Update Travis URL in README.md
  * Merge branch 'feature/tests' into develop
  * Correctly tests that updated items don't change <in-reply-to/>
  * Move tests on updated items to a different function
  * Add tests for updates that change <in-reply-to/>
  * Use Travis to automate testing
  * Merge branch 'master' into develop
  * Add compatibility with PostgreSQL 9.1
  * Require at least one item to retract
  * Add Emacs folding marks
  * Add retrieve and retract tests
  * Fix retraction stanza sent to remote services
  * Tombstones: include Atom namespace in <updated/> element
  * Fix error when not allowed to retract an item
  * Tombstones can't be updated
  * When publishing an update, check if the actor is the original author
  * Check if original post exists before publishing a reply
  * Reject posts from non-users
  * Don't include type in <actor/>
  * Complete post/update/retract tests
  * TestServer: fix Atom in-reply-to element
  * Fail when some unwanted event happens
  * Add description for calls to "should.exist"
  * Retraction tests
  * Workaround CoffeeScript weird scoping rules
  * Add another batch of tests
  * Update test data
  * Change the way the test server emits IQ stanzas
  * Tests for posting to remote channels
  * Test server: emit event for IQs with unknown ID
  * Test server: disco info for "remote" servers
  * More post tests
  * Add helper to run tests that trigger several different stanzas
  * Test server: handle <message/> stanzas
  * Add post tests
  * Post tests: helper to check if post was successful
  * Throw an exception when getting an unexpected error IQ
  * Start adding post tests
  * Add helpers for pubsub get IQs and Atom handling
  * Helpers to add initial test data in the database
  * Add XMPP namespaces to test_server.coffee
  * Reply to presence probes
  * Don't parse Elements again
  * Use same user and server names as in sfc
  * Safe path handling in prepare-db.sh
  * Add codo-like doc to the TestServer class
  * Add helpers to build disco and pubsub IQs
  * Expose support for PubSub node creation
  * Skip a test
  * More channel creation tests
  * New tests and helpers for forms
  * Add a helper to parse disco#info replies
  * Move common disco replies to test_server.coffee
  * Start testing for channel creation
  * Test server: handle disco#items queries
  * Make tests runnable using "npm test"
  * Basic disco tests
  * Start a test suite
  * Use an existing component connection if provided in config
  * Make it possible to require() the server
  * Update config.js.example
  * Fix autosubscribeNewUsers
  * Increase the max number of items in each RSM page
  * Better shrinking of oversized stanzas
  * Include `-dirty' in version number from git
  * Remove glob from dependencies
  * Fix indentation in main.coffee
  * Prevent existing persistent subscription from being made temporary
  * Merge branch 'feature/version-number-from-git' into develop
  * Expose support for XEP-0092 (Software Version) in disco
  * Use `git describe' to get version numbers in dev branches
  * Merge branch 'master' into next
  * Restore compatibility with Node 0.6
  * Fix handling of offline users
  * Avoid race condition in disco cache
  * Shrink oversized stanzas more aggressively
  * Avoid nulls
  * Include new files in release tarball
  * Avoid race condition in disco cache
  * Merge remote-tracking branch 'upstream/tempsub' into next
  * Merge branch 'db-versioning' into next
  * buddycloud-server 0.3.5
  * Check if remote supports temporary subscription before sending a tempsub request
  * Client can check for server features before sending an IQ
  * Make server features discoverable
  * Log errors when processing incoming messages
  * Cleanup
  * Remove empty text nodes from items
  * Fix ActivityStreams verb for replies
  * Include operation name in debug message
  * Don't notify unsubscribe when it was a temporary subscription
  * Offline user cleanup: do real unsubscribe operations
  * I'm dumb
  * Don't delete temporary subscriptions during sync
  * Don't send any notification for temporary subscriptions
  * Client and server must speak the same language
  * Only send notifications about temporary subscriptions to remote listeners
  * Cleanup offline users
  * Claim we support subscription options
  * Temporary subscriptions
  * Fix updating items
  * Add help channels to default autosubscriptions
  * Merge branch 'log-fix'
  * Inspect objets in log messages
  * Fix broken log messages
  * Don't write subscription stanzas in items table
  * Merge remote-tracking branch 'lloyd/config'
  * Populate in_reply_to column when inserting new items
  * DB cleanup at startup
  * Add README for DB schema versioning
  * Upgrade DB schema
  * Check DB schema version on startup
  * Don't change <published/> when updating an existing post
  * Fix subscription to remote private channels
  * Don't fail when the default config file does not exist
  * Add Lloyd in contributors
  * Better logging for replies sent by 'proxy' components
  * Merge branch 'mam-result'
  * Include <result/> in MAM replies
  * Merge remote-tracking branch 'schnouki/atom-tombstones'
  * Fix typo
  * Merge pull request #61 from lloydwatkin/no-mod_disco
  * Also send tombstones in retract notifications
  * Use Atom tombstones for deleted items
  * xmpp: XEP-0313 compliance
  * Handle PubSub retract "notify" attribute
  * operations: fix PushInbox notification
  * Fix undefined variable when paging backwards in RSM
  [ Tuomas Koski ]
  * Merge pull request #59 from lloydwatkin/initialise-sync
  * Merge pull request #58 from lloydwatkin/master
  [ Steven Lloyd Watkin ]
  * Ensure we do not cause BC breaks
  * Make both defaults positive rather than one positive & the other negative Broke the config options down further
  * Fix build console output
  * "package" now a reserved word in node, caused failing in builds (v0.6.15+)
  [ Denis Washington ]
  * Use local CoffeeScript "cake" for "npm install"
  [ Jonas Smedegaard ]
  * Setup access rights and needed dirs when starting daemon
  * Speedup system shutdown by avoiding explicit sysV stop
  * xmpp_pubsub: check for commandEl prior usage
  [ Reginald dude ]
  * updates sent via email from vorner.cz
  * updates sent via email from vorner.cz
  [ Reginald Dude ]
  * Most confusing config file ever
  [ ▟ ▖▟ ▖ ]
  * Merge pull request #70 from lloydwatkin/fix-is-function
  * Merge pull request #63 from lloydwatkin/no-mod_disco
  * Merge pull request #62 from lloydwatkin/no-mod_disco
  * Merge pull request #57 from Schnouki/xep-0313
  * Merge pull request #54 from Schnouki/fix-notif
  * Merge pull request #52 from lloydwatkin/master
  * Merge pull request #51 from lloydwatkin/master
  [ James Tait ]
  * Ensure both the PID dir and log dir are created on startup if they do not already exist.
  [ imaginator ]
  * aligning with INSTALL instructions
  * moved instructions to wiki
  * Edited README.md via GitHub
  [ dodo ]
  * fix accessModel of geo nodes
  * always test in production
  * buddycloud-server 0.3.4
  * Merge branch 'packaging'
  * put the /etc/init.d script into tarball
  * not needed anymore
  * default options for new channels
  * bump tarballify version
  * add bin/buddycloud-server to the tarball
  * no build step in bin/buddycloud-server anymore
  * print additional info messages in gray
  * fix 'file is not defined'
  * fix 'modName is not defined'
  * colorful output for package.js
  * bump tarballify version
  * rm trailing spaces
  * no build_binary.sh needed
  * separate devDependencies
  * export name
  * use packaging script
  * buddycloud-server 0.3.3
  * pass prefix to npm to force npm to use that particular prefix
  * $PREFIX/bin/buddycloud-server can be nonexistant .. so ignore all errors when removing
  * bump node version in build script
  * merge issue #37
  * specify interal config file as defaults, not as main config
  * backports to node 0.4
  * concat cwd path to config path only when config path is relative
  * respect the cwd
  * move to the right dir before builing
  * wscript is not needed anymore
  * merged #31. symlink detection for bin/buddycloud-server thanks to @highfellow
  * fixed gitignore
  * forgot Cakefile
  * pin node version for over 0.5 to get the require json working
  * get version directly
  * new buildsystem
  * check if config.syslog has keys
  * dont load default config over opts and args
  * main: fix config loading
  * wscript fixes
  * load config via jsconfig
  * update wscript
  * upgrade build environment
  * update requirements in readme
  * cleanup files
  [ Simon Tennant ]
  * Update config.js.example
  * change to read config file from /opt/buddycloud
  * Update master
  * don't be so --quiet (will help a lot with debugging)
  * Update _etc_init.d_buddycloud-server
  * the orwell defeault was causing jdesenberg problems.
  * Fixed the permissions to run as.
  * Update _etc_init.d_buddycloud-server
  * init script
  * make it really clear what to change (and what "jid" refers to)
  * Made the ownership of tables really clear. Should help avoid the problem that DD had the other day.
  [ Lloyd Watkin ]
  * Fix for checking of child element
  * Catch error event
  * Fix for server reset
  * Updated variable names to better describe what config does.
  * Merge branch 'master' of git://github.com/buddycloud/buddycloud-server into no-mod_disco
  * Allow buddycloud server to advertise additional 'proxy' components
  * Wait to sync
  * Rename of parameter
  * Allow user to specify a port or not, changed argument name as it may not actually be remote debugging.
  * Tidy up
  * Allow node.js debugging
  [ Simon ]
  * /etc/init.d/buddycloud-server

 -- Abmar Barros (buddycloud Nightly Builds) <abmar@buddycloud.com>  Sat, 26 Jan 2013 14:06:43 -0300


buddycloud-server (0.1) unstable; urgency=medium

  [ Astro ]
  * operations: all nodes in defaultConfiguration accessModel=authorize
  * operations: posts & subscriptions accessModel=authorize in defaultConfiguration
  * buddycloud-server 0.3.2
  * Cakefile: version.js + 

  * operations: fix run notifications control flow
  * build_binary.sh: get bin/buddycloud-server out of the way before npm i
  * buddycloud-server 0.3.1
  * package.json: honor all contributors
  * Merge remote-tracking branch 'schnouki/patch-1'
  * .npmignore: exclude debian/* from npm pkgs
  * buddycloud-server 0.3.0
  * package.json: bump dep versions
  * operations: prevent unsubscribing/demoting the node owner
  * operations: fix PushInbox callback
  * operations: run notifies first, then syncs, then calls back
  * pubsub_server: lower logging
  * operations: fix PushInbox newNodes
  * operations: move PushInbox syncNode post transaction
  * operations: PushInbox should work even if syncNode had hickups
  * operations: syncNode when PushInbox created it
  * operations: fix PushInbox notification & newModerators
  * model_postgres: fix & simplify purgeNode()
  * sync: fixes
  * sync: purge node if no local subscribers
  * purge node when local unsubscription is pushed from remote
  * operations: fix generateSubscriptionsNotifications followee
  * operations: fix PushInbox newModerators nodes
  * xmpp connection: doc, serialize stanzas only once
  * operations: NewModeratorNotify needs listener, not user
  * operations: fix NewModeratorNotify listener
  * operations: log Operation name
  * model_postgres: must quote "user" column for Postgres
  * operations: NewModeratorNotify must cb()
  * operations: Notify notifies w/ node
  * operations: fix Notify otherListeners
  * pubsub_client: rm debug
  * operations: NewModeratorNotify notifies w/ node & listener
  * model_postgres: optional Transaction callbacks
  * operations: fix Notify filterSubscription & filterAffiliation invokation
  * operations: fix this binding
  * operations: no pending subscriptions in subscriptions node
  * operations: NewModeratorNotify
  * operations: doc, filter subscriptions and affiliations for non-moderators
  * operations: reorganize
  * clean up logging
  * operations: posts node defaultAffiliation='publisher'
  * sync: fix AffiliationsSynchronization typo
  * buddycloud-server 0.2.3
  * package.json: fix install script
  * build_binary.sh: bump node.js version
  * buddycloud-server 0.2.2
  * package.json: add preinstall cake build
  * operations: fix notifications
  * build_binary.sh: bump node.js version
  * buddycloud-server 0.2.1
  * operations: fix Notify subscriptios node items
  * operations: fix Notify callback result
  * operations: BrowseNodeItems for subscriptions node calls getSubscriptions not getSubscription
  * operations: syntax fixes
  * operations: Notify subscriptions fixes
  * operations: subscriptions node notifications
  * operations: BrowseNodeItems for subscriptions node
  * sync: require errors
  * sync: avoid error output when omitting local node
  * router, sync: improve logging
  * backend_pubsub: PubsubBackend.notify listener robustness
  * operations: fix Subscribe defaultAffiliation
  * operations: fix ManageNodeAffiliations control flow
  * pubsub_server: PubsubOwnerSetAffiliationsRequest syntax fix
  * operations: fix requiredAffiliation()
  * operations: requiredAffiliation can be function to allow moderators approving topic channel subscribers
  * operations: ManageNodeSubscriptions refactor for efficiency
  * operations: ManageNodeSubscriptions should set new affiliations to defaultAffiliation
  * operations: fix Notify jid/user
  * operations: Notify should notify all users pertained by a subscription
  * operations: 'unsubscribe-node' notifies unsubscribed user
  * operations, pubsub_client: there's no "unsubscribed" subscription, only "none"
  * pubsub_server: PubsubOwnerSetSubscriptionsRequest syntax fix
  * operations: Unsubscribe needs PrivilegedOperation methods
  * operations: Unsubscribed is not a PrivilegedOperation but a ModelOperation
  * operations: fix callback scope
  * pubsub_server: robustify PubsubItemsRequest
  * operations: syntax
  * pubsub_server, operations: support for RetrieveItems by itemIds
  * build_binary.sh: bump node.js version to 0.6.10
  * buddycloud-server 0.2.0
  * operations: CreateNode should not allow creation with empty nodeUser username
  * operations: fix CreateNode defaults & creationDate
  * operations: fix CreateNode isTopic switcheroo
  * router: fix autosubscribeNewUsers operation name
  * router: autosubscribeNewUsers
  * config.js.example: default checkCreateNode hook checks for a specific topic domain
  * operations: fix CreateNode node typo
  * operations: fix CreateNode config
  * pubsub_server, operations: CreateNode with optional config
  * operations: fix CreateNode setSubscription()
  * operations: CreateNode catches missing checkCreateNode hook
  * operations: CreateNode default config
  * checkCreateNode config hook
  * model_postgres: fix getOwnersByNodePrefix SQL
  * operations: fix CreateNode setAffiliation()
  * operations: fix CreateNode getOwnersByNodePrefix()
  * operations: fix ../util require, CreateNode safety check
  * implement createNode with getOwnersByNodePrefix check
  * operations: begin creating topic channels
  * model_postgres: syntax fix
  * package.json: maintainer update
  * build_binary.sh: update to node 0.6.9
  * buddycloud-server 0.1.11
  * rsm_walk: fix logging
  * operations: checkAccessModel() before checkRequiredAffiliation()!
  * operations: Unsubscribe condition syntax fix
  * package.json: muffin dependency glob seems be incompatible in v3.*
  * operations: checkRequiredAffiliation should ignore no @requiredAffiliation
  * operations: fix isAffiliationAtLeast w/ invalid affiliation
  * jsconfig 0.2.0 is out! w00t!!!
  * Cakefile: lib/version.js from package.json
  * logger: update to ain2 1.0.0
  * main: fix config loading
  * buddycloud-server 0.1.10
  * router: fix syncServer()
  * buddycloud-server 0.1.9
  * bin/buddycloud-server: fix param quoting
  * bin/buddycloud-server: fix $cwd
  * buddycloud-server 0.1.8
  * .npmignore to package up built lib/* instead of src/*
  * build_binary.sh: install devDependencies beforehand
  * build_binary.sh: bump node.js version to 0.6.7
  * util: move getNodeUser(), getUserDomain()
  * main: "server successfully started"
  * sync: fix logging
  * model_postgres: fix writeItem() SQL parameter binding
  * sync: fix PaginatedSynchronization error callback
  * sync: rm TODO note
  * model_postgres: writeItem updated_query
  * operations: logging fixes
  * writeItem: move updated extraction from operations to model_postgres
  * model_postgres: writeItem should also INSERT existing updated value
  * model_postgres: fix syntax
  * model_postgres: SQL fixes
  * operations: PushInbox copies item published date
  * postgres schema: CREATE VIEW open_nodes + usage in model_postgres
  * model_postgres: fix query result handling
  * fix getTopFollowedNodes & getTopPublishedNodes parameters
  * model_postgres: fix SQL INTERVAL syntax
  * operations: BrowseNodes.fetchNodes() needs transaction
  * operations: BrowseNodes.transaction should use @fetchNodes()
  * operations: fetchNodes() typo
  * pubsub_server: browse /top-followed-nodes & /top-published-nodes does not request a particular node
  * getTopFollowedNodes & getTopPublishedNodes w/ XMPP disco interface
  * build_binary.sh: bump to node 0.6.6
  * buddycloud-server 0.1.7
  * package.json: rm cradle dependency
  * logger: syslog only with hostname
  * replace common-logger by underscore.logger
  * update ain2 dependency for node v0.6 compatibility
  * model_postgres walkListenerArchive: replace DISTINCT with GROUP BY
  * model_postgres: fix config order/limig
  * operations: ReplayArchive sorts results before capping
  * ReplayArchive/walkListenerArchive: properly cap result set
  * operations: ReplayArchive default max=50
  * build_binary.sh: use $PREFIX from environment if present
  * package.json: req node-stringprep >=0.1.1
  * router: fix
  * buddycloud-server 0.1.6
  * update to new node-waf paths
  * build_binary.sh: switch to node 0.6.4
  * package.json: depend on 0.3.1
  * router: RSM usage fix
  * logger: open logFile for appending, fixes issue #25
  * package.json: depend on node-xmpp >= 0.3.0
  * operations ReplayArchive: fix rsm max
  * operations: ReplayArchive RSM support
  * backend_pubsub: notificationPush updates include sender & actor
  * router: detectUserType fixes
  * router: detectUserType fixes
  * logger: fix argument iteration
  * main, backend_pubsub: logging improvements
  * backend_pubsub: include user in notfound error
  * connection: loopback stanzas to ourselves
  * router: add missing util.inspect include
  * router.run: trace req
  * router: add missing rsm include
  * logger: typo
  * logger: fix level
  * logging clean-up
  * router, pubsub_{server,client}: @type in <actor/>
  * buddycloud-server 0.1.5
  * router: sync fixes
  * buddycloud-server 0.1.4
  * ManageNodeAffiliations: non-owner may not elect a new owner
  * sync: log upon completion
  * sync: transaction fix
  * move some sync logic into router, lock per node
  * operations: BrowseNodeInfo/RetrieveNodeConfiguration w/o access control
  * buddycloud-server 0.1.3
  * operations: deny Unsubscribe from own nodes
  * logger: ain2 syslog transport
  * logger: message always as string
  * main: fix --stdout kludge
  * logger: avoid log level < 0
  * config.js.example: syslog on by default
  * config.js.example: logging section
  * syslog support with ain2
  * support --stdout logging
  * replace cnlogger by common-logger
  * buddycloud-server 0.1.2
  * build_binary: npm install globally (into /opt/buddycloud-server/)
  * build_binary: dedup node & npm versions
  * build_binary: default to /opt/buddycloud-server, bin/ script
  * main: process.title fix
  * version: fix package.json path
  * version from package.json in process.title and for jabber:iq:version
  * xmpp/connection: do not subscribe in probePresence()
  * buddycloud-server 0.1.1
  * build_binary: bump node & npm versions
  * backend_pubsub: reply() must also copy 'replay' field on MaxStanzaSizeExceeded
  * connection: more stanza output when MaxStanzaSizeExceeded
  * don't send ReplayArchive notifications to all online resources
  * pubsub_client/connection: wrap error replies into StanzaError earlier
  * logging fixes
  * port to cnlogger
  * port to broken winston logging
  * xmpp connection: always tell node-xmpp to reconnect
  * async.filter iterator does not take error parameter
  * model_postgres: fix nodeExists warning
  * backend_pubsub: fix notification matching
  * sync: fix router.authorizeFor() usage
  * sync: writeItem does not need author anymore
  * operations: typo
  * model_postgres: fix getListenerAffiliations() query
  * sync: careful
  * xmpp/forms: oops, s/creationTime/creationDate/
  * xmpp/connection: fix name
  * router: check for anonymous user to be online
  * anonymous user offline tracking & clean-up
  * model_postgres: fix walkListenerArchive() node in results
  * router: fix method binding
  * model_postgres: walkListenerArchive() should include node in results
  * operations: RemoveUser & model_postgres.getUserRemoteSubscriptions() & clearUserSubscriptions()
  * BuddycloudDiscovery::detectAnonymousUser
  * backend_pubsub: gracefully handle MaxStanzaSizeExceeded for notifications
  * xmpp pubsub_server & connection: fix graceful MaxStanzaSizeExceeded handling
  * errors: MaxStanzaSizeExceeded extends Error
  * operations: s/geoloc/geo/
  * operations: /subscription items shall contain jid=owner
  * metadata buddycloud#channel_type
  * proper metadata field names
  * support for creationDate
  * operations: clarify logging
  * router: fix remote backend selection
  * operations: Unsubscribe refactor & fix
  * operations: fix Register
  * buddycloud-server 0.1.0
  * operation: print opName on commit, rm debug
  * bin/buddycloud-server: don't cd so config can be loaded relatively
  * Merge remote-tracking branch 'origin/cli'
  * operations: RetractItems should allow anyone to remove their own posts
  * operations: preserve affiliation if previously affiliated
  * operations: unify into isAffiliationAtLeast()
  * operations: rm leftover TODO note
  * operations: refactor Register; should check if authoritative for user's domain
  * router.run: return 404 for nodes not locally subscribed but discovered ourselves
  * rm explicit author handling in postgres schema, model, operations
  * main: check sender authorization for authorizationPrompt
  * operations: RetrieveItems shall not virtualize items for cache case of remote nodes
  * Revert "Made the ownership of tables really clear. Should help avoid the problem that DD had the other day."
  * s/channel-server/buddycloud-server/g
  * build_binary.sh: fix invokation hint
  * README: rm some outdated stuff
  * main: fix defaultConfig stuff
  * build_binary.sh
  * operations: RetrieveItems.retrieveSubscriptionsItems() result set sorting, affiliations
  * virtual handling of /user/.../subscriptions node items
  * MAM replays subscription authorization requests
  * more authorization stuff
  * fixes
  * small fixes
  * package.json: fix bin path
  * further authorizationPrompt work
  * backend_pubsub: missedSomething was missing
  * package.json: fix coffeescript path (./node_modules/...)
  * sending authorize notification forms
  * package.json: fix .coffee compilation stage
  * operations: PrivilegedOperation.fetchActorAffilliation fetches all listener affiliations for inbox sync
  * pubsub_notifications: fix MAM stanzas
  * operations: subscribe defaultAffiliation, fixes
  * model_postgres: many fixes
  * operations: publishModel 'subscribers'
  * operations: access control fixes
  * begin access control, affiliations checking
  * model_postgres: fixes
  * errors: fix error classes
  * xmpp/connection: fix
  * xmpp/connection: fix @missedServerTimeouts usage
  * model_postgres: safety checks
  * readability, notes
  * rsm_walk: fix serious errors
  * globally refactor operation from function to value
  * sync: fixes
  * add forgotten rsm_walk file
  * move syncQueue from main.coffee to fine-grained sync.syncNode
  * xmpp/connection: readability
  * xmpp/connection: track <you-missed-something/> timers with @missedServerTimeouts
  * syncServer support, wired up to <you-missed-something/> 'syncNeeded'
  * model_postgres: for an actor, getSubscriptions() shall return not only users but also listeners
  * MAM time specification
  * primitive MAM implementation
  * send <you-missed-something/>
  * operations: PushInbox TODO note
  * sync: rm request.rsm.max clamp
  * synchronization with state resetting and subscriptions/affiliations support
  * pubsub_*: fix user/jid conventions
  * ConfigSynchronization should use browse-node-info to get node config
  * synchronizing!
  * synchronization kinda works, but hits RSM loops
  * further synchronization progress
  * begin synchronization
  * main: require async
  * measure stanza size, gracefully retry with smaller result set
  * synchronization groundwork
  * don't let backend_pubsub call router.runLocally(), return errors.SeeLocal() instead
  * errors: clean up
  * normalize: add <link rel="self" href="xmpp:...?pubsub;action=retrieve;..."/>
  * operations: Publish shall allow new items with specified @id
  * nodes browsing, with RSM
  * backend_pubsub: run() should bail out early on invalid node form
  * PostgreSQL tuning
  * complete RSM implementation
  * begin RSM for all operations
  * generify RSM stuff
  * pubsub_client: RSM
  * fixes from CCCamp11
  * RSM for local items retrieving
  * begin new RSM implementation
  * pubsub_server: publish-node-items shall reply with item ids
  * model_postgres: fix getNodeListeners() SQL
  * model_postgres: nodeExists() shall check for NOT NULL
  * model_postgres: getNodeListener() replace filter by SQL
  * model_postgres: getNodeListener() filter for null
  * model_postgres: fix setSubscription() INSERT w/o listener
  * error printout
  * forms: fix
  * operations: PushInbox author fix
  * debug
  * xml child robustness
  * model_postgres: fix nodeExists()
  * fix subscription listener for local users
  * logging cleanup
  * initiate presence tracking of users
  * xmpp/connection: use send() instead of specifying from jid
  * some logging cleanup
  * operations: push-inbox does not set subscription listener
  * fixes & TODO notes
  * operations: Notify.transaction() must call cb()
  * retrieve-node-configuration
  * forms: configToResultForm -> configToForm
  * pubsub_client: RetrieveNodeConfiguration & ManageNodeConfiguration
  * operations: catch reply cb exceptions
  * create-node operation
  * package.json: scripts
  * fixes
  * fix outgoing notifications
  * generify pubsub_notifications
  * many fixes for subscription pushing
  * router: if request writes, always go remote
  * push incoming notifications to local model
  * more subclassing of EventEmitter, incoming notifications handling
  * pubsub_server: unify PubsubRequest & PubsubOwnerRequest
  * merge request.coffee into pubsub_server.coffee
  * begin remote subscription pushing to local inbox
  * backend_pubsub: PubsubBackend.notify(): readability
  * tune to use single cb() instead of req.{reply,replyError}()
  * revive normalization
  * model_postgres: setSubscription(): coearce isSet to boolean
  * model_postgres: catch lost transactions
  * pubsub_client: error reporting, fix
  * subscribe reply status
  * model_postgres: setAffiliation() should check nodeExists()
  * fix disco.authorizeFor() usage
  * pubsub_client: fix <actor/> placement
  * refactor notifications a bit
  * pubsub_client: <actor/> placement fix
  * pubsub_client: fix <actor/> placement
  * pubsub_notifications: subscriptions/affiliations/config
  * fix registration/model callback parameters
  * operations: ManageNodeAffiliations validates accessModel & publishModel
  * setting configuration
  * fixes, fixes, config
  * only RegisterSetRequest should induce presence subscription
  * FIXME note
  * model_postgres: do not use rowCount
  * operations: Register created default configuration
  * pubsub_server: pubsub/inbox identity
  * fixes, StanzaError
  * implement pubsub_client operations
  * pubsub_notifications: byOperation()
  * fixes
  * fixes
  * fixes & debugging
  * fixes
  * debugging & fixes
  * fixes
  * begin discovering locally
  * fixes
  * Router.run: fix
  * fixes
  * operations: rename channel node to "posts"
  * begin notifications
  * a bit o' twiddling w/ subscription listeners
  * refactor router for remote requests
  * operations: subscribe/unsubscribe toggle affiliation none/member
  * router: rename frontend to backend
  * rename backend_postgres to model_postgres, revive router
  * main: move iqHandler to pubsub_server
  * manage, not only retrieve, subscriptions & affiliations
  * use subscribe sender as notification listener
  * backend_pubsub: replace ternary operator
  * need to store listener in subscriptions...
  * backend_pubsub: implement RequestCache
  * new untested buddycloud discovery with backend_pubsub.coffee
  * retrieve <actor/> generalized, begin using authorizeFor
  * ns: add BUDDYCLOUD_V1 xmlns
  * postgres.sql schema: updated column for more tables, author column for items
  * retrieving node affiliations
  * retrieving node subscriptions, fixes
  * backend_postgres: syntax fixes
  * operation: Register should set affiliation & subscription
  * retrieving subscriptions & affiliations
  * retracting items
  * publishing & retrieving items works
  * begin item retrieving
  * subscribe & unsubscribe
  * fix backend_postgres (user is a Pg keyword, must be quoted as column name)
  * publishing works
  * lots of fixes
  * fix disco requests
  * fix, fix, fix
  * begin implementing register & publish implementation
  * mv src/operations.coffee src/local/operations.coffee
  * revive backend
  * primitive operations
  * mv controller.coffee operations.coffee
  * dead code TODO
  * fixes
  * rm old dead code
  * rename iqhandler to request
  * begin some refactoring
  * begin hooking up handlers with operations
  * xmpp/pubsub_server: indicate operation types
  * notes
  * pubsub_server: PubsubOwnerHandlers
  * pubsub_server: flesh out more pubsub handlers
  * add affiliations checking
  * begin interweaving with local operations
  * a tad of interconnecting
  * pubsub_server: DiscoInfoHandler.reply()
  * xmpp client 'n stuff
  * README: draw new design
  * begin router
  * xmpp: move NS_* to ns.coffee
  * xmpp: primitive disco info works
  * begin iqhandler
  * xmpp/connection: port presence tracking
  * rm main.js
  * move src files around
  * rm model_couchdb from config, add preliminary main.coffee
  * a bit new controller
  * rm old test_controller
  * some controller work
  * old controller translated to coffeescript
  * port peripheral stuff over to coffeescript
  * README: change ejabberd port to the config default one
  * model_couchdb: s/doc.subscribers/doc.subscriptions/
  * xmpp_pubsub.js: fix typo
  * model_postgres: check nodeExists before any data modification
  * preliminary RSM (XEP-0059) implementation for retrieve-items/retrieve
  * model_couchdb: stub getUpdatesByTime()
  * MAM should result in direct message, not broadcast notification to all resources
  * MAM w/ working model_postgres backend
  * begin implementing MAM
  * controller: register/register should create /user/<jid>/subscriptions node
  * normalize fixes + tests
  * normalize
  * only one child element per item
  * model_postgres: fix setConfig()
  * model_postgres: listNodesByUser()
  * model_couchdb: listNodesByUser(), simplify listNodes()
  * controller, xmpp_pubsub: browse-nodes/by-user
  * model_postgres setConfig(): fixes
  * configuration notification
  * model_postgres setConfig(): do not set fields unspecified/without defaultConfig
  * model_postgres nodeExists(): indentation
  * controller: subscribe should not require preexisting affiliation
  * xmpp_pubsub: fix manage-subscriptions/retrieve result usage
  * controller: allow retrieving subscriptions & affiliations for members
  * xmpp_pubsub: syntax fix
  * model_postgres: fix queue pushing
  * xmpp_pubsub: fix info discovery reply FORM_TYPE
  * model_postgres: config fixes
  * more on extended config
  * model_couchdb, model_postgres: more flexible config schema
  * config: description, type, creationDate; setConfig() on create-node/register
  * xmpp_pubsub: optimize presence tracking
  * controller: requiredAffiliation='member' for config-node/retrieve
  * README: OpenFire
  * controller: defaultConfig() + use in feature 'config-node'
  * xmpp_pubsub: replace isOnline() with getOnlineResources()
  * model_postgres: fix transaction dequeueing
  * model_postgres: move cb() past process.nextTick/dbIsAvailable for safety
  * model_postgres: work around empty responses
  * test_controller: retract
  * xmpp_pubsub: disco <identity/> according to discovered @node
  * test_controller: browse-nodes
  * model_couchdb: fix preload() etag extraction + error reporting
  * xmpp_pubsub: FeatureNotImplemented message
  * controller: simulate a stack for debug info
  * test_controller: retract skeleton
  * controller unsubscribe: do not fetch affiliation from database but check by node path
  * implement & test unsubscribe
  * test_controller: skeletons
  * test_controller: publishing tests
  * test_controller: more publish testing + controller fix
  * test_controller: begin test publishing
  * model_postgres: fix forgotten variable
  * model_postgres: reconnect to database upon error
  * model_postgres: oops, syntax error
  * config.js.example: postgres is actually the one with a poolSize
  * model_postgres: oops, syntax errors
  * begin test_controller
  * fixes
  * subscriptionModified <message/>
  * xmpp_pubsub: "message" & approve() fixes
  * controller: replace ownerNotification with afterTransaction
  * access_model authorize
  * package.json & README
  * errors: pull inherits() from util/utils/sys for moving node api
  * browse open nodes with service discovery items
  * controller: refactor affiliations checking
  * xmpp_pubsub: fix subscriptions format
  * controller: treat missing accessModel as 'open'
  * model_couchdb: preload() etag fix
  * .gitignore with config.js
  * xmpp_pubsub: node config on disco info
  * model_couchdb: encodeURIComponent() only for db.head() & .get()
  * main.js: #!
  * rename config.js to config.js.example
  * restore default config.js
  * main.js: on uncaughtException
  * postgres doc & config
  * model_postgres
  * model_couchdb: fix item deserialization
  * model_couchdb: rm implemented TODOs
  * README: CouchDB configuration
  * README: TODO++
  * LICENSE
  * README: markdown fix
  * README: mention buddycloud :)
  * model_couchdb: fix views initialization
  * README & config
  * jabber:iq:register
  * model_couchdb: fixes
  * errors fixing
  * rm model_persistence
  * model_couchdb: assertNodeName()
  * main: catch uncaughtException
  * controller: fix
  * bugs, readability
  * model_couchdb: fixing
  * controller: implement affiliations checking
  * xmpp_pubsub: getAffiliations() result is now Array
  * model_couchdb: setSubscription() & setAffiliation() 'none'
  * model_couchdb: consolidate subscriptions & affiliations model
  * xmpp_pubsub: send notifications with type='headline'
  * xmpp_pubsub: subscribeIfNeeded() on <create/> & <subscribe/>
  * model_couchdb: load() shortcut when already cached
  * model_couchdb: createNode() fix
  * model_couchdb: preload()
  * model_couchdb: commit read documents too for integrity
  * model_couchdb: abstract views
  * CouchDB Optimistic Concurrency Control layer
  * controller: improve error propagation
  * defined error conditions
  * untested configuration getting/setting
  * service discovery
  * modify-affiliations
  * model_couchdb: getAffiliation()
  * begin permission checking infrastructure
  * presence probes
  * xmpp_pubsub: presence tracking
  * refactoring controller complete
  * continue refactoring controller into features/operations
  * begin refactoring controller into features/operations
  * subscribers
  * getting subscriptions & affiliations
  * createNode improvements
  * controller createNode: check node
  * model_couchdb: affiliations view
  * items getting
  * much more progress
  * implement retraction, s/notifySubscriber/notify/, s/writeItems/writeItem/
  * publish notification works
  * more frontend hooking
  * begin notification hooks
  * fixes
  * begin model_couchdb transactions
  * split model
  * some progress
  * some progress
  * createNode creates owner affiliation
  * model: indexes
  [ Thomas Jost ]
  * Add @denisw to contributors
  * Upgrade required node version to 0.8
  * We actually need remote subscriptions nodes
  * Merge branch 'feature/anon-fixes' into develop
  * Merge branch 'feature/really-validate-post-times' into develop
  * Reject remote posts with invalid dates
  * Add tests for remote posts with invalid dates
  * Force anon subscriptions to be temporary
  * Set default affiliation to 'none' for anon users
  * Merge branch 'feature/anon-fixes' into develop
  * Cleanup: remove some dead code
  * Purge remote nodes with no local subscription left
  * Merge branch 'feature/recent-items' into develop
  * Merge branch 'feature/validate-remote-items' into develop
  * Sort recent items by update time
  * Merge branch 'feature/validate-remote-items' into feature/recent-items
  * Fix tests that push remote items
  * Validate remote items
  * Add (failing) tests for invalid remote items
  * Implement recent items query
  * Add (failing) test for recent items query
  * PubSub replies can include several elements
  * Merge branch 'feature/pusher' into develop
  * Workaround callback woes
  * Fix MAM for pusher component
  * Pusher: test MAM
  * test_server: move makePublishIq into TestServer
  * Pusher: test node configuration
  * Pusher: test unsubscriptions
  * Merge branch 'feature/affiliations-fixes' into develop
  * Merge branch 'feature/pubsub-disco-features' into develop
  * Cleanup
  * Expose all implemented PubSub features
  * Pusher: test affiliations
  * Merge branch 'feature/affiliations-fixes' into feature/pusher
  * Fix affiliation in /subscriptions notifications
  * Accept PubSub-compliant affiliations notifications
  * Pusher: test subscriptions
  * Merge branch 'feature/fix-98' into develop
  * Fix SQL for updating replies
  * Add failing test for issue #98
  * Fix offline user cleanup
  * DB: drop anonymous column
  * Yet another federation test
  * Check if the example config file is valid JS
  * Add tests for pusher code
  * Pusher can MAM everything
  * Pusher is a listener for all notifications
  * Add config for pusher component
  * Merge branch 'feature/mam-fixes' into develop
  * Increase the default number of items in a MAM response
  * Make MAM return an error if there are too many results
  * Use RSM in MAM
  * Test MAM RSM
  * MAM: filter bad dates out
  * Test if MAM validates dates correctly
  * Ensure the giant MAM test doesn't pollute the test environment
  * Make affiliations notifications PubSub-compliant
  * Affiliations have update timestamps too
  * Avoid temporary subscriptions in MAM results
  * Advertise support for MAM in disco#info
  * Add a giant MAM test
  * Update Travis URL in README.md
  * Merge branch 'feature/tests' into develop
  * Correctly tests that updated items don't change <in-reply-to/>
  * Move tests on updated items to a different function
  * Add tests for updates that change <in-reply-to/>
  * Use Travis to automate testing
  * Merge branch 'master' into develop
  * Add compatibility with PostgreSQL 9.1
  * Require at least one item to retract
  * Add Emacs folding marks
  * Add retrieve and retract tests
  * Fix retraction stanza sent to remote services
  * Tombstones: include Atom namespace in <updated/> element
  * Fix error when not allowed to retract an item
  * Tombstones can't be updated
  * When publishing an update, check if the actor is the original author
  * Check if original post exists before publishing a reply
  * Reject posts from non-users
  * Don't include type in <actor/>
  * Complete post/update/retract tests
  * TestServer: fix Atom in-reply-to element
  * Fail when some unwanted event happens
  * Add description for calls to "should.exist"
  * Retraction tests
  * Workaround CoffeeScript weird scoping rules
  * Add another batch of tests
  * Update test data
  * Change the way the test server emits IQ stanzas
  * Tests for posting to remote channels
  * Test server: emit event for IQs with unknown ID
  * Test server: disco info for "remote" servers
  * More post tests
  * Add helper to run tests that trigger several different stanzas
  * Test server: handle <message/> stanzas
  * Add post tests
  * Post tests: helper to check if post was successful
  * Throw an exception when getting an unexpected error IQ
  * Start adding post tests
  * Add helpers for pubsub get IQs and Atom handling
  * Helpers to add initial test data in the database
  * Add XMPP namespaces to test_server.coffee
  * Reply to presence probes
  * Don't parse Elements again
  * Use same user and server names as in sfc
  * Safe path handling in prepare-db.sh
  * Add codo-like doc to the TestServer class
  * Add helpers to build disco and pubsub IQs
  * Expose support for PubSub node creation
  * Skip a test
  * More channel creation tests
  * New tests and helpers for forms
  * Add a helper to parse disco#info replies
  * Move common disco replies to test_server.coffee
  * Start testing for channel creation
  * Test server: handle disco#items queries
  * Make tests runnable using "npm test"
  * Basic disco tests
  * Start a test suite
  * Use an existing component connection if provided in config
  * Make it possible to require() the server
  * Update config.js.example
  * Fix autosubscribeNewUsers
  * Increase the max number of items in each RSM page
  * Better shrinking of oversized stanzas
  * Include `-dirty' in version number from git
  * Remove glob from dependencies
  * Fix indentation in main.coffee
  * Prevent existing persistent subscription from being made temporary
  * Merge branch 'feature/version-number-from-git' into develop
  * Expose support for XEP-0092 (Software Version) in disco
  * Use `git describe' to get version numbers in dev branches
  * Merge branch 'master' into next
  * Restore compatibility with Node 0.6
  * Fix handling of offline users
  * Avoid race condition in disco cache
  * Shrink oversized stanzas more aggressively
  * Avoid nulls
  * Include new files in release tarball
  * Avoid race condition in disco cache
  * Merge remote-tracking branch 'upstream/tempsub' into next
  * Merge branch 'db-versioning' into next
  * buddycloud-server 0.3.5
  * Check if remote supports temporary subscription before sending a tempsub request
  * Client can check for server features before sending an IQ
  * Make server features discoverable
  * Log errors when processing incoming messages
  * Cleanup
  * Remove empty text nodes from items
  * Fix ActivityStreams verb for replies
  * Include operation name in debug message
  * Don't notify unsubscribe when it was a temporary subscription
  * Offline user cleanup: do real unsubscribe operations
  * I'm dumb
  * Don't delete temporary subscriptions during sync
  * Don't send any notification for temporary subscriptions
  * Client and server must speak the same language
  * Only send notifications about temporary subscriptions to remote listeners
  * Cleanup offline users
  * Claim we support subscription options
  * Temporary subscriptions
  * Fix updating items
  * Add help channels to default autosubscriptions
  * Merge branch 'log-fix'
  * Inspect objets in log messages
  * Fix broken log messages
  * Don't write subscription stanzas in items table
  * Merge remote-tracking branch 'lloyd/config'
  * Populate in_reply_to column when inserting new items
  * DB cleanup at startup
  * Add README for DB schema versioning
  * Upgrade DB schema
  * Check DB schema version on startup
  * Don't change <published/> when updating an existing post
  * Fix subscription to remote private channels
  * Don't fail when the default config file does not exist
  * Add Lloyd in contributors
  * Better logging for replies sent by 'proxy' components
  * Merge branch 'mam-result'
  * Include <result/> in MAM replies
  * Merge remote-tracking branch 'schnouki/atom-tombstones'
  * Fix typo
  * Merge pull request #61 from lloydwatkin/no-mod_disco
  * Also send tombstones in retract notifications
  * Use Atom tombstones for deleted items
  * xmpp: XEP-0313 compliance
  * Handle PubSub retract "notify" attribute
  * operations: fix PushInbox notification
  * Fix undefined variable when paging backwards in RSM
  [ Tuomas Koski ]
  * Merge pull request #59 from lloydwatkin/initialise-sync
  * Merge pull request #58 from lloydwatkin/master
  [ Steven Lloyd Watkin ]
  * Ensure we do not cause BC breaks
  * Make both defaults positive rather than one positive & the other negative Broke the config options down further
  * Fix build console output
  * "package" now a reserved word in node, caused failing in builds (v0.6.15+)
  [ Denis Washington ]
  * Use local CoffeeScript "cake" for "npm install"
  [ Jonas Smedegaard ]
  * Setup access rights and needed dirs when starting daemon
  * Speedup system shutdown by avoiding explicit sysV stop
  * xmpp_pubsub: check for commandEl prior usage
  [ Reginald dude ]
  * updates sent via email from vorner.cz
  * updates sent via email from vorner.cz
  [ Reginald Dude ]
  * Most confusing config file ever
  [ ▟ ▖▟ ▖ ]
  * Merge pull request #70 from lloydwatkin/fix-is-function
  * Merge pull request #63 from lloydwatkin/no-mod_disco
  * Merge pull request #62 from lloydwatkin/no-mod_disco
  * Merge pull request #57 from Schnouki/xep-0313
  * Merge pull request #54 from Schnouki/fix-notif
  * Merge pull request #52 from lloydwatkin/master
  * Merge pull request #51 from lloydwatkin/master
  [ James Tait ]
  * Ensure both the PID dir and log dir are created on startup if they do not already exist.
  [ imaginator ]
  * aligning with INSTALL instructions
  * moved instructions to wiki
  * Edited README.md via GitHub
  [ dodo ]
  * fix accessModel of geo nodes
  * always test in production
  * buddycloud-server 0.3.4
  * Merge branch 'packaging'
  * put the /etc/init.d script into tarball
  * not needed anymore
  * default options for new channels
  * bump tarballify version
  * add bin/buddycloud-server to the tarball
  * no build step in bin/buddycloud-server anymore
  * print additional info messages in gray
  * fix 'file is not defined'
  * fix 'modName is not defined'
  * colorful output for package.js
  * bump tarballify version
  * rm trailing spaces
  * no build_binary.sh needed
  * separate devDependencies
  * export name
  * use packaging script
  * buddycloud-server 0.3.3
  * pass prefix to npm to force npm to use that particular prefix
  * $PREFIX/bin/buddycloud-server can be nonexistant .. so ignore all errors when removing
  * bump node version in build script
  * merge issue #37
  * specify interal config file as defaults, not as main config
  * backports to node 0.4
  * concat cwd path to config path only when config path is relative
  * respect the cwd
  * move to the right dir before builing
  * wscript is not needed anymore
  * merged #31. symlink detection for bin/buddycloud-server thanks to @highfellow
  * fixed gitignore
  * forgot Cakefile
  * pin node version for over 0.5 to get the require json working
  * get version directly
  * new buildsystem
  * check if config.syslog has keys
  * dont load default config over opts and args
  * main: fix config loading
  * wscript fixes
  * load config via jsconfig
  * update wscript
  * upgrade build environment
  * update requirements in readme
  * cleanup files
  [ Simon Tennant ]
  * Update config.js.example
  * change to read config file from /opt/buddycloud
  * Update master
  * don't be so --quiet (will help a lot with debugging)
  * Update _etc_init.d_buddycloud-server
  * the orwell defeault was causing jdesenberg problems.
  * Fixed the permissions to run as.
  * Update _etc_init.d_buddycloud-server
  * init script
  * make it really clear what to change (and what "jid" refers to)
  * Made the ownership of tables really clear. Should help avoid the problem that DD had the other day.
  [ Lloyd Watkin ]
  * Fix for checking of child element
  * Catch error event
  * Fix for server reset
  * Updated variable names to better describe what config does.
  * Merge branch 'master' of git://github.com/buddycloud/buddycloud-server into no-mod_disco
  * Allow buddycloud server to advertise additional 'proxy' components
  * Wait to sync
  * Rename of parameter
  * Allow user to specify a port or not, changed argument name as it may not actually be remote debugging.
  * Tidy up
  * Allow node.js debugging
  [ Simon ]
  * /etc/init.d/buddycloud-server

 -- Abmar Barros (buddycloud Nightly Builds) <abmar@buddycloud.com>  Sat, 26 Jan 2013 14:25:05 -0300


buddycloud-server (0.1) unstable; urgency=medium

  [ Astro ]
  * operations: all nodes in defaultConfiguration accessModel=authorize
  * operations: posts & subscriptions accessModel=authorize in defaultConfiguration
  * buddycloud-server 0.3.2
  * Cakefile: version.js + 

  * operations: fix run notifications control flow
  * build_binary.sh: get bin/buddycloud-server out of the way before npm i
  * buddycloud-server 0.3.1
  * package.json: honor all contributors
  * Merge remote-tracking branch 'schnouki/patch-1'
  * .npmignore: exclude debian/* from npm pkgs
  * buddycloud-server 0.3.0
  * package.json: bump dep versions
  * operations: prevent unsubscribing/demoting the node owner
  * operations: fix PushInbox callback
  * operations: run notifies first, then syncs, then calls back
  * pubsub_server: lower logging
  * operations: fix PushInbox newNodes
  * operations: move PushInbox syncNode post transaction
  * operations: PushInbox should work even if syncNode had hickups
  * operations: syncNode when PushInbox created it
  * operations: fix PushInbox notification & newModerators
  * model_postgres: fix & simplify purgeNode()
  * sync: fixes
  * sync: purge node if no local subscribers
  * purge node when local unsubscription is pushed from remote
  * operations: fix generateSubscriptionsNotifications followee
  * operations: fix PushInbox newModerators nodes
  * xmpp connection: doc, serialize stanzas only once
  * operations: NewModeratorNotify needs listener, not user
  * operations: fix NewModeratorNotify listener
  * operations: log Operation name
  * model_postgres: must quote "user" column for Postgres
  * operations: NewModeratorNotify must cb()
  * operations: Notify notifies w/ node
  * operations: fix Notify otherListeners
  * pubsub_client: rm debug
  * operations: NewModeratorNotify notifies w/ node & listener
  * model_postgres: optional Transaction callbacks
  * operations: fix Notify filterSubscription & filterAffiliation invokation
  * operations: fix this binding
  * operations: no pending subscriptions in subscriptions node
  * operations: NewModeratorNotify
  * operations: doc, filter subscriptions and affiliations for non-moderators
  * operations: reorganize
  * clean up logging
  * operations: posts node defaultAffiliation='publisher'
  * sync: fix AffiliationsSynchronization typo
  * buddycloud-server 0.2.3
  * package.json: fix install script
  * build_binary.sh: bump node.js version
  * buddycloud-server 0.2.2
  * package.json: add preinstall cake build
  * operations: fix notifications
  * build_binary.sh: bump node.js version
  * buddycloud-server 0.2.1
  * operations: fix Notify subscriptios node items
  * operations: fix Notify callback result
  * operations: BrowseNodeItems for subscriptions node calls getSubscriptions not getSubscription
  * operations: syntax fixes
  * operations: Notify subscriptions fixes
  * operations: subscriptions node notifications
  * operations: BrowseNodeItems for subscriptions node
  * sync: require errors
  * sync: avoid error output when omitting local node
  * router, sync: improve logging
  * backend_pubsub: PubsubBackend.notify listener robustness
  * operations: fix Subscribe defaultAffiliation
  * operations: fix ManageNodeAffiliations control flow
  * pubsub_server: PubsubOwnerSetAffiliationsRequest syntax fix
  * operations: fix requiredAffiliation()
  * operations: requiredAffiliation can be function to allow moderators approving topic channel subscribers
  * operations: ManageNodeSubscriptions refactor for efficiency
  * operations: ManageNodeSubscriptions should set new affiliations to defaultAffiliation
  * operations: fix Notify jid/user
  * operations: Notify should notify all users pertained by a subscription
  * operations: 'unsubscribe-node' notifies unsubscribed user
  * operations, pubsub_client: there's no "unsubscribed" subscription, only "none"
  * pubsub_server: PubsubOwnerSetSubscriptionsRequest syntax fix
  * operations: Unsubscribe needs PrivilegedOperation methods
  * operations: Unsubscribed is not a PrivilegedOperation but a ModelOperation
  * operations: fix callback scope
  * pubsub_server: robustify PubsubItemsRequest
  * operations: syntax
  * pubsub_server, operations: support for RetrieveItems by itemIds
  * build_binary.sh: bump node.js version to 0.6.10
  * buddycloud-server 0.2.0
  * operations: CreateNode should not allow creation with empty nodeUser username
  * operations: fix CreateNode defaults & creationDate
  * operations: fix CreateNode isTopic switcheroo
  * router: fix autosubscribeNewUsers operation name
  * router: autosubscribeNewUsers
  * config.js.example: default checkCreateNode hook checks for a specific topic domain
  * operations: fix CreateNode node typo
  * operations: fix CreateNode config
  * pubsub_server, operations: CreateNode with optional config
  * operations: fix CreateNode setSubscription()
  * operations: CreateNode catches missing checkCreateNode hook
  * operations: CreateNode default config
  * checkCreateNode config hook
  * model_postgres: fix getOwnersByNodePrefix SQL
  * operations: fix CreateNode setAffiliation()
  * operations: fix CreateNode getOwnersByNodePrefix()
  * operations: fix ../util require, CreateNode safety check
  * implement createNode with getOwnersByNodePrefix check
  * operations: begin creating topic channels
  * model_postgres: syntax fix
  * package.json: maintainer update
  * build_binary.sh: update to node 0.6.9
  * buddycloud-server 0.1.11
  * rsm_walk: fix logging
  * operations: checkAccessModel() before checkRequiredAffiliation()!
  * operations: Unsubscribe condition syntax fix
  * package.json: muffin dependency glob seems be incompatible in v3.*
  * operations: checkRequiredAffiliation should ignore no @requiredAffiliation
  * operations: fix isAffiliationAtLeast w/ invalid affiliation
  * jsconfig 0.2.0 is out! w00t!!!
  * Cakefile: lib/version.js from package.json
  * logger: update to ain2 1.0.0
  * main: fix config loading
  * buddycloud-server 0.1.10
  * router: fix syncServer()
  * buddycloud-server 0.1.9
  * bin/buddycloud-server: fix param quoting
  * bin/buddycloud-server: fix $cwd
  * buddycloud-server 0.1.8
  * .npmignore to package up built lib/* instead of src/*
  * build_binary.sh: install devDependencies beforehand
  * build_binary.sh: bump node.js version to 0.6.7
  * util: move getNodeUser(), getUserDomain()
  * main: "server successfully started"
  * sync: fix logging
  * model_postgres: fix writeItem() SQL parameter binding
  * sync: fix PaginatedSynchronization error callback
  * sync: rm TODO note
  * model_postgres: writeItem updated_query
  * operations: logging fixes
  * writeItem: move updated extraction from operations to model_postgres
  * model_postgres: writeItem should also INSERT existing updated value
  * model_postgres: fix syntax
  * model_postgres: SQL fixes
  * operations: PushInbox copies item published date
  * postgres schema: CREATE VIEW open_nodes + usage in model_postgres
  * model_postgres: fix query result handling
  * fix getTopFollowedNodes & getTopPublishedNodes parameters
  * model_postgres: fix SQL INTERVAL syntax
  * operations: BrowseNodes.fetchNodes() needs transaction
  * operations: BrowseNodes.transaction should use @fetchNodes()
  * operations: fetchNodes() typo
  * pubsub_server: browse /top-followed-nodes & /top-published-nodes does not request a particular node
  * getTopFollowedNodes & getTopPublishedNodes w/ XMPP disco interface
  * build_binary.sh: bump to node 0.6.6
  * buddycloud-server 0.1.7
  * package.json: rm cradle dependency
  * logger: syslog only with hostname
  * replace common-logger by underscore.logger
  * update ain2 dependency for node v0.6 compatibility
  * model_postgres walkListenerArchive: replace DISTINCT with GROUP BY
  * model_postgres: fix config order/limig
  * operations: ReplayArchive sorts results before capping
  * ReplayArchive/walkListenerArchive: properly cap result set
  * operations: ReplayArchive default max=50
  * build_binary.sh: use $PREFIX from environment if present
  * package.json: req node-stringprep >=0.1.1
  * router: fix
  * buddycloud-server 0.1.6
  * update to new node-waf paths
  * build_binary.sh: switch to node 0.6.4
  * package.json: depend on 0.3.1
  * router: RSM usage fix
  * logger: open logFile for appending, fixes issue #25
  * package.json: depend on node-xmpp >= 0.3.0
  * operations ReplayArchive: fix rsm max
  * operations: ReplayArchive RSM support
  * backend_pubsub: notificationPush updates include sender & actor
  * router: detectUserType fixes
  * router: detectUserType fixes
  * logger: fix argument iteration
  * main, backend_pubsub: logging improvements
  * backend_pubsub: include user in notfound error
  * connection: loopback stanzas to ourselves
  * router: add missing util.inspect include
  * router.run: trace req
  * router: add missing rsm include
  * logger: typo
  * logger: fix level
  * logging clean-up
  * router, pubsub_{server,client}: @type in <actor/>
  * buddycloud-server 0.1.5
  * router: sync fixes
  * buddycloud-server 0.1.4
  * ManageNodeAffiliations: non-owner may not elect a new owner
  * sync: log upon completion
  * sync: transaction fix
  * move some sync logic into router, lock per node
  * operations: BrowseNodeInfo/RetrieveNodeConfiguration w/o access control
  * buddycloud-server 0.1.3
  * operations: deny Unsubscribe from own nodes
  * logger: ain2 syslog transport
  * logger: message always as string
  * main: fix --stdout kludge
  * logger: avoid log level < 0
  * config.js.example: syslog on by default
  * config.js.example: logging section
  * syslog support with ain2
  * support --stdout logging
  * replace cnlogger by common-logger
  * buddycloud-server 0.1.2
  * build_binary: npm install globally (into /opt/buddycloud-server/)
  * build_binary: dedup node & npm versions
  * build_binary: default to /opt/buddycloud-server, bin/ script
  * main: process.title fix
  * version: fix package.json path
  * version from package.json in process.title and for jabber:iq:version
  * xmpp/connection: do not subscribe in probePresence()
  * buddycloud-server 0.1.1
  * build_binary: bump node & npm versions
  * backend_pubsub: reply() must also copy 'replay' field on MaxStanzaSizeExceeded
  * connection: more stanza output when MaxStanzaSizeExceeded
  * don't send ReplayArchive notifications to all online resources
  * pubsub_client/connection: wrap error replies into StanzaError earlier
  * logging fixes
  * port to cnlogger
  * port to broken winston logging
  * xmpp connection: always tell node-xmpp to reconnect
  * async.filter iterator does not take error parameter
  * model_postgres: fix nodeExists warning
  * backend_pubsub: fix notification matching
  * sync: fix router.authorizeFor() usage
  * sync: writeItem does not need author anymore
  * operations: typo
  * model_postgres: fix getListenerAffiliations() query
  * sync: careful
  * xmpp/forms: oops, s/creationTime/creationDate/
  * xmpp/connection: fix name
  * router: check for anonymous user to be online
  * anonymous user offline tracking & clean-up
  * model_postgres: fix walkListenerArchive() node in results
  * router: fix method binding
  * model_postgres: walkListenerArchive() should include node in results
  * operations: RemoveUser & model_postgres.getUserRemoteSubscriptions() & clearUserSubscriptions()
  * BuddycloudDiscovery::detectAnonymousUser
  * backend_pubsub: gracefully handle MaxStanzaSizeExceeded for notifications
  * xmpp pubsub_server & connection: fix graceful MaxStanzaSizeExceeded handling
  * errors: MaxStanzaSizeExceeded extends Error
  * operations: s/geoloc/geo/
  * operations: /subscription items shall contain jid=owner
  * metadata buddycloud#channel_type
  * proper metadata field names
  * support for creationDate
  * operations: clarify logging
  * router: fix remote backend selection
  * operations: Unsubscribe refactor & fix
  * operations: fix Register
  * buddycloud-server 0.1.0
  * operation: print opName on commit, rm debug
  * bin/buddycloud-server: don't cd so config can be loaded relatively
  * Merge remote-tracking branch 'origin/cli'
  * operations: RetractItems should allow anyone to remove their own posts
  * operations: preserve affiliation if previously affiliated
  * operations: unify into isAffiliationAtLeast()
  * operations: rm leftover TODO note
  * operations: refactor Register; should check if authoritative for user's domain
  * router.run: return 404 for nodes not locally subscribed but discovered ourselves
  * rm explicit author handling in postgres schema, model, operations
  * main: check sender authorization for authorizationPrompt
  * operations: RetrieveItems shall not virtualize items for cache case of remote nodes
  * Revert "Made the ownership of tables really clear. Should help avoid the problem that DD had the other day."
  * s/channel-server/buddycloud-server/g
  * build_binary.sh: fix invokation hint
  * README: rm some outdated stuff
  * main: fix defaultConfig stuff
  * build_binary.sh
  * operations: RetrieveItems.retrieveSubscriptionsItems() result set sorting, affiliations
  * virtual handling of /user/.../subscriptions node items
  * MAM replays subscription authorization requests
  * more authorization stuff
  * fixes
  * small fixes
  * package.json: fix bin path
  * further authorizationPrompt work
  * backend_pubsub: missedSomething was missing
  * package.json: fix coffeescript path (./node_modules/...)
  * sending authorize notification forms
  * package.json: fix .coffee compilation stage
  * operations: PrivilegedOperation.fetchActorAffilliation fetches all listener affiliations for inbox sync
  * pubsub_notifications: fix MAM stanzas
  * operations: subscribe defaultAffiliation, fixes
  * model_postgres: many fixes
  * operations: publishModel 'subscribers'
  * operations: access control fixes
  * begin access control, affiliations checking
  * model_postgres: fixes
  * errors: fix error classes
  * xmpp/connection: fix
  * xmpp/connection: fix @missedServerTimeouts usage
  * model_postgres: safety checks
  * readability, notes
  * rsm_walk: fix serious errors
  * globally refactor operation from function to value
  * sync: fixes
  * add forgotten rsm_walk file
  * move syncQueue from main.coffee to fine-grained sync.syncNode
  * xmpp/connection: readability
  * xmpp/connection: track <you-missed-something/> timers with @missedServerTimeouts
  * syncServer support, wired up to <you-missed-something/> 'syncNeeded'
  * model_postgres: for an actor, getSubscriptions() shall return not only users but also listeners
  * MAM time specification
  * primitive MAM implementation
  * send <you-missed-something/>
  * operations: PushInbox TODO note
  * sync: rm request.rsm.max clamp
  * synchronization with state resetting and subscriptions/affiliations support
  * pubsub_*: fix user/jid conventions
  * ConfigSynchronization should use browse-node-info to get node config
  * synchronizing!
  * synchronization kinda works, but hits RSM loops
  * further synchronization progress
  * begin synchronization
  * main: require async
  * measure stanza size, gracefully retry with smaller result set
  * synchronization groundwork
  * don't let backend_pubsub call router.runLocally(), return errors.SeeLocal() instead
  * errors: clean up
  * normalize: add <link rel="self" href="xmpp:...?pubsub;action=retrieve;..."/>
  * operations: Publish shall allow new items with specified @id
  * nodes browsing, with RSM
  * backend_pubsub: run() should bail out early on invalid node form
  * PostgreSQL tuning
  * complete RSM implementation
  * begin RSM for all operations
  * generify RSM stuff
  * pubsub_client: RSM
  * fixes from CCCamp11
  * RSM for local items retrieving
  * begin new RSM implementation
  * pubsub_server: publish-node-items shall reply with item ids
  * model_postgres: fix getNodeListeners() SQL
  * model_postgres: nodeExists() shall check for NOT NULL
  * model_postgres: getNodeListener() replace filter by SQL
  * model_postgres: getNodeListener() filter for null
  * model_postgres: fix setSubscription() INSERT w/o listener
  * error printout
  * forms: fix
  * operations: PushInbox author fix
  * debug
  * xml child robustness
  * model_postgres: fix nodeExists()
  * fix subscription listener for local users
  * logging cleanup
  * initiate presence tracking of users
  * xmpp/connection: use send() instead of specifying from jid
  * some logging cleanup
  * operations: push-inbox does not set subscription listener
  * fixes & TODO notes
  * operations: Notify.transaction() must call cb()
  * retrieve-node-configuration
  * forms: configToResultForm -> configToForm
  * pubsub_client: RetrieveNodeConfiguration & ManageNodeConfiguration
  * operations: catch reply cb exceptions
  * create-node operation
  * package.json: scripts
  * fixes
  * fix outgoing notifications
  * generify pubsub_notifications
  * many fixes for subscription pushing
  * router: if request writes, always go remote
  * push incoming notifications to local model
  * more subclassing of EventEmitter, incoming notifications handling
  * pubsub_server: unify PubsubRequest & PubsubOwnerRequest
  * merge request.coffee into pubsub_server.coffee
  * begin remote subscription pushing to local inbox
  * backend_pubsub: PubsubBackend.notify(): readability
  * tune to use single cb() instead of req.{reply,replyError}()
  * revive normalization
  * model_postgres: setSubscription(): coearce isSet to boolean
  * model_postgres: catch lost transactions
  * pubsub_client: error reporting, fix
  * subscribe reply status
  * model_postgres: setAffiliation() should check nodeExists()
  * fix disco.authorizeFor() usage
  * pubsub_client: fix <actor/> placement
  * refactor notifications a bit
  * pubsub_client: <actor/> placement fix
  * pubsub_client: fix <actor/> placement
  * pubsub_notifications: subscriptions/affiliations/config
  * fix registration/model callback parameters
  * operations: ManageNodeAffiliations validates accessModel & publishModel
  * setting configuration
  * fixes, fixes, config
  * only RegisterSetRequest should induce presence subscription
  * FIXME note
  * model_postgres: do not use rowCount
  * operations: Register created default configuration
  * pubsub_server: pubsub/inbox identity
  * fixes, StanzaError
  * implement pubsub_client operations
  * pubsub_notifications: byOperation()
  * fixes
  * fixes
  * fixes & debugging
  * fixes
  * debugging & fixes
  * fixes
  * begin discovering locally
  * fixes
  * Router.run: fix
  * fixes
  * operations: rename channel node to "posts"
  * begin notifications
  * a bit o' twiddling w/ subscription listeners
  * refactor router for remote requests
  * operations: subscribe/unsubscribe toggle affiliation none/member
  * router: rename frontend to backend
  * rename backend_postgres to model_postgres, revive router
  * main: move iqHandler to pubsub_server
  * manage, not only retrieve, subscriptions & affiliations
  * use subscribe sender as notification listener
  * backend_pubsub: replace ternary operator
  * need to store listener in subscriptions...
  * backend_pubsub: implement RequestCache
  * new untested buddycloud discovery with backend_pubsub.coffee
  * retrieve <actor/> generalized, begin using authorizeFor
  * ns: add BUDDYCLOUD_V1 xmlns
  * postgres.sql schema: updated column for more tables, author column for items
  * retrieving node affiliations
  * retrieving node subscriptions, fixes
  * backend_postgres: syntax fixes
  * operation: Register should set affiliation & subscription
  * retrieving subscriptions & affiliations
  * retracting items
  * publishing & retrieving items works
  * begin item retrieving
  * subscribe & unsubscribe
  * fix backend_postgres (user is a Pg keyword, must be quoted as column name)
  * publishing works
  * lots of fixes
  * fix disco requests
  * fix, fix, fix
  * begin implementing register & publish implementation
  * mv src/operations.coffee src/local/operations.coffee
  * revive backend
  * primitive operations
  * mv controller.coffee operations.coffee
  * dead code TODO
  * fixes
  * rm old dead code
  * rename iqhandler to request
  * begin some refactoring
  * begin hooking up handlers with operations
  * xmpp/pubsub_server: indicate operation types
  * notes
  * pubsub_server: PubsubOwnerHandlers
  * pubsub_server: flesh out more pubsub handlers
  * add affiliations checking
  * begin interweaving with local operations
  * a tad of interconnecting
  * pubsub_server: DiscoInfoHandler.reply()
  * xmpp client 'n stuff
  * README: draw new design
  * begin router
  * xmpp: move NS_* to ns.coffee
  * xmpp: primitive disco info works
  * begin iqhandler
  * xmpp/connection: port presence tracking
  * rm main.js
  * move src files around
  * rm model_couchdb from config, add preliminary main.coffee
  * a bit new controller
  * rm old test_controller
  * some controller work
  * old controller translated to coffeescript
  * port peripheral stuff over to coffeescript
  * README: change ejabberd port to the config default one
  * model_couchdb: s/doc.subscribers/doc.subscriptions/
  * xmpp_pubsub.js: fix typo
  * model_postgres: check nodeExists before any data modification
  * preliminary RSM (XEP-0059) implementation for retrieve-items/retrieve
  * model_couchdb: stub getUpdatesByTime()
  * MAM should result in direct message, not broadcast notification to all resources
  * MAM w/ working model_postgres backend
  * begin implementing MAM
  * controller: register/register should create /user/<jid>/subscriptions node
  * normalize fixes + tests
  * normalize
  * only one child element per item
  * model_postgres: fix setConfig()
  * model_postgres: listNodesByUser()
  * model_couchdb: listNodesByUser(), simplify listNodes()
  * controller, xmpp_pubsub: browse-nodes/by-user
  * model_postgres setConfig(): fixes
  * configuration notification
  * model_postgres setConfig(): do not set fields unspecified/without defaultConfig
  * model_postgres nodeExists(): indentation
  * controller: subscribe should not require preexisting affiliation
  * xmpp_pubsub: fix manage-subscriptions/retrieve result usage
  * controller: allow retrieving subscriptions & affiliations for members
  * xmpp_pubsub: syntax fix
  * model_postgres: fix queue pushing
  * xmpp_pubsub: fix info discovery reply FORM_TYPE
  * model_postgres: config fixes
  * more on extended config
  * model_couchdb, model_postgres: more flexible config schema
  * config: description, type, creationDate; setConfig() on create-node/register
  * xmpp_pubsub: optimize presence tracking
  * controller: requiredAffiliation='member' for config-node/retrieve
  * README: OpenFire
  * controller: defaultConfig() + use in feature 'config-node'
  * xmpp_pubsub: replace isOnline() with getOnlineResources()
  * model_postgres: fix transaction dequeueing
  * model_postgres: move cb() past process.nextTick/dbIsAvailable for safety
  * model_postgres: work around empty responses
  * test_controller: retract
  * xmpp_pubsub: disco <identity/> according to discovered @node
  * test_controller: browse-nodes
  * model_couchdb: fix preload() etag extraction + error reporting
  * xmpp_pubsub: FeatureNotImplemented message
  * controller: simulate a stack for debug info
  * test_controller: retract skeleton
  * controller unsubscribe: do not fetch affiliation from database but check by node path
  * implement & test unsubscribe
  * test_controller: skeletons
  * test_controller: publishing tests
  * test_controller: more publish testing + controller fix
  * test_controller: begin test publishing
  * model_postgres: fix forgotten variable
  * model_postgres: reconnect to database upon error
  * model_postgres: oops, syntax error
  * config.js.example: postgres is actually the one with a poolSize
  * model_postgres: oops, syntax errors
  * begin test_controller
  * fixes
  * subscriptionModified <message/>
  * xmpp_pubsub: "message" & approve() fixes
  * controller: replace ownerNotification with afterTransaction
  * access_model authorize
  * package.json & README
  * errors: pull inherits() from util/utils/sys for moving node api
  * browse open nodes with service discovery items
  * controller: refactor affiliations checking
  * xmpp_pubsub: fix subscriptions format
  * controller: treat missing accessModel as 'open'
  * model_couchdb: preload() etag fix
  * .gitignore with config.js
  * xmpp_pubsub: node config on disco info
  * model_couchdb: encodeURIComponent() only for db.head() & .get()
  * main.js: #!
  * rename config.js to config.js.example
  * restore default config.js
  * main.js: on uncaughtException
  * postgres doc & config
  * model_postgres
  * model_couchdb: fix item deserialization
  * model_couchdb: rm implemented TODOs
  * README: CouchDB configuration
  * README: TODO++
  * LICENSE
  * README: markdown fix
  * README: mention buddycloud :)
  * model_couchdb: fix views initialization
  * README & config
  * jabber:iq:register
  * model_couchdb: fixes
  * errors fixing
  * rm model_persistence
  * model_couchdb: assertNodeName()
  * main: catch uncaughtException
  * controller: fix
  * bugs, readability
  * model_couchdb: fixing
  * controller: implement affiliations checking
  * xmpp_pubsub: getAffiliations() result is now Array
  * model_couchdb: setSubscription() & setAffiliation() 'none'
  * model_couchdb: consolidate subscriptions & affiliations model
  * xmpp_pubsub: send notifications with type='headline'
  * xmpp_pubsub: subscribeIfNeeded() on <create/> & <subscribe/>
  * model_couchdb: load() shortcut when already cached
  * model_couchdb: createNode() fix
  * model_couchdb: preload()
  * model_couchdb: commit read documents too for integrity
  * model_couchdb: abstract views
  * CouchDB Optimistic Concurrency Control layer
  * controller: improve error propagation
  * defined error conditions
  * untested configuration getting/setting
  * service discovery
  * modify-affiliations
  * model_couchdb: getAffiliation()
  * begin permission checking infrastructure
  * presence probes
  * xmpp_pubsub: presence tracking
  * refactoring controller complete
  * continue refactoring controller into features/operations
  * begin refactoring controller into features/operations
  * subscribers
  * getting subscriptions & affiliations
  * createNode improvements
  * controller createNode: check node
  * model_couchdb: affiliations view
  * items getting
  * much more progress
  * implement retraction, s/notifySubscriber/notify/, s/writeItems/writeItem/
  * publish notification works
  * more frontend hooking
  * begin notification hooks
  * fixes
  * begin model_couchdb transactions
  * split model
  * some progress
  * some progress
  * createNode creates owner affiliation
  * model: indexes
  [ Thomas Jost ]
  * Add @denisw to contributors
  * Upgrade required node version to 0.8
  * We actually need remote subscriptions nodes
  * Merge branch 'feature/anon-fixes' into develop
  * Merge branch 'feature/really-validate-post-times' into develop
  * Reject remote posts with invalid dates
  * Add tests for remote posts with invalid dates
  * Force anon subscriptions to be temporary
  * Set default affiliation to 'none' for anon users
  * Merge branch 'feature/anon-fixes' into develop
  * Cleanup: remove some dead code
  * Purge remote nodes with no local subscription left
  * Merge branch 'feature/recent-items' into develop
  * Merge branch 'feature/validate-remote-items' into develop
  * Sort recent items by update time
  * Merge branch 'feature/validate-remote-items' into feature/recent-items
  * Fix tests that push remote items
  * Validate remote items
  * Add (failing) tests for invalid remote items
  * Implement recent items query
  * Add (failing) test for recent items query
  * PubSub replies can include several elements
  * Merge branch 'feature/pusher' into develop
  * Workaround callback woes
  * Fix MAM for pusher component
  * Pusher: test MAM
  * test_server: move makePublishIq into TestServer
  * Pusher: test node configuration
  * Pusher: test unsubscriptions
  * Merge branch 'feature/affiliations-fixes' into develop
  * Merge branch 'feature/pubsub-disco-features' into develop
  * Cleanup
  * Expose all implemented PubSub features
  * Pusher: test affiliations
  * Merge branch 'feature/affiliations-fixes' into feature/pusher
  * Fix affiliation in /subscriptions notifications
  * Accept PubSub-compliant affiliations notifications
  * Pusher: test subscriptions
  * Merge branch 'feature/fix-98' into develop
  * Fix SQL for updating replies
  * Add failing test for issue #98
  * Fix offline user cleanup
  * DB: drop anonymous column
  * Yet another federation test
  * Check if the example config file is valid JS
  * Add tests for pusher code
  * Pusher can MAM everything
  * Pusher is a listener for all notifications
  * Add config for pusher component
  * Merge branch 'feature/mam-fixes' into develop
  * Increase the default number of items in a MAM response
  * Make MAM return an error if there are too many results
  * Use RSM in MAM
  * Test MAM RSM
  * MAM: filter bad dates out
  * Test if MAM validates dates correctly
  * Ensure the giant MAM test doesn't pollute the test environment
  * Make affiliations notifications PubSub-compliant
  * Affiliations have update timestamps too
  * Avoid temporary subscriptions in MAM results
  * Advertise support for MAM in disco#info
  * Add a giant MAM test
  * Update Travis URL in README.md
  * Merge branch 'feature/tests' into develop
  * Correctly tests that updated items don't change <in-reply-to/>
  * Move tests on updated items to a different function
  * Add tests for updates that change <in-reply-to/>
  * Use Travis to automate testing
  * Merge branch 'master' into develop
  * Add compatibility with PostgreSQL 9.1
  * Require at least one item to retract
  * Add Emacs folding marks
  * Add retrieve and retract tests
  * Fix retraction stanza sent to remote services
  * Tombstones: include Atom namespace in <updated/> element
  * Fix error when not allowed to retract an item
  * Tombstones can't be updated
  * When publishing an update, check if the actor is the original author
  * Check if original post exists before publishing a reply
  * Reject posts from non-users
  * Don't include type in <actor/>
  * Complete post/update/retract tests
  * TestServer: fix Atom in-reply-to element
  * Fail when some unwanted event happens
  * Add description for calls to "should.exist"
  * Retraction tests
  * Workaround CoffeeScript weird scoping rules
  * Add another batch of tests
  * Update test data
  * Change the way the test server emits IQ stanzas
  * Tests for posting to remote channels
  * Test server: emit event for IQs with unknown ID
  * Test server: disco info for "remote" servers
  * More post tests
  * Add helper to run tests that trigger several different stanzas
  * Test server: handle <message/> stanzas
  * Add post tests
  * Post tests: helper to check if post was successful
  * Throw an exception when getting an unexpected error IQ
  * Start adding post tests
  * Add helpers for pubsub get IQs and Atom handling
  * Helpers to add initial test data in the database
  * Add XMPP namespaces to test_server.coffee
  * Reply to presence probes
  * Don't parse Elements again
  * Use same user and server names as in sfc
  * Safe path handling in prepare-db.sh
  * Add codo-like doc to the TestServer class
  * Add helpers to build disco and pubsub IQs
  * Expose support for PubSub node creation
  * Skip a test
  * More channel creation tests
  * New tests and helpers for forms
  * Add a helper to parse disco#info replies
  * Move common disco replies to test_server.coffee
  * Start testing for channel creation
  * Test server: handle disco#items queries
  * Make tests runnable using "npm test"
  * Basic disco tests
  * Start a test suite
  * Use an existing component connection if provided in config
  * Make it possible to require() the server
  * Update config.js.example
  * Fix autosubscribeNewUsers
  * Increase the max number of items in each RSM page
  * Better shrinking of oversized stanzas
  * Include `-dirty' in version number from git
  * Remove glob from dependencies
  * Fix indentation in main.coffee
  * Prevent existing persistent subscription from being made temporary
  * Merge branch 'feature/version-number-from-git' into develop
  * Expose support for XEP-0092 (Software Version) in disco
  * Use `git describe' to get version numbers in dev branches
  * Merge branch 'master' into next
  * Restore compatibility with Node 0.6
  * Fix handling of offline users
  * Avoid race condition in disco cache
  * Shrink oversized stanzas more aggressively
  * Avoid nulls
  * Include new files in release tarball
  * Avoid race condition in disco cache
  * Merge remote-tracking branch 'upstream/tempsub' into next
  * Merge branch 'db-versioning' into next
  * buddycloud-server 0.3.5
  * Check if remote supports temporary subscription before sending a tempsub request
  * Client can check for server features before sending an IQ
  * Make server features discoverable
  * Log errors when processing incoming messages
  * Cleanup
  * Remove empty text nodes from items
  * Fix ActivityStreams verb for replies
  * Include operation name in debug message
  * Don't notify unsubscribe when it was a temporary subscription
  * Offline user cleanup: do real unsubscribe operations
  * I'm dumb
  * Don't delete temporary subscriptions during sync
  * Don't send any notification for temporary subscriptions
  * Client and server must speak the same language
  * Only send notifications about temporary subscriptions to remote listeners
  * Cleanup offline users
  * Claim we support subscription options
  * Temporary subscriptions
  * Fix updating items
  * Add help channels to default autosubscriptions
  * Merge branch 'log-fix'
  * Inspect objets in log messages
  * Fix broken log messages
  * Don't write subscription stanzas in items table
  * Merge remote-tracking branch 'lloyd/config'
  * Populate in_reply_to column when inserting new items
  * DB cleanup at startup
  * Add README for DB schema versioning
  * Upgrade DB schema
  * Check DB schema version on startup
  * Don't change <published/> when updating an existing post
  * Fix subscription to remote private channels
  * Don't fail when the default config file does not exist
  * Add Lloyd in contributors
  * Better logging for replies sent by 'proxy' components
  * Merge branch 'mam-result'
  * Include <result/> in MAM replies
  * Merge remote-tracking branch 'schnouki/atom-tombstones'
  * Fix typo
  * Merge pull request #61 from lloydwatkin/no-mod_disco
  * Also send tombstones in retract notifications
  * Use Atom tombstones for deleted items
  * xmpp: XEP-0313 compliance
  * Handle PubSub retract "notify" attribute
  * operations: fix PushInbox notification
  * Fix undefined variable when paging backwards in RSM
  [ Tuomas Koski ]
  * Merge pull request #59 from lloydwatkin/initialise-sync
  * Merge pull request #58 from lloydwatkin/master
  [ Steven Lloyd Watkin ]
  * Ensure we do not cause BC breaks
  * Make both defaults positive rather than one positive & the other negative Broke the config options down further
  * Fix build console output
  * "package" now a reserved word in node, caused failing in builds (v0.6.15+)
  [ Denis Washington ]
  * Use local CoffeeScript "cake" for "npm install"
  [ Jonas Smedegaard ]
  * Setup access rights and needed dirs when starting daemon
  * Speedup system shutdown by avoiding explicit sysV stop
  * xmpp_pubsub: check for commandEl prior usage
  [ Reginald dude ]
  * updates sent via email from vorner.cz
  * updates sent via email from vorner.cz
  [ Reginald Dude ]
  * Most confusing config file ever
  [ ▟ ▖▟ ▖ ]
  * Merge pull request #70 from lloydwatkin/fix-is-function
  * Merge pull request #63 from lloydwatkin/no-mod_disco
  * Merge pull request #62 from lloydwatkin/no-mod_disco
  * Merge pull request #57 from Schnouki/xep-0313
  * Merge pull request #54 from Schnouki/fix-notif
  * Merge pull request #52 from lloydwatkin/master
  * Merge pull request #51 from lloydwatkin/master
  [ James Tait ]
  * Ensure both the PID dir and log dir are created on startup if they do not already exist.
  [ imaginator ]
  * aligning with INSTALL instructions
  * moved instructions to wiki
  * Edited README.md via GitHub
  [ dodo ]
  * fix accessModel of geo nodes
  * always test in production
  * buddycloud-server 0.3.4
  * Merge branch 'packaging'
  * put the /etc/init.d script into tarball
  * not needed anymore
  * default options for new channels
  * bump tarballify version
  * add bin/buddycloud-server to the tarball
  * no build step in bin/buddycloud-server anymore
  * print additional info messages in gray
  * fix 'file is not defined'
  * fix 'modName is not defined'
  * colorful output for package.js
  * bump tarballify version
  * rm trailing spaces
  * no build_binary.sh needed
  * separate devDependencies
  * export name
  * use packaging script
  * buddycloud-server 0.3.3
  * pass prefix to npm to force npm to use that particular prefix
  * $PREFIX/bin/buddycloud-server can be nonexistant .. so ignore all errors when removing
  * bump node version in build script
  * merge issue #37
  * specify interal config file as defaults, not as main config
  * backports to node 0.4
  * concat cwd path to config path only when config path is relative
  * respect the cwd
  * move to the right dir before builing
  * wscript is not needed anymore
  * merged #31. symlink detection for bin/buddycloud-server thanks to @highfellow
  * fixed gitignore
  * forgot Cakefile
  * pin node version for over 0.5 to get the require json working
  * get version directly
  * new buildsystem
  * check if config.syslog has keys
  * dont load default config over opts and args
  * main: fix config loading
  * wscript fixes
  * load config via jsconfig
  * update wscript
  * upgrade build environment
  * update requirements in readme
  * cleanup files
  [ Simon Tennant ]
  * Update config.js.example
  * change to read config file from /opt/buddycloud
  * Update master
  * don't be so --quiet (will help a lot with debugging)
  * Update _etc_init.d_buddycloud-server
  * the orwell defeault was causing jdesenberg problems.
  * Fixed the permissions to run as.
  * Update _etc_init.d_buddycloud-server
  * init script
  * make it really clear what to change (and what "jid" refers to)
  * Made the ownership of tables really clear. Should help avoid the problem that DD had the other day.
  [ Lloyd Watkin ]
  * Fix for checking of child element
  * Catch error event
  * Fix for server reset
  * Updated variable names to better describe what config does.
  * Merge branch 'master' of git://github.com/buddycloud/buddycloud-server into no-mod_disco
  * Allow buddycloud server to advertise additional 'proxy' components
  * Wait to sync
  * Rename of parameter
  * Allow user to specify a port or not, changed argument name as it may not actually be remote debugging.
  * Tidy up
  * Allow node.js debugging
  [ Simon ]
  * /etc/init.d/buddycloud-server

 -- Abmar Barros (buddycloud Nightly Builds) <abmar@buddycloud.com>  Sat, 26 Jan 2013 14:26:38 -0300


buddycloud-server (0.1) unstable; urgency=medium

  [ Astro ]
  * operations: all nodes in defaultConfiguration accessModel=authorize
  * operations: posts & subscriptions accessModel=authorize in defaultConfiguration
  * buddycloud-server 0.3.2
  * Cakefile: version.js + 

  * operations: fix run notifications control flow
  * build_binary.sh: get bin/buddycloud-server out of the way before npm i
  * buddycloud-server 0.3.1
  * package.json: honor all contributors
  * Merge remote-tracking branch 'schnouki/patch-1'
  * .npmignore: exclude debian/* from npm pkgs
  * buddycloud-server 0.3.0
  * package.json: bump dep versions
  * operations: prevent unsubscribing/demoting the node owner
  * operations: fix PushInbox callback
  * operations: run notifies first, then syncs, then calls back
  * pubsub_server: lower logging
  * operations: fix PushInbox newNodes
  * operations: move PushInbox syncNode post transaction
  * operations: PushInbox should work even if syncNode had hickups
  * operations: syncNode when PushInbox created it
  * operations: fix PushInbox notification & newModerators
  * model_postgres: fix & simplify purgeNode()
  * sync: fixes
  * sync: purge node if no local subscribers
  * purge node when local unsubscription is pushed from remote
  * operations: fix generateSubscriptionsNotifications followee
  * operations: fix PushInbox newModerators nodes
  * xmpp connection: doc, serialize stanzas only once
  * operations: NewModeratorNotify needs listener, not user
  * operations: fix NewModeratorNotify listener
  * operations: log Operation name
  * model_postgres: must quote "user" column for Postgres
  * operations: NewModeratorNotify must cb()
  * operations: Notify notifies w/ node
  * operations: fix Notify otherListeners
  * pubsub_client: rm debug
  * operations: NewModeratorNotify notifies w/ node & listener
  * model_postgres: optional Transaction callbacks
  * operations: fix Notify filterSubscription & filterAffiliation invokation
  * operations: fix this binding
  * operations: no pending subscriptions in subscriptions node
  * operations: NewModeratorNotify
  * operations: doc, filter subscriptions and affiliations for non-moderators
  * operations: reorganize
  * clean up logging
  * operations: posts node defaultAffiliation='publisher'
  * sync: fix AffiliationsSynchronization typo
  * buddycloud-server 0.2.3
  * package.json: fix install script
  * build_binary.sh: bump node.js version
  * buddycloud-server 0.2.2
  * package.json: add preinstall cake build
  * operations: fix notifications
  * build_binary.sh: bump node.js version
  * buddycloud-server 0.2.1
  * operations: fix Notify subscriptios node items
  * operations: fix Notify callback result
  * operations: BrowseNodeItems for subscriptions node calls getSubscriptions not getSubscription
  * operations: syntax fixes
  * operations: Notify subscriptions fixes
  * operations: subscriptions node notifications
  * operations: BrowseNodeItems for subscriptions node
  * sync: require errors
  * sync: avoid error output when omitting local node
  * router, sync: improve logging
  * backend_pubsub: PubsubBackend.notify listener robustness
  * operations: fix Subscribe defaultAffiliation
  * operations: fix ManageNodeAffiliations control flow
  * pubsub_server: PubsubOwnerSetAffiliationsRequest syntax fix
  * operations: fix requiredAffiliation()
  * operations: requiredAffiliation can be function to allow moderators approving topic channel subscribers
  * operations: ManageNodeSubscriptions refactor for efficiency
  * operations: ManageNodeSubscriptions should set new affiliations to defaultAffiliation
  * operations: fix Notify jid/user
  * operations: Notify should notify all users pertained by a subscription
  * operations: 'unsubscribe-node' notifies unsubscribed user
  * operations, pubsub_client: there's no "unsubscribed" subscription, only "none"
  * pubsub_server: PubsubOwnerSetSubscriptionsRequest syntax fix
  * operations: Unsubscribe needs PrivilegedOperation methods
  * operations: Unsubscribed is not a PrivilegedOperation but a ModelOperation
  * operations: fix callback scope
  * pubsub_server: robustify PubsubItemsRequest
  * operations: syntax
  * pubsub_server, operations: support for RetrieveItems by itemIds
  * build_binary.sh: bump node.js version to 0.6.10
  * buddycloud-server 0.2.0
  * operations: CreateNode should not allow creation with empty nodeUser username
  * operations: fix CreateNode defaults & creationDate
  * operations: fix CreateNode isTopic switcheroo
  * router: fix autosubscribeNewUsers operation name
  * router: autosubscribeNewUsers
  * config.js.example: default checkCreateNode hook checks for a specific topic domain
  * operations: fix CreateNode node typo
  * operations: fix CreateNode config
  * pubsub_server, operations: CreateNode with optional config
  * operations: fix CreateNode setSubscription()
  * operations: CreateNode catches missing checkCreateNode hook
  * operations: CreateNode default config
  * checkCreateNode config hook
  * model_postgres: fix getOwnersByNodePrefix SQL
  * operations: fix CreateNode setAffiliation()
  * operations: fix CreateNode getOwnersByNodePrefix()
  * operations: fix ../util require, CreateNode safety check
  * implement createNode with getOwnersByNodePrefix check
  * operations: begin creating topic channels
  * model_postgres: syntax fix
  * package.json: maintainer update
  * build_binary.sh: update to node 0.6.9
  * buddycloud-server 0.1.11
  * rsm_walk: fix logging
  * operations: checkAccessModel() before checkRequiredAffiliation()!
  * operations: Unsubscribe condition syntax fix
  * package.json: muffin dependency glob seems be incompatible in v3.*
  * operations: checkRequiredAffiliation should ignore no @requiredAffiliation
  * operations: fix isAffiliationAtLeast w/ invalid affiliation
  * jsconfig 0.2.0 is out! w00t!!!
  * Cakefile: lib/version.js from package.json
  * logger: update to ain2 1.0.0
  * main: fix config loading
  * buddycloud-server 0.1.10
  * router: fix syncServer()
  * buddycloud-server 0.1.9
  * bin/buddycloud-server: fix param quoting
  * bin/buddycloud-server: fix $cwd
  * buddycloud-server 0.1.8
  * .npmignore to package up built lib/* instead of src/*
  * build_binary.sh: install devDependencies beforehand
  * build_binary.sh: bump node.js version to 0.6.7
  * util: move getNodeUser(), getUserDomain()
  * main: "server successfully started"
  * sync: fix logging
  * model_postgres: fix writeItem() SQL parameter binding
  * sync: fix PaginatedSynchronization error callback
  * sync: rm TODO note
  * model_postgres: writeItem updated_query
  * operations: logging fixes
  * writeItem: move updated extraction from operations to model_postgres
  * model_postgres: writeItem should also INSERT existing updated value
  * model_postgres: fix syntax
  * model_postgres: SQL fixes
  * operations: PushInbox copies item published date
  * postgres schema: CREATE VIEW open_nodes + usage in model_postgres
  * model_postgres: fix query result handling
  * fix getTopFollowedNodes & getTopPublishedNodes parameters
  * model_postgres: fix SQL INTERVAL syntax
  * operations: BrowseNodes.fetchNodes() needs transaction
  * operations: BrowseNodes.transaction should use @fetchNodes()
  * operations: fetchNodes() typo
  * pubsub_server: browse /top-followed-nodes & /top-published-nodes does not request a particular node
  * getTopFollowedNodes & getTopPublishedNodes w/ XMPP disco interface
  * build_binary.sh: bump to node 0.6.6
  * buddycloud-server 0.1.7
  * package.json: rm cradle dependency
  * logger: syslog only with hostname
  * replace common-logger by underscore.logger
  * update ain2 dependency for node v0.6 compatibility
  * model_postgres walkListenerArchive: replace DISTINCT with GROUP BY
  * model_postgres: fix config order/limig
  * operations: ReplayArchive sorts results before capping
  * ReplayArchive/walkListenerArchive: properly cap result set
  * operations: ReplayArchive default max=50
  * build_binary.sh: use $PREFIX from environment if present
  * package.json: req node-stringprep >=0.1.1
  * router: fix
  * buddycloud-server 0.1.6
  * update to new node-waf paths
  * build_binary.sh: switch to node 0.6.4
  * package.json: depend on 0.3.1
  * router: RSM usage fix
  * logger: open logFile for appending, fixes issue #25
  * package.json: depend on node-xmpp >= 0.3.0
  * operations ReplayArchive: fix rsm max
  * operations: ReplayArchive RSM support
  * backend_pubsub: notificationPush updates include sender & actor
  * router: detectUserType fixes
  * router: detectUserType fixes
  * logger: fix argument iteration
  * main, backend_pubsub: logging improvements
  * backend_pubsub: include user in notfound error
  * connection: loopback stanzas to ourselves
  * router: add missing util.inspect include
  * router.run: trace req
  * router: add missing rsm include
  * logger: typo
  * logger: fix level
  * logging clean-up
  * router, pubsub_{server,client}: @type in <actor/>
  * buddycloud-server 0.1.5
  * router: sync fixes
  * buddycloud-server 0.1.4
  * ManageNodeAffiliations: non-owner may not elect a new owner
  * sync: log upon completion
  * sync: transaction fix
  * move some sync logic into router, lock per node
  * operations: BrowseNodeInfo/RetrieveNodeConfiguration w/o access control
  * buddycloud-server 0.1.3
  * operations: deny Unsubscribe from own nodes
  * logger: ain2 syslog transport
  * logger: message always as string
  * main: fix --stdout kludge
  * logger: avoid log level < 0
  * config.js.example: syslog on by default
  * config.js.example: logging section
  * syslog support with ain2
  * support --stdout logging
  * replace cnlogger by common-logger
  * buddycloud-server 0.1.2
  * build_binary: npm install globally (into /opt/buddycloud-server/)
  * build_binary: dedup node & npm versions
  * build_binary: default to /opt/buddycloud-server, bin/ script
  * main: process.title fix
  * version: fix package.json path
  * version from package.json in process.title and for jabber:iq:version
  * xmpp/connection: do not subscribe in probePresence()
  * buddycloud-server 0.1.1
  * build_binary: bump node & npm versions
  * backend_pubsub: reply() must also copy 'replay' field on MaxStanzaSizeExceeded
  * connection: more stanza output when MaxStanzaSizeExceeded
  * don't send ReplayArchive notifications to all online resources
  * pubsub_client/connection: wrap error replies into StanzaError earlier
  * logging fixes
  * port to cnlogger
  * port to broken winston logging
  * xmpp connection: always tell node-xmpp to reconnect
  * async.filter iterator does not take error parameter
  * model_postgres: fix nodeExists warning
  * backend_pubsub: fix notification matching
  * sync: fix router.authorizeFor() usage
  * sync: writeItem does not need author anymore
  * operations: typo
  * model_postgres: fix getListenerAffiliations() query
  * sync: careful
  * xmpp/forms: oops, s/creationTime/creationDate/
  * xmpp/connection: fix name
  * router: check for anonymous user to be online
  * anonymous user offline tracking & clean-up
  * model_postgres: fix walkListenerArchive() node in results
  * router: fix method binding
  * model_postgres: walkListenerArchive() should include node in results
  * operations: RemoveUser & model_postgres.getUserRemoteSubscriptions() & clearUserSubscriptions()
  * BuddycloudDiscovery::detectAnonymousUser
  * backend_pubsub: gracefully handle MaxStanzaSizeExceeded for notifications
  * xmpp pubsub_server & connection: fix graceful MaxStanzaSizeExceeded handling
  * errors: MaxStanzaSizeExceeded extends Error
  * operations: s/geoloc/geo/
  * operations: /subscription items shall contain jid=owner
  * metadata buddycloud#channel_type
  * proper metadata field names
  * support for creationDate
  * operations: clarify logging
  * router: fix remote backend selection
  * operations: Unsubscribe refactor & fix
  * operations: fix Register
  * buddycloud-server 0.1.0
  * operation: print opName on commit, rm debug
  * bin/buddycloud-server: don't cd so config can be loaded relatively
  * Merge remote-tracking branch 'origin/cli'
  * operations: RetractItems should allow anyone to remove their own posts
  * operations: preserve affiliation if previously affiliated
  * operations: unify into isAffiliationAtLeast()
  * operations: rm leftover TODO note
  * operations: refactor Register; should check if authoritative for user's domain
  * router.run: return 404 for nodes not locally subscribed but discovered ourselves
  * rm explicit author handling in postgres schema, model, operations
  * main: check sender authorization for authorizationPrompt
  * operations: RetrieveItems shall not virtualize items for cache case of remote nodes
  * Revert "Made the ownership of tables really clear. Should help avoid the problem that DD had the other day."
  * s/channel-server/buddycloud-server/g
  * build_binary.sh: fix invokation hint
  * README: rm some outdated stuff
  * main: fix defaultConfig stuff
  * build_binary.sh
  * operations: RetrieveItems.retrieveSubscriptionsItems() result set sorting, affiliations
  * virtual handling of /user/.../subscriptions node items
  * MAM replays subscription authorization requests
  * more authorization stuff
  * fixes
  * small fixes
  * package.json: fix bin path
  * further authorizationPrompt work
  * backend_pubsub: missedSomething was missing
  * package.json: fix coffeescript path (./node_modules/...)
  * sending authorize notification forms
  * package.json: fix .coffee compilation stage
  * operations: PrivilegedOperation.fetchActorAffilliation fetches all listener affiliations for inbox sync
  * pubsub_notifications: fix MAM stanzas
  * operations: subscribe defaultAffiliation, fixes
  * model_postgres: many fixes
  * operations: publishModel 'subscribers'
  * operations: access control fixes
  * begin access control, affiliations checking
  * model_postgres: fixes
  * errors: fix error classes
  * xmpp/connection: fix
  * xmpp/connection: fix @missedServerTimeouts usage
  * model_postgres: safety checks
  * readability, notes
  * rsm_walk: fix serious errors
  * globally refactor operation from function to value
  * sync: fixes
  * add forgotten rsm_walk file
  * move syncQueue from main.coffee to fine-grained sync.syncNode
  * xmpp/connection: readability
  * xmpp/connection: track <you-missed-something/> timers with @missedServerTimeouts
  * syncServer support, wired up to <you-missed-something/> 'syncNeeded'
  * model_postgres: for an actor, getSubscriptions() shall return not only users but also listeners
  * MAM time specification
  * primitive MAM implementation
  * send <you-missed-something/>
  * operations: PushInbox TODO note
  * sync: rm request.rsm.max clamp
  * synchronization with state resetting and subscriptions/affiliations support
  * pubsub_*: fix user/jid conventions
  * ConfigSynchronization should use browse-node-info to get node config
  * synchronizing!
  * synchronization kinda works, but hits RSM loops
  * further synchronization progress
  * begin synchronization
  * main: require async
  * measure stanza size, gracefully retry with smaller result set
  * synchronization groundwork
  * don't let backend_pubsub call router.runLocally(), return errors.SeeLocal() instead
  * errors: clean up
  * normalize: add <link rel="self" href="xmpp:...?pubsub;action=retrieve;..."/>
  * operations: Publish shall allow new items with specified @id
  * nodes browsing, with RSM
  * backend_pubsub: run() should bail out early on invalid node form
  * PostgreSQL tuning
  * complete RSM implementation
  * begin RSM for all operations
  * generify RSM stuff
  * pubsub_client: RSM
  * fixes from CCCamp11
  * RSM for local items retrieving
  * begin new RSM implementation
  * pubsub_server: publish-node-items shall reply with item ids
  * model_postgres: fix getNodeListeners() SQL
  * model_postgres: nodeExists() shall check for NOT NULL
  * model_postgres: getNodeListener() replace filter by SQL
  * model_postgres: getNodeListener() filter for null
  * model_postgres: fix setSubscription() INSERT w/o listener
  * error printout
  * forms: fix
  * operations: PushInbox author fix
  * debug
  * xml child robustness
  * model_postgres: fix nodeExists()
  * fix subscription listener for local users
  * logging cleanup
  * initiate presence tracking of users
  * xmpp/connection: use send() instead of specifying from jid
  * some logging cleanup
  * operations: push-inbox does not set subscription listener
  * fixes & TODO notes
  * operations: Notify.transaction() must call cb()
  * retrieve-node-configuration
  * forms: configToResultForm -> configToForm
  * pubsub_client: RetrieveNodeConfiguration & ManageNodeConfiguration
  * operations: catch reply cb exceptions
  * create-node operation
  * package.json: scripts
  * fixes
  * fix outgoing notifications
  * generify pubsub_notifications
  * many fixes for subscription pushing
  * router: if request writes, always go remote
  * push incoming notifications to local model
  * more subclassing of EventEmitter, incoming notifications handling
  * pubsub_server: unify PubsubRequest & PubsubOwnerRequest
  * merge request.coffee into pubsub_server.coffee
  * begin remote subscription pushing to local inbox
  * backend_pubsub: PubsubBackend.notify(): readability
  * tune to use single cb() instead of req.{reply,replyError}()
  * revive normalization
  * model_postgres: setSubscription(): coearce isSet to boolean
  * model_postgres: catch lost transactions
  * pubsub_client: error reporting, fix
  * subscribe reply status
  * model_postgres: setAffiliation() should check nodeExists()
  * fix disco.authorizeFor() usage
  * pubsub_client: fix <actor/> placement
  * refactor notifications a bit
  * pubsub_client: <actor/> placement fix
  * pubsub_client: fix <actor/> placement
  * pubsub_notifications: subscriptions/affiliations/config
  * fix registration/model callback parameters
  * operations: ManageNodeAffiliations validates accessModel & publishModel
  * setting configuration
  * fixes, fixes, config
  * only RegisterSetRequest should induce presence subscription
  * FIXME note
  * model_postgres: do not use rowCount
  * operations: Register created default configuration
  * pubsub_server: pubsub/inbox identity
  * fixes, StanzaError
  * implement pubsub_client operations
  * pubsub_notifications: byOperation()
  * fixes
  * fixes
  * fixes & debugging
  * fixes
  * debugging & fixes
  * fixes
  * begin discovering locally
  * fixes
  * Router.run: fix
  * fixes
  * operations: rename channel node to "posts"
  * begin notifications
  * a bit o' twiddling w/ subscription listeners
  * refactor router for remote requests
  * operations: subscribe/unsubscribe toggle affiliation none/member
  * router: rename frontend to backend
  * rename backend_postgres to model_postgres, revive router
  * main: move iqHandler to pubsub_server
  * manage, not only retrieve, subscriptions & affiliations
  * use subscribe sender as notification listener
  * backend_pubsub: replace ternary operator
  * need to store listener in subscriptions...
  * backend_pubsub: implement RequestCache
  * new untested buddycloud discovery with backend_pubsub.coffee
  * retrieve <actor/> generalized, begin using authorizeFor
  * ns: add BUDDYCLOUD_V1 xmlns
  * postgres.sql schema: updated column for more tables, author column for items
  * retrieving node affiliations
  * retrieving node subscriptions, fixes
  * backend_postgres: syntax fixes
  * operation: Register should set affiliation & subscription
  * retrieving subscriptions & affiliations
  * retracting items
  * publishing & retrieving items works
  * begin item retrieving
  * subscribe & unsubscribe
  * fix backend_postgres (user is a Pg keyword, must be quoted as column name)
  * publishing works
  * lots of fixes
  * fix disco requests
  * fix, fix, fix
  * begin implementing register & publish implementation
  * mv src/operations.coffee src/local/operations.coffee
  * revive backend
  * primitive operations
  * mv controller.coffee operations.coffee
  * dead code TODO
  * fixes
  * rm old dead code
  * rename iqhandler to request
  * begin some refactoring
  * begin hooking up handlers with operations
  * xmpp/pubsub_server: indicate operation types
  * notes
  * pubsub_server: PubsubOwnerHandlers
  * pubsub_server: flesh out more pubsub handlers
  * add affiliations checking
  * begin interweaving with local operations
  * a tad of interconnecting
  * pubsub_server: DiscoInfoHandler.reply()
  * xmpp client 'n stuff
  * README: draw new design
  * begin router
  * xmpp: move NS_* to ns.coffee
  * xmpp: primitive disco info works
  * begin iqhandler
  * xmpp/connection: port presence tracking
  * rm main.js
  * move src files around
  * rm model_couchdb from config, add preliminary main.coffee
  * a bit new controller
  * rm old test_controller
  * some controller work
  * old controller translated to coffeescript
  * port peripheral stuff over to coffeescript
  * README: change ejabberd port to the config default one
  * model_couchdb: s/doc.subscribers/doc.subscriptions/
  * xmpp_pubsub.js: fix typo
  * model_postgres: check nodeExists before any data modification
  * preliminary RSM (XEP-0059) implementation for retrieve-items/retrieve
  * model_couchdb: stub getUpdatesByTime()
  * MAM should result in direct message, not broadcast notification to all resources
  * MAM w/ working model_postgres backend
  * begin implementing MAM
  * controller: register/register should create /user/<jid>/subscriptions node
  * normalize fixes + tests
  * normalize
  * only one child element per item
  * model_postgres: fix setConfig()
  * model_postgres: listNodesByUser()
  * model_couchdb: listNodesByUser(), simplify listNodes()
  * controller, xmpp_pubsub: browse-nodes/by-user
  * model_postgres setConfig(): fixes
  * configuration notification
  * model_postgres setConfig(): do not set fields unspecified/without defaultConfig
  * model_postgres nodeExists(): indentation
  * controller: subscribe should not require preexisting affiliation
  * xmpp_pubsub: fix manage-subscriptions/retrieve result usage
  * controller: allow retrieving subscriptions & affiliations for members
  * xmpp_pubsub: syntax fix
  * model_postgres: fix queue pushing
  * xmpp_pubsub: fix info discovery reply FORM_TYPE
  * model_postgres: config fixes
  * more on extended config
  * model_couchdb, model_postgres: more flexible config schema
  * config: description, type, creationDate; setConfig() on create-node/register
  * xmpp_pubsub: optimize presence tracking
  * controller: requiredAffiliation='member' for config-node/retrieve
  * README: OpenFire
  * controller: defaultConfig() + use in feature 'config-node'
  * xmpp_pubsub: replace isOnline() with getOnlineResources()
  * model_postgres: fix transaction dequeueing
  * model_postgres: move cb() past process.nextTick/dbIsAvailable for safety
  * model_postgres: work around empty responses
  * test_controller: retract
  * xmpp_pubsub: disco <identity/> according to discovered @node
  * test_controller: browse-nodes
  * model_couchdb: fix preload() etag extraction + error reporting
  * xmpp_pubsub: FeatureNotImplemented message
  * controller: simulate a stack for debug info
  * test_controller: retract skeleton
  * controller unsubscribe: do not fetch affiliation from database but check by node path
  * implement & test unsubscribe
  * test_controller: skeletons
  * test_controller: publishing tests
  * test_controller: more publish testing + controller fix
  * test_controller: begin test publishing
  * model_postgres: fix forgotten variable
  * model_postgres: reconnect to database upon error
  * model_postgres: oops, syntax error
  * config.js.example: postgres is actually the one with a poolSize
  * model_postgres: oops, syntax errors
  * begin test_controller
  * fixes
  * subscriptionModified <message/>
  * xmpp_pubsub: "message" & approve() fixes
  * controller: replace ownerNotification with afterTransaction
  * access_model authorize
  * package.json & README
  * errors: pull inherits() from util/utils/sys for moving node api
  * browse open nodes with service discovery items
  * controller: refactor affiliations checking
  * xmpp_pubsub: fix subscriptions format
  * controller: treat missing accessModel as 'open'
  * model_couchdb: preload() etag fix
  * .gitignore with config.js
  * xmpp_pubsub: node config on disco info
  * model_couchdb: encodeURIComponent() only for db.head() & .get()
  * main.js: #!
  * rename config.js to config.js.example
  * restore default config.js
  * main.js: on uncaughtException
  * postgres doc & config
  * model_postgres
  * model_couchdb: fix item deserialization
  * model_couchdb: rm implemented TODOs
  * README: CouchDB configuration
  * README: TODO++
  * LICENSE
  * README: markdown fix
  * README: mention buddycloud :)
  * model_couchdb: fix views initialization
  * README & config
  * jabber:iq:register
  * model_couchdb: fixes
  * errors fixing
  * rm model_persistence
  * model_couchdb: assertNodeName()
  * main: catch uncaughtException
  * controller: fix
  * bugs, readability
  * model_couchdb: fixing
  * controller: implement affiliations checking
  * xmpp_pubsub: getAffiliations() result is now Array
  * model_couchdb: setSubscription() & setAffiliation() 'none'
  * model_couchdb: consolidate subscriptions & affiliations model
  * xmpp_pubsub: send notifications with type='headline'
  * xmpp_pubsub: subscribeIfNeeded() on <create/> & <subscribe/>
  * model_couchdb: load() shortcut when already cached
  * model_couchdb: createNode() fix
  * model_couchdb: preload()
  * model_couchdb: commit read documents too for integrity
  * model_couchdb: abstract views
  * CouchDB Optimistic Concurrency Control layer
  * controller: improve error propagation
  * defined error conditions
  * untested configuration getting/setting
  * service discovery
  * modify-affiliations
  * model_couchdb: getAffiliation()
  * begin permission checking infrastructure
  * presence probes
  * xmpp_pubsub: presence tracking
  * refactoring controller complete
  * continue refactoring controller into features/operations
  * begin refactoring controller into features/operations
  * subscribers
  * getting subscriptions & affiliations
  * createNode improvements
  * controller createNode: check node
  * model_couchdb: affiliations view
  * items getting
  * much more progress
  * implement retraction, s/notifySubscriber/notify/, s/writeItems/writeItem/
  * publish notification works
  * more frontend hooking
  * begin notification hooks
  * fixes
  * begin model_couchdb transactions
  * split model
  * some progress
  * some progress
  * createNode creates owner affiliation
  * model: indexes
  [ Thomas Jost ]
  * Add @denisw to contributors
  * Upgrade required node version to 0.8
  * We actually need remote subscriptions nodes
  * Merge branch 'feature/anon-fixes' into develop
  * Merge branch 'feature/really-validate-post-times' into develop
  * Reject remote posts with invalid dates
  * Add tests for remote posts with invalid dates
  * Force anon subscriptions to be temporary
  * Set default affiliation to 'none' for anon users
  * Merge branch 'feature/anon-fixes' into develop
  * Cleanup: remove some dead code
  * Purge remote nodes with no local subscription left
  * Merge branch 'feature/recent-items' into develop
  * Merge branch 'feature/validate-remote-items' into develop
  * Sort recent items by update time
  * Merge branch 'feature/validate-remote-items' into feature/recent-items
  * Fix tests that push remote items
  * Validate remote items
  * Add (failing) tests for invalid remote items
  * Implement recent items query
  * Add (failing) test for recent items query
  * PubSub replies can include several elements
  * Merge branch 'feature/pusher' into develop
  * Workaround callback woes
  * Fix MAM for pusher component
  * Pusher: test MAM
  * test_server: move makePublishIq into TestServer
  * Pusher: test node configuration
  * Pusher: test unsubscriptions
  * Merge branch 'feature/affiliations-fixes' into develop
  * Merge branch 'feature/pubsub-disco-features' into develop
  * Cleanup
  * Expose all implemented PubSub features
  * Pusher: test affiliations
  * Merge branch 'feature/affiliations-fixes' into feature/pusher
  * Fix affiliation in /subscriptions notifications
  * Accept PubSub-compliant affiliations notifications
  * Pusher: test subscriptions
  * Merge branch 'feature/fix-98' into develop
  * Fix SQL for updating replies
  * Add failing test for issue #98
  * Fix offline user cleanup
  * DB: drop anonymous column
  * Yet another federation test
  * Check if the example config file is valid JS
  * Add tests for pusher code
  * Pusher can MAM everything
  * Pusher is a listener for all notifications
  * Add config for pusher component
  * Merge branch 'feature/mam-fixes' into develop
  * Increase the default number of items in a MAM response
  * Make MAM return an error if there are too many results
  * Use RSM in MAM
  * Test MAM RSM
  * MAM: filter bad dates out
  * Test if MAM validates dates correctly
  * Ensure the giant MAM test doesn't pollute the test environment
  * Make affiliations notifications PubSub-compliant
  * Affiliations have update timestamps too
  * Avoid temporary subscriptions in MAM results
  * Advertise support for MAM in disco#info
  * Add a giant MAM test
  * Update Travis URL in README.md
  * Merge branch 'feature/tests' into develop
  * Correctly tests that updated items don't change <in-reply-to/>
  * Move tests on updated items to a different function
  * Add tests for updates that change <in-reply-to/>
  * Use Travis to automate testing
  * Merge branch 'master' into develop
  * Add compatibility with PostgreSQL 9.1
  * Require at least one item to retract
  * Add Emacs folding marks
  * Add retrieve and retract tests
  * Fix retraction stanza sent to remote services
  * Tombstones: include Atom namespace in <updated/> element
  * Fix error when not allowed to retract an item
  * Tombstones can't be updated
  * When publishing an update, check if the actor is the original author
  * Check if original post exists before publishing a reply
  * Reject posts from non-users
  * Don't include type in <actor/>
  * Complete post/update/retract tests
  * TestServer: fix Atom in-reply-to element
  * Fail when some unwanted event happens
  * Add description for calls to "should.exist"
  * Retraction tests
  * Workaround CoffeeScript weird scoping rules
  * Add another batch of tests
  * Update test data
  * Change the way the test server emits IQ stanzas
  * Tests for posting to remote channels
  * Test server: emit event for IQs with unknown ID
  * Test server: disco info for "remote" servers
  * More post tests
  * Add helper to run tests that trigger several different stanzas
  * Test server: handle <message/> stanzas
  * Add post tests
  * Post tests: helper to check if post was successful
  * Throw an exception when getting an unexpected error IQ
  * Start adding post tests
  * Add helpers for pubsub get IQs and Atom handling
  * Helpers to add initial test data in the database
  * Add XMPP namespaces to test_server.coffee
  * Reply to presence probes
  * Don't parse Elements again
  * Use same user and server names as in sfc
  * Safe path handling in prepare-db.sh
  * Add codo-like doc to the TestServer class
  * Add helpers to build disco and pubsub IQs
  * Expose support for PubSub node creation
  * Skip a test
  * More channel creation tests
  * New tests and helpers for forms
  * Add a helper to parse disco#info replies
  * Move common disco replies to test_server.coffee
  * Start testing for channel creation
  * Test server: handle disco#items queries
  * Make tests runnable using "npm test"
  * Basic disco tests
  * Start a test suite
  * Use an existing component connection if provided in config
  * Make it possible to require() the server
  * Update config.js.example
  * Fix autosubscribeNewUsers
  * Increase the max number of items in each RSM page
  * Better shrinking of oversized stanzas
  * Include `-dirty' in version number from git
  * Remove glob from dependencies
  * Fix indentation in main.coffee
  * Prevent existing persistent subscription from being made temporary
  * Merge branch 'feature/version-number-from-git' into develop
  * Expose support for XEP-0092 (Software Version) in disco
  * Use `git describe' to get version numbers in dev branches
  * Merge branch 'master' into next
  * Restore compatibility with Node 0.6
  * Fix handling of offline users
  * Avoid race condition in disco cache
  * Shrink oversized stanzas more aggressively
  * Avoid nulls
  * Include new files in release tarball
  * Avoid race condition in disco cache
  * Merge remote-tracking branch 'upstream/tempsub' into next
  * Merge branch 'db-versioning' into next
  * buddycloud-server 0.3.5
  * Check if remote supports temporary subscription before sending a tempsub request
  * Client can check for server features before sending an IQ
  * Make server features discoverable
  * Log errors when processing incoming messages
  * Cleanup
  * Remove empty text nodes from items
  * Fix ActivityStreams verb for replies
  * Include operation name in debug message
  * Don't notify unsubscribe when it was a temporary subscription
  * Offline user cleanup: do real unsubscribe operations
  * I'm dumb
  * Don't delete temporary subscriptions during sync
  * Don't send any notification for temporary subscriptions
  * Client and server must speak the same language
  * Only send notifications about temporary subscriptions to remote listeners
  * Cleanup offline users
  * Claim we support subscription options
  * Temporary subscriptions
  * Fix updating items
  * Add help channels to default autosubscriptions
  * Merge branch 'log-fix'
  * Inspect objets in log messages
  * Fix broken log messages
  * Don't write subscription stanzas in items table
  * Merge remote-tracking branch 'lloyd/config'
  * Populate in_reply_to column when inserting new items
  * DB cleanup at startup
  * Add README for DB schema versioning
  * Upgrade DB schema
  * Check DB schema version on startup
  * Don't change <published/> when updating an existing post
  * Fix subscription to remote private channels
  * Don't fail when the default config file does not exist
  * Add Lloyd in contributors
  * Better logging for replies sent by 'proxy' components
  * Merge branch 'mam-result'
  * Include <result/> in MAM replies
  * Merge remote-tracking branch 'schnouki/atom-tombstones'
  * Fix typo
  * Merge pull request #61 from lloydwatkin/no-mod_disco
  * Also send tombstones in retract notifications
  * Use Atom tombstones for deleted items
  * xmpp: XEP-0313 compliance
  * Handle PubSub retract "notify" attribute
  * operations: fix PushInbox notification
  * Fix undefined variable when paging backwards in RSM
  [ Tuomas Koski ]
  * Merge pull request #59 from lloydwatkin/initialise-sync
  * Merge pull request #58 from lloydwatkin/master
  [ Steven Lloyd Watkin ]
  * Ensure we do not cause BC breaks
  * Make both defaults positive rather than one positive & the other negative Broke the config options down further
  * Fix build console output
  * "package" now a reserved word in node, caused failing in builds (v0.6.15+)
  [ Denis Washington ]
  * Use local CoffeeScript "cake" for "npm install"
  [ Jonas Smedegaard ]
  * Setup access rights and needed dirs when starting daemon
  * Speedup system shutdown by avoiding explicit sysV stop
  * xmpp_pubsub: check for commandEl prior usage
  [ Reginald dude ]
  * updates sent via email from vorner.cz
  * updates sent via email from vorner.cz
  [ Reginald Dude ]
  * Most confusing config file ever
  [ ▟ ▖▟ ▖ ]
  * Merge pull request #70 from lloydwatkin/fix-is-function
  * Merge pull request #63 from lloydwatkin/no-mod_disco
  * Merge pull request #62 from lloydwatkin/no-mod_disco
  * Merge pull request #57 from Schnouki/xep-0313
  * Merge pull request #54 from Schnouki/fix-notif
  * Merge pull request #52 from lloydwatkin/master
  * Merge pull request #51 from lloydwatkin/master
  [ James Tait ]
  * Ensure both the PID dir and log dir are created on startup if they do not already exist.
  [ imaginator ]
  * aligning with INSTALL instructions
  * moved instructions to wiki
  * Edited README.md via GitHub
  [ dodo ]
  * fix accessModel of geo nodes
  * always test in production
  * buddycloud-server 0.3.4
  * Merge branch 'packaging'
  * put the /etc/init.d script into tarball
  * not needed anymore
  * default options for new channels
  * bump tarballify version
  * add bin/buddycloud-server to the tarball
  * no build step in bin/buddycloud-server anymore
  * print additional info messages in gray
  * fix 'file is not defined'
  * fix 'modName is not defined'
  * colorful output for package.js
  * bump tarballify version
  * rm trailing spaces
  * no build_binary.sh needed
  * separate devDependencies
  * export name
  * use packaging script
  * buddycloud-server 0.3.3
  * pass prefix to npm to force npm to use that particular prefix
  * $PREFIX/bin/buddycloud-server can be nonexistant .. so ignore all errors when removing
  * bump node version in build script
  * merge issue #37
  * specify interal config file as defaults, not as main config
  * backports to node 0.4
  * concat cwd path to config path only when config path is relative
  * respect the cwd
  * move to the right dir before builing
  * wscript is not needed anymore
  * merged #31. symlink detection for bin/buddycloud-server thanks to @highfellow
  * fixed gitignore
  * forgot Cakefile
  * pin node version for over 0.5 to get the require json working
  * get version directly
  * new buildsystem
  * check if config.syslog has keys
  * dont load default config over opts and args
  * main: fix config loading
  * wscript fixes
  * load config via jsconfig
  * update wscript
  * upgrade build environment
  * update requirements in readme
  * cleanup files
  [ Simon Tennant ]
  * Update config.js.example
  * change to read config file from /opt/buddycloud
  * Update master
  * don't be so --quiet (will help a lot with debugging)
  * Update _etc_init.d_buddycloud-server
  * the orwell defeault was causing jdesenberg problems.
  * Fixed the permissions to run as.
  * Update _etc_init.d_buddycloud-server
  * init script
  * make it really clear what to change (and what "jid" refers to)
  * Made the ownership of tables really clear. Should help avoid the problem that DD had the other day.
  [ Lloyd Watkin ]
  * Fix for checking of child element
  * Catch error event
  * Fix for server reset
  * Updated variable names to better describe what config does.
  * Merge branch 'master' of git://github.com/buddycloud/buddycloud-server into no-mod_disco
  * Allow buddycloud server to advertise additional 'proxy' components
  * Wait to sync
  * Rename of parameter
  * Allow user to specify a port or not, changed argument name as it may not actually be remote debugging.
  * Tidy up
  * Allow node.js debugging
  [ Simon ]
  * /etc/init.d/buddycloud-server

 -- Abmar Barros (buddycloud Nightly Builds) <abmar@buddycloud.com>  Sat, 26 Jan 2013 14:27:24 -0300


buddycloud-server (0.1) unstable; urgency=medium

  [ Astro ]
  * operations: all nodes in defaultConfiguration accessModel=authorize
  * operations: posts & subscriptions accessModel=authorize in defaultConfiguration
  * buddycloud-server 0.3.2
  * Cakefile: version.js + 

  * operations: fix run notifications control flow
  * build_binary.sh: get bin/buddycloud-server out of the way before npm i
  * buddycloud-server 0.3.1
  * package.json: honor all contributors
  * Merge remote-tracking branch 'schnouki/patch-1'
  * .npmignore: exclude debian/* from npm pkgs
  * buddycloud-server 0.3.0
  * package.json: bump dep versions
  * operations: prevent unsubscribing/demoting the node owner
  * operations: fix PushInbox callback
  * operations: run notifies first, then syncs, then calls back
  * pubsub_server: lower logging
  * operations: fix PushInbox newNodes
  * operations: move PushInbox syncNode post transaction
  * operations: PushInbox should work even if syncNode had hickups
  * operations: syncNode when PushInbox created it
  * operations: fix PushInbox notification & newModerators
  * model_postgres: fix & simplify purgeNode()
  * sync: fixes
  * sync: purge node if no local subscribers
  * purge node when local unsubscription is pushed from remote
  * operations: fix generateSubscriptionsNotifications followee
  * operations: fix PushInbox newModerators nodes
  * xmpp connection: doc, serialize stanzas only once
  * operations: NewModeratorNotify needs listener, not user
  * operations: fix NewModeratorNotify listener
  * operations: log Operation name
  * model_postgres: must quote "user" column for Postgres
  * operations: NewModeratorNotify must cb()
  * operations: Notify notifies w/ node
  * operations: fix Notify otherListeners
  * pubsub_client: rm debug
  * operations: NewModeratorNotify notifies w/ node & listener
  * model_postgres: optional Transaction callbacks
  * operations: fix Notify filterSubscription & filterAffiliation invokation
  * operations: fix this binding
  * operations: no pending subscriptions in subscriptions node
  * operations: NewModeratorNotify
  * operations: doc, filter subscriptions and affiliations for non-moderators
  * operations: reorganize
  * clean up logging
  * operations: posts node defaultAffiliation='publisher'
  * sync: fix AffiliationsSynchronization typo
  * buddycloud-server 0.2.3
  * package.json: fix install script
  * build_binary.sh: bump node.js version
  * buddycloud-server 0.2.2
  * package.json: add preinstall cake build
  * operations: fix notifications
  * build_binary.sh: bump node.js version
  * buddycloud-server 0.2.1
  * operations: fix Notify subscriptios node items
  * operations: fix Notify callback result
  * operations: BrowseNodeItems for subscriptions node calls getSubscriptions not getSubscription
  * operations: syntax fixes
  * operations: Notify subscriptions fixes
  * operations: subscriptions node notifications
  * operations: BrowseNodeItems for subscriptions node
  * sync: require errors
  * sync: avoid error output when omitting local node
  * router, sync: improve logging
  * backend_pubsub: PubsubBackend.notify listener robustness
  * operations: fix Subscribe defaultAffiliation
  * operations: fix ManageNodeAffiliations control flow
  * pubsub_server: PubsubOwnerSetAffiliationsRequest syntax fix
  * operations: fix requiredAffiliation()
  * operations: requiredAffiliation can be function to allow moderators approving topic channel subscribers
  * operations: ManageNodeSubscriptions refactor for efficiency
  * operations: ManageNodeSubscriptions should set new affiliations to defaultAffiliation
  * operations: fix Notify jid/user
  * operations: Notify should notify all users pertained by a subscription
  * operations: 'unsubscribe-node' notifies unsubscribed user
  * operations, pubsub_client: there's no "unsubscribed" subscription, only "none"
  * pubsub_server: PubsubOwnerSetSubscriptionsRequest syntax fix
  * operations: Unsubscribe needs PrivilegedOperation methods
  * operations: Unsubscribed is not a PrivilegedOperation but a ModelOperation
  * operations: fix callback scope
  * pubsub_server: robustify PubsubItemsRequest
  * operations: syntax
  * pubsub_server, operations: support for RetrieveItems by itemIds
  * build_binary.sh: bump node.js version to 0.6.10
  * buddycloud-server 0.2.0
  * operations: CreateNode should not allow creation with empty nodeUser username
  * operations: fix CreateNode defaults & creationDate
  * operations: fix CreateNode isTopic switcheroo
  * router: fix autosubscribeNewUsers operation name
  * router: autosubscribeNewUsers
  * config.js.example: default checkCreateNode hook checks for a specific topic domain
  * operations: fix CreateNode node typo
  * operations: fix CreateNode config
  * pubsub_server, operations: CreateNode with optional config
  * operations: fix CreateNode setSubscription()
  * operations: CreateNode catches missing checkCreateNode hook
  * operations: CreateNode default config
  * checkCreateNode config hook
  * model_postgres: fix getOwnersByNodePrefix SQL
  * operations: fix CreateNode setAffiliation()
  * operations: fix CreateNode getOwnersByNodePrefix()
  * operations: fix ../util require, CreateNode safety check
  * implement createNode with getOwnersByNodePrefix check
  * operations: begin creating topic channels
  * model_postgres: syntax fix
  * package.json: maintainer update
  * build_binary.sh: update to node 0.6.9
  * buddycloud-server 0.1.11
  * rsm_walk: fix logging
  * operations: checkAccessModel() before checkRequiredAffiliation()!
  * operations: Unsubscribe condition syntax fix
  * package.json: muffin dependency glob seems be incompatible in v3.*
  * operations: checkRequiredAffiliation should ignore no @requiredAffiliation
  * operations: fix isAffiliationAtLeast w/ invalid affiliation
  * jsconfig 0.2.0 is out! w00t!!!
  * Cakefile: lib/version.js from package.json
  * logger: update to ain2 1.0.0
  * main: fix config loading
  * buddycloud-server 0.1.10
  * router: fix syncServer()
  * buddycloud-server 0.1.9
  * bin/buddycloud-server: fix param quoting
  * bin/buddycloud-server: fix $cwd
  * buddycloud-server 0.1.8
  * .npmignore to package up built lib/* instead of src/*
  * build_binary.sh: install devDependencies beforehand
  * build_binary.sh: bump node.js version to 0.6.7
  * util: move getNodeUser(), getUserDomain()
  * main: "server successfully started"
  * sync: fix logging
  * model_postgres: fix writeItem() SQL parameter binding
  * sync: fix PaginatedSynchronization error callback
  * sync: rm TODO note
  * model_postgres: writeItem updated_query
  * operations: logging fixes
  * writeItem: move updated extraction from operations to model_postgres
  * model_postgres: writeItem should also INSERT existing updated value
  * model_postgres: fix syntax
  * model_postgres: SQL fixes
  * operations: PushInbox copies item published date
  * postgres schema: CREATE VIEW open_nodes + usage in model_postgres
  * model_postgres: fix query result handling
  * fix getTopFollowedNodes & getTopPublishedNodes parameters
  * model_postgres: fix SQL INTERVAL syntax
  * operations: BrowseNodes.fetchNodes() needs transaction
  * operations: BrowseNodes.transaction should use @fetchNodes()
  * operations: fetchNodes() typo
  * pubsub_server: browse /top-followed-nodes & /top-published-nodes does not request a particular node
  * getTopFollowedNodes & getTopPublishedNodes w/ XMPP disco interface
  * build_binary.sh: bump to node 0.6.6
  * buddycloud-server 0.1.7
  * package.json: rm cradle dependency
  * logger: syslog only with hostname
  * replace common-logger by underscore.logger
  * update ain2 dependency for node v0.6 compatibility
  * model_postgres walkListenerArchive: replace DISTINCT with GROUP BY
  * model_postgres: fix config order/limig
  * operations: ReplayArchive sorts results before capping
  * ReplayArchive/walkListenerArchive: properly cap result set
  * operations: ReplayArchive default max=50
  * build_binary.sh: use $PREFIX from environment if present
  * package.json: req node-stringprep >=0.1.1
  * router: fix
  * buddycloud-server 0.1.6
  * update to new node-waf paths
  * build_binary.sh: switch to node 0.6.4
  * package.json: depend on 0.3.1
  * router: RSM usage fix
  * logger: open logFile for appending, fixes issue #25
  * package.json: depend on node-xmpp >= 0.3.0
  * operations ReplayArchive: fix rsm max
  * operations: ReplayArchive RSM support
  * backend_pubsub: notificationPush updates include sender & actor
  * router: detectUserType fixes
  * router: detectUserType fixes
  * logger: fix argument iteration
  * main, backend_pubsub: logging improvements
  * backend_pubsub: include user in notfound error
  * connection: loopback stanzas to ourselves
  * router: add missing util.inspect include
  * router.run: trace req
  * router: add missing rsm include
  * logger: typo
  * logger: fix level
  * logging clean-up
  * router, pubsub_{server,client}: @type in <actor/>
  * buddycloud-server 0.1.5
  * router: sync fixes
  * buddycloud-server 0.1.4
  * ManageNodeAffiliations: non-owner may not elect a new owner
  * sync: log upon completion
  * sync: transaction fix
  * move some sync logic into router, lock per node
  * operations: BrowseNodeInfo/RetrieveNodeConfiguration w/o access control
  * buddycloud-server 0.1.3
  * operations: deny Unsubscribe from own nodes
  * logger: ain2 syslog transport
  * logger: message always as string
  * main: fix --stdout kludge
  * logger: avoid log level < 0
  * config.js.example: syslog on by default
  * config.js.example: logging section
  * syslog support with ain2
  * support --stdout logging
  * replace cnlogger by common-logger
  * buddycloud-server 0.1.2
  * build_binary: npm install globally (into /opt/buddycloud-server/)
  * build_binary: dedup node & npm versions
  * build_binary: default to /opt/buddycloud-server, bin/ script
  * main: process.title fix
  * version: fix package.json path
  * version from package.json in process.title and for jabber:iq:version
  * xmpp/connection: do not subscribe in probePresence()
  * buddycloud-server 0.1.1
  * build_binary: bump node & npm versions
  * backend_pubsub: reply() must also copy 'replay' field on MaxStanzaSizeExceeded
  * connection: more stanza output when MaxStanzaSizeExceeded
  * don't send ReplayArchive notifications to all online resources
  * pubsub_client/connection: wrap error replies into StanzaError earlier
  * logging fixes
  * port to cnlogger
  * port to broken winston logging
  * xmpp connection: always tell node-xmpp to reconnect
  * async.filter iterator does not take error parameter
  * model_postgres: fix nodeExists warning
  * backend_pubsub: fix notification matching
  * sync: fix router.authorizeFor() usage
  * sync: writeItem does not need author anymore
  * operations: typo
  * model_postgres: fix getListenerAffiliations() query
  * sync: careful
  * xmpp/forms: oops, s/creationTime/creationDate/
  * xmpp/connection: fix name
  * router: check for anonymous user to be online
  * anonymous user offline tracking & clean-up
  * model_postgres: fix walkListenerArchive() node in results
  * router: fix method binding
  * model_postgres: walkListenerArchive() should include node in results
  * operations: RemoveUser & model_postgres.getUserRemoteSubscriptions() & clearUserSubscriptions()
  * BuddycloudDiscovery::detectAnonymousUser
  * backend_pubsub: gracefully handle MaxStanzaSizeExceeded for notifications
  * xmpp pubsub_server & connection: fix graceful MaxStanzaSizeExceeded handling
  * errors: MaxStanzaSizeExceeded extends Error
  * operations: s/geoloc/geo/
  * operations: /subscription items shall contain jid=owner
  * metadata buddycloud#channel_type
  * proper metadata field names
  * support for creationDate
  * operations: clarify logging
  * router: fix remote backend selection
  * operations: Unsubscribe refactor & fix
  * operations: fix Register
  * buddycloud-server 0.1.0
  * operation: print opName on commit, rm debug
  * bin/buddycloud-server: don't cd so config can be loaded relatively
  * Merge remote-tracking branch 'origin/cli'
  * operations: RetractItems should allow anyone to remove their own posts
  * operations: preserve affiliation if previously affiliated
  * operations: unify into isAffiliationAtLeast()
  * operations: rm leftover TODO note
  * operations: refactor Register; should check if authoritative for user's domain
  * router.run: return 404 for nodes not locally subscribed but discovered ourselves
  * rm explicit author handling in postgres schema, model, operations
  * main: check sender authorization for authorizationPrompt
  * operations: RetrieveItems shall not virtualize items for cache case of remote nodes
  * Revert "Made the ownership of tables really clear. Should help avoid the problem that DD had the other day."
  * s/channel-server/buddycloud-server/g
  * build_binary.sh: fix invokation hint
  * README: rm some outdated stuff
  * main: fix defaultConfig stuff
  * build_binary.sh
  * operations: RetrieveItems.retrieveSubscriptionsItems() result set sorting, affiliations
  * virtual handling of /user/.../subscriptions node items
  * MAM replays subscription authorization requests
  * more authorization stuff
  * fixes
  * small fixes
  * package.json: fix bin path
  * further authorizationPrompt work
  * backend_pubsub: missedSomething was missing
  * package.json: fix coffeescript path (./node_modules/...)
  * sending authorize notification forms
  * package.json: fix .coffee compilation stage
  * operations: PrivilegedOperation.fetchActorAffilliation fetches all listener affiliations for inbox sync
  * pubsub_notifications: fix MAM stanzas
  * operations: subscribe defaultAffiliation, fixes
  * model_postgres: many fixes
  * operations: publishModel 'subscribers'
  * operations: access control fixes
  * begin access control, affiliations checking
  * model_postgres: fixes
  * errors: fix error classes
  * xmpp/connection: fix
  * xmpp/connection: fix @missedServerTimeouts usage
  * model_postgres: safety checks
  * readability, notes
  * rsm_walk: fix serious errors
  * globally refactor operation from function to value
  * sync: fixes
  * add forgotten rsm_walk file
  * move syncQueue from main.coffee to fine-grained sync.syncNode
  * xmpp/connection: readability
  * xmpp/connection: track <you-missed-something/> timers with @missedServerTimeouts
  * syncServer support, wired up to <you-missed-something/> 'syncNeeded'
  * model_postgres: for an actor, getSubscriptions() shall return not only users but also listeners
  * MAM time specification
  * primitive MAM implementation
  * send <you-missed-something/>
  * operations: PushInbox TODO note
  * sync: rm request.rsm.max clamp
  * synchronization with state resetting and subscriptions/affiliations support
  * pubsub_*: fix user/jid conventions
  * ConfigSynchronization should use browse-node-info to get node config
  * synchronizing!
  * synchronization kinda works, but hits RSM loops
  * further synchronization progress
  * begin synchronization
  * main: require async
  * measure stanza size, gracefully retry with smaller result set
  * synchronization groundwork
  * don't let backend_pubsub call router.runLocally(), return errors.SeeLocal() instead
  * errors: clean up
  * normalize: add <link rel="self" href="xmpp:...?pubsub;action=retrieve;..."/>
  * operations: Publish shall allow new items with specified @id
  * nodes browsing, with RSM
  * backend_pubsub: run() should bail out early on invalid node form
  * PostgreSQL tuning
  * complete RSM implementation
  * begin RSM for all operations
  * generify RSM stuff
  * pubsub_client: RSM
  * fixes from CCCamp11
  * RSM for local items retrieving
  * begin new RSM implementation
  * pubsub_server: publish-node-items shall reply with item ids
  * model_postgres: fix getNodeListeners() SQL
  * model_postgres: nodeExists() shall check for NOT NULL
  * model_postgres: getNodeListener() replace filter by SQL
  * model_postgres: getNodeListener() filter for null
  * model_postgres: fix setSubscription() INSERT w/o listener
  * error printout
  * forms: fix
  * operations: PushInbox author fix
  * debug
  * xml child robustness
  * model_postgres: fix nodeExists()
  * fix subscription listener for local users
  * logging cleanup
  * initiate presence tracking of users
  * xmpp/connection: use send() instead of specifying from jid
  * some logging cleanup
  * operations: push-inbox does not set subscription listener
  * fixes & TODO notes
  * operations: Notify.transaction() must call cb()
  * retrieve-node-configuration
  * forms: configToResultForm -> configToForm
  * pubsub_client: RetrieveNodeConfiguration & ManageNodeConfiguration
  * operations: catch reply cb exceptions
  * create-node operation
  * package.json: scripts
  * fixes
  * fix outgoing notifications
  * generify pubsub_notifications
  * many fixes for subscription pushing
  * router: if request writes, always go remote
  * push incoming notifications to local model
  * more subclassing of EventEmitter, incoming notifications handling
  * pubsub_server: unify PubsubRequest & PubsubOwnerRequest
  * merge request.coffee into pubsub_server.coffee
  * begin remote subscription pushing to local inbox
  * backend_pubsub: PubsubBackend.notify(): readability
  * tune to use single cb() instead of req.{reply,replyError}()
  * revive normalization
  * model_postgres: setSubscription(): coearce isSet to boolean
  * model_postgres: catch lost transactions
  * pubsub_client: error reporting, fix
  * subscribe reply status
  * model_postgres: setAffiliation() should check nodeExists()
  * fix disco.authorizeFor() usage
  * pubsub_client: fix <actor/> placement
  * refactor notifications a bit
  * pubsub_client: <actor/> placement fix
  * pubsub_client: fix <actor/> placement
  * pubsub_notifications: subscriptions/affiliations/config
  * fix registration/model callback parameters
  * operations: ManageNodeAffiliations validates accessModel & publishModel
  * setting configuration
  * fixes, fixes, config
  * only RegisterSetRequest should induce presence subscription
  * FIXME note
  * model_postgres: do not use rowCount
  * operations: Register created default configuration
  * pubsub_server: pubsub/inbox identity
  * fixes, StanzaError
  * implement pubsub_client operations
  * pubsub_notifications: byOperation()
  * fixes
  * fixes
  * fixes & debugging
  * fixes
  * debugging & fixes
  * fixes
  * begin discovering locally
  * fixes
  * Router.run: fix
  * fixes
  * operations: rename channel node to "posts"
  * begin notifications
  * a bit o' twiddling w/ subscription listeners
  * refactor router for remote requests
  * operations: subscribe/unsubscribe toggle affiliation none/member
  * router: rename frontend to backend
  * rename backend_postgres to model_postgres, revive router
  * main: move iqHandler to pubsub_server
  * manage, not only retrieve, subscriptions & affiliations
  * use subscribe sender as notification listener
  * backend_pubsub: replace ternary operator
  * need to store listener in subscriptions...
  * backend_pubsub: implement RequestCache
  * new untested buddycloud discovery with backend_pubsub.coffee
  * retrieve <actor/> generalized, begin using authorizeFor
  * ns: add BUDDYCLOUD_V1 xmlns
  * postgres.sql schema: updated column for more tables, author column for items
  * retrieving node affiliations
  * retrieving node subscriptions, fixes
  * backend_postgres: syntax fixes
  * operation: Register should set affiliation & subscription
  * retrieving subscriptions & affiliations
  * retracting items
  * publishing & retrieving items works
  * begin item retrieving
  * subscribe & unsubscribe
  * fix backend_postgres (user is a Pg keyword, must be quoted as column name)
  * publishing works
  * lots of fixes
  * fix disco requests
  * fix, fix, fix
  * begin implementing register & publish implementation
  * mv src/operations.coffee src/local/operations.coffee
  * revive backend
  * primitive operations
  * mv controller.coffee operations.coffee
  * dead code TODO
  * fixes
  * rm old dead code
  * rename iqhandler to request
  * begin some refactoring
  * begin hooking up handlers with operations
  * xmpp/pubsub_server: indicate operation types
  * notes
  * pubsub_server: PubsubOwnerHandlers
  * pubsub_server: flesh out more pubsub handlers
  * add affiliations checking
  * begin interweaving with local operations
  * a tad of interconnecting
  * pubsub_server: DiscoInfoHandler.reply()
  * xmpp client 'n stuff
  * README: draw new design
  * begin router
  * xmpp: move NS_* to ns.coffee
  * xmpp: primitive disco info works
  * begin iqhandler
  * xmpp/connection: port presence tracking
  * rm main.js
  * move src files around
  * rm model_couchdb from config, add preliminary main.coffee
  * a bit new controller
  * rm old test_controller
  * some controller work
  * old controller translated to coffeescript
  * port peripheral stuff over to coffeescript
  * README: change ejabberd port to the config default one
  * model_couchdb: s/doc.subscribers/doc.subscriptions/
  * xmpp_pubsub.js: fix typo
  * model_postgres: check nodeExists before any data modification
  * preliminary RSM (XEP-0059) implementation for retrieve-items/retrieve
  * model_couchdb: stub getUpdatesByTime()
  * MAM should result in direct message, not broadcast notification to all resources
  * MAM w/ working model_postgres backend
  * begin implementing MAM
  * controller: register/register should create /user/<jid>/subscriptions node
  * normalize fixes + tests
  * normalize
  * only one child element per item
  * model_postgres: fix setConfig()
  * model_postgres: listNodesByUser()
  * model_couchdb: listNodesByUser(), simplify listNodes()
  * controller, xmpp_pubsub: browse-nodes/by-user
  * model_postgres setConfig(): fixes
  * configuration notification
  * model_postgres setConfig(): do not set fields unspecified/without defaultConfig
  * model_postgres nodeExists(): indentation
  * controller: subscribe should not require preexisting affiliation
  * xmpp_pubsub: fix manage-subscriptions/retrieve result usage
  * controller: allow retrieving subscriptions & affiliations for members
  * xmpp_pubsub: syntax fix
  * model_postgres: fix queue pushing
  * xmpp_pubsub: fix info discovery reply FORM_TYPE
  * model_postgres: config fixes
  * more on extended config
  * model_couchdb, model_postgres: more flexible config schema
  * config: description, type, creationDate; setConfig() on create-node/register
  * xmpp_pubsub: optimize presence tracking
  * controller: requiredAffiliation='member' for config-node/retrieve
  * README: OpenFire
  * controller: defaultConfig() + use in feature 'config-node'
  * xmpp_pubsub: replace isOnline() with getOnlineResources()
  * model_postgres: fix transaction dequeueing
  * model_postgres: move cb() past process.nextTick/dbIsAvailable for safety
  * model_postgres: work around empty responses
  * test_controller: retract
  * xmpp_pubsub: disco <identity/> according to discovered @node
  * test_controller: browse-nodes
  * model_couchdb: fix preload() etag extraction + error reporting
  * xmpp_pubsub: FeatureNotImplemented message
  * controller: simulate a stack for debug info
  * test_controller: retract skeleton
  * controller unsubscribe: do not fetch affiliation from database but check by node path
  * implement & test unsubscribe
  * test_controller: skeletons
  * test_controller: publishing tests
  * test_controller: more publish testing + controller fix
  * test_controller: begin test publishing
  * model_postgres: fix forgotten variable
  * model_postgres: reconnect to database upon error
  * model_postgres: oops, syntax error
  * config.js.example: postgres is actually the one with a poolSize
  * model_postgres: oops, syntax errors
  * begin test_controller
  * fixes
  * subscriptionModified <message/>
  * xmpp_pubsub: "message" & approve() fixes
  * controller: replace ownerNotification with afterTransaction
  * access_model authorize
  * package.json & README
  * errors: pull inherits() from util/utils/sys for moving node api
  * browse open nodes with service discovery items
  * controller: refactor affiliations checking
  * xmpp_pubsub: fix subscriptions format
  * controller: treat missing accessModel as 'open'
  * model_couchdb: preload() etag fix
  * .gitignore with config.js
  * xmpp_pubsub: node config on disco info
  * model_couchdb: encodeURIComponent() only for db.head() & .get()
  * main.js: #!
  * rename config.js to config.js.example
  * restore default config.js
  * main.js: on uncaughtException
  * postgres doc & config
  * model_postgres
  * model_couchdb: fix item deserialization
  * model_couchdb: rm implemented TODOs
  * README: CouchDB configuration
  * README: TODO++
  * LICENSE
  * README: markdown fix
  * README: mention buddycloud :)
  * model_couchdb: fix views initialization
  * README & config
  * jabber:iq:register
  * model_couchdb: fixes
  * errors fixing
  * rm model_persistence
  * model_couchdb: assertNodeName()
  * main: catch uncaughtException
  * controller: fix
  * bugs, readability
  * model_couchdb: fixing
  * controller: implement affiliations checking
  * xmpp_pubsub: getAffiliations() result is now Array
  * model_couchdb: setSubscription() & setAffiliation() 'none'
  * model_couchdb: consolidate subscriptions & affiliations model
  * xmpp_pubsub: send notifications with type='headline'
  * xmpp_pubsub: subscribeIfNeeded() on <create/> & <subscribe/>
  * model_couchdb: load() shortcut when already cached
  * model_couchdb: createNode() fix
  * model_couchdb: preload()
  * model_couchdb: commit read documents too for integrity
  * model_couchdb: abstract views
  * CouchDB Optimistic Concurrency Control layer
  * controller: improve error propagation
  * defined error conditions
  * untested configuration getting/setting
  * service discovery
  * modify-affiliations
  * model_couchdb: getAffiliation()
  * begin permission checking infrastructure
  * presence probes
  * xmpp_pubsub: presence tracking
  * refactoring controller complete
  * continue refactoring controller into features/operations
  * begin refactoring controller into features/operations
  * subscribers
  * getting subscriptions & affiliations
  * createNode improvements
  * controller createNode: check node
  * model_couchdb: affiliations view
  * items getting
  * much more progress
  * implement retraction, s/notifySubscriber/notify/, s/writeItems/writeItem/
  * publish notification works
  * more frontend hooking
  * begin notification hooks
  * fixes
  * begin model_couchdb transactions
  * split model
  * some progress
  * some progress
  * createNode creates owner affiliation
  * model: indexes
  [ Thomas Jost ]
  * Add @denisw to contributors
  * Upgrade required node version to 0.8
  * We actually need remote subscriptions nodes
  * Merge branch 'feature/anon-fixes' into develop
  * Merge branch 'feature/really-validate-post-times' into develop
  * Reject remote posts with invalid dates
  * Add tests for remote posts with invalid dates
  * Force anon subscriptions to be temporary
  * Set default affiliation to 'none' for anon users
  * Merge branch 'feature/anon-fixes' into develop
  * Cleanup: remove some dead code
  * Purge remote nodes with no local subscription left
  * Merge branch 'feature/recent-items' into develop
  * Merge branch 'feature/validate-remote-items' into develop
  * Sort recent items by update time
  * Merge branch 'feature/validate-remote-items' into feature/recent-items
  * Fix tests that push remote items
  * Validate remote items
  * Add (failing) tests for invalid remote items
  * Implement recent items query
  * Add (failing) test for recent items query
  * PubSub replies can include several elements
  * Merge branch 'feature/pusher' into develop
  * Workaround callback woes
  * Fix MAM for pusher component
  * Pusher: test MAM
  * test_server: move makePublishIq into TestServer
  * Pusher: test node configuration
  * Pusher: test unsubscriptions
  * Merge branch 'feature/affiliations-fixes' into develop
  * Merge branch 'feature/pubsub-disco-features' into develop
  * Cleanup
  * Expose all implemented PubSub features
  * Pusher: test affiliations
  * Merge branch 'feature/affiliations-fixes' into feature/pusher
  * Fix affiliation in /subscriptions notifications
  * Accept PubSub-compliant affiliations notifications
  * Pusher: test subscriptions
  * Merge branch 'feature/fix-98' into develop
  * Fix SQL for updating replies
  * Add failing test for issue #98
  * Fix offline user cleanup
  * DB: drop anonymous column
  * Yet another federation test
  * Check if the example config file is valid JS
  * Add tests for pusher code
  * Pusher can MAM everything
  * Pusher is a listener for all notifications
  * Add config for pusher component
  * Merge branch 'feature/mam-fixes' into develop
  * Increase the default number of items in a MAM response
  * Make MAM return an error if there are too many results
  * Use RSM in MAM
  * Test MAM RSM
  * MAM: filter bad dates out
  * Test if MAM validates dates correctly
  * Ensure the giant MAM test doesn't pollute the test environment
  * Make affiliations notifications PubSub-compliant
  * Affiliations have update timestamps too
  * Avoid temporary subscriptions in MAM results
  * Advertise support for MAM in disco#info
  * Add a giant MAM test
  * Update Travis URL in README.md
  * Merge branch 'feature/tests' into develop
  * Correctly tests that updated items don't change <in-reply-to/>
  * Move tests on updated items to a different function
  * Add tests for updates that change <in-reply-to/>
  * Use Travis to automate testing
  * Merge branch 'master' into develop
  * Add compatibility with PostgreSQL 9.1
  * Require at least one item to retract
  * Add Emacs folding marks
  * Add retrieve and retract tests
  * Fix retraction stanza sent to remote services
  * Tombstones: include Atom namespace in <updated/> element
  * Fix error when not allowed to retract an item
  * Tombstones can't be updated
  * When publishing an update, check if the actor is the original author
  * Check if original post exists before publishing a reply
  * Reject posts from non-users
  * Don't include type in <actor/>
  * Complete post/update/retract tests
  * TestServer: fix Atom in-reply-to element
  * Fail when some unwanted event happens
  * Add description for calls to "should.exist"
  * Retraction tests
  * Workaround CoffeeScript weird scoping rules
  * Add another batch of tests
  * Update test data
  * Change the way the test server emits IQ stanzas
  * Tests for posting to remote channels
  * Test server: emit event for IQs with unknown ID
  * Test server: disco info for "remote" servers
  * More post tests
  * Add helper to run tests that trigger several different stanzas
  * Test server: handle <message/> stanzas
  * Add post tests
  * Post tests: helper to check if post was successful
  * Throw an exception when getting an unexpected error IQ
  * Start adding post tests
  * Add helpers for pubsub get IQs and Atom handling
  * Helpers to add initial test data in the database
  * Add XMPP namespaces to test_server.coffee
  * Reply to presence probes
  * Don't parse Elements again
  * Use same user and server names as in sfc
  * Safe path handling in prepare-db.sh
  * Add codo-like doc to the TestServer class
  * Add helpers to build disco and pubsub IQs
  * Expose support for PubSub node creation
  * Skip a test
  * More channel creation tests
  * New tests and helpers for forms
  * Add a helper to parse disco#info replies
  * Move common disco replies to test_server.coffee
  * Start testing for channel creation
  * Test server: handle disco#items queries
  * Make tests runnable using "npm test"
  * Basic disco tests
  * Start a test suite
  * Use an existing component connection if provided in config
  * Make it possible to require() the server
  * Update config.js.example
  * Fix autosubscribeNewUsers
  * Increase the max number of items in each RSM page
  * Better shrinking of oversized stanzas
  * Include `-dirty' in version number from git
  * Remove glob from dependencies
  * Fix indentation in main.coffee
  * Prevent existing persistent subscription from being made temporary
  * Merge branch 'feature/version-number-from-git' into develop
  * Expose support for XEP-0092 (Software Version) in disco
  * Use `git describe' to get version numbers in dev branches
  * Merge branch 'master' into next
  * Restore compatibility with Node 0.6
  * Fix handling of offline users
  * Avoid race condition in disco cache
  * Shrink oversized stanzas more aggressively
  * Avoid nulls
  * Include new files in release tarball
  * Avoid race condition in disco cache
  * Merge remote-tracking branch 'upstream/tempsub' into next
  * Merge branch 'db-versioning' into next
  * buddycloud-server 0.3.5
  * Check if remote supports temporary subscription before sending a tempsub request
  * Client can check for server features before sending an IQ
  * Make server features discoverable
  * Log errors when processing incoming messages
  * Cleanup
  * Remove empty text nodes from items
  * Fix ActivityStreams verb for replies
  * Include operation name in debug message
  * Don't notify unsubscribe when it was a temporary subscription
  * Offline user cleanup: do real unsubscribe operations
  * I'm dumb
  * Don't delete temporary subscriptions during sync
  * Don't send any notification for temporary subscriptions
  * Client and server must speak the same language
  * Only send notifications about temporary subscriptions to remote listeners
  * Cleanup offline users
  * Claim we support subscription options
  * Temporary subscriptions
  * Fix updating items
  * Add help channels to default autosubscriptions
  * Merge branch 'log-fix'
  * Inspect objets in log messages
  * Fix broken log messages
  * Don't write subscription stanzas in items table
  * Merge remote-tracking branch 'lloyd/config'
  * Populate in_reply_to column when inserting new items
  * DB cleanup at startup
  * Add README for DB schema versioning
  * Upgrade DB schema
  * Check DB schema version on startup
  * Don't change <published/> when updating an existing post
  * Fix subscription to remote private channels
  * Don't fail when the default config file does not exist
  * Add Lloyd in contributors
  * Better logging for replies sent by 'proxy' components
  * Merge branch 'mam-result'
  * Include <result/> in MAM replies
  * Merge remote-tracking branch 'schnouki/atom-tombstones'
  * Fix typo
  * Merge pull request #61 from lloydwatkin/no-mod_disco
  * Also send tombstones in retract notifications
  * Use Atom tombstones for deleted items
  * xmpp: XEP-0313 compliance
  * Handle PubSub retract "notify" attribute
  * operations: fix PushInbox notification
  * Fix undefined variable when paging backwards in RSM
  [ Tuomas Koski ]
  * Merge pull request #59 from lloydwatkin/initialise-sync
  * Merge pull request #58 from lloydwatkin/master
  [ Steven Lloyd Watkin ]
  * Ensure we do not cause BC breaks
  * Make both defaults positive rather than one positive & the other negative Broke the config options down further
  * Fix build console output
  * "package" now a reserved word in node, caused failing in builds (v0.6.15+)
  [ Denis Washington ]
  * Use local CoffeeScript "cake" for "npm install"
  [ Jonas Smedegaard ]
  * Setup access rights and needed dirs when starting daemon
  * Speedup system shutdown by avoiding explicit sysV stop
  * xmpp_pubsub: check for commandEl prior usage
  [ Reginald dude ]
  * updates sent via email from vorner.cz
  * updates sent via email from vorner.cz
  [ Reginald Dude ]
  * Most confusing config file ever
  [ ▟ ▖▟ ▖ ]
  * Merge pull request #70 from lloydwatkin/fix-is-function
  * Merge pull request #63 from lloydwatkin/no-mod_disco
  * Merge pull request #62 from lloydwatkin/no-mod_disco
  * Merge pull request #57 from Schnouki/xep-0313
  * Merge pull request #54 from Schnouki/fix-notif
  * Merge pull request #52 from lloydwatkin/master
  * Merge pull request #51 from lloydwatkin/master
  [ James Tait ]
  * Ensure both the PID dir and log dir are created on startup if they do not already exist.
  [ imaginator ]
  * aligning with INSTALL instructions
  * moved instructions to wiki
  * Edited README.md via GitHub
  [ dodo ]
  * fix accessModel of geo nodes
  * always test in production
  * buddycloud-server 0.3.4
  * Merge branch 'packaging'
  * put the /etc/init.d script into tarball
  * not needed anymore
  * default options for new channels
  * bump tarballify version
  * add bin/buddycloud-server to the tarball
  * no build step in bin/buddycloud-server anymore
  * print additional info messages in gray
  * fix 'file is not defined'
  * fix 'modName is not defined'
  * colorful output for package.js
  * bump tarballify version
  * rm trailing spaces
  * no build_binary.sh needed
  * separate devDependencies
  * export name
  * use packaging script
  * buddycloud-server 0.3.3
  * pass prefix to npm to force npm to use that particular prefix
  * $PREFIX/bin/buddycloud-server can be nonexistant .. so ignore all errors when removing
  * bump node version in build script
  * merge issue #37
  * specify interal config file as defaults, not as main config
  * backports to node 0.4
  * concat cwd path to config path only when config path is relative
  * respect the cwd
  * move to the right dir before builing
  * wscript is not needed anymore
  * merged #31. symlink detection for bin/buddycloud-server thanks to @highfellow
  * fixed gitignore
  * forgot Cakefile
  * pin node version for over 0.5 to get the require json working
  * get version directly
  * new buildsystem
  * check if config.syslog has keys
  * dont load default config over opts and args
  * main: fix config loading
  * wscript fixes
  * load config via jsconfig
  * update wscript
  * upgrade build environment
  * update requirements in readme
  * cleanup files
  [ Simon Tennant ]
  * Update config.js.example
  * change to read config file from /opt/buddycloud
  * Update master
  * don't be so --quiet (will help a lot with debugging)
  * Update _etc_init.d_buddycloud-server
  * the orwell defeault was causing jdesenberg problems.
  * Fixed the permissions to run as.
  * Update _etc_init.d_buddycloud-server
  * init script
  * make it really clear what to change (and what "jid" refers to)
  * Made the ownership of tables really clear. Should help avoid the problem that DD had the other day.
  [ Lloyd Watkin ]
  * Fix for checking of child element
  * Catch error event
  * Fix for server reset
  * Updated variable names to better describe what config does.
  * Merge branch 'master' of git://github.com/buddycloud/buddycloud-server into no-mod_disco
  * Allow buddycloud server to advertise additional 'proxy' components
  * Wait to sync
  * Rename of parameter
  * Allow user to specify a port or not, changed argument name as it may not actually be remote debugging.
  * Tidy up
  * Allow node.js debugging
  [ Simon ]
  * /etc/init.d/buddycloud-server

 -- Abmar Barros (buddycloud Nightly Builds) <abmar@buddycloud.com>  Sat, 26 Jan 2013 14:40:04 -0300


buddycloud-server (0.1) unstable; urgency=medium

  [ Astro ]
  * operations: all nodes in defaultConfiguration accessModel=authorize
  * operations: posts & subscriptions accessModel=authorize in defaultConfiguration
  * buddycloud-server 0.3.2
  * Cakefile: version.js + 

  * operations: fix run notifications control flow
  * build_binary.sh: get bin/buddycloud-server out of the way before npm i
  * buddycloud-server 0.3.1
  * package.json: honor all contributors
  * Merge remote-tracking branch 'schnouki/patch-1'
  * .npmignore: exclude debian/* from npm pkgs
  * buddycloud-server 0.3.0
  * package.json: bump dep versions
  * operations: prevent unsubscribing/demoting the node owner
  * operations: fix PushInbox callback
  * operations: run notifies first, then syncs, then calls back
  * pubsub_server: lower logging
  * operations: fix PushInbox newNodes
  * operations: move PushInbox syncNode post transaction
  * operations: PushInbox should work even if syncNode had hickups
  * operations: syncNode when PushInbox created it
  * operations: fix PushInbox notification & newModerators
  * model_postgres: fix & simplify purgeNode()
  * sync: fixes
  * sync: purge node if no local subscribers
  * purge node when local unsubscription is pushed from remote
  * operations: fix generateSubscriptionsNotifications followee
  * operations: fix PushInbox newModerators nodes
  * xmpp connection: doc, serialize stanzas only once
  * operations: NewModeratorNotify needs listener, not user
  * operations: fix NewModeratorNotify listener
  * operations: log Operation name
  * model_postgres: must quote "user" column for Postgres
  * operations: NewModeratorNotify must cb()
  * operations: Notify notifies w/ node
  * operations: fix Notify otherListeners
  * pubsub_client: rm debug
  * operations: NewModeratorNotify notifies w/ node & listener
  * model_postgres: optional Transaction callbacks
  * operations: fix Notify filterSubscription & filterAffiliation invokation
  * operations: fix this binding
  * operations: no pending subscriptions in subscriptions node
  * operations: NewModeratorNotify
  * operations: doc, filter subscriptions and affiliations for non-moderators
  * operations: reorganize
  * clean up logging
  * operations: posts node defaultAffiliation='publisher'
  * sync: fix AffiliationsSynchronization typo
  * buddycloud-server 0.2.3
  * package.json: fix install script
  * build_binary.sh: bump node.js version
  * buddycloud-server 0.2.2
  * package.json: add preinstall cake build
  * operations: fix notifications
  * build_binary.sh: bump node.js version
  * buddycloud-server 0.2.1
  * operations: fix Notify subscriptios node items
  * operations: fix Notify callback result
  * operations: BrowseNodeItems for subscriptions node calls getSubscriptions not getSubscription
  * operations: syntax fixes
  * operations: Notify subscriptions fixes
  * operations: subscriptions node notifications
  * operations: BrowseNodeItems for subscriptions node
  * sync: require errors
  * sync: avoid error output when omitting local node
  * router, sync: improve logging
  * backend_pubsub: PubsubBackend.notify listener robustness
  * operations: fix Subscribe defaultAffiliation
  * operations: fix ManageNodeAffiliations control flow
  * pubsub_server: PubsubOwnerSetAffiliationsRequest syntax fix
  * operations: fix requiredAffiliation()
  * operations: requiredAffiliation can be function to allow moderators approving topic channel subscribers
  * operations: ManageNodeSubscriptions refactor for efficiency
  * operations: ManageNodeSubscriptions should set new affiliations to defaultAffiliation
  * operations: fix Notify jid/user
  * operations: Notify should notify all users pertained by a subscription
  * operations: 'unsubscribe-node' notifies unsubscribed user
  * operations, pubsub_client: there's no "unsubscribed" subscription, only "none"
  * pubsub_server: PubsubOwnerSetSubscriptionsRequest syntax fix
  * operations: Unsubscribe needs PrivilegedOperation methods
  * operations: Unsubscribed is not a PrivilegedOperation but a ModelOperation
  * operations: fix callback scope
  * pubsub_server: robustify PubsubItemsRequest
  * operations: syntax
  * pubsub_server, operations: support for RetrieveItems by itemIds
  * build_binary.sh: bump node.js version to 0.6.10
  * buddycloud-server 0.2.0
  * operations: CreateNode should not allow creation with empty nodeUser username
  * operations: fix CreateNode defaults & creationDate
  * operations: fix CreateNode isTopic switcheroo
  * router: fix autosubscribeNewUsers operation name
  * router: autosubscribeNewUsers
  * config.js.example: default checkCreateNode hook checks for a specific topic domain
  * operations: fix CreateNode node typo
  * operations: fix CreateNode config
  * pubsub_server, operations: CreateNode with optional config
  * operations: fix CreateNode setSubscription()
  * operations: CreateNode catches missing checkCreateNode hook
  * operations: CreateNode default config
  * checkCreateNode config hook
  * model_postgres: fix getOwnersByNodePrefix SQL
  * operations: fix CreateNode setAffiliation()
  * operations: fix CreateNode getOwnersByNodePrefix()
  * operations: fix ../util require, CreateNode safety check
  * implement createNode with getOwnersByNodePrefix check
  * operations: begin creating topic channels
  * model_postgres: syntax fix
  * package.json: maintainer update
  * build_binary.sh: update to node 0.6.9
  * buddycloud-server 0.1.11
  * rsm_walk: fix logging
  * operations: checkAccessModel() before checkRequiredAffiliation()!
  * operations: Unsubscribe condition syntax fix
  * package.json: muffin dependency glob seems be incompatible in v3.*
  * operations: checkRequiredAffiliation should ignore no @requiredAffiliation
  * operations: fix isAffiliationAtLeast w/ invalid affiliation
  * jsconfig 0.2.0 is out! w00t!!!
  * Cakefile: lib/version.js from package.json
  * logger: update to ain2 1.0.0
  * main: fix config loading
  * buddycloud-server 0.1.10
  * router: fix syncServer()
  * buddycloud-server 0.1.9
  * bin/buddycloud-server: fix param quoting
  * bin/buddycloud-server: fix $cwd
  * buddycloud-server 0.1.8
  * .npmignore to package up built lib/* instead of src/*
  * build_binary.sh: install devDependencies beforehand
  * build_binary.sh: bump node.js version to 0.6.7
  * util: move getNodeUser(), getUserDomain()
  * main: "server successfully started"
  * sync: fix logging
  * model_postgres: fix writeItem() SQL parameter binding
  * sync: fix PaginatedSynchronization error callback
  * sync: rm TODO note
  * model_postgres: writeItem updated_query
  * operations: logging fixes
  * writeItem: move updated extraction from operations to model_postgres
  * model_postgres: writeItem should also INSERT existing updated value
  * model_postgres: fix syntax
  * model_postgres: SQL fixes
  * operations: PushInbox copies item published date
  * postgres schema: CREATE VIEW open_nodes + usage in model_postgres
  * model_postgres: fix query result handling
  * fix getTopFollowedNodes & getTopPublishedNodes parameters
  * model_postgres: fix SQL INTERVAL syntax
  * operations: BrowseNodes.fetchNodes() needs transaction
  * operations: BrowseNodes.transaction should use @fetchNodes()
  * operations: fetchNodes() typo
  * pubsub_server: browse /top-followed-nodes & /top-published-nodes does not request a particular node
  * getTopFollowedNodes & getTopPublishedNodes w/ XMPP disco interface
  * build_binary.sh: bump to node 0.6.6
  * buddycloud-server 0.1.7
  * package.json: rm cradle dependency
  * logger: syslog only with hostname
  * replace common-logger by underscore.logger
  * update ain2 dependency for node v0.6 compatibility
  * model_postgres walkListenerArchive: replace DISTINCT with GROUP BY
  * model_postgres: fix config order/limig
  * operations: ReplayArchive sorts results before capping
  * ReplayArchive/walkListenerArchive: properly cap result set
  * operations: ReplayArchive default max=50
  * build_binary.sh: use $PREFIX from environment if present
  * package.json: req node-stringprep >=0.1.1
  * router: fix
  * buddycloud-server 0.1.6
  * update to new node-waf paths
  * build_binary.sh: switch to node 0.6.4
  * package.json: depend on 0.3.1
  * router: RSM usage fix
  * logger: open logFile for appending, fixes issue #25
  * package.json: depend on node-xmpp >= 0.3.0
  * operations ReplayArchive: fix rsm max
  * operations: ReplayArchive RSM support
  * backend_pubsub: notificationPush updates include sender & actor
  * router: detectUserType fixes
  * router: detectUserType fixes
  * logger: fix argument iteration
  * main, backend_pubsub: logging improvements
  * backend_pubsub: include user in notfound error
  * connection: loopback stanzas to ourselves
  * router: add missing util.inspect include
  * router.run: trace req
  * router: add missing rsm include
  * logger: typo
  * logger: fix level
  * logging clean-up
  * router, pubsub_{server,client}: @type in <actor/>
  * buddycloud-server 0.1.5
  * router: sync fixes
  * buddycloud-server 0.1.4
  * ManageNodeAffiliations: non-owner may not elect a new owner
  * sync: log upon completion
  * sync: transaction fix
  * move some sync logic into router, lock per node
  * operations: BrowseNodeInfo/RetrieveNodeConfiguration w/o access control
  * buddycloud-server 0.1.3
  * operations: deny Unsubscribe from own nodes
  * logger: ain2 syslog transport
  * logger: message always as string
  * main: fix --stdout kludge
  * logger: avoid log level < 0
  * config.js.example: syslog on by default
  * config.js.example: logging section
  * syslog support with ain2
  * support --stdout logging
  * replace cnlogger by common-logger
  * buddycloud-server 0.1.2
  * build_binary: npm install globally (into /opt/buddycloud-server/)
  * build_binary: dedup node & npm versions
  * build_binary: default to /opt/buddycloud-server, bin/ script
  * main: process.title fix
  * version: fix package.json path
  * version from package.json in process.title and for jabber:iq:version
  * xmpp/connection: do not subscribe in probePresence()
  * buddycloud-server 0.1.1
  * build_binary: bump node & npm versions
  * backend_pubsub: reply() must also copy 'replay' field on MaxStanzaSizeExceeded
  * connection: more stanza output when MaxStanzaSizeExceeded
  * don't send ReplayArchive notifications to all online resources
  * pubsub_client/connection: wrap error replies into StanzaError earlier
  * logging fixes
  * port to cnlogger
  * port to broken winston logging
  * xmpp connection: always tell node-xmpp to reconnect
  * async.filter iterator does not take error parameter
  * model_postgres: fix nodeExists warning
  * backend_pubsub: fix notification matching
  * sync: fix router.authorizeFor() usage
  * sync: writeItem does not need author anymore
  * operations: typo
  * model_postgres: fix getListenerAffiliations() query
  * sync: careful
  * xmpp/forms: oops, s/creationTime/creationDate/
  * xmpp/connection: fix name
  * router: check for anonymous user to be online
  * anonymous user offline tracking & clean-up
  * model_postgres: fix walkListenerArchive() node in results
  * router: fix method binding
  * model_postgres: walkListenerArchive() should include node in results
  * operations: RemoveUser & model_postgres.getUserRemoteSubscriptions() & clearUserSubscriptions()
  * BuddycloudDiscovery::detectAnonymousUser
  * backend_pubsub: gracefully handle MaxStanzaSizeExceeded for notifications
  * xmpp pubsub_server & connection: fix graceful MaxStanzaSizeExceeded handling
  * errors: MaxStanzaSizeExceeded extends Error
  * operations: s/geoloc/geo/
  * operations: /subscription items shall contain jid=owner
  * metadata buddycloud#channel_type
  * proper metadata field names
  * support for creationDate
  * operations: clarify logging
  * router: fix remote backend selection
  * operations: Unsubscribe refactor & fix
  * operations: fix Register
  * buddycloud-server 0.1.0
  * operation: print opName on commit, rm debug
  * bin/buddycloud-server: don't cd so config can be loaded relatively
  * Merge remote-tracking branch 'origin/cli'
  * operations: RetractItems should allow anyone to remove their own posts
  * operations: preserve affiliation if previously affiliated
  * operations: unify into isAffiliationAtLeast()
  * operations: rm leftover TODO note
  * operations: refactor Register; should check if authoritative for user's domain
  * router.run: return 404 for nodes not locally subscribed but discovered ourselves
  * rm explicit author handling in postgres schema, model, operations
  * main: check sender authorization for authorizationPrompt
  * operations: RetrieveItems shall not virtualize items for cache case of remote nodes
  * Revert "Made the ownership of tables really clear. Should help avoid the problem that DD had the other day."
  * s/channel-server/buddycloud-server/g
  * build_binary.sh: fix invokation hint
  * README: rm some outdated stuff
  * main: fix defaultConfig stuff
  * build_binary.sh
  * operations: RetrieveItems.retrieveSubscriptionsItems() result set sorting, affiliations
  * virtual handling of /user/.../subscriptions node items
  * MAM replays subscription authorization requests
  * more authorization stuff
  * fixes
  * small fixes
  * package.json: fix bin path
  * further authorizationPrompt work
  * backend_pubsub: missedSomething was missing
  * package.json: fix coffeescript path (./node_modules/...)
  * sending authorize notification forms
  * package.json: fix .coffee compilation stage
  * operations: PrivilegedOperation.fetchActorAffilliation fetches all listener affiliations for inbox sync
  * pubsub_notifications: fix MAM stanzas
  * operations: subscribe defaultAffiliation, fixes
  * model_postgres: many fixes
  * operations: publishModel 'subscribers'
  * operations: access control fixes
  * begin access control, affiliations checking
  * model_postgres: fixes
  * errors: fix error classes
  * xmpp/connection: fix
  * xmpp/connection: fix @missedServerTimeouts usage
  * model_postgres: safety checks
  * readability, notes
  * rsm_walk: fix serious errors
  * globally refactor operation from function to value
  * sync: fixes
  * add forgotten rsm_walk file
  * move syncQueue from main.coffee to fine-grained sync.syncNode
  * xmpp/connection: readability
  * xmpp/connection: track <you-missed-something/> timers with @missedServerTimeouts
  * syncServer support, wired up to <you-missed-something/> 'syncNeeded'
  * model_postgres: for an actor, getSubscriptions() shall return not only users but also listeners
  * MAM time specification
  * primitive MAM implementation
  * send <you-missed-something/>
  * operations: PushInbox TODO note
  * sync: rm request.rsm.max clamp
  * synchronization with state resetting and subscriptions/affiliations support
  * pubsub_*: fix user/jid conventions
  * ConfigSynchronization should use browse-node-info to get node config
  * synchronizing!
  * synchronization kinda works, but hits RSM loops
  * further synchronization progress
  * begin synchronization
  * main: require async
  * measure stanza size, gracefully retry with smaller result set
  * synchronization groundwork
  * don't let backend_pubsub call router.runLocally(), return errors.SeeLocal() instead
  * errors: clean up
  * normalize: add <link rel="self" href="xmpp:...?pubsub;action=retrieve;..."/>
  * operations: Publish shall allow new items with specified @id
  * nodes browsing, with RSM
  * backend_pubsub: run() should bail out early on invalid node form
  * PostgreSQL tuning
  * complete RSM implementation
  * begin RSM for all operations
  * generify RSM stuff
  * pubsub_client: RSM
  * fixes from CCCamp11
  * RSM for local items retrieving
  * begin new RSM implementation
  * pubsub_server: publish-node-items shall reply with item ids
  * model_postgres: fix getNodeListeners() SQL
  * model_postgres: nodeExists() shall check for NOT NULL
  * model_postgres: getNodeListener() replace filter by SQL
  * model_postgres: getNodeListener() filter for null
  * model_postgres: fix setSubscription() INSERT w/o listener
  * error printout
  * forms: fix
  * operations: PushInbox author fix
  * debug
  * xml child robustness
  * model_postgres: fix nodeExists()
  * fix subscription listener for local users
  * logging cleanup
  * initiate presence tracking of users
  * xmpp/connection: use send() instead of specifying from jid
  * some logging cleanup
  * operations: push-inbox does not set subscription listener
  * fixes & TODO notes
  * operations: Notify.transaction() must call cb()
  * retrieve-node-configuration
  * forms: configToResultForm -> configToForm
  * pubsub_client: RetrieveNodeConfiguration & ManageNodeConfiguration
  * operations: catch reply cb exceptions
  * create-node operation
  * package.json: scripts
  * fixes
  * fix outgoing notifications
  * generify pubsub_notifications
  * many fixes for subscription pushing
  * router: if request writes, always go remote
  * push incoming notifications to local model
  * more subclassing of EventEmitter, incoming notifications handling
  * pubsub_server: unify PubsubRequest & PubsubOwnerRequest
  * merge request.coffee into pubsub_server.coffee
  * begin remote subscription pushing to local inbox
  * backend_pubsub: PubsubBackend.notify(): readability
  * tune to use single cb() instead of req.{reply,replyError}()
  * revive normalization
  * model_postgres: setSubscription(): coearce isSet to boolean
  * model_postgres: catch lost transactions
  * pubsub_client: error reporting, fix
  * subscribe reply status
  * model_postgres: setAffiliation() should check nodeExists()
  * fix disco.authorizeFor() usage
  * pubsub_client: fix <actor/> placement
  * refactor notifications a bit
  * pubsub_client: <actor/> placement fix
  * pubsub_client: fix <actor/> placement
  * pubsub_notifications: subscriptions/affiliations/config
  * fix registration/model callback parameters
  * operations: ManageNodeAffiliations validates accessModel & publishModel
  * setting configuration
  * fixes, fixes, config
  * only RegisterSetRequest should induce presence subscription
  * FIXME note
  * model_postgres: do not use rowCount
  * operations: Register created default configuration
  * pubsub_server: pubsub/inbox identity
  * fixes, StanzaError
  * implement pubsub_client operations
  * pubsub_notifications: byOperation()
  * fixes
  * fixes
  * fixes & debugging
  * fixes
  * debugging & fixes
  * fixes
  * begin discovering locally
  * fixes
  * Router.run: fix
  * fixes
  * operations: rename channel node to "posts"
  * begin notifications
  * a bit o' twiddling w/ subscription listeners
  * refactor router for remote requests
  * operations: subscribe/unsubscribe toggle affiliation none/member
  * router: rename frontend to backend
  * rename backend_postgres to model_postgres, revive router
  * main: move iqHandler to pubsub_server
  * manage, not only retrieve, subscriptions & affiliations
  * use subscribe sender as notification listener
  * backend_pubsub: replace ternary operator
  * need to store listener in subscriptions...
  * backend_pubsub: implement RequestCache
  * new untested buddycloud discovery with backend_pubsub.coffee
  * retrieve <actor/> generalized, begin using authorizeFor
  * ns: add BUDDYCLOUD_V1 xmlns
  * postgres.sql schema: updated column for more tables, author column for items
  * retrieving node affiliations
  * retrieving node subscriptions, fixes
  * backend_postgres: syntax fixes
  * operation: Register should set affiliation & subscription
  * retrieving subscriptions & affiliations
  * retracting items
  * publishing & retrieving items works
  * begin item retrieving
  * subscribe & unsubscribe
  * fix backend_postgres (user is a Pg keyword, must be quoted as column name)
  * publishing works
  * lots of fixes
  * fix disco requests
  * fix, fix, fix
  * begin implementing register & publish implementation
  * mv src/operations.coffee src/local/operations.coffee
  * revive backend
  * primitive operations
  * mv controller.coffee operations.coffee
  * dead code TODO
  * fixes
  * rm old dead code
  * rename iqhandler to request
  * begin some refactoring
  * begin hooking up handlers with operations
  * xmpp/pubsub_server: indicate operation types
  * notes
  * pubsub_server: PubsubOwnerHandlers
  * pubsub_server: flesh out more pubsub handlers
  * add affiliations checking
  * begin interweaving with local operations
  * a tad of interconnecting
  * pubsub_server: DiscoInfoHandler.reply()
  * xmpp client 'n stuff
  * README: draw new design
  * begin router
  * xmpp: move NS_* to ns.coffee
  * xmpp: primitive disco info works
  * begin iqhandler
  * xmpp/connection: port presence tracking
  * rm main.js
  * move src files around
  * rm model_couchdb from config, add preliminary main.coffee
  * a bit new controller
  * rm old test_controller
  * some controller work
  * old controller translated to coffeescript
  * port peripheral stuff over to coffeescript
  * README: change ejabberd port to the config default one
  * model_couchdb: s/doc.subscribers/doc.subscriptions/
  * xmpp_pubsub.js: fix typo
  * model_postgres: check nodeExists before any data modification
  * preliminary RSM (XEP-0059) implementation for retrieve-items/retrieve
  * model_couchdb: stub getUpdatesByTime()
  * MAM should result in direct message, not broadcast notification to all resources
  * MAM w/ working model_postgres backend
  * begin implementing MAM
  * controller: register/register should create /user/<jid>/subscriptions node
  * normalize fixes + tests
  * normalize
  * only one child element per item
  * model_postgres: fix setConfig()
  * model_postgres: listNodesByUser()
  * model_couchdb: listNodesByUser(), simplify listNodes()
  * controller, xmpp_pubsub: browse-nodes/by-user
  * model_postgres setConfig(): fixes
  * configuration notification
  * model_postgres setConfig(): do not set fields unspecified/without defaultConfig
  * model_postgres nodeExists(): indentation
  * controller: subscribe should not require preexisting affiliation
  * xmpp_pubsub: fix manage-subscriptions/retrieve result usage
  * controller: allow retrieving subscriptions & affiliations for members
  * xmpp_pubsub: syntax fix
  * model_postgres: fix queue pushing
  * xmpp_pubsub: fix info discovery reply FORM_TYPE
  * model_postgres: config fixes
  * more on extended config
  * model_couchdb, model_postgres: more flexible config schema
  * config: description, type, creationDate; setConfig() on create-node/register
  * xmpp_pubsub: optimize presence tracking
  * controller: requiredAffiliation='member' for config-node/retrieve
  * README: OpenFire
  * controller: defaultConfig() + use in feature 'config-node'
  * xmpp_pubsub: replace isOnline() with getOnlineResources()
  * model_postgres: fix transaction dequeueing
  * model_postgres: move cb() past process.nextTick/dbIsAvailable for safety
  * model_postgres: work around empty responses
  * test_controller: retract
  * xmpp_pubsub: disco <identity/> according to discovered @node
  * test_controller: browse-nodes
  * model_couchdb: fix preload() etag extraction + error reporting
  * xmpp_pubsub: FeatureNotImplemented message
  * controller: simulate a stack for debug info
  * test_controller: retract skeleton
  * controller unsubscribe: do not fetch affiliation from database but check by node path
  * implement & test unsubscribe
  * test_controller: skeletons
  * test_controller: publishing tests
  * test_controller: more publish testing + controller fix
  * test_controller: begin test publishing
  * model_postgres: fix forgotten variable
  * model_postgres: reconnect to database upon error
  * model_postgres: oops, syntax error
  * config.js.example: postgres is actually the one with a poolSize
  * model_postgres: oops, syntax errors
  * begin test_controller
  * fixes
  * subscriptionModified <message/>
  * xmpp_pubsub: "message" & approve() fixes
  * controller: replace ownerNotification with afterTransaction
  * access_model authorize
  * package.json & README
  * errors: pull inherits() from util/utils/sys for moving node api
  * browse open nodes with service discovery items
  * controller: refactor affiliations checking
  * xmpp_pubsub: fix subscriptions format
  * controller: treat missing accessModel as 'open'
  * model_couchdb: preload() etag fix
  * .gitignore with config.js
  * xmpp_pubsub: node config on disco info
  * model_couchdb: encodeURIComponent() only for db.head() & .get()
  * main.js: #!
  * rename config.js to config.js.example
  * restore default config.js
  * main.js: on uncaughtException
  * postgres doc & config
  * model_postgres
  * model_couchdb: fix item deserialization
  * model_couchdb: rm implemented TODOs
  * README: CouchDB configuration
  * README: TODO++
  * LICENSE
  * README: markdown fix
  * README: mention buddycloud :)
  * model_couchdb: fix views initialization
  * README & config
  * jabber:iq:register
  * model_couchdb: fixes
  * errors fixing
  * rm model_persistence
  * model_couchdb: assertNodeName()
  * main: catch uncaughtException
  * controller: fix
  * bugs, readability
  * model_couchdb: fixing
  * controller: implement affiliations checking
  * xmpp_pubsub: getAffiliations() result is now Array
  * model_couchdb: setSubscription() & setAffiliation() 'none'
  * model_couchdb: consolidate subscriptions & affiliations model
  * xmpp_pubsub: send notifications with type='headline'
  * xmpp_pubsub: subscribeIfNeeded() on <create/> & <subscribe/>
  * model_couchdb: load() shortcut when already cached
  * model_couchdb: createNode() fix
  * model_couchdb: preload()
  * model_couchdb: commit read documents too for integrity
  * model_couchdb: abstract views
  * CouchDB Optimistic Concurrency Control layer
  * controller: improve error propagation
  * defined error conditions
  * untested configuration getting/setting
  * service discovery
  * modify-affiliations
  * model_couchdb: getAffiliation()
  * begin permission checking infrastructure
  * presence probes
  * xmpp_pubsub: presence tracking
  * refactoring controller complete
  * continue refactoring controller into features/operations
  * begin refactoring controller into features/operations
  * subscribers
  * getting subscriptions & affiliations
  * createNode improvements
  * controller createNode: check node
  * model_couchdb: affiliations view
  * items getting
  * much more progress
  * implement retraction, s/notifySubscriber/notify/, s/writeItems/writeItem/
  * publish notification works
  * more frontend hooking
  * begin notification hooks
  * fixes
  * begin model_couchdb transactions
  * split model
  * some progress
  * some progress
  * createNode creates owner affiliation
  * model: indexes
  [ Thomas Jost ]
  * Add @denisw to contributors
  * Upgrade required node version to 0.8
  * We actually need remote subscriptions nodes
  * Merge branch 'feature/anon-fixes' into develop
  * Merge branch 'feature/really-validate-post-times' into develop
  * Reject remote posts with invalid dates
  * Add tests for remote posts with invalid dates
  * Force anon subscriptions to be temporary
  * Set default affiliation to 'none' for anon users
  * Merge branch 'feature/anon-fixes' into develop
  * Cleanup: remove some dead code
  * Purge remote nodes with no local subscription left
  * Merge branch 'feature/recent-items' into develop
  * Merge branch 'feature/validate-remote-items' into develop
  * Sort recent items by update time
  * Merge branch 'feature/validate-remote-items' into feature/recent-items
  * Fix tests that push remote items
  * Validate remote items
  * Add (failing) tests for invalid remote items
  * Implement recent items query
  * Add (failing) test for recent items query
  * PubSub replies can include several elements
  * Merge branch 'feature/pusher' into develop
  * Workaround callback woes
  * Fix MAM for pusher component
  * Pusher: test MAM
  * test_server: move makePublishIq into TestServer
  * Pusher: test node configuration
  * Pusher: test unsubscriptions
  * Merge branch 'feature/affiliations-fixes' into develop
  * Merge branch 'feature/pubsub-disco-features' into develop
  * Cleanup
  * Expose all implemented PubSub features
  * Pusher: test affiliations
  * Merge branch 'feature/affiliations-fixes' into feature/pusher
  * Fix affiliation in /subscriptions notifications
  * Accept PubSub-compliant affiliations notifications
  * Pusher: test subscriptions
  * Merge branch 'feature/fix-98' into develop
  * Fix SQL for updating replies
  * Add failing test for issue #98
  * Fix offline user cleanup
  * DB: drop anonymous column
  * Yet another federation test
  * Check if the example config file is valid JS
  * Add tests for pusher code
  * Pusher can MAM everything
  * Pusher is a listener for all notifications
  * Add config for pusher component
  * Merge branch 'feature/mam-fixes' into develop
  * Increase the default number of items in a MAM response
  * Make MAM return an error if there are too many results
  * Use RSM in MAM
  * Test MAM RSM
  * MAM: filter bad dates out
  * Test if MAM validates dates correctly
  * Ensure the giant MAM test doesn't pollute the test environment
  * Make affiliations notifications PubSub-compliant
  * Affiliations have update timestamps too
  * Avoid temporary subscriptions in MAM results
  * Advertise support for MAM in disco#info
  * Add a giant MAM test
  * Update Travis URL in README.md
  * Merge branch 'feature/tests' into develop
  * Correctly tests that updated items don't change <in-reply-to/>
  * Move tests on updated items to a different function
  * Add tests for updates that change <in-reply-to/>
  * Use Travis to automate testing
  * Merge branch 'master' into develop
  * Add compatibility with PostgreSQL 9.1
  * Require at least one item to retract
  * Add Emacs folding marks
  * Add retrieve and retract tests
  * Fix retraction stanza sent to remote services
  * Tombstones: include Atom namespace in <updated/> element
  * Fix error when not allowed to retract an item
  * Tombstones can't be updated
  * When publishing an update, check if the actor is the original author
  * Check if original post exists before publishing a reply
  * Reject posts from non-users
  * Don't include type in <actor/>
  * Complete post/update/retract tests
  * TestServer: fix Atom in-reply-to element
  * Fail when some unwanted event happens
  * Add description for calls to "should.exist"
  * Retraction tests
  * Workaround CoffeeScript weird scoping rules
  * Add another batch of tests
  * Update test data
  * Change the way the test server emits IQ stanzas
  * Tests for posting to remote channels
  * Test server: emit event for IQs with unknown ID
  * Test server: disco info for "remote" servers
  * More post tests
  * Add helper to run tests that trigger several different stanzas
  * Test server: handle <message/> stanzas
  * Add post tests
  * Post tests: helper to check if post was successful
  * Throw an exception when getting an unexpected error IQ
  * Start adding post tests
  * Add helpers for pubsub get IQs and Atom handling
  * Helpers to add initial test data in the database
  * Add XMPP namespaces to test_server.coffee
  * Reply to presence probes
  * Don't parse Elements again
  * Use same user and server names as in sfc
  * Safe path handling in prepare-db.sh
  * Add codo-like doc to the TestServer class
  * Add helpers to build disco and pubsub IQs
  * Expose support for PubSub node creation
  * Skip a test
  * More channel creation tests
  * New tests and helpers for forms
  * Add a helper to parse disco#info replies
  * Move common disco replies to test_server.coffee
  * Start testing for channel creation
  * Test server: handle disco#items queries
  * Make tests runnable using "npm test"
  * Basic disco tests
  * Start a test suite
  * Use an existing component connection if provided in config
  * Make it possible to require() the server
  * Update config.js.example
  * Fix autosubscribeNewUsers
  * Increase the max number of items in each RSM page
  * Better shrinking of oversized stanzas
  * Include `-dirty' in version number from git
  * Remove glob from dependencies
  * Fix indentation in main.coffee
  * Prevent existing persistent subscription from being made temporary
  * Merge branch 'feature/version-number-from-git' into develop
  * Expose support for XEP-0092 (Software Version) in disco
  * Use `git describe' to get version numbers in dev branches
  * Merge branch 'master' into next
  * Restore compatibility with Node 0.6
  * Fix handling of offline users
  * Avoid race condition in disco cache
  * Shrink oversized stanzas more aggressively
  * Avoid nulls
  * Include new files in release tarball
  * Avoid race condition in disco cache
  * Merge remote-tracking branch 'upstream/tempsub' into next
  * Merge branch 'db-versioning' into next
  * buddycloud-server 0.3.5
  * Check if remote supports temporary subscription before sending a tempsub request
  * Client can check for server features before sending an IQ
  * Make server features discoverable
  * Log errors when processing incoming messages
  * Cleanup
  * Remove empty text nodes from items
  * Fix ActivityStreams verb for replies
  * Include operation name in debug message
  * Don't notify unsubscribe when it was a temporary subscription
  * Offline user cleanup: do real unsubscribe operations
  * I'm dumb
  * Don't delete temporary subscriptions during sync
  * Don't send any notification for temporary subscriptions
  * Client and server must speak the same language
  * Only send notifications about temporary subscriptions to remote listeners
  * Cleanup offline users
  * Claim we support subscription options
  * Temporary subscriptions
  * Fix updating items
  * Add help channels to default autosubscriptions
  * Merge branch 'log-fix'
  * Inspect objets in log messages
  * Fix broken log messages
  * Don't write subscription stanzas in items table
  * Merge remote-tracking branch 'lloyd/config'
  * Populate in_reply_to column when inserting new items
  * DB cleanup at startup
  * Add README for DB schema versioning
  * Upgrade DB schema
  * Check DB schema version on startup
  * Don't change <published/> when updating an existing post
  * Fix subscription to remote private channels
  * Don't fail when the default config file does not exist
  * Add Lloyd in contributors
  * Better logging for replies sent by 'proxy' components
  * Merge branch 'mam-result'
  * Include <result/> in MAM replies
  * Merge remote-tracking branch 'schnouki/atom-tombstones'
  * Fix typo
  * Merge pull request #61 from lloydwatkin/no-mod_disco
  * Also send tombstones in retract notifications
  * Use Atom tombstones for deleted items
  * xmpp: XEP-0313 compliance
  * Handle PubSub retract "notify" attribute
  * operations: fix PushInbox notification
  * Fix undefined variable when paging backwards in RSM
  [ Tuomas Koski ]
  * Merge pull request #59 from lloydwatkin/initialise-sync
  * Merge pull request #58 from lloydwatkin/master
  [ Steven Lloyd Watkin ]
  * Ensure we do not cause BC breaks
  * Make both defaults positive rather than one positive & the other negative Broke the config options down further
  * Fix build console output
  * "package" now a reserved word in node, caused failing in builds (v0.6.15+)
  [ Denis Washington ]
  * Use local CoffeeScript "cake" for "npm install"
  [ Jonas Smedegaard ]
  * Setup access rights and needed dirs when starting daemon
  * Speedup system shutdown by avoiding explicit sysV stop
  * xmpp_pubsub: check for commandEl prior usage
  [ Reginald dude ]
  * updates sent via email from vorner.cz
  * updates sent via email from vorner.cz
  [ Reginald Dude ]
  * Most confusing config file ever
  [ ▟ ▖▟ ▖ ]
  * Merge pull request #70 from lloydwatkin/fix-is-function
  * Merge pull request #63 from lloydwatkin/no-mod_disco
  * Merge pull request #62 from lloydwatkin/no-mod_disco
  * Merge pull request #57 from Schnouki/xep-0313
  * Merge pull request #54 from Schnouki/fix-notif
  * Merge pull request #52 from lloydwatkin/master
  * Merge pull request #51 from lloydwatkin/master
  [ James Tait ]
  * Ensure both the PID dir and log dir are created on startup if they do not already exist.
  [ imaginator ]
  * aligning with INSTALL instructions
  * moved instructions to wiki
  * Edited README.md via GitHub
  [ dodo ]
  * fix accessModel of geo nodes
  * always test in production
  * buddycloud-server 0.3.4
  * Merge branch 'packaging'
  * put the /etc/init.d script into tarball
  * not needed anymore
  * default options for new channels
  * bump tarballify version
  * add bin/buddycloud-server to the tarball
  * no build step in bin/buddycloud-server anymore
  * print additional info messages in gray
  * fix 'file is not defined'
  * fix 'modName is not defined'
  * colorful output for package.js
  * bump tarballify version
  * rm trailing spaces
  * no build_binary.sh needed
  * separate devDependencies
  * export name
  * use packaging script
  * buddycloud-server 0.3.3
  * pass prefix to npm to force npm to use that particular prefix
  * $PREFIX/bin/buddycloud-server can be nonexistant .. so ignore all errors when removing
  * bump node version in build script
  * merge issue #37
  * specify interal config file as defaults, not as main config
  * backports to node 0.4
  * concat cwd path to config path only when config path is relative
  * respect the cwd
  * move to the right dir before builing
  * wscript is not needed anymore
  * merged #31. symlink detection for bin/buddycloud-server thanks to @highfellow
  * fixed gitignore
  * forgot Cakefile
  * pin node version for over 0.5 to get the require json working
  * get version directly
  * new buildsystem
  * check if config.syslog has keys
  * dont load default config over opts and args
  * main: fix config loading
  * wscript fixes
  * load config via jsconfig
  * update wscript
  * upgrade build environment
  * update requirements in readme
  * cleanup files
  [ Simon Tennant ]
  * Update config.js.example
  * change to read config file from /opt/buddycloud
  * Update master
  * don't be so --quiet (will help a lot with debugging)
  * Update _etc_init.d_buddycloud-server
  * the orwell defeault was causing jdesenberg problems.
  * Fixed the permissions to run as.
  * Update _etc_init.d_buddycloud-server
  * init script
  * make it really clear what to change (and what "jid" refers to)
  * Made the ownership of tables really clear. Should help avoid the problem that DD had the other day.
  [ Lloyd Watkin ]
  * Fix for checking of child element
  * Catch error event
  * Fix for server reset
  * Updated variable names to better describe what config does.
  * Merge branch 'master' of git://github.com/buddycloud/buddycloud-server into no-mod_disco
  * Allow buddycloud server to advertise additional 'proxy' components
  * Wait to sync
  * Rename of parameter
  * Allow user to specify a port or not, changed argument name as it may not actually be remote debugging.
  * Tidy up
  * Allow node.js debugging
  [ Simon ]
  * /etc/init.d/buddycloud-server

 -- Abmar Barros (buddycloud Nightly Builds) <abmar@buddycloud.com>  Sat, 26 Jan 2013 14:40:55 -0300


buddycloud-server (0.1) unstable; urgency=medium

  [ Astro ]
  * operations: all nodes in defaultConfiguration accessModel=authorize
  * operations: posts & subscriptions accessModel=authorize in defaultConfiguration
  * buddycloud-server 0.3.2
  * Cakefile: version.js + 

  * operations: fix run notifications control flow
  * build_binary.sh: get bin/buddycloud-server out of the way before npm i
  * buddycloud-server 0.3.1
  * package.json: honor all contributors
  * Merge remote-tracking branch 'schnouki/patch-1'
  * .npmignore: exclude debian/* from npm pkgs
  * buddycloud-server 0.3.0
  * package.json: bump dep versions
  * operations: prevent unsubscribing/demoting the node owner
  * operations: fix PushInbox callback
  * operations: run notifies first, then syncs, then calls back
  * pubsub_server: lower logging
  * operations: fix PushInbox newNodes
  * operations: move PushInbox syncNode post transaction
  * operations: PushInbox should work even if syncNode had hickups
  * operations: syncNode when PushInbox created it
  * operations: fix PushInbox notification & newModerators
  * model_postgres: fix & simplify purgeNode()
  * sync: fixes
  * sync: purge node if no local subscribers
  * purge node when local unsubscription is pushed from remote
  * operations: fix generateSubscriptionsNotifications followee
  * operations: fix PushInbox newModerators nodes
  * xmpp connection: doc, serialize stanzas only once
  * operations: NewModeratorNotify needs listener, not user
  * operations: fix NewModeratorNotify listener
  * operations: log Operation name
  * model_postgres: must quote "user" column for Postgres
  * operations: NewModeratorNotify must cb()
  * operations: Notify notifies w/ node
  * operations: fix Notify otherListeners
  * pubsub_client: rm debug
  * operations: NewModeratorNotify notifies w/ node & listener
  * model_postgres: optional Transaction callbacks
  * operations: fix Notify filterSubscription & filterAffiliation invokation
  * operations: fix this binding
  * operations: no pending subscriptions in subscriptions node
  * operations: NewModeratorNotify
  * operations: doc, filter subscriptions and affiliations for non-moderators
  * operations: reorganize
  * clean up logging
  * operations: posts node defaultAffiliation='publisher'
  * sync: fix AffiliationsSynchronization typo
  * buddycloud-server 0.2.3
  * package.json: fix install script
  * build_binary.sh: bump node.js version
  * buddycloud-server 0.2.2
  * package.json: add preinstall cake build
  * operations: fix notifications
  * build_binary.sh: bump node.js version
  * buddycloud-server 0.2.1
  * operations: fix Notify subscriptios node items
  * operations: fix Notify callback result
  * operations: BrowseNodeItems for subscriptions node calls getSubscriptions not getSubscription
  * operations: syntax fixes
  * operations: Notify subscriptions fixes
  * operations: subscriptions node notifications
  * operations: BrowseNodeItems for subscriptions node
  * sync: require errors
  * sync: avoid error output when omitting local node
  * router, sync: improve logging
  * backend_pubsub: PubsubBackend.notify listener robustness
  * operations: fix Subscribe defaultAffiliation
  * operations: fix ManageNodeAffiliations control flow
  * pubsub_server: PubsubOwnerSetAffiliationsRequest syntax fix
  * operations: fix requiredAffiliation()
  * operations: requiredAffiliation can be function to allow moderators approving topic channel subscribers
  * operations: ManageNodeSubscriptions refactor for efficiency
  * operations: ManageNodeSubscriptions should set new affiliations to defaultAffiliation
  * operations: fix Notify jid/user
  * operations: Notify should notify all users pertained by a subscription
  * operations: 'unsubscribe-node' notifies unsubscribed user
  * operations, pubsub_client: there's no "unsubscribed" subscription, only "none"
  * pubsub_server: PubsubOwnerSetSubscriptionsRequest syntax fix
  * operations: Unsubscribe needs PrivilegedOperation methods
  * operations: Unsubscribed is not a PrivilegedOperation but a ModelOperation
  * operations: fix callback scope
  * pubsub_server: robustify PubsubItemsRequest
  * operations: syntax
  * pubsub_server, operations: support for RetrieveItems by itemIds
  * build_binary.sh: bump node.js version to 0.6.10
  * buddycloud-server 0.2.0
  * operations: CreateNode should not allow creation with empty nodeUser username
  * operations: fix CreateNode defaults & creationDate
  * operations: fix CreateNode isTopic switcheroo
  * router: fix autosubscribeNewUsers operation name
  * router: autosubscribeNewUsers
  * config.js.example: default checkCreateNode hook checks for a specific topic domain
  * operations: fix CreateNode node typo
  * operations: fix CreateNode config
  * pubsub_server, operations: CreateNode with optional config
  * operations: fix CreateNode setSubscription()
  * operations: CreateNode catches missing checkCreateNode hook
  * operations: CreateNode default config
  * checkCreateNode config hook
  * model_postgres: fix getOwnersByNodePrefix SQL
  * operations: fix CreateNode setAffiliation()
  * operations: fix CreateNode getOwnersByNodePrefix()
  * operations: fix ../util require, CreateNode safety check
  * implement createNode with getOwnersByNodePrefix check
  * operations: begin creating topic channels
  * model_postgres: syntax fix
  * package.json: maintainer update
  * build_binary.sh: update to node 0.6.9
  * buddycloud-server 0.1.11
  * rsm_walk: fix logging
  * operations: checkAccessModel() before checkRequiredAffiliation()!
  * operations: Unsubscribe condition syntax fix
  * package.json: muffin dependency glob seems be incompatible in v3.*
  * operations: checkRequiredAffiliation should ignore no @requiredAffiliation
  * operations: fix isAffiliationAtLeast w/ invalid affiliation
  * jsconfig 0.2.0 is out! w00t!!!
  * Cakefile: lib/version.js from package.json
  * logger: update to ain2 1.0.0
  * main: fix config loading
  * buddycloud-server 0.1.10
  * router: fix syncServer()
  * buddycloud-server 0.1.9
  * bin/buddycloud-server: fix param quoting
  * bin/buddycloud-server: fix $cwd
  * buddycloud-server 0.1.8
  * .npmignore to package up built lib/* instead of src/*
  * build_binary.sh: install devDependencies beforehand
  * build_binary.sh: bump node.js version to 0.6.7
  * util: move getNodeUser(), getUserDomain()
  * main: "server successfully started"
  * sync: fix logging
  * model_postgres: fix writeItem() SQL parameter binding
  * sync: fix PaginatedSynchronization error callback
  * sync: rm TODO note
  * model_postgres: writeItem updated_query
  * operations: logging fixes
  * writeItem: move updated extraction from operations to model_postgres
  * model_postgres: writeItem should also INSERT existing updated value
  * model_postgres: fix syntax
  * model_postgres: SQL fixes
  * operations: PushInbox copies item published date
  * postgres schema: CREATE VIEW open_nodes + usage in model_postgres
  * model_postgres: fix query result handling
  * fix getTopFollowedNodes & getTopPublishedNodes parameters
  * model_postgres: fix SQL INTERVAL syntax
  * operations: BrowseNodes.fetchNodes() needs transaction
  * operations: BrowseNodes.transaction should use @fetchNodes()
  * operations: fetchNodes() typo
  * pubsub_server: browse /top-followed-nodes & /top-published-nodes does not request a particular node
  * getTopFollowedNodes & getTopPublishedNodes w/ XMPP disco interface
  * build_binary.sh: bump to node 0.6.6
  * buddycloud-server 0.1.7
  * package.json: rm cradle dependency
  * logger: syslog only with hostname
  * replace common-logger by underscore.logger
  * update ain2 dependency for node v0.6 compatibility
  * model_postgres walkListenerArchive: replace DISTINCT with GROUP BY
  * model_postgres: fix config order/limig
  * operations: ReplayArchive sorts results before capping
  * ReplayArchive/walkListenerArchive: properly cap result set
  * operations: ReplayArchive default max=50
  * build_binary.sh: use $PREFIX from environment if present
  * package.json: req node-stringprep >=0.1.1
  * router: fix
  * buddycloud-server 0.1.6
  * update to new node-waf paths
  * build_binary.sh: switch to node 0.6.4
  * package.json: depend on 0.3.1
  * router: RSM usage fix
  * logger: open logFile for appending, fixes issue #25
  * package.json: depend on node-xmpp >= 0.3.0
  * operations ReplayArchive: fix rsm max
  * operations: ReplayArchive RSM support
  * backend_pubsub: notificationPush updates include sender & actor
  * router: detectUserType fixes
  * router: detectUserType fixes
  * logger: fix argument iteration
  * main, backend_pubsub: logging improvements
  * backend_pubsub: include user in notfound error
  * connection: loopback stanzas to ourselves
  * router: add missing util.inspect include
  * router.run: trace req
  * router: add missing rsm include
  * logger: typo
  * logger: fix level
  * logging clean-up
  * router, pubsub_{server,client}: @type in <actor/>
  * buddycloud-server 0.1.5
  * router: sync fixes
  * buddycloud-server 0.1.4
  * ManageNodeAffiliations: non-owner may not elect a new owner
  * sync: log upon completion
  * sync: transaction fix
  * move some sync logic into router, lock per node
  * operations: BrowseNodeInfo/RetrieveNodeConfiguration w/o access control
  * buddycloud-server 0.1.3
  * operations: deny Unsubscribe from own nodes
  * logger: ain2 syslog transport
  * logger: message always as string
  * main: fix --stdout kludge
  * logger: avoid log level < 0
  * config.js.example: syslog on by default
  * config.js.example: logging section
  * syslog support with ain2
  * support --stdout logging
  * replace cnlogger by common-logger
  * buddycloud-server 0.1.2
  * build_binary: npm install globally (into /opt/buddycloud-server/)
  * build_binary: dedup node & npm versions
  * build_binary: default to /opt/buddycloud-server, bin/ script
  * main: process.title fix
  * version: fix package.json path
  * version from package.json in process.title and for jabber:iq:version
  * xmpp/connection: do not subscribe in probePresence()
  * buddycloud-server 0.1.1
  * build_binary: bump node & npm versions
  * backend_pubsub: reply() must also copy 'replay' field on MaxStanzaSizeExceeded
  * connection: more stanza output when MaxStanzaSizeExceeded
  * don't send ReplayArchive notifications to all online resources
  * pubsub_client/connection: wrap error replies into StanzaError earlier
  * logging fixes
  * port to cnlogger
  * port to broken winston logging
  * xmpp connection: always tell node-xmpp to reconnect
  * async.filter iterator does not take error parameter
  * model_postgres: fix nodeExists warning
  * backend_pubsub: fix notification matching
  * sync: fix router.authorizeFor() usage
  * sync: writeItem does not need author anymore
  * operations: typo
  * model_postgres: fix getListenerAffiliations() query
  * sync: careful
  * xmpp/forms: oops, s/creationTime/creationDate/
  * xmpp/connection: fix name
  * router: check for anonymous user to be online
  * anonymous user offline tracking & clean-up
  * model_postgres: fix walkListenerArchive() node in results
  * router: fix method binding
  * model_postgres: walkListenerArchive() should include node in results
  * operations: RemoveUser & model_postgres.getUserRemoteSubscriptions() & clearUserSubscriptions()
  * BuddycloudDiscovery::detectAnonymousUser
  * backend_pubsub: gracefully handle MaxStanzaSizeExceeded for notifications
  * xmpp pubsub_server & connection: fix graceful MaxStanzaSizeExceeded handling
  * errors: MaxStanzaSizeExceeded extends Error
  * operations: s/geoloc/geo/
  * operations: /subscription items shall contain jid=owner
  * metadata buddycloud#channel_type
  * proper metadata field names
  * support for creationDate
  * operations: clarify logging
  * router: fix remote backend selection
  * operations: Unsubscribe refactor & fix
  * operations: fix Register
  * buddycloud-server 0.1.0
  * operation: print opName on commit, rm debug
  * bin/buddycloud-server: don't cd so config can be loaded relatively
  * Merge remote-tracking branch 'origin/cli'
  * operations: RetractItems should allow anyone to remove their own posts
  * operations: preserve affiliation if previously affiliated
  * operations: unify into isAffiliationAtLeast()
  * operations: rm leftover TODO note
  * operations: refactor Register; should check if authoritative for user's domain
  * router.run: return 404 for nodes not locally subscribed but discovered ourselves
  * rm explicit author handling in postgres schema, model, operations
  * main: check sender authorization for authorizationPrompt
  * operations: RetrieveItems shall not virtualize items for cache case of remote nodes
  * Revert "Made the ownership of tables really clear. Should help avoid the problem that DD had the other day."
  * s/channel-server/buddycloud-server/g
  * build_binary.sh: fix invokation hint
  * README: rm some outdated stuff
  * main: fix defaultConfig stuff
  * build_binary.sh
  * operations: RetrieveItems.retrieveSubscriptionsItems() result set sorting, affiliations
  * virtual handling of /user/.../subscriptions node items
  * MAM replays subscription authorization requests
  * more authorization stuff
  * fixes
  * small fixes
  * package.json: fix bin path
  * further authorizationPrompt work
  * backend_pubsub: missedSomething was missing
  * package.json: fix coffeescript path (./node_modules/...)
  * sending authorize notification forms
  * package.json: fix .coffee compilation stage
  * operations: PrivilegedOperation.fetchActorAffilliation fetches all listener affiliations for inbox sync
  * pubsub_notifications: fix MAM stanzas
  * operations: subscribe defaultAffiliation, fixes
  * model_postgres: many fixes
  * operations: publishModel 'subscribers'
  * operations: access control fixes
  * begin access control, affiliations checking
  * model_postgres: fixes
  * errors: fix error classes
  * xmpp/connection: fix
  * xmpp/connection: fix @missedServerTimeouts usage
  * model_postgres: safety checks
  * readability, notes
  * rsm_walk: fix serious errors
  * globally refactor operation from function to value
  * sync: fixes
  * add forgotten rsm_walk file
  * move syncQueue from main.coffee to fine-grained sync.syncNode
  * xmpp/connection: readability
  * xmpp/connection: track <you-missed-something/> timers with @missedServerTimeouts
  * syncServer support, wired up to <you-missed-something/> 'syncNeeded'
  * model_postgres: for an actor, getSubscriptions() shall return not only users but also listeners
  * MAM time specification
  * primitive MAM implementation
  * send <you-missed-something/>
  * operations: PushInbox TODO note
  * sync: rm request.rsm.max clamp
  * synchronization with state resetting and subscriptions/affiliations support
  * pubsub_*: fix user/jid conventions
  * ConfigSynchronization should use browse-node-info to get node config
  * synchronizing!
  * synchronization kinda works, but hits RSM loops
  * further synchronization progress
  * begin synchronization
  * main: require async
  * measure stanza size, gracefully retry with smaller result set
  * synchronization groundwork
  * don't let backend_pubsub call router.runLocally(), return errors.SeeLocal() instead
  * errors: clean up
  * normalize: add <link rel="self" href="xmpp:...?pubsub;action=retrieve;..."/>
  * operations: Publish shall allow new items with specified @id
  * nodes browsing, with RSM
  * backend_pubsub: run() should bail out early on invalid node form
  * PostgreSQL tuning
  * complete RSM implementation
  * begin RSM for all operations
  * generify RSM stuff
  * pubsub_client: RSM
  * fixes from CCCamp11
  * RSM for local items retrieving
  * begin new RSM implementation
  * pubsub_server: publish-node-items shall reply with item ids
  * model_postgres: fix getNodeListeners() SQL
  * model_postgres: nodeExists() shall check for NOT NULL
  * model_postgres: getNodeListener() replace filter by SQL
  * model_postgres: getNodeListener() filter for null
  * model_postgres: fix setSubscription() INSERT w/o listener
  * error printout
  * forms: fix
  * operations: PushInbox author fix
  * debug
  * xml child robustness
  * model_postgres: fix nodeExists()
  * fix subscription listener for local users
  * logging cleanup
  * initiate presence tracking of users
  * xmpp/connection: use send() instead of specifying from jid
  * some logging cleanup
  * operations: push-inbox does not set subscription listener
  * fixes & TODO notes
  * operations: Notify.transaction() must call cb()
  * retrieve-node-configuration
  * forms: configToResultForm -> configToForm
  * pubsub_client: RetrieveNodeConfiguration & ManageNodeConfiguration
  * operations: catch reply cb exceptions
  * create-node operation
  * package.json: scripts
  * fixes
  * fix outgoing notifications
  * generify pubsub_notifications
  * many fixes for subscription pushing
  * router: if request writes, always go remote
  * push incoming notifications to local model
  * more subclassing of EventEmitter, incoming notifications handling
  * pubsub_server: unify PubsubRequest & PubsubOwnerRequest
  * merge request.coffee into pubsub_server.coffee
  * begin remote subscription pushing to local inbox
  * backend_pubsub: PubsubBackend.notify(): readability
  * tune to use single cb() instead of req.{reply,replyError}()
  * revive normalization
  * model_postgres: setSubscription(): coearce isSet to boolean
  * model_postgres: catch lost transactions
  * pubsub_client: error reporting, fix
  * subscribe reply status
  * model_postgres: setAffiliation() should check nodeExists()
  * fix disco.authorizeFor() usage
  * pubsub_client: fix <actor/> placement
  * refactor notifications a bit
  * pubsub_client: <actor/> placement fix
  * pubsub_client: fix <actor/> placement
  * pubsub_notifications: subscriptions/affiliations/config
  * fix registration/model callback parameters
  * operations: ManageNodeAffiliations validates accessModel & publishModel
  * setting configuration
  * fixes, fixes, config
  * only RegisterSetRequest should induce presence subscription
  * FIXME note
  * model_postgres: do not use rowCount
  * operations: Register created default configuration
  * pubsub_server: pubsub/inbox identity
  * fixes, StanzaError
  * implement pubsub_client operations
  * pubsub_notifications: byOperation()
  * fixes
  * fixes
  * fixes & debugging
  * fixes
  * debugging & fixes
  * fixes
  * begin discovering locally
  * fixes
  * Router.run: fix
  * fixes
  * operations: rename channel node to "posts"
  * begin notifications
  * a bit o' twiddling w/ subscription listeners
  * refactor router for remote requests
  * operations: subscribe/unsubscribe toggle affiliation none/member
  * router: rename frontend to backend
  * rename backend_postgres to model_postgres, revive router
  * main: move iqHandler to pubsub_server
  * manage, not only retrieve, subscriptions & affiliations
  * use subscribe sender as notification listener
  * backend_pubsub: replace ternary operator
  * need to store listener in subscriptions...
  * backend_pubsub: implement RequestCache
  * new untested buddycloud discovery with backend_pubsub.coffee
  * retrieve <actor/> generalized, begin using authorizeFor
  * ns: add BUDDYCLOUD_V1 xmlns
  * postgres.sql schema: updated column for more tables, author column for items
  * retrieving node affiliations
  * retrieving node subscriptions, fixes
  * backend_postgres: syntax fixes
  * operation: Register should set affiliation & subscription
  * retrieving subscriptions & affiliations
  * retracting items
  * publishing & retrieving items works
  * begin item retrieving
  * subscribe & unsubscribe
  * fix backend_postgres (user is a Pg keyword, must be quoted as column name)
  * publishing works
  * lots of fixes
  * fix disco requests
  * fix, fix, fix
  * begin implementing register & publish implementation
  * mv src/operations.coffee src/local/operations.coffee
  * revive backend
  * primitive operations
  * mv controller.coffee operations.coffee
  * dead code TODO
  * fixes
  * rm old dead code
  * rename iqhandler to request
  * begin some refactoring
  * begin hooking up handlers with operations
  * xmpp/pubsub_server: indicate operation types
  * notes
  * pubsub_server: PubsubOwnerHandlers
  * pubsub_server: flesh out more pubsub handlers
  * add affiliations checking
  * begin interweaving with local operations
  * a tad of interconnecting
  * pubsub_server: DiscoInfoHandler.reply()
  * xmpp client 'n stuff
  * README: draw new design
  * begin router
  * xmpp: move NS_* to ns.coffee
  * xmpp: primitive disco info works
  * begin iqhandler
  * xmpp/connection: port presence tracking
  * rm main.js
  * move src files around
  * rm model_couchdb from config, add preliminary main.coffee
  * a bit new controller
  * rm old test_controller
  * some controller work
  * old controller translated to coffeescript
  * port peripheral stuff over to coffeescript
  * README: change ejabberd port to the config default one
  * model_couchdb: s/doc.subscribers/doc.subscriptions/
  * xmpp_pubsub.js: fix typo
  * model_postgres: check nodeExists before any data modification
  * preliminary RSM (XEP-0059) implementation for retrieve-items/retrieve
  * model_couchdb: stub getUpdatesByTime()
  * MAM should result in direct message, not broadcast notification to all resources
  * MAM w/ working model_postgres backend
  * begin implementing MAM
  * controller: register/register should create /user/<jid>/subscriptions node
  * normalize fixes + tests
  * normalize
  * only one child element per item
  * model_postgres: fix setConfig()
  * model_postgres: listNodesByUser()
  * model_couchdb: listNodesByUser(), simplify listNodes()
  * controller, xmpp_pubsub: browse-nodes/by-user
  * model_postgres setConfig(): fixes
  * configuration notification
  * model_postgres setConfig(): do not set fields unspecified/without defaultConfig
  * model_postgres nodeExists(): indentation
  * controller: subscribe should not require preexisting affiliation
  * xmpp_pubsub: fix manage-subscriptions/retrieve result usage
  * controller: allow retrieving subscriptions & affiliations for members
  * xmpp_pubsub: syntax fix
  * model_postgres: fix queue pushing
  * xmpp_pubsub: fix info discovery reply FORM_TYPE
  * model_postgres: config fixes
  * more on extended config
  * model_couchdb, model_postgres: more flexible config schema
  * config: description, type, creationDate; setConfig() on create-node/register
  * xmpp_pubsub: optimize presence tracking
  * controller: requiredAffiliation='member' for config-node/retrieve
  * README: OpenFire
  * controller: defaultConfig() + use in feature 'config-node'
  * xmpp_pubsub: replace isOnline() with getOnlineResources()
  * model_postgres: fix transaction dequeueing
  * model_postgres: move cb() past process.nextTick/dbIsAvailable for safety
  * model_postgres: work around empty responses
  * test_controller: retract
  * xmpp_pubsub: disco <identity/> according to discovered @node
  * test_controller: browse-nodes
  * model_couchdb: fix preload() etag extraction + error reporting
  * xmpp_pubsub: FeatureNotImplemented message
  * controller: simulate a stack for debug info
  * test_controller: retract skeleton
  * controller unsubscribe: do not fetch affiliation from database but check by node path
  * implement & test unsubscribe
  * test_controller: skeletons
  * test_controller: publishing tests
  * test_controller: more publish testing + controller fix
  * test_controller: begin test publishing
  * model_postgres: fix forgotten variable
  * model_postgres: reconnect to database upon error
  * model_postgres: oops, syntax error
  * config.js.example: postgres is actually the one with a poolSize
  * model_postgres: oops, syntax errors
  * begin test_controller
  * fixes
  * subscriptionModified <message/>
  * xmpp_pubsub: "message" & approve() fixes
  * controller: replace ownerNotification with afterTransaction
  * access_model authorize
  * package.json & README
  * errors: pull inherits() from util/utils/sys for moving node api
  * browse open nodes with service discovery items
  * controller: refactor affiliations checking
  * xmpp_pubsub: fix subscriptions format
  * controller: treat missing accessModel as 'open'
  * model_couchdb: preload() etag fix
  * .gitignore with config.js
  * xmpp_pubsub: node config on disco info
  * model_couchdb: encodeURIComponent() only for db.head() & .get()
  * main.js: #!
  * rename config.js to config.js.example
  * restore default config.js
  * main.js: on uncaughtException
  * postgres doc & config
  * model_postgres
  * model_couchdb: fix item deserialization
  * model_couchdb: rm implemented TODOs
  * README: CouchDB configuration
  * README: TODO++
  * LICENSE
  * README: markdown fix
  * README: mention buddycloud :)
  * model_couchdb: fix views initialization
  * README & config
  * jabber:iq:register
  * model_couchdb: fixes
  * errors fixing
  * rm model_persistence
  * model_couchdb: assertNodeName()
  * main: catch uncaughtException
  * controller: fix
  * bugs, readability
  * model_couchdb: fixing
  * controller: implement affiliations checking
  * xmpp_pubsub: getAffiliations() result is now Array
  * model_couchdb: setSubscription() & setAffiliation() 'none'
  * model_couchdb: consolidate subscriptions & affiliations model
  * xmpp_pubsub: send notifications with type='headline'
  * xmpp_pubsub: subscribeIfNeeded() on <create/> & <subscribe/>
  * model_couchdb: load() shortcut when already cached
  * model_couchdb: createNode() fix
  * model_couchdb: preload()
  * model_couchdb: commit read documents too for integrity
  * model_couchdb: abstract views
  * CouchDB Optimistic Concurrency Control layer
  * controller: improve error propagation
  * defined error conditions
  * untested configuration getting/setting
  * service discovery
  * modify-affiliations
  * model_couchdb: getAffiliation()
  * begin permission checking infrastructure
  * presence probes
  * xmpp_pubsub: presence tracking
  * refactoring controller complete
  * continue refactoring controller into features/operations
  * begin refactoring controller into features/operations
  * subscribers
  * getting subscriptions & affiliations
  * createNode improvements
  * controller createNode: check node
  * model_couchdb: affiliations view
  * items getting
  * much more progress
  * implement retraction, s/notifySubscriber/notify/, s/writeItems/writeItem/
  * publish notification works
  * more frontend hooking
  * begin notification hooks
  * fixes
  * begin model_couchdb transactions
  * split model
  * some progress
  * some progress
  * createNode creates owner affiliation
  * model: indexes
  [ Thomas Jost ]
  * Add @denisw to contributors
  * Upgrade required node version to 0.8
  * We actually need remote subscriptions nodes
  * Merge branch 'feature/anon-fixes' into develop
  * Merge branch 'feature/really-validate-post-times' into develop
  * Reject remote posts with invalid dates
  * Add tests for remote posts with invalid dates
  * Force anon subscriptions to be temporary
  * Set default affiliation to 'none' for anon users
  * Merge branch 'feature/anon-fixes' into develop
  * Cleanup: remove some dead code
  * Purge remote nodes with no local subscription left
  * Merge branch 'feature/recent-items' into develop
  * Merge branch 'feature/validate-remote-items' into develop
  * Sort recent items by update time
  * Merge branch 'feature/validate-remote-items' into feature/recent-items
  * Fix tests that push remote items
  * Validate remote items
  * Add (failing) tests for invalid remote items
  * Implement recent items query
  * Add (failing) test for recent items query
  * PubSub replies can include several elements
  * Merge branch 'feature/pusher' into develop
  * Workaround callback woes
  * Fix MAM for pusher component
  * Pusher: test MAM
  * test_server: move makePublishIq into TestServer
  * Pusher: test node configuration
  * Pusher: test unsubscriptions
  * Merge branch 'feature/affiliations-fixes' into develop
  * Merge branch 'feature/pubsub-disco-features' into develop
  * Cleanup
  * Expose all implemented PubSub features
  * Pusher: test affiliations
  * Merge branch 'feature/affiliations-fixes' into feature/pusher
  * Fix affiliation in /subscriptions notifications
  * Accept PubSub-compliant affiliations notifications
  * Pusher: test subscriptions
  * Merge branch 'feature/fix-98' into develop
  * Fix SQL for updating replies
  * Add failing test for issue #98
  * Fix offline user cleanup
  * DB: drop anonymous column
  * Yet another federation test
  * Check if the example config file is valid JS
  * Add tests for pusher code
  * Pusher can MAM everything
  * Pusher is a listener for all notifications
  * Add config for pusher component
  * Merge branch 'feature/mam-fixes' into develop
  * Increase the default number of items in a MAM response
  * Make MAM return an error if there are too many results
  * Use RSM in MAM
  * Test MAM RSM
  * MAM: filter bad dates out
  * Test if MAM validates dates correctly
  * Ensure the giant MAM test doesn't pollute the test environment
  * Make affiliations notifications PubSub-compliant
  * Affiliations have update timestamps too
  * Avoid temporary subscriptions in MAM results
  * Advertise support for MAM in disco#info
  * Add a giant MAM test
  * Update Travis URL in README.md
  * Merge branch 'feature/tests' into develop
  * Correctly tests that updated items don't change <in-reply-to/>
  * Move tests on updated items to a different function
  * Add tests for updates that change <in-reply-to/>
  * Use Travis to automate testing
  * Merge branch 'master' into develop
  * Add compatibility with PostgreSQL 9.1
  * Require at least one item to retract
  * Add Emacs folding marks
  * Add retrieve and retract tests
  * Fix retraction stanza sent to remote services
  * Tombstones: include Atom namespace in <updated/> element
  * Fix error when not allowed to retract an item
  * Tombstones can't be updated
  * When publishing an update, check if the actor is the original author
  * Check if original post exists before publishing a reply
  * Reject posts from non-users
  * Don't include type in <actor/>
  * Complete post/update/retract tests
  * TestServer: fix Atom in-reply-to element
  * Fail when some unwanted event happens
  * Add description for calls to "should.exist"
  * Retraction tests
  * Workaround CoffeeScript weird scoping rules
  * Add another batch of tests
  * Update test data
  * Change the way the test server emits IQ stanzas
  * Tests for posting to remote channels
  * Test server: emit event for IQs with unknown ID
  * Test server: disco info for "remote" servers
  * More post tests
  * Add helper to run tests that trigger several different stanzas
  * Test server: handle <message/> stanzas
  * Add post tests
  * Post tests: helper to check if post was successful
  * Throw an exception when getting an unexpected error IQ
  * Start adding post tests
  * Add helpers for pubsub get IQs and Atom handling
  * Helpers to add initial test data in the database
  * Add XMPP namespaces to test_server.coffee
  * Reply to presence probes
  * Don't parse Elements again
  * Use same user and server names as in sfc
  * Safe path handling in prepare-db.sh
  * Add codo-like doc to the TestServer class
  * Add helpers to build disco and pubsub IQs
  * Expose support for PubSub node creation
  * Skip a test
  * More channel creation tests
  * New tests and helpers for forms
  * Add a helper to parse disco#info replies
  * Move common disco replies to test_server.coffee
  * Start testing for channel creation
  * Test server: handle disco#items queries
  * Make tests runnable using "npm test"
  * Basic disco tests
  * Start a test suite
  * Use an existing component connection if provided in config
  * Make it possible to require() the server
  * Update config.js.example
  * Fix autosubscribeNewUsers
  * Increase the max number of items in each RSM page
  * Better shrinking of oversized stanzas
  * Include `-dirty' in version number from git
  * Remove glob from dependencies
  * Fix indentation in main.coffee
  * Prevent existing persistent subscription from being made temporary
  * Merge branch 'feature/version-number-from-git' into develop
  * Expose support for XEP-0092 (Software Version) in disco
  * Use `git describe' to get version numbers in dev branches
  * Merge branch 'master' into next
  * Restore compatibility with Node 0.6
  * Fix handling of offline users
  * Avoid race condition in disco cache
  * Shrink oversized stanzas more aggressively
  * Avoid nulls
  * Include new files in release tarball
  * Avoid race condition in disco cache
  * Merge remote-tracking branch 'upstream/tempsub' into next
  * Merge branch 'db-versioning' into next
  * buddycloud-server 0.3.5
  * Check if remote supports temporary subscription before sending a tempsub request
  * Client can check for server features before sending an IQ
  * Make server features discoverable
  * Log errors when processing incoming messages
  * Cleanup
  * Remove empty text nodes from items
  * Fix ActivityStreams verb for replies
  * Include operation name in debug message
  * Don't notify unsubscribe when it was a temporary subscription
  * Offline user cleanup: do real unsubscribe operations
  * I'm dumb
  * Don't delete temporary subscriptions during sync
  * Don't send any notification for temporary subscriptions
  * Client and server must speak the same language
  * Only send notifications about temporary subscriptions to remote listeners
  * Cleanup offline users
  * Claim we support subscription options
  * Temporary subscriptions
  * Fix updating items
  * Add help channels to default autosubscriptions
  * Merge branch 'log-fix'
  * Inspect objets in log messages
  * Fix broken log messages
  * Don't write subscription stanzas in items table
  * Merge remote-tracking branch 'lloyd/config'
  * Populate in_reply_to column when inserting new items
  * DB cleanup at startup
  * Add README for DB schema versioning
  * Upgrade DB schema
  * Check DB schema version on startup
  * Don't change <published/> when updating an existing post
  * Fix subscription to remote private channels
  * Don't fail when the default config file does not exist
  * Add Lloyd in contributors
  * Better logging for replies sent by 'proxy' components
  * Merge branch 'mam-result'
  * Include <result/> in MAM replies
  * Merge remote-tracking branch 'schnouki/atom-tombstones'
  * Fix typo
  * Merge pull request #61 from lloydwatkin/no-mod_disco
  * Also send tombstones in retract notifications
  * Use Atom tombstones for deleted items
  * xmpp: XEP-0313 compliance
  * Handle PubSub retract "notify" attribute
  * operations: fix PushInbox notification
  * Fix undefined variable when paging backwards in RSM
  [ Tuomas Koski ]
  * Merge pull request #59 from lloydwatkin/initialise-sync
  * Merge pull request #58 from lloydwatkin/master
  [ Steven Lloyd Watkin ]
  * Ensure we do not cause BC breaks
  * Make both defaults positive rather than one positive & the other negative Broke the config options down further
  * Fix build console output
  * "package" now a reserved word in node, caused failing in builds (v0.6.15+)
  [ Denis Washington ]
  * Use local CoffeeScript "cake" for "npm install"
  [ Jonas Smedegaard ]
  * Setup access rights and needed dirs when starting daemon
  * Speedup system shutdown by avoiding explicit sysV stop
  * xmpp_pubsub: check for commandEl prior usage
  [ Reginald dude ]
  * updates sent via email from vorner.cz
  * updates sent via email from vorner.cz
  [ Reginald Dude ]
  * Most confusing config file ever
  [ ▟ ▖▟ ▖ ]
  * Merge pull request #70 from lloydwatkin/fix-is-function
  * Merge pull request #63 from lloydwatkin/no-mod_disco
  * Merge pull request #62 from lloydwatkin/no-mod_disco
  * Merge pull request #57 from Schnouki/xep-0313
  * Merge pull request #54 from Schnouki/fix-notif
  * Merge pull request #52 from lloydwatkin/master
  * Merge pull request #51 from lloydwatkin/master
  [ James Tait ]
  * Ensure both the PID dir and log dir are created on startup if they do not already exist.
  [ imaginator ]
  * aligning with INSTALL instructions
  * moved instructions to wiki
  * Edited README.md via GitHub
  [ dodo ]
  * fix accessModel of geo nodes
  * always test in production
  * buddycloud-server 0.3.4
  * Merge branch 'packaging'
  * put the /etc/init.d script into tarball
  * not needed anymore
  * default options for new channels
  * bump tarballify version
  * add bin/buddycloud-server to the tarball
  * no build step in bin/buddycloud-server anymore
  * print additional info messages in gray
  * fix 'file is not defined'
  * fix 'modName is not defined'
  * colorful output for package.js
  * bump tarballify version
  * rm trailing spaces
  * no build_binary.sh needed
  * separate devDependencies
  * export name
  * use packaging script
  * buddycloud-server 0.3.3
  * pass prefix to npm to force npm to use that particular prefix
  * $PREFIX/bin/buddycloud-server can be nonexistant .. so ignore all errors when removing
  * bump node version in build script
  * merge issue #37
  * specify interal config file as defaults, not as main config
  * backports to node 0.4
  * concat cwd path to config path only when config path is relative
  * respect the cwd
  * move to the right dir before builing
  * wscript is not needed anymore
  * merged #31. symlink detection for bin/buddycloud-server thanks to @highfellow
  * fixed gitignore
  * forgot Cakefile
  * pin node version for over 0.5 to get the require json working
  * get version directly
  * new buildsystem
  * check if config.syslog has keys
  * dont load default config over opts and args
  * main: fix config loading
  * wscript fixes
  * load config via jsconfig
  * update wscript
  * upgrade build environment
  * update requirements in readme
  * cleanup files
  [ Simon Tennant ]
  * Update config.js.example
  * change to read config file from /opt/buddycloud
  * Update master
  * don't be so --quiet (will help a lot with debugging)
  * Update _etc_init.d_buddycloud-server
  * the orwell defeault was causing jdesenberg problems.
  * Fixed the permissions to run as.
  * Update _etc_init.d_buddycloud-server
  * init script
  * make it really clear what to change (and what "jid" refers to)
  * Made the ownership of tables really clear. Should help avoid the problem that DD had the other day.
  [ Lloyd Watkin ]
  * Fix for checking of child element
  * Catch error event
  * Fix for server reset
  * Updated variable names to better describe what config does.
  * Merge branch 'master' of git://github.com/buddycloud/buddycloud-server into no-mod_disco
  * Allow buddycloud server to advertise additional 'proxy' components
  * Wait to sync
  * Rename of parameter
  * Allow user to specify a port or not, changed argument name as it may not actually be remote debugging.
  * Tidy up
  * Allow node.js debugging
  [ Simon ]
  * /etc/init.d/buddycloud-server

 -- Abmar Barros (buddycloud Nightly Builds) <abmar@buddycloud.com>  Sat, 26 Jan 2013 14:42:31 -0300


buddycloud-server (0.1) unstable; urgency=medium

  [ Astro ]
  * operations: all nodes in defaultConfiguration accessModel=authorize
  * operations: posts & subscriptions accessModel=authorize in defaultConfiguration
  * buddycloud-server 0.3.2
  * Cakefile: version.js + 

  * operations: fix run notifications control flow
  * build_binary.sh: get bin/buddycloud-server out of the way before npm i
  * buddycloud-server 0.3.1
  * package.json: honor all contributors
  * Merge remote-tracking branch 'schnouki/patch-1'
  * .npmignore: exclude debian/* from npm pkgs
  * buddycloud-server 0.3.0
  * package.json: bump dep versions
  * operations: prevent unsubscribing/demoting the node owner
  * operations: fix PushInbox callback
  * operations: run notifies first, then syncs, then calls back
  * pubsub_server: lower logging
  * operations: fix PushInbox newNodes
  * operations: move PushInbox syncNode post transaction
  * operations: PushInbox should work even if syncNode had hickups
  * operations: syncNode when PushInbox created it
  * operations: fix PushInbox notification & newModerators
  * model_postgres: fix & simplify purgeNode()
  * sync: fixes
  * sync: purge node if no local subscribers
  * purge node when local unsubscription is pushed from remote
  * operations: fix generateSubscriptionsNotifications followee
  * operations: fix PushInbox newModerators nodes
  * xmpp connection: doc, serialize stanzas only once
  * operations: NewModeratorNotify needs listener, not user
  * operations: fix NewModeratorNotify listener
  * operations: log Operation name
  * model_postgres: must quote "user" column for Postgres
  * operations: NewModeratorNotify must cb()
  * operations: Notify notifies w/ node
  * operations: fix Notify otherListeners
  * pubsub_client: rm debug
  * operations: NewModeratorNotify notifies w/ node & listener
  * model_postgres: optional Transaction callbacks
  * operations: fix Notify filterSubscription & filterAffiliation invokation
  * operations: fix this binding
  * operations: no pending subscriptions in subscriptions node
  * operations: NewModeratorNotify
  * operations: doc, filter subscriptions and affiliations for non-moderators
  * operations: reorganize
  * clean up logging
  * operations: posts node defaultAffiliation='publisher'
  * sync: fix AffiliationsSynchronization typo
  * buddycloud-server 0.2.3
  * package.json: fix install script
  * build_binary.sh: bump node.js version
  * buddycloud-server 0.2.2
  * package.json: add preinstall cake build
  * operations: fix notifications
  * build_binary.sh: bump node.js version
  * buddycloud-server 0.2.1
  * operations: fix Notify subscriptios node items
  * operations: fix Notify callback result
  * operations: BrowseNodeItems for subscriptions node calls getSubscriptions not getSubscription
  * operations: syntax fixes
  * operations: Notify subscriptions fixes
  * operations: subscriptions node notifications
  * operations: BrowseNodeItems for subscriptions node
  * sync: require errors
  * sync: avoid error output when omitting local node
  * router, sync: improve logging
  * backend_pubsub: PubsubBackend.notify listener robustness
  * operations: fix Subscribe defaultAffiliation
  * operations: fix ManageNodeAffiliations control flow
  * pubsub_server: PubsubOwnerSetAffiliationsRequest syntax fix
  * operations: fix requiredAffiliation()
  * operations: requiredAffiliation can be function to allow moderators approving topic channel subscribers
  * operations: ManageNodeSubscriptions refactor for efficiency
  * operations: ManageNodeSubscriptions should set new affiliations to defaultAffiliation
  * operations: fix Notify jid/user
  * operations: Notify should notify all users pertained by a subscription
  * operations: 'unsubscribe-node' notifies unsubscribed user
  * operations, pubsub_client: there's no "unsubscribed" subscription, only "none"
  * pubsub_server: PubsubOwnerSetSubscriptionsRequest syntax fix
  * operations: Unsubscribe needs PrivilegedOperation methods
  * operations: Unsubscribed is not a PrivilegedOperation but a ModelOperation
  * operations: fix callback scope
  * pubsub_server: robustify PubsubItemsRequest
  * operations: syntax
  * pubsub_server, operations: support for RetrieveItems by itemIds
  * build_binary.sh: bump node.js version to 0.6.10
  * buddycloud-server 0.2.0
  * operations: CreateNode should not allow creation with empty nodeUser username
  * operations: fix CreateNode defaults & creationDate
  * operations: fix CreateNode isTopic switcheroo
  * router: fix autosubscribeNewUsers operation name
  * router: autosubscribeNewUsers
  * config.js.example: default checkCreateNode hook checks for a specific topic domain
  * operations: fix CreateNode node typo
  * operations: fix CreateNode config
  * pubsub_server, operations: CreateNode with optional config
  * operations: fix CreateNode setSubscription()
  * operations: CreateNode catches missing checkCreateNode hook
  * operations: CreateNode default config
  * checkCreateNode config hook
  * model_postgres: fix getOwnersByNodePrefix SQL
  * operations: fix CreateNode setAffiliation()
  * operations: fix CreateNode getOwnersByNodePrefix()
  * operations: fix ../util require, CreateNode safety check
  * implement createNode with getOwnersByNodePrefix check
  * operations: begin creating topic channels
  * model_postgres: syntax fix
  * package.json: maintainer update
  * build_binary.sh: update to node 0.6.9
  * buddycloud-server 0.1.11
  * rsm_walk: fix logging
  * operations: checkAccessModel() before checkRequiredAffiliation()!
  * operations: Unsubscribe condition syntax fix
  * package.json: muffin dependency glob seems be incompatible in v3.*
  * operations: checkRequiredAffiliation should ignore no @requiredAffiliation
  * operations: fix isAffiliationAtLeast w/ invalid affiliation
  * jsconfig 0.2.0 is out! w00t!!!
  * Cakefile: lib/version.js from package.json
  * logger: update to ain2 1.0.0
  * main: fix config loading
  * buddycloud-server 0.1.10
  * router: fix syncServer()
  * buddycloud-server 0.1.9
  * bin/buddycloud-server: fix param quoting
  * bin/buddycloud-server: fix $cwd
  * buddycloud-server 0.1.8
  * .npmignore to package up built lib/* instead of src/*
  * build_binary.sh: install devDependencies beforehand
  * build_binary.sh: bump node.js version to 0.6.7
  * util: move getNodeUser(), getUserDomain()
  * main: "server successfully started"
  * sync: fix logging
  * model_postgres: fix writeItem() SQL parameter binding
  * sync: fix PaginatedSynchronization error callback
  * sync: rm TODO note
  * model_postgres: writeItem updated_query
  * operations: logging fixes
  * writeItem: move updated extraction from operations to model_postgres
  * model_postgres: writeItem should also INSERT existing updated value
  * model_postgres: fix syntax
  * model_postgres: SQL fixes
  * operations: PushInbox copies item published date
  * postgres schema: CREATE VIEW open_nodes + usage in model_postgres
  * model_postgres: fix query result handling
  * fix getTopFollowedNodes & getTopPublishedNodes parameters
  * model_postgres: fix SQL INTERVAL syntax
  * operations: BrowseNodes.fetchNodes() needs transaction
  * operations: BrowseNodes.transaction should use @fetchNodes()
  * operations: fetchNodes() typo
  * pubsub_server: browse /top-followed-nodes & /top-published-nodes does not request a particular node
  * getTopFollowedNodes & getTopPublishedNodes w/ XMPP disco interface
  * build_binary.sh: bump to node 0.6.6
  * buddycloud-server 0.1.7
  * package.json: rm cradle dependency
  * logger: syslog only with hostname
  * replace common-logger by underscore.logger
  * update ain2 dependency for node v0.6 compatibility
  * model_postgres walkListenerArchive: replace DISTINCT with GROUP BY
  * model_postgres: fix config order/limig
  * operations: ReplayArchive sorts results before capping
  * ReplayArchive/walkListenerArchive: properly cap result set
  * operations: ReplayArchive default max=50
  * build_binary.sh: use $PREFIX from environment if present
  * package.json: req node-stringprep >=0.1.1
  * router: fix
  * buddycloud-server 0.1.6
  * update to new node-waf paths
  * build_binary.sh: switch to node 0.6.4
  * package.json: depend on 0.3.1
  * router: RSM usage fix
  * logger: open logFile for appending, fixes issue #25
  * package.json: depend on node-xmpp >= 0.3.0
  * operations ReplayArchive: fix rsm max
  * operations: ReplayArchive RSM support
  * backend_pubsub: notificationPush updates include sender & actor
  * router: detectUserType fixes
  * router: detectUserType fixes
  * logger: fix argument iteration
  * main, backend_pubsub: logging improvements
  * backend_pubsub: include user in notfound error
  * connection: loopback stanzas to ourselves
  * router: add missing util.inspect include
  * router.run: trace req
  * router: add missing rsm include
  * logger: typo
  * logger: fix level
  * logging clean-up
  * router, pubsub_{server,client}: @type in <actor/>
  * buddycloud-server 0.1.5
  * router: sync fixes
  * buddycloud-server 0.1.4
  * ManageNodeAffiliations: non-owner may not elect a new owner
  * sync: log upon completion
  * sync: transaction fix
  * move some sync logic into router, lock per node
  * operations: BrowseNodeInfo/RetrieveNodeConfiguration w/o access control
  * buddycloud-server 0.1.3
  * operations: deny Unsubscribe from own nodes
  * logger: ain2 syslog transport
  * logger: message always as string
  * main: fix --stdout kludge
  * logger: avoid log level < 0
  * config.js.example: syslog on by default
  * config.js.example: logging section
  * syslog support with ain2
  * support --stdout logging
  * replace cnlogger by common-logger
  * buddycloud-server 0.1.2
  * build_binary: npm install globally (into /opt/buddycloud-server/)
  * build_binary: dedup node & npm versions
  * build_binary: default to /opt/buddycloud-server, bin/ script
  * main: process.title fix
  * version: fix package.json path
  * version from package.json in process.title and for jabber:iq:version
  * xmpp/connection: do not subscribe in probePresence()
  * buddycloud-server 0.1.1
  * build_binary: bump node & npm versions
  * backend_pubsub: reply() must also copy 'replay' field on MaxStanzaSizeExceeded
  * connection: more stanza output when MaxStanzaSizeExceeded
  * don't send ReplayArchive notifications to all online resources
  * pubsub_client/connection: wrap error replies into StanzaError earlier
  * logging fixes
  * port to cnlogger
  * port to broken winston logging
  * xmpp connection: always tell node-xmpp to reconnect
  * async.filter iterator does not take error parameter
  * model_postgres: fix nodeExists warning
  * backend_pubsub: fix notification matching
  * sync: fix router.authorizeFor() usage
  * sync: writeItem does not need author anymore
  * operations: typo
  * model_postgres: fix getListenerAffiliations() query
  * sync: careful
  * xmpp/forms: oops, s/creationTime/creationDate/
  * xmpp/connection: fix name
  * router: check for anonymous user to be online
  * anonymous user offline tracking & clean-up
  * model_postgres: fix walkListenerArchive() node in results
  * router: fix method binding
  * model_postgres: walkListenerArchive() should include node in results
  * operations: RemoveUser & model_postgres.getUserRemoteSubscriptions() & clearUserSubscriptions()
  * BuddycloudDiscovery::detectAnonymousUser
  * backend_pubsub: gracefully handle MaxStanzaSizeExceeded for notifications
  * xmpp pubsub_server & connection: fix graceful MaxStanzaSizeExceeded handling
  * errors: MaxStanzaSizeExceeded extends Error
  * operations: s/geoloc/geo/
  * operations: /subscription items shall contain jid=owner
  * metadata buddycloud#channel_type
  * proper metadata field names
  * support for creationDate
  * operations: clarify logging
  * router: fix remote backend selection
  * operations: Unsubscribe refactor & fix
  * operations: fix Register
  * buddycloud-server 0.1.0
  * operation: print opName on commit, rm debug
  * bin/buddycloud-server: don't cd so config can be loaded relatively
  * Merge remote-tracking branch 'origin/cli'
  * operations: RetractItems should allow anyone to remove their own posts
  * operations: preserve affiliation if previously affiliated
  * operations: unify into isAffiliationAtLeast()
  * operations: rm leftover TODO note
  * operations: refactor Register; should check if authoritative for user's domain
  * router.run: return 404 for nodes not locally subscribed but discovered ourselves
  * rm explicit author handling in postgres schema, model, operations
  * main: check sender authorization for authorizationPrompt
  * operations: RetrieveItems shall not virtualize items for cache case of remote nodes
  * Revert "Made the ownership of tables really clear. Should help avoid the problem that DD had the other day."
  * s/channel-server/buddycloud-server/g
  * build_binary.sh: fix invokation hint
  * README: rm some outdated stuff
  * main: fix defaultConfig stuff
  * build_binary.sh
  * operations: RetrieveItems.retrieveSubscriptionsItems() result set sorting, affiliations
  * virtual handling of /user/.../subscriptions node items
  * MAM replays subscription authorization requests
  * more authorization stuff
  * fixes
  * small fixes
  * package.json: fix bin path
  * further authorizationPrompt work
  * backend_pubsub: missedSomething was missing
  * package.json: fix coffeescript path (./node_modules/...)
  * sending authorize notification forms
  * package.json: fix .coffee compilation stage
  * operations: PrivilegedOperation.fetchActorAffilliation fetches all listener affiliations for inbox sync
  * pubsub_notifications: fix MAM stanzas
  * operations: subscribe defaultAffiliation, fixes
  * model_postgres: many fixes
  * operations: publishModel 'subscribers'
  * operations: access control fixes
  * begin access control, affiliations checking
  * model_postgres: fixes
  * errors: fix error classes
  * xmpp/connection: fix
  * xmpp/connection: fix @missedServerTimeouts usage
  * model_postgres: safety checks
  * readability, notes
  * rsm_walk: fix serious errors
  * globally refactor operation from function to value
  * sync: fixes
  * add forgotten rsm_walk file
  * move syncQueue from main.coffee to fine-grained sync.syncNode
  * xmpp/connection: readability
  * xmpp/connection: track <you-missed-something/> timers with @missedServerTimeouts
  * syncServer support, wired up to <you-missed-something/> 'syncNeeded'
  * model_postgres: for an actor, getSubscriptions() shall return not only users but also listeners
  * MAM time specification
  * primitive MAM implementation
  * send <you-missed-something/>
  * operations: PushInbox TODO note
  * sync: rm request.rsm.max clamp
  * synchronization with state resetting and subscriptions/affiliations support
  * pubsub_*: fix user/jid conventions
  * ConfigSynchronization should use browse-node-info to get node config
  * synchronizing!
  * synchronization kinda works, but hits RSM loops
  * further synchronization progress
  * begin synchronization
  * main: require async
  * measure stanza size, gracefully retry with smaller result set
  * synchronization groundwork
  * don't let backend_pubsub call router.runLocally(), return errors.SeeLocal() instead
  * errors: clean up
  * normalize: add <link rel="self" href="xmpp:...?pubsub;action=retrieve;..."/>
  * operations: Publish shall allow new items with specified @id
  * nodes browsing, with RSM
  * backend_pubsub: run() should bail out early on invalid node form
  * PostgreSQL tuning
  * complete RSM implementation
  * begin RSM for all operations
  * generify RSM stuff
  * pubsub_client: RSM
  * fixes from CCCamp11
  * RSM for local items retrieving
  * begin new RSM implementation
  * pubsub_server: publish-node-items shall reply with item ids
  * model_postgres: fix getNodeListeners() SQL
  * model_postgres: nodeExists() shall check for NOT NULL
  * model_postgres: getNodeListener() replace filter by SQL
  * model_postgres: getNodeListener() filter for null
  * model_postgres: fix setSubscription() INSERT w/o listener
  * error printout
  * forms: fix
  * operations: PushInbox author fix
  * debug
  * xml child robustness
  * model_postgres: fix nodeExists()
  * fix subscription listener for local users
  * logging cleanup
  * initiate presence tracking of users
  * xmpp/connection: use send() instead of specifying from jid
  * some logging cleanup
  * operations: push-inbox does not set subscription listener
  * fixes & TODO notes
  * operations: Notify.transaction() must call cb()
  * retrieve-node-configuration
  * forms: configToResultForm -> configToForm
  * pubsub_client: RetrieveNodeConfiguration & ManageNodeConfiguration
  * operations: catch reply cb exceptions
  * create-node operation
  * package.json: scripts
  * fixes
  * fix outgoing notifications
  * generify pubsub_notifications
  * many fixes for subscription pushing
  * router: if request writes, always go remote
  * push incoming notifications to local model
  * more subclassing of EventEmitter, incoming notifications handling
  * pubsub_server: unify PubsubRequest & PubsubOwnerRequest
  * merge request.coffee into pubsub_server.coffee
  * begin remote subscription pushing to local inbox
  * backend_pubsub: PubsubBackend.notify(): readability
  * tune to use single cb() instead of req.{reply,replyError}()
  * revive normalization
  * model_postgres: setSubscription(): coearce isSet to boolean
  * model_postgres: catch lost transactions
  * pubsub_client: error reporting, fix
  * subscribe reply status
  * model_postgres: setAffiliation() should check nodeExists()
  * fix disco.authorizeFor() usage
  * pubsub_client: fix <actor/> placement
  * refactor notifications a bit
  * pubsub_client: <actor/> placement fix
  * pubsub_client: fix <actor/> placement
  * pubsub_notifications: subscriptions/affiliations/config
  * fix registration/model callback parameters
  * operations: ManageNodeAffiliations validates accessModel & publishModel
  * setting configuration
  * fixes, fixes, config
  * only RegisterSetRequest should induce presence subscription
  * FIXME note
  * model_postgres: do not use rowCount
  * operations: Register created default configuration
  * pubsub_server: pubsub/inbox identity
  * fixes, StanzaError
  * implement pubsub_client operations
  * pubsub_notifications: byOperation()
  * fixes
  * fixes
  * fixes & debugging
  * fixes
  * debugging & fixes
  * fixes
  * begin discovering locally
  * fixes
  * Router.run: fix
  * fixes
  * operations: rename channel node to "posts"
  * begin notifications
  * a bit o' twiddling w/ subscription listeners
  * refactor router for remote requests
  * operations: subscribe/unsubscribe toggle affiliation none/member
  * router: rename frontend to backend
  * rename backend_postgres to model_postgres, revive router
  * main: move iqHandler to pubsub_server
  * manage, not only retrieve, subscriptions & affiliations
  * use subscribe sender as notification listener
  * backend_pubsub: replace ternary operator
  * need to store listener in subscriptions...
  * backend_pubsub: implement RequestCache
  * new untested buddycloud discovery with backend_pubsub.coffee
  * retrieve <actor/> generalized, begin using authorizeFor
  * ns: add BUDDYCLOUD_V1 xmlns
  * postgres.sql schema: updated column for more tables, author column for items
  * retrieving node affiliations
  * retrieving node subscriptions, fixes
  * backend_postgres: syntax fixes
  * operation: Register should set affiliation & subscription
  * retrieving subscriptions & affiliations
  * retracting items
  * publishing & retrieving items works
  * begin item retrieving
  * subscribe & unsubscribe
  * fix backend_postgres (user is a Pg keyword, must be quoted as column name)
  * publishing works
  * lots of fixes
  * fix disco requests
  * fix, fix, fix
  * begin implementing register & publish implementation
  * mv src/operations.coffee src/local/operations.coffee
  * revive backend
  * primitive operations
  * mv controller.coffee operations.coffee
  * dead code TODO
  * fixes
  * rm old dead code
  * rename iqhandler to request
  * begin some refactoring
  * begin hooking up handlers with operations
  * xmpp/pubsub_server: indicate operation types
  * notes
  * pubsub_server: PubsubOwnerHandlers
  * pubsub_server: flesh out more pubsub handlers
  * add affiliations checking
  * begin interweaving with local operations
  * a tad of interconnecting
  * pubsub_server: DiscoInfoHandler.reply()
  * xmpp client 'n stuff
  * README: draw new design
  * begin router
  * xmpp: move NS_* to ns.coffee
  * xmpp: primitive disco info works
  * begin iqhandler
  * xmpp/connection: port presence tracking
  * rm main.js
  * move src files around
  * rm model_couchdb from config, add preliminary main.coffee
  * a bit new controller
  * rm old test_controller
  * some controller work
  * old controller translated to coffeescript
  * port peripheral stuff over to coffeescript
  * README: change ejabberd port to the config default one
  * model_couchdb: s/doc.subscribers/doc.subscriptions/
  * xmpp_pubsub.js: fix typo
  * model_postgres: check nodeExists before any data modification
  * preliminary RSM (XEP-0059) implementation for retrieve-items/retrieve
  * model_couchdb: stub getUpdatesByTime()
  * MAM should result in direct message, not broadcast notification to all resources
  * MAM w/ working model_postgres backend
  * begin implementing MAM
  * controller: register/register should create /user/<jid>/subscriptions node
  * normalize fixes + tests
  * normalize
  * only one child element per item
  * model_postgres: fix setConfig()
  * model_postgres: listNodesByUser()
  * model_couchdb: listNodesByUser(), simplify listNodes()
  * controller, xmpp_pubsub: browse-nodes/by-user
  * model_postgres setConfig(): fixes
  * configuration notification
  * model_postgres setConfig(): do not set fields unspecified/without defaultConfig
  * model_postgres nodeExists(): indentation
  * controller: subscribe should not require preexisting affiliation
  * xmpp_pubsub: fix manage-subscriptions/retrieve result usage
  * controller: allow retrieving subscriptions & affiliations for members
  * xmpp_pubsub: syntax fix
  * model_postgres: fix queue pushing
  * xmpp_pubsub: fix info discovery reply FORM_TYPE
  * model_postgres: config fixes
  * more on extended config
  * model_couchdb, model_postgres: more flexible config schema
  * config: description, type, creationDate; setConfig() on create-node/register
  * xmpp_pubsub: optimize presence tracking
  * controller: requiredAffiliation='member' for config-node/retrieve
  * README: OpenFire
  * controller: defaultConfig() + use in feature 'config-node'
  * xmpp_pubsub: replace isOnline() with getOnlineResources()
  * model_postgres: fix transaction dequeueing
  * model_postgres: move cb() past process.nextTick/dbIsAvailable for safety
  * model_postgres: work around empty responses
  * test_controller: retract
  * xmpp_pubsub: disco <identity/> according to discovered @node
  * test_controller: browse-nodes
  * model_couchdb: fix preload() etag extraction + error reporting
  * xmpp_pubsub: FeatureNotImplemented message
  * controller: simulate a stack for debug info
  * test_controller: retract skeleton
  * controller unsubscribe: do not fetch affiliation from database but check by node path
  * implement & test unsubscribe
  * test_controller: skeletons
  * test_controller: publishing tests
  * test_controller: more publish testing + controller fix
  * test_controller: begin test publishing
  * model_postgres: fix forgotten variable
  * model_postgres: reconnect to database upon error
  * model_postgres: oops, syntax error
  * config.js.example: postgres is actually the one with a poolSize
  * model_postgres: oops, syntax errors
  * begin test_controller
  * fixes
  * subscriptionModified <message/>
  * xmpp_pubsub: "message" & approve() fixes
  * controller: replace ownerNotification with afterTransaction
  * access_model authorize
  * package.json & README
  * errors: pull inherits() from util/utils/sys for moving node api
  * browse open nodes with service discovery items
  * controller: refactor affiliations checking
  * xmpp_pubsub: fix subscriptions format
  * controller: treat missing accessModel as 'open'
  * model_couchdb: preload() etag fix
  * .gitignore with config.js
  * xmpp_pubsub: node config on disco info
  * model_couchdb: encodeURIComponent() only for db.head() & .get()
  * main.js: #!
  * rename config.js to config.js.example
  * restore default config.js
  * main.js: on uncaughtException
  * postgres doc & config
  * model_postgres
  * model_couchdb: fix item deserialization
  * model_couchdb: rm implemented TODOs
  * README: CouchDB configuration
  * README: TODO++
  * LICENSE
  * README: markdown fix
  * README: mention buddycloud :)
  * model_couchdb: fix views initialization
  * README & config
  * jabber:iq:register
  * model_couchdb: fixes
  * errors fixing
  * rm model_persistence
  * model_couchdb: assertNodeName()
  * main: catch uncaughtException
  * controller: fix
  * bugs, readability
  * model_couchdb: fixing
  * controller: implement affiliations checking
  * xmpp_pubsub: getAffiliations() result is now Array
  * model_couchdb: setSubscription() & setAffiliation() 'none'
  * model_couchdb: consolidate subscriptions & affiliations model
  * xmpp_pubsub: send notifications with type='headline'
  * xmpp_pubsub: subscribeIfNeeded() on <create/> & <subscribe/>
  * model_couchdb: load() shortcut when already cached
  * model_couchdb: createNode() fix
  * model_couchdb: preload()
  * model_couchdb: commit read documents too for integrity
  * model_couchdb: abstract views
  * CouchDB Optimistic Concurrency Control layer
  * controller: improve error propagation
  * defined error conditions
  * untested configuration getting/setting
  * service discovery
  * modify-affiliations
  * model_couchdb: getAffiliation()
  * begin permission checking infrastructure
  * presence probes
  * xmpp_pubsub: presence tracking
  * refactoring controller complete
  * continue refactoring controller into features/operations
  * begin refactoring controller into features/operations
  * subscribers
  * getting subscriptions & affiliations
  * createNode improvements
  * controller createNode: check node
  * model_couchdb: affiliations view
  * items getting
  * much more progress
  * implement retraction, s/notifySubscriber/notify/, s/writeItems/writeItem/
  * publish notification works
  * more frontend hooking
  * begin notification hooks
  * fixes
  * begin model_couchdb transactions
  * split model
  * some progress
  * some progress
  * createNode creates owner affiliation
  * model: indexes
  [ Thomas Jost ]
  * Add @denisw to contributors
  * Upgrade required node version to 0.8
  * We actually need remote subscriptions nodes
  * Merge branch 'feature/anon-fixes' into develop
  * Merge branch 'feature/really-validate-post-times' into develop
  * Reject remote posts with invalid dates
  * Add tests for remote posts with invalid dates
  * Force anon subscriptions to be temporary
  * Set default affiliation to 'none' for anon users
  * Merge branch 'feature/anon-fixes' into develop
  * Cleanup: remove some dead code
  * Purge remote nodes with no local subscription left
  * Merge branch 'feature/recent-items' into develop
  * Merge branch 'feature/validate-remote-items' into develop
  * Sort recent items by update time
  * Merge branch 'feature/validate-remote-items' into feature/recent-items
  * Fix tests that push remote items
  * Validate remote items
  * Add (failing) tests for invalid remote items
  * Implement recent items query
  * Add (failing) test for recent items query
  * PubSub replies can include several elements
  * Merge branch 'feature/pusher' into develop
  * Workaround callback woes
  * Fix MAM for pusher component
  * Pusher: test MAM
  * test_server: move makePublishIq into TestServer
  * Pusher: test node configuration
  * Pusher: test unsubscriptions
  * Merge branch 'feature/affiliations-fixes' into develop
  * Merge branch 'feature/pubsub-disco-features' into develop
  * Cleanup
  * Expose all implemented PubSub features
  * Pusher: test affiliations
  * Merge branch 'feature/affiliations-fixes' into feature/pusher
  * Fix affiliation in /subscriptions notifications
  * Accept PubSub-compliant affiliations notifications
  * Pusher: test subscriptions
  * Merge branch 'feature/fix-98' into develop
  * Fix SQL for updating replies
  * Add failing test for issue #98
  * Fix offline user cleanup
  * DB: drop anonymous column
  * Yet another federation test
  * Check if the example config file is valid JS
  * Add tests for pusher code
  * Pusher can MAM everything
  * Pusher is a listener for all notifications
  * Add config for pusher component
  * Merge branch 'feature/mam-fixes' into develop
  * Increase the default number of items in a MAM response
  * Make MAM return an error if there are too many results
  * Use RSM in MAM
  * Test MAM RSM
  * MAM: filter bad dates out
  * Test if MAM validates dates correctly
  * Ensure the giant MAM test doesn't pollute the test environment
  * Make affiliations notifications PubSub-compliant
  * Affiliations have update timestamps too
  * Avoid temporary subscriptions in MAM results
  * Advertise support for MAM in disco#info
  * Add a giant MAM test
  * Update Travis URL in README.md
  * Merge branch 'feature/tests' into develop
  * Correctly tests that updated items don't change <in-reply-to/>
  * Move tests on updated items to a different function
  * Add tests for updates that change <in-reply-to/>
  * Use Travis to automate testing
  * Merge branch 'master' into develop
  * Add compatibility with PostgreSQL 9.1
  * Require at least one item to retract
  * Add Emacs folding marks
  * Add retrieve and retract tests
  * Fix retraction stanza sent to remote services
  * Tombstones: include Atom namespace in <updated/> element
  * Fix error when not allowed to retract an item
  * Tombstones can't be updated
  * When publishing an update, check if the actor is the original author
  * Check if original post exists before publishing a reply
  * Reject posts from non-users
  * Don't include type in <actor/>
  * Complete post/update/retract tests
  * TestServer: fix Atom in-reply-to element
  * Fail when some unwanted event happens
  * Add description for calls to "should.exist"
  * Retraction tests
  * Workaround CoffeeScript weird scoping rules
  * Add another batch of tests
  * Update test data
  * Change the way the test server emits IQ stanzas
  * Tests for posting to remote channels
  * Test server: emit event for IQs with unknown ID
  * Test server: disco info for "remote" servers
  * More post tests
  * Add helper to run tests that trigger several different stanzas
  * Test server: handle <message/> stanzas
  * Add post tests
  * Post tests: helper to check if post was successful
  * Throw an exception when getting an unexpected error IQ
  * Start adding post tests
  * Add helpers for pubsub get IQs and Atom handling
  * Helpers to add initial test data in the database
  * Add XMPP namespaces to test_server.coffee
  * Reply to presence probes
  * Don't parse Elements again
  * Use same user and server names as in sfc
  * Safe path handling in prepare-db.sh
  * Add codo-like doc to the TestServer class
  * Add helpers to build disco and pubsub IQs
  * Expose support for PubSub node creation
  * Skip a test
  * More channel creation tests
  * New tests and helpers for forms
  * Add a helper to parse disco#info replies
  * Move common disco replies to test_server.coffee
  * Start testing for channel creation
  * Test server: handle disco#items queries
  * Make tests runnable using "npm test"
  * Basic disco tests
  * Start a test suite
  * Use an existing component connection if provided in config
  * Make it possible to require() the server
  * Update config.js.example
  * Fix autosubscribeNewUsers
  * Increase the max number of items in each RSM page
  * Better shrinking of oversized stanzas
  * Include `-dirty' in version number from git
  * Remove glob from dependencies
  * Fix indentation in main.coffee
  * Prevent existing persistent subscription from being made temporary
  * Merge branch 'feature/version-number-from-git' into develop
  * Expose support for XEP-0092 (Software Version) in disco
  * Use `git describe' to get version numbers in dev branches
  * Merge branch 'master' into next
  * Restore compatibility with Node 0.6
  * Fix handling of offline users
  * Avoid race condition in disco cache
  * Shrink oversized stanzas more aggressively
  * Avoid nulls
  * Include new files in release tarball
  * Avoid race condition in disco cache
  * Merge remote-tracking branch 'upstream/tempsub' into next
  * Merge branch 'db-versioning' into next
  * buddycloud-server 0.3.5
  * Check if remote supports temporary subscription before sending a tempsub request
  * Client can check for server features before sending an IQ
  * Make server features discoverable
  * Log errors when processing incoming messages
  * Cleanup
  * Remove empty text nodes from items
  * Fix ActivityStreams verb for replies
  * Include operation name in debug message
  * Don't notify unsubscribe when it was a temporary subscription
  * Offline user cleanup: do real unsubscribe operations
  * I'm dumb
  * Don't delete temporary subscriptions during sync
  * Don't send any notification for temporary subscriptions
  * Client and server must speak the same language
  * Only send notifications about temporary subscriptions to remote listeners
  * Cleanup offline users
  * Claim we support subscription options
  * Temporary subscriptions
  * Fix updating items
  * Add help channels to default autosubscriptions
  * Merge branch 'log-fix'
  * Inspect objets in log messages
  * Fix broken log messages
  * Don't write subscription stanzas in items table
  * Merge remote-tracking branch 'lloyd/config'
  * Populate in_reply_to column when inserting new items
  * DB cleanup at startup
  * Add README for DB schema versioning
  * Upgrade DB schema
  * Check DB schema version on startup
  * Don't change <published/> when updating an existing post
  * Fix subscription to remote private channels
  * Don't fail when the default config file does not exist
  * Add Lloyd in contributors
  * Better logging for replies sent by 'proxy' components
  * Merge branch 'mam-result'
  * Include <result/> in MAM replies
  * Merge remote-tracking branch 'schnouki/atom-tombstones'
  * Fix typo
  * Merge pull request #61 from lloydwatkin/no-mod_disco
  * Also send tombstones in retract notifications
  * Use Atom tombstones for deleted items
  * xmpp: XEP-0313 compliance
  * Handle PubSub retract "notify" attribute
  * operations: fix PushInbox notification
  * Fix undefined variable when paging backwards in RSM
  [ Tuomas Koski ]
  * Merge pull request #59 from lloydwatkin/initialise-sync
  * Merge pull request #58 from lloydwatkin/master
  [ Steven Lloyd Watkin ]
  * Ensure we do not cause BC breaks
  * Make both defaults positive rather than one positive & the other negative Broke the config options down further
  * Fix build console output
  * "package" now a reserved word in node, caused failing in builds (v0.6.15+)
  [ Denis Washington ]
  * Use local CoffeeScript "cake" for "npm install"
  [ Jonas Smedegaard ]
  * Setup access rights and needed dirs when starting daemon
  * Speedup system shutdown by avoiding explicit sysV stop
  * xmpp_pubsub: check for commandEl prior usage
  [ Reginald dude ]
  * updates sent via email from vorner.cz
  * updates sent via email from vorner.cz
  [ Reginald Dude ]
  * Most confusing config file ever
  [ ▟ ▖▟ ▖ ]
  * Merge pull request #70 from lloydwatkin/fix-is-function
  * Merge pull request #63 from lloydwatkin/no-mod_disco
  * Merge pull request #62 from lloydwatkin/no-mod_disco
  * Merge pull request #57 from Schnouki/xep-0313
  * Merge pull request #54 from Schnouki/fix-notif
  * Merge pull request #52 from lloydwatkin/master
  * Merge pull request #51 from lloydwatkin/master
  [ James Tait ]
  * Ensure both the PID dir and log dir are created on startup if they do not already exist.
  [ imaginator ]
  * aligning with INSTALL instructions
  * moved instructions to wiki
  * Edited README.md via GitHub
  [ dodo ]
  * fix accessModel of geo nodes
  * always test in production
  * buddycloud-server 0.3.4
  * Merge branch 'packaging'
  * put the /etc/init.d script into tarball
  * not needed anymore
  * default options for new channels
  * bump tarballify version
  * add bin/buddycloud-server to the tarball
  * no build step in bin/buddycloud-server anymore
  * print additional info messages in gray
  * fix 'file is not defined'
  * fix 'modName is not defined'
  * colorful output for package.js
  * bump tarballify version
  * rm trailing spaces
  * no build_binary.sh needed
  * separate devDependencies
  * export name
  * use packaging script
  * buddycloud-server 0.3.3
  * pass prefix to npm to force npm to use that particular prefix
  * $PREFIX/bin/buddycloud-server can be nonexistant .. so ignore all errors when removing
  * bump node version in build script
  * merge issue #37
  * specify interal config file as defaults, not as main config
  * backports to node 0.4
  * concat cwd path to config path only when config path is relative
  * respect the cwd
  * move to the right dir before builing
  * wscript is not needed anymore
  * merged #31. symlink detection for bin/buddycloud-server thanks to @highfellow
  * fixed gitignore
  * forgot Cakefile
  * pin node version for over 0.5 to get the require json working
  * get version directly
  * new buildsystem
  * check if config.syslog has keys
  * dont load default config over opts and args
  * main: fix config loading
  * wscript fixes
  * load config via jsconfig
  * update wscript
  * upgrade build environment
  * update requirements in readme
  * cleanup files
  [ Simon Tennant ]
  * Update config.js.example
  * change to read config file from /opt/buddycloud
  * Update master
  * don't be so --quiet (will help a lot with debugging)
  * Update _etc_init.d_buddycloud-server
  * the orwell defeault was causing jdesenberg problems.
  * Fixed the permissions to run as.
  * Update _etc_init.d_buddycloud-server
  * init script
  * make it really clear what to change (and what "jid" refers to)
  * Made the ownership of tables really clear. Should help avoid the problem that DD had the other day.
  [ Lloyd Watkin ]
  * Fix for checking of child element
  * Catch error event
  * Fix for server reset
  * Updated variable names to better describe what config does.
  * Merge branch 'master' of git://github.com/buddycloud/buddycloud-server into no-mod_disco
  * Allow buddycloud server to advertise additional 'proxy' components
  * Wait to sync
  * Rename of parameter
  * Allow user to specify a port or not, changed argument name as it may not actually be remote debugging.
  * Tidy up
  * Allow node.js debugging
  [ Simon ]
  * /etc/init.d/buddycloud-server

 -- Abmar Barros (buddycloud Nightly Builds) <abmar@buddycloud.com>  Sat, 26 Jan 2013 14:48:28 -0300


buddycloud-server (0.1) unstable; urgency=medium

  [ Astro ]
  * operations: all nodes in defaultConfiguration accessModel=authorize
  * operations: posts & subscriptions accessModel=authorize in defaultConfiguration
  * buddycloud-server 0.3.2
  * Cakefile: version.js + 

  * operations: fix run notifications control flow
  * build_binary.sh: get bin/buddycloud-server out of the way before npm i
  * buddycloud-server 0.3.1
  * package.json: honor all contributors
  * Merge remote-tracking branch 'schnouki/patch-1'
  * .npmignore: exclude debian/* from npm pkgs
  * buddycloud-server 0.3.0
  * package.json: bump dep versions
  * operations: prevent unsubscribing/demoting the node owner
  * operations: fix PushInbox callback
  * operations: run notifies first, then syncs, then calls back
  * pubsub_server: lower logging
  * operations: fix PushInbox newNodes
  * operations: move PushInbox syncNode post transaction
  * operations: PushInbox should work even if syncNode had hickups
  * operations: syncNode when PushInbox created it
  * operations: fix PushInbox notification & newModerators
  * model_postgres: fix & simplify purgeNode()
  * sync: fixes
  * sync: purge node if no local subscribers
  * purge node when local unsubscription is pushed from remote
  * operations: fix generateSubscriptionsNotifications followee
  * operations: fix PushInbox newModerators nodes
  * xmpp connection: doc, serialize stanzas only once
  * operations: NewModeratorNotify needs listener, not user
  * operations: fix NewModeratorNotify listener
  * operations: log Operation name
  * model_postgres: must quote "user" column for Postgres
  * operations: NewModeratorNotify must cb()
  * operations: Notify notifies w/ node
  * operations: fix Notify otherListeners
  * pubsub_client: rm debug
  * operations: NewModeratorNotify notifies w/ node & listener
  * model_postgres: optional Transaction callbacks
  * operations: fix Notify filterSubscription & filterAffiliation invokation
  * operations: fix this binding
  * operations: no pending subscriptions in subscriptions node
  * operations: NewModeratorNotify
  * operations: doc, filter subscriptions and affiliations for non-moderators
  * operations: reorganize
  * clean up logging
  * operations: posts node defaultAffiliation='publisher'
  * sync: fix AffiliationsSynchronization typo
  * buddycloud-server 0.2.3
  * package.json: fix install script
  * build_binary.sh: bump node.js version
  * buddycloud-server 0.2.2
  * package.json: add preinstall cake build
  * operations: fix notifications
  * build_binary.sh: bump node.js version
  * buddycloud-server 0.2.1
  * operations: fix Notify subscriptios node items
  * operations: fix Notify callback result
  * operations: BrowseNodeItems for subscriptions node calls getSubscriptions not getSubscription
  * operations: syntax fixes
  * operations: Notify subscriptions fixes
  * operations: subscriptions node notifications
  * operations: BrowseNodeItems for subscriptions node
  * sync: require errors
  * sync: avoid error output when omitting local node
  * router, sync: improve logging
  * backend_pubsub: PubsubBackend.notify listener robustness
  * operations: fix Subscribe defaultAffiliation
  * operations: fix ManageNodeAffiliations control flow
  * pubsub_server: PubsubOwnerSetAffiliationsRequest syntax fix
  * operations: fix requiredAffiliation()
  * operations: requiredAffiliation can be function to allow moderators approving topic channel subscribers
  * operations: ManageNodeSubscriptions refactor for efficiency
  * operations: ManageNodeSubscriptions should set new affiliations to defaultAffiliation
  * operations: fix Notify jid/user
  * operations: Notify should notify all users pertained by a subscription
  * operations: 'unsubscribe-node' notifies unsubscribed user
  * operations, pubsub_client: there's no "unsubscribed" subscription, only "none"
  * pubsub_server: PubsubOwnerSetSubscriptionsRequest syntax fix
  * operations: Unsubscribe needs PrivilegedOperation methods
  * operations: Unsubscribed is not a PrivilegedOperation but a ModelOperation
  * operations: fix callback scope
  * pubsub_server: robustify PubsubItemsRequest
  * operations: syntax
  * pubsub_server, operations: support for RetrieveItems by itemIds
  * build_binary.sh: bump node.js version to 0.6.10
  * buddycloud-server 0.2.0
  * operations: CreateNode should not allow creation with empty nodeUser username
  * operations: fix CreateNode defaults & creationDate
  * operations: fix CreateNode isTopic switcheroo
  * router: fix autosubscribeNewUsers operation name
  * router: autosubscribeNewUsers
  * config.js.example: default checkCreateNode hook checks for a specific topic domain
  * operations: fix CreateNode node typo
  * operations: fix CreateNode config
  * pubsub_server, operations: CreateNode with optional config
  * operations: fix CreateNode setSubscription()
  * operations: CreateNode catches missing checkCreateNode hook
  * operations: CreateNode default config
  * checkCreateNode config hook
  * model_postgres: fix getOwnersByNodePrefix SQL
  * operations: fix CreateNode setAffiliation()
  * operations: fix CreateNode getOwnersByNodePrefix()
  * operations: fix ../util require, CreateNode safety check
  * implement createNode with getOwnersByNodePrefix check
  * operations: begin creating topic channels
  * model_postgres: syntax fix
  * package.json: maintainer update
  * build_binary.sh: update to node 0.6.9
  * buddycloud-server 0.1.11
  * rsm_walk: fix logging
  * operations: checkAccessModel() before checkRequiredAffiliation()!
  * operations: Unsubscribe condition syntax fix
  * package.json: muffin dependency glob seems be incompatible in v3.*
  * operations: checkRequiredAffiliation should ignore no @requiredAffiliation
  * operations: fix isAffiliationAtLeast w/ invalid affiliation
  * jsconfig 0.2.0 is out! w00t!!!
  * Cakefile: lib/version.js from package.json
  * logger: update to ain2 1.0.0
  * main: fix config loading
  * buddycloud-server 0.1.10
  * router: fix syncServer()
  * buddycloud-server 0.1.9
  * bin/buddycloud-server: fix param quoting
  * bin/buddycloud-server: fix $cwd
  * buddycloud-server 0.1.8
  * .npmignore to package up built lib/* instead of src/*
  * build_binary.sh: install devDependencies beforehand
  * build_binary.sh: bump node.js version to 0.6.7
  * util: move getNodeUser(), getUserDomain()
  * main: "server successfully started"
  * sync: fix logging
  * model_postgres: fix writeItem() SQL parameter binding
  * sync: fix PaginatedSynchronization error callback
  * sync: rm TODO note
  * model_postgres: writeItem updated_query
  * operations: logging fixes
  * writeItem: move updated extraction from operations to model_postgres
  * model_postgres: writeItem should also INSERT existing updated value
  * model_postgres: fix syntax
  * model_postgres: SQL fixes
  * operations: PushInbox copies item published date
  * postgres schema: CREATE VIEW open_nodes + usage in model_postgres
  * model_postgres: fix query result handling
  * fix getTopFollowedNodes & getTopPublishedNodes parameters
  * model_postgres: fix SQL INTERVAL syntax
  * operations: BrowseNodes.fetchNodes() needs transaction
  * operations: BrowseNodes.transaction should use @fetchNodes()
  * operations: fetchNodes() typo
  * pubsub_server: browse /top-followed-nodes & /top-published-nodes does not request a particular node
  * getTopFollowedNodes & getTopPublishedNodes w/ XMPP disco interface
  * build_binary.sh: bump to node 0.6.6
  * buddycloud-server 0.1.7
  * package.json: rm cradle dependency
  * logger: syslog only with hostname
  * replace common-logger by underscore.logger
  * update ain2 dependency for node v0.6 compatibility
  * model_postgres walkListenerArchive: replace DISTINCT with GROUP BY
  * model_postgres: fix config order/limig
  * operations: ReplayArchive sorts results before capping
  * ReplayArchive/walkListenerArchive: properly cap result set
  * operations: ReplayArchive default max=50
  * build_binary.sh: use $PREFIX from environment if present
  * package.json: req node-stringprep >=0.1.1
  * router: fix
  * buddycloud-server 0.1.6
  * update to new node-waf paths
  * build_binary.sh: switch to node 0.6.4
  * package.json: depend on 0.3.1
  * router: RSM usage fix
  * logger: open logFile for appending, fixes issue #25
  * package.json: depend on node-xmpp >= 0.3.0
  * operations ReplayArchive: fix rsm max
  * operations: ReplayArchive RSM support
  * backend_pubsub: notificationPush updates include sender & actor
  * router: detectUserType fixes
  * router: detectUserType fixes
  * logger: fix argument iteration
  * main, backend_pubsub: logging improvements
  * backend_pubsub: include user in notfound error
  * connection: loopback stanzas to ourselves
  * router: add missing util.inspect include
  * router.run: trace req
  * router: add missing rsm include
  * logger: typo
  * logger: fix level
  * logging clean-up
  * router, pubsub_{server,client}: @type in <actor/>
  * buddycloud-server 0.1.5
  * router: sync fixes
  * buddycloud-server 0.1.4
  * ManageNodeAffiliations: non-owner may not elect a new owner
  * sync: log upon completion
  * sync: transaction fix
  * move some sync logic into router, lock per node
  * operations: BrowseNodeInfo/RetrieveNodeConfiguration w/o access control
  * buddycloud-server 0.1.3
  * operations: deny Unsubscribe from own nodes
  * logger: ain2 syslog transport
  * logger: message always as string
  * main: fix --stdout kludge
  * logger: avoid log level < 0
  * config.js.example: syslog on by default
  * config.js.example: logging section
  * syslog support with ain2
  * support --stdout logging
  * replace cnlogger by common-logger
  * buddycloud-server 0.1.2
  * build_binary: npm install globally (into /opt/buddycloud-server/)
  * build_binary: dedup node & npm versions
  * build_binary: default to /opt/buddycloud-server, bin/ script
  * main: process.title fix
  * version: fix package.json path
  * version from package.json in process.title and for jabber:iq:version
  * xmpp/connection: do not subscribe in probePresence()
  * buddycloud-server 0.1.1
  * build_binary: bump node & npm versions
  * backend_pubsub: reply() must also copy 'replay' field on MaxStanzaSizeExceeded
  * connection: more stanza output when MaxStanzaSizeExceeded
  * don't send ReplayArchive notifications to all online resources
  * pubsub_client/connection: wrap error replies into StanzaError earlier
  * logging fixes
  * port to cnlogger
  * port to broken winston logging
  * xmpp connection: always tell node-xmpp to reconnect
  * async.filter iterator does not take error parameter
  * model_postgres: fix nodeExists warning
  * backend_pubsub: fix notification matching
  * sync: fix router.authorizeFor() usage
  * sync: writeItem does not need author anymore
  * operations: typo
  * model_postgres: fix getListenerAffiliations() query
  * sync: careful
  * xmpp/forms: oops, s/creationTime/creationDate/
  * xmpp/connection: fix name
  * router: check for anonymous user to be online
  * anonymous user offline tracking & clean-up
  * model_postgres: fix walkListenerArchive() node in results
  * router: fix method binding
  * model_postgres: walkListenerArchive() should include node in results
  * operations: RemoveUser & model_postgres.getUserRemoteSubscriptions() & clearUserSubscriptions()
  * BuddycloudDiscovery::detectAnonymousUser
  * backend_pubsub: gracefully handle MaxStanzaSizeExceeded for notifications
  * xmpp pubsub_server & connection: fix graceful MaxStanzaSizeExceeded handling
  * errors: MaxStanzaSizeExceeded extends Error
  * operations: s/geoloc/geo/
  * operations: /subscription items shall contain jid=owner
  * metadata buddycloud#channel_type
  * proper metadata field names
  * support for creationDate
  * operations: clarify logging
  * router: fix remote backend selection
  * operations: Unsubscribe refactor & fix
  * operations: fix Register
  * buddycloud-server 0.1.0
  * operation: print opName on commit, rm debug
  * bin/buddycloud-server: don't cd so config can be loaded relatively
  * Merge remote-tracking branch 'origin/cli'
  * operations: RetractItems should allow anyone to remove their own posts
  * operations: preserve affiliation if previously affiliated
  * operations: unify into isAffiliationAtLeast()
  * operations: rm leftover TODO note
  * operations: refactor Register; should check if authoritative for user's domain
  * router.run: return 404 for nodes not locally subscribed but discovered ourselves
  * rm explicit author handling in postgres schema, model, operations
  * main: check sender authorization for authorizationPrompt
  * operations: RetrieveItems shall not virtualize items for cache case of remote nodes
  * Revert "Made the ownership of tables really clear. Should help avoid the problem that DD had the other day."
  * s/channel-server/buddycloud-server/g
  * build_binary.sh: fix invokation hint
  * README: rm some outdated stuff
  * main: fix defaultConfig stuff
  * build_binary.sh
  * operations: RetrieveItems.retrieveSubscriptionsItems() result set sorting, affiliations
  * virtual handling of /user/.../subscriptions node items
  * MAM replays subscription authorization requests
  * more authorization stuff
  * fixes
  * small fixes
  * package.json: fix bin path
  * further authorizationPrompt work
  * backend_pubsub: missedSomething was missing
  * package.json: fix coffeescript path (./node_modules/...)
  * sending authorize notification forms
  * package.json: fix .coffee compilation stage
  * operations: PrivilegedOperation.fetchActorAffilliation fetches all listener affiliations for inbox sync
  * pubsub_notifications: fix MAM stanzas
  * operations: subscribe defaultAffiliation, fixes
  * model_postgres: many fixes
  * operations: publishModel 'subscribers'
  * operations: access control fixes
  * begin access control, affiliations checking
  * model_postgres: fixes
  * errors: fix error classes
  * xmpp/connection: fix
  * xmpp/connection: fix @missedServerTimeouts usage
  * model_postgres: safety checks
  * readability, notes
  * rsm_walk: fix serious errors
  * globally refactor operation from function to value
  * sync: fixes
  * add forgotten rsm_walk file
  * move syncQueue from main.coffee to fine-grained sync.syncNode
  * xmpp/connection: readability
  * xmpp/connection: track <you-missed-something/> timers with @missedServerTimeouts
  * syncServer support, wired up to <you-missed-something/> 'syncNeeded'
  * model_postgres: for an actor, getSubscriptions() shall return not only users but also listeners
  * MAM time specification
  * primitive MAM implementation
  * send <you-missed-something/>
  * operations: PushInbox TODO note
  * sync: rm request.rsm.max clamp
  * synchronization with state resetting and subscriptions/affiliations support
  * pubsub_*: fix user/jid conventions
  * ConfigSynchronization should use browse-node-info to get node config
  * synchronizing!
  * synchronization kinda works, but hits RSM loops
  * further synchronization progress
  * begin synchronization
  * main: require async
  * measure stanza size, gracefully retry with smaller result set
  * synchronization groundwork
  * don't let backend_pubsub call router.runLocally(), return errors.SeeLocal() instead
  * errors: clean up
  * normalize: add <link rel="self" href="xmpp:...?pubsub;action=retrieve;..."/>
  * operations: Publish shall allow new items with specified @id
  * nodes browsing, with RSM
  * backend_pubsub: run() should bail out early on invalid node form
  * PostgreSQL tuning
  * complete RSM implementation
  * begin RSM for all operations
  * generify RSM stuff
  * pubsub_client: RSM
  * fixes from CCCamp11
  * RSM for local items retrieving
  * begin new RSM implementation
  * pubsub_server: publish-node-items shall reply with item ids
  * model_postgres: fix getNodeListeners() SQL
  * model_postgres: nodeExists() shall check for NOT NULL
  * model_postgres: getNodeListener() replace filter by SQL
  * model_postgres: getNodeListener() filter for null
  * model_postgres: fix setSubscription() INSERT w/o listener
  * error printout
  * forms: fix
  * operations: PushInbox author fix
  * debug
  * xml child robustness
  * model_postgres: fix nodeExists()
  * fix subscription listener for local users
  * logging cleanup
  * initiate presence tracking of users
  * xmpp/connection: use send() instead of specifying from jid
  * some logging cleanup
  * operations: push-inbox does not set subscription listener
  * fixes & TODO notes
  * operations: Notify.transaction() must call cb()
  * retrieve-node-configuration
  * forms: configToResultForm -> configToForm
  * pubsub_client: RetrieveNodeConfiguration & ManageNodeConfiguration
  * operations: catch reply cb exceptions
  * create-node operation
  * package.json: scripts
  * fixes
  * fix outgoing notifications
  * generify pubsub_notifications
  * many fixes for subscription pushing
  * router: if request writes, always go remote
  * push incoming notifications to local model
  * more subclassing of EventEmitter, incoming notifications handling
  * pubsub_server: unify PubsubRequest & PubsubOwnerRequest
  * merge request.coffee into pubsub_server.coffee
  * begin remote subscription pushing to local inbox
  * backend_pubsub: PubsubBackend.notify(): readability
  * tune to use single cb() instead of req.{reply,replyError}()
  * revive normalization
  * model_postgres: setSubscription(): coearce isSet to boolean
  * model_postgres: catch lost transactions
  * pubsub_client: error reporting, fix
  * subscribe reply status
  * model_postgres: setAffiliation() should check nodeExists()
  * fix disco.authorizeFor() usage
  * pubsub_client: fix <actor/> placement
  * refactor notifications a bit
  * pubsub_client: <actor/> placement fix
  * pubsub_client: fix <actor/> placement
  * pubsub_notifications: subscriptions/affiliations/config
  * fix registration/model callback parameters
  * operations: ManageNodeAffiliations validates accessModel & publishModel
  * setting configuration
  * fixes, fixes, config
  * only RegisterSetRequest should induce presence subscription
  * FIXME note
  * model_postgres: do not use rowCount
  * operations: Register created default configuration
  * pubsub_server: pubsub/inbox identity
  * fixes, StanzaError
  * implement pubsub_client operations
  * pubsub_notifications: byOperation()
  * fixes
  * fixes
  * fixes & debugging
  * fixes
  * debugging & fixes
  * fixes
  * begin discovering locally
  * fixes
  * Router.run: fix
  * fixes
  * operations: rename channel node to "posts"
  * begin notifications
  * a bit o' twiddling w/ subscription listeners
  * refactor router for remote requests
  * operations: subscribe/unsubscribe toggle affiliation none/member
  * router: rename frontend to backend
  * rename backend_postgres to model_postgres, revive router
  * main: move iqHandler to pubsub_server
  * manage, not only retrieve, subscriptions & affiliations
  * use subscribe sender as notification listener
  * backend_pubsub: replace ternary operator
  * need to store listener in subscriptions...
  * backend_pubsub: implement RequestCache
  * new untested buddycloud discovery with backend_pubsub.coffee
  * retrieve <actor/> generalized, begin using authorizeFor
  * ns: add BUDDYCLOUD_V1 xmlns
  * postgres.sql schema: updated column for more tables, author column for items
  * retrieving node affiliations
  * retrieving node subscriptions, fixes
  * backend_postgres: syntax fixes
  * operation: Register should set affiliation & subscription
  * retrieving subscriptions & affiliations
  * retracting items
  * publishing & retrieving items works
  * begin item retrieving
  * subscribe & unsubscribe
  * fix backend_postgres (user is a Pg keyword, must be quoted as column name)
  * publishing works
  * lots of fixes
  * fix disco requests
  * fix, fix, fix
  * begin implementing register & publish implementation
  * mv src/operations.coffee src/local/operations.coffee
  * revive backend
  * primitive operations
  * mv controller.coffee operations.coffee
  * dead code TODO
  * fixes
  * rm old dead code
  * rename iqhandler to request
  * begin some refactoring
  * begin hooking up handlers with operations
  * xmpp/pubsub_server: indicate operation types
  * notes
  * pubsub_server: PubsubOwnerHandlers
  * pubsub_server: flesh out more pubsub handlers
  * add affiliations checking
  * begin interweaving with local operations
  * a tad of interconnecting
  * pubsub_server: DiscoInfoHandler.reply()
  * xmpp client 'n stuff
  * README: draw new design
  * begin router
  * xmpp: move NS_* to ns.coffee
  * xmpp: primitive disco info works
  * begin iqhandler
  * xmpp/connection: port presence tracking
  * rm main.js
  * move src files around
  * rm model_couchdb from config, add preliminary main.coffee
  * a bit new controller
  * rm old test_controller
  * some controller work
  * old controller translated to coffeescript
  * port peripheral stuff over to coffeescript
  * README: change ejabberd port to the config default one
  * model_couchdb: s/doc.subscribers/doc.subscriptions/
  * xmpp_pubsub.js: fix typo
  * model_postgres: check nodeExists before any data modification
  * preliminary RSM (XEP-0059) implementation for retrieve-items/retrieve
  * model_couchdb: stub getUpdatesByTime()
  * MAM should result in direct message, not broadcast notification to all resources
  * MAM w/ working model_postgres backend
  * begin implementing MAM
  * controller: register/register should create /user/<jid>/subscriptions node
  * normalize fixes + tests
  * normalize
  * only one child element per item
  * model_postgres: fix setConfig()
  * model_postgres: listNodesByUser()
  * model_couchdb: listNodesByUser(), simplify listNodes()
  * controller, xmpp_pubsub: browse-nodes/by-user
  * model_postgres setConfig(): fixes
  * configuration notification
  * model_postgres setConfig(): do not set fields unspecified/without defaultConfig
  * model_postgres nodeExists(): indentation
  * controller: subscribe should not require preexisting affiliation
  * xmpp_pubsub: fix manage-subscriptions/retrieve result usage
  * controller: allow retrieving subscriptions & affiliations for members
  * xmpp_pubsub: syntax fix
  * model_postgres: fix queue pushing
  * xmpp_pubsub: fix info discovery reply FORM_TYPE
  * model_postgres: config fixes
  * more on extended config
  * model_couchdb, model_postgres: more flexible config schema
  * config: description, type, creationDate; setConfig() on create-node/register
  * xmpp_pubsub: optimize presence tracking
  * controller: requiredAffiliation='member' for config-node/retrieve
  * README: OpenFire
  * controller: defaultConfig() + use in feature 'config-node'
  * xmpp_pubsub: replace isOnline() with getOnlineResources()
  * model_postgres: fix transaction dequeueing
  * model_postgres: move cb() past process.nextTick/dbIsAvailable for safety
  * model_postgres: work around empty responses
  * test_controller: retract
  * xmpp_pubsub: disco <identity/> according to discovered @node
  * test_controller: browse-nodes
  * model_couchdb: fix preload() etag extraction + error reporting
  * xmpp_pubsub: FeatureNotImplemented message
  * controller: simulate a stack for debug info
  * test_controller: retract skeleton
  * controller unsubscribe: do not fetch affiliation from database but check by node path
  * implement & test unsubscribe
  * test_controller: skeletons
  * test_controller: publishing tests
  * test_controller: more publish testing + controller fix
  * test_controller: begin test publishing
  * model_postgres: fix forgotten variable
  * model_postgres: reconnect to database upon error
  * model_postgres: oops, syntax error
  * config.js.example: postgres is actually the one with a poolSize
  * model_postgres: oops, syntax errors
  * begin test_controller
  * fixes
  * subscriptionModified <message/>
  * xmpp_pubsub: "message" & approve() fixes
  * controller: replace ownerNotification with afterTransaction
  * access_model authorize
  * package.json & README
  * errors: pull inherits() from util/utils/sys for moving node api
  * browse open nodes with service discovery items
  * controller: refactor affiliations checking
  * xmpp_pubsub: fix subscriptions format
  * controller: treat missing accessModel as 'open'
  * model_couchdb: preload() etag fix
  * .gitignore with config.js
  * xmpp_pubsub: node config on disco info
  * model_couchdb: encodeURIComponent() only for db.head() & .get()
  * main.js: #!
  * rename config.js to config.js.example
  * restore default config.js
  * main.js: on uncaughtException
  * postgres doc & config
  * model_postgres
  * model_couchdb: fix item deserialization
  * model_couchdb: rm implemented TODOs
  * README: CouchDB configuration
  * README: TODO++
  * LICENSE
  * README: markdown fix
  * README: mention buddycloud :)
  * model_couchdb: fix views initialization
  * README & config
  * jabber:iq:register
  * model_couchdb: fixes
  * errors fixing
  * rm model_persistence
  * model_couchdb: assertNodeName()
  * main: catch uncaughtException
  * controller: fix
  * bugs, readability
  * model_couchdb: fixing
  * controller: implement affiliations checking
  * xmpp_pubsub: getAffiliations() result is now Array
  * model_couchdb: setSubscription() & setAffiliation() 'none'
  * model_couchdb: consolidate subscriptions & affiliations model
  * xmpp_pubsub: send notifications with type='headline'
  * xmpp_pubsub: subscribeIfNeeded() on <create/> & <subscribe/>
  * model_couchdb: load() shortcut when already cached
  * model_couchdb: createNode() fix
  * model_couchdb: preload()
  * model_couchdb: commit read documents too for integrity
  * model_couchdb: abstract views
  * CouchDB Optimistic Concurrency Control layer
  * controller: improve error propagation
  * defined error conditions
  * untested configuration getting/setting
  * service discovery
  * modify-affiliations
  * model_couchdb: getAffiliation()
  * begin permission checking infrastructure
  * presence probes
  * xmpp_pubsub: presence tracking
  * refactoring controller complete
  * continue refactoring controller into features/operations
  * begin refactoring controller into features/operations
  * subscribers
  * getting subscriptions & affiliations
  * createNode improvements
  * controller createNode: check node
  * model_couchdb: affiliations view
  * items getting
  * much more progress
  * implement retraction, s/notifySubscriber/notify/, s/writeItems/writeItem/
  * publish notification works
  * more frontend hooking
  * begin notification hooks
  * fixes
  * begin model_couchdb transactions
  * split model
  * some progress
  * some progress
  * createNode creates owner affiliation
  * model: indexes
  [ Thomas Jost ]
  * Add @denisw to contributors
  * Upgrade required node version to 0.8
  * We actually need remote subscriptions nodes
  * Merge branch 'feature/anon-fixes' into develop
  * Merge branch 'feature/really-validate-post-times' into develop
  * Reject remote posts with invalid dates
  * Add tests for remote posts with invalid dates
  * Force anon subscriptions to be temporary
  * Set default affiliation to 'none' for anon users
  * Merge branch 'feature/anon-fixes' into develop
  * Cleanup: remove some dead code
  * Purge remote nodes with no local subscription left
  * Merge branch 'feature/recent-items' into develop
  * Merge branch 'feature/validate-remote-items' into develop
  * Sort recent items by update time
  * Merge branch 'feature/validate-remote-items' into feature/recent-items
  * Fix tests that push remote items
  * Validate remote items
  * Add (failing) tests for invalid remote items
  * Implement recent items query
  * Add (failing) test for recent items query
  * PubSub replies can include several elements
  * Merge branch 'feature/pusher' into develop
  * Workaround callback woes
  * Fix MAM for pusher component
  * Pusher: test MAM
  * test_server: move makePublishIq into TestServer
  * Pusher: test node configuration
  * Pusher: test unsubscriptions
  * Merge branch 'feature/affiliations-fixes' into develop
  * Merge branch 'feature/pubsub-disco-features' into develop
  * Cleanup
  * Expose all implemented PubSub features
  * Pusher: test affiliations
  * Merge branch 'feature/affiliations-fixes' into feature/pusher
  * Fix affiliation in /subscriptions notifications
  * Accept PubSub-compliant affiliations notifications
  * Pusher: test subscriptions
  * Merge branch 'feature/fix-98' into develop
  * Fix SQL for updating replies
  * Add failing test for issue #98
  * Fix offline user cleanup
  * DB: drop anonymous column
  * Yet another federation test
  * Check if the example config file is valid JS
  * Add tests for pusher code
  * Pusher can MAM everything
  * Pusher is a listener for all notifications
  * Add config for pusher component
  * Merge branch 'feature/mam-fixes' into develop
  * Increase the default number of items in a MAM response
  * Make MAM return an error if there are too many results
  * Use RSM in MAM
  * Test MAM RSM
  * MAM: filter bad dates out
  * Test if MAM validates dates correctly
  * Ensure the giant MAM test doesn't pollute the test environment
  * Make affiliations notifications PubSub-compliant
  * Affiliations have update timestamps too
  * Avoid temporary subscriptions in MAM results
  * Advertise support for MAM in disco#info
  * Add a giant MAM test
  * Update Travis URL in README.md
  * Merge branch 'feature/tests' into develop
  * Correctly tests that updated items don't change <in-reply-to/>
  * Move tests on updated items to a different function
  * Add tests for updates that change <in-reply-to/>
  * Use Travis to automate testing
  * Merge branch 'master' into develop
  * Add compatibility with PostgreSQL 9.1
  * Require at least one item to retract
  * Add Emacs folding marks
  * Add retrieve and retract tests
  * Fix retraction stanza sent to remote services
  * Tombstones: include Atom namespace in <updated/> element
  * Fix error when not allowed to retract an item
  * Tombstones can't be updated
  * When publishing an update, check if the actor is the original author
  * Check if original post exists before publishing a reply
  * Reject posts from non-users
  * Don't include type in <actor/>
  * Complete post/update/retract tests
  * TestServer: fix Atom in-reply-to element
  * Fail when some unwanted event happens
  * Add description for calls to "should.exist"
  * Retraction tests
  * Workaround CoffeeScript weird scoping rules
  * Add another batch of tests
  * Update test data
  * Change the way the test server emits IQ stanzas
  * Tests for posting to remote channels
  * Test server: emit event for IQs with unknown ID
  * Test server: disco info for "remote" servers
  * More post tests
  * Add helper to run tests that trigger several different stanzas
  * Test server: handle <message/> stanzas
  * Add post tests
  * Post tests: helper to check if post was successful
  * Throw an exception when getting an unexpected error IQ
  * Start adding post tests
  * Add helpers for pubsub get IQs and Atom handling
  * Helpers to add initial test data in the database
  * Add XMPP namespaces to test_server.coffee
  * Reply to presence probes
  * Don't parse Elements again
  * Use same user and server names as in sfc
  * Safe path handling in prepare-db.sh
  * Add codo-like doc to the TestServer class
  * Add helpers to build disco and pubsub IQs
  * Expose support for PubSub node creation
  * Skip a test
  * More channel creation tests
  * New tests and helpers for forms
  * Add a helper to parse disco#info replies
  * Move common disco replies to test_server.coffee
  * Start testing for channel creation
  * Test server: handle disco#items queries
  * Make tests runnable using "npm test"
  * Basic disco tests
  * Start a test suite
  * Use an existing component connection if provided in config
  * Make it possible to require() the server
  * Update config.js.example
  * Fix autosubscribeNewUsers
  * Increase the max number of items in each RSM page
  * Better shrinking of oversized stanzas
  * Include `-dirty' in version number from git
  * Remove glob from dependencies
  * Fix indentation in main.coffee
  * Prevent existing persistent subscription from being made temporary
  * Merge branch 'feature/version-number-from-git' into develop
  * Expose support for XEP-0092 (Software Version) in disco
  * Use `git describe' to get version numbers in dev branches
  * Merge branch 'master' into next
  * Restore compatibility with Node 0.6
  * Fix handling of offline users
  * Avoid race condition in disco cache
  * Shrink oversized stanzas more aggressively
  * Avoid nulls
  * Include new files in release tarball
  * Avoid race condition in disco cache
  * Merge remote-tracking branch 'upstream/tempsub' into next
  * Merge branch 'db-versioning' into next
  * buddycloud-server 0.3.5
  * Check if remote supports temporary subscription before sending a tempsub request
  * Client can check for server features before sending an IQ
  * Make server features discoverable
  * Log errors when processing incoming messages
  * Cleanup
  * Remove empty text nodes from items
  * Fix ActivityStreams verb for replies
  * Include operation name in debug message
  * Don't notify unsubscribe when it was a temporary subscription
  * Offline user cleanup: do real unsubscribe operations
  * I'm dumb
  * Don't delete temporary subscriptions during sync
  * Don't send any notification for temporary subscriptions
  * Client and server must speak the same language
  * Only send notifications about temporary subscriptions to remote listeners
  * Cleanup offline users
  * Claim we support subscription options
  * Temporary subscriptions
  * Fix updating items
  * Add help channels to default autosubscriptions
  * Merge branch 'log-fix'
  * Inspect objets in log messages
  * Fix broken log messages
  * Don't write subscription stanzas in items table
  * Merge remote-tracking branch 'lloyd/config'
  * Populate in_reply_to column when inserting new items
  * DB cleanup at startup
  * Add README for DB schema versioning
  * Upgrade DB schema
  * Check DB schema version on startup
  * Don't change <published/> when updating an existing post
  * Fix subscription to remote private channels
  * Don't fail when the default config file does not exist
  * Add Lloyd in contributors
  * Better logging for replies sent by 'proxy' components
  * Merge branch 'mam-result'
  * Include <result/> in MAM replies
  * Merge remote-tracking branch 'schnouki/atom-tombstones'
  * Fix typo
  * Merge pull request #61 from lloydwatkin/no-mod_disco
  * Also send tombstones in retract notifications
  * Use Atom tombstones for deleted items
  * xmpp: XEP-0313 compliance
  * Handle PubSub retract "notify" attribute
  * operations: fix PushInbox notification
  * Fix undefined variable when paging backwards in RSM
  [ Tuomas Koski ]
  * Merge pull request #59 from lloydwatkin/initialise-sync
  * Merge pull request #58 from lloydwatkin/master
  [ Steven Lloyd Watkin ]
  * Ensure we do not cause BC breaks
  * Make both defaults positive rather than one positive & the other negative Broke the config options down further
  * Fix build console output
  * "package" now a reserved word in node, caused failing in builds (v0.6.15+)
  [ Denis Washington ]
  * Use local CoffeeScript "cake" for "npm install"
  [ Jonas Smedegaard ]
  * Setup access rights and needed dirs when starting daemon
  * Speedup system shutdown by avoiding explicit sysV stop
  * xmpp_pubsub: check for commandEl prior usage
  [ Reginald dude ]
  * updates sent via email from vorner.cz
  * updates sent via email from vorner.cz
  [ Reginald Dude ]
  * Most confusing config file ever
  [ ▟ ▖▟ ▖ ]
  * Merge pull request #70 from lloydwatkin/fix-is-function
  * Merge pull request #63 from lloydwatkin/no-mod_disco
  * Merge pull request #62 from lloydwatkin/no-mod_disco
  * Merge pull request #57 from Schnouki/xep-0313
  * Merge pull request #54 from Schnouki/fix-notif
  * Merge pull request #52 from lloydwatkin/master
  * Merge pull request #51 from lloydwatkin/master
  [ James Tait ]
  * Ensure both the PID dir and log dir are created on startup if they do not already exist.
  [ imaginator ]
  * aligning with INSTALL instructions
  * moved instructions to wiki
  * Edited README.md via GitHub
  [ dodo ]
  * fix accessModel of geo nodes
  * always test in production
  * buddycloud-server 0.3.4
  * Merge branch 'packaging'
  * put the /etc/init.d script into tarball
  * not needed anymore
  * default options for new channels
  * bump tarballify version
  * add bin/buddycloud-server to the tarball
  * no build step in bin/buddycloud-server anymore
  * print additional info messages in gray
  * fix 'file is not defined'
  * fix 'modName is not defined'
  * colorful output for package.js
  * bump tarballify version
  * rm trailing spaces
  * no build_binary.sh needed
  * separate devDependencies
  * export name
  * use packaging script
  * buddycloud-server 0.3.3
  * pass prefix to npm to force npm to use that particular prefix
  * $PREFIX/bin/buddycloud-server can be nonexistant .. so ignore all errors when removing
  * bump node version in build script
  * merge issue #37
  * specify interal config file as defaults, not as main config
  * backports to node 0.4
  * concat cwd path to config path only when config path is relative
  * respect the cwd
  * move to the right dir before builing
  * wscript is not needed anymore
  * merged #31. symlink detection for bin/buddycloud-server thanks to @highfellow
  * fixed gitignore
  * forgot Cakefile
  * pin node version for over 0.5 to get the require json working
  * get version directly
  * new buildsystem
  * check if config.syslog has keys
  * dont load default config over opts and args
  * main: fix config loading
  * wscript fixes
  * load config via jsconfig
  * update wscript
  * upgrade build environment
  * update requirements in readme
  * cleanup files
  [ Simon Tennant ]
  * Update config.js.example
  * change to read config file from /opt/buddycloud
  * Update master
  * don't be so --quiet (will help a lot with debugging)
  * Update _etc_init.d_buddycloud-server
  * the orwell defeault was causing jdesenberg problems.
  * Fixed the permissions to run as.
  * Update _etc_init.d_buddycloud-server
  * init script
  * make it really clear what to change (and what "jid" refers to)
  * Made the ownership of tables really clear. Should help avoid the problem that DD had the other day.
  [ Lloyd Watkin ]
  * Fix for checking of child element
  * Catch error event
  * Fix for server reset
  * Updated variable names to better describe what config does.
  * Merge branch 'master' of git://github.com/buddycloud/buddycloud-server into no-mod_disco
  * Allow buddycloud server to advertise additional 'proxy' components
  * Wait to sync
  * Rename of parameter
  * Allow user to specify a port or not, changed argument name as it may not actually be remote debugging.
  * Tidy up
  * Allow node.js debugging
  [ Simon ]
  * /etc/init.d/buddycloud-server

 -- Abmar Barros (buddycloud Nightly Builds) <abmar@buddycloud.com>  Sat, 26 Jan 2013 14:50:55 -0300


buddycloud-server (0.1) unstable; urgency=medium

  [ Astro ]
  * operations: all nodes in defaultConfiguration accessModel=authorize
  * operations: posts & subscriptions accessModel=authorize in defaultConfiguration
  * buddycloud-server 0.3.2
  * Cakefile: version.js + 

  * operations: fix run notifications control flow
  * build_binary.sh: get bin/buddycloud-server out of the way before npm i
  * buddycloud-server 0.3.1
  * package.json: honor all contributors
  * Merge remote-tracking branch 'schnouki/patch-1'
  * .npmignore: exclude debian/* from npm pkgs
  * buddycloud-server 0.3.0
  * package.json: bump dep versions
  * operations: prevent unsubscribing/demoting the node owner
  * operations: fix PushInbox callback
  * operations: run notifies first, then syncs, then calls back
  * pubsub_server: lower logging
  * operations: fix PushInbox newNodes
  * operations: move PushInbox syncNode post transaction
  * operations: PushInbox should work even if syncNode had hickups
  * operations: syncNode when PushInbox created it
  * operations: fix PushInbox notification & newModerators
  * model_postgres: fix & simplify purgeNode()
  * sync: fixes
  * sync: purge node if no local subscribers
  * purge node when local unsubscription is pushed from remote
  * operations: fix generateSubscriptionsNotifications followee
  * operations: fix PushInbox newModerators nodes
  * xmpp connection: doc, serialize stanzas only once
  * operations: NewModeratorNotify needs listener, not user
  * operations: fix NewModeratorNotify listener
  * operations: log Operation name
  * model_postgres: must quote "user" column for Postgres
  * operations: NewModeratorNotify must cb()
  * operations: Notify notifies w/ node
  * operations: fix Notify otherListeners
  * pubsub_client: rm debug
  * operations: NewModeratorNotify notifies w/ node & listener
  * model_postgres: optional Transaction callbacks
  * operations: fix Notify filterSubscription & filterAffiliation invokation
  * operations: fix this binding
  * operations: no pending subscriptions in subscriptions node
  * operations: NewModeratorNotify
  * operations: doc, filter subscriptions and affiliations for non-moderators
  * operations: reorganize
  * clean up logging
  * operations: posts node defaultAffiliation='publisher'
  * sync: fix AffiliationsSynchronization typo
  * buddycloud-server 0.2.3
  * package.json: fix install script
  * build_binary.sh: bump node.js version
  * buddycloud-server 0.2.2
  * package.json: add preinstall cake build
  * operations: fix notifications
  * build_binary.sh: bump node.js version
  * buddycloud-server 0.2.1
  * operations: fix Notify subscriptios node items
  * operations: fix Notify callback result
  * operations: BrowseNodeItems for subscriptions node calls getSubscriptions not getSubscription
  * operations: syntax fixes
  * operations: Notify subscriptions fixes
  * operations: subscriptions node notifications
  * operations: BrowseNodeItems for subscriptions node
  * sync: require errors
  * sync: avoid error output when omitting local node
  * router, sync: improve logging
  * backend_pubsub: PubsubBackend.notify listener robustness
  * operations: fix Subscribe defaultAffiliation
  * operations: fix ManageNodeAffiliations control flow
  * pubsub_server: PubsubOwnerSetAffiliationsRequest syntax fix
  * operations: fix requiredAffiliation()
  * operations: requiredAffiliation can be function to allow moderators approving topic channel subscribers
  * operations: ManageNodeSubscriptions refactor for efficiency
  * operations: ManageNodeSubscriptions should set new affiliations to defaultAffiliation
  * operations: fix Notify jid/user
  * operations: Notify should notify all users pertained by a subscription
  * operations: 'unsubscribe-node' notifies unsubscribed user
  * operations, pubsub_client: there's no "unsubscribed" subscription, only "none"
  * pubsub_server: PubsubOwnerSetSubscriptionsRequest syntax fix
  * operations: Unsubscribe needs PrivilegedOperation methods
  * operations: Unsubscribed is not a PrivilegedOperation but a ModelOperation
  * operations: fix callback scope
  * pubsub_server: robustify PubsubItemsRequest
  * operations: syntax
  * pubsub_server, operations: support for RetrieveItems by itemIds
  * build_binary.sh: bump node.js version to 0.6.10
  * buddycloud-server 0.2.0
  * operations: CreateNode should not allow creation with empty nodeUser username
  * operations: fix CreateNode defaults & creationDate
  * operations: fix CreateNode isTopic switcheroo
  * router: fix autosubscribeNewUsers operation name
  * router: autosubscribeNewUsers
  * config.js.example: default checkCreateNode hook checks for a specific topic domain
  * operations: fix CreateNode node typo
  * operations: fix CreateNode config
  * pubsub_server, operations: CreateNode with optional config
  * operations: fix CreateNode setSubscription()
  * operations: CreateNode catches missing checkCreateNode hook
  * operations: CreateNode default config
  * checkCreateNode config hook
  * model_postgres: fix getOwnersByNodePrefix SQL
  * operations: fix CreateNode setAffiliation()
  * operations: fix CreateNode getOwnersByNodePrefix()
  * operations: fix ../util require, CreateNode safety check
  * implement createNode with getOwnersByNodePrefix check
  * operations: begin creating topic channels
  * model_postgres: syntax fix
  * package.json: maintainer update
  * build_binary.sh: update to node 0.6.9
  * buddycloud-server 0.1.11
  * rsm_walk: fix logging
  * operations: checkAccessModel() before checkRequiredAffiliation()!
  * operations: Unsubscribe condition syntax fix
  * package.json: muffin dependency glob seems be incompatible in v3.*
  * operations: checkRequiredAffiliation should ignore no @requiredAffiliation
  * operations: fix isAffiliationAtLeast w/ invalid affiliation
  * jsconfig 0.2.0 is out! w00t!!!
  * Cakefile: lib/version.js from package.json
  * logger: update to ain2 1.0.0
  * main: fix config loading
  * buddycloud-server 0.1.10
  * router: fix syncServer()
  * buddycloud-server 0.1.9
  * bin/buddycloud-server: fix param quoting
  * bin/buddycloud-server: fix $cwd
  * buddycloud-server 0.1.8
  * .npmignore to package up built lib/* instead of src/*
  * build_binary.sh: install devDependencies beforehand
  * build_binary.sh: bump node.js version to 0.6.7
  * util: move getNodeUser(), getUserDomain()
  * main: "server successfully started"
  * sync: fix logging
  * model_postgres: fix writeItem() SQL parameter binding
  * sync: fix PaginatedSynchronization error callback
  * sync: rm TODO note
  * model_postgres: writeItem updated_query
  * operations: logging fixes
  * writeItem: move updated extraction from operations to model_postgres
  * model_postgres: writeItem should also INSERT existing updated value
  * model_postgres: fix syntax
  * model_postgres: SQL fixes
  * operations: PushInbox copies item published date
  * postgres schema: CREATE VIEW open_nodes + usage in model_postgres
  * model_postgres: fix query result handling
  * fix getTopFollowedNodes & getTopPublishedNodes parameters
  * model_postgres: fix SQL INTERVAL syntax
  * operations: BrowseNodes.fetchNodes() needs transaction
  * operations: BrowseNodes.transaction should use @fetchNodes()
  * operations: fetchNodes() typo
  * pubsub_server: browse /top-followed-nodes & /top-published-nodes does not request a particular node
  * getTopFollowedNodes & getTopPublishedNodes w/ XMPP disco interface
  * build_binary.sh: bump to node 0.6.6
  * buddycloud-server 0.1.7
  * package.json: rm cradle dependency
  * logger: syslog only with hostname
  * replace common-logger by underscore.logger
  * update ain2 dependency for node v0.6 compatibility
  * model_postgres walkListenerArchive: replace DISTINCT with GROUP BY
  * model_postgres: fix config order/limig
  * operations: ReplayArchive sorts results before capping
  * ReplayArchive/walkListenerArchive: properly cap result set
  * operations: ReplayArchive default max=50
  * build_binary.sh: use $PREFIX from environment if present
  * package.json: req node-stringprep >=0.1.1
  * router: fix
  * buddycloud-server 0.1.6
  * update to new node-waf paths
  * build_binary.sh: switch to node 0.6.4
  * package.json: depend on 0.3.1
  * router: RSM usage fix
  * logger: open logFile for appending, fixes issue #25
  * package.json: depend on node-xmpp >= 0.3.0
  * operations ReplayArchive: fix rsm max
  * operations: ReplayArchive RSM support
  * backend_pubsub: notificationPush updates include sender & actor
  * router: detectUserType fixes
  * router: detectUserType fixes
  * logger: fix argument iteration
  * main, backend_pubsub: logging improvements
  * backend_pubsub: include user in notfound error
  * connection: loopback stanzas to ourselves
  * router: add missing util.inspect include
  * router.run: trace req
  * router: add missing rsm include
  * logger: typo
  * logger: fix level
  * logging clean-up
  * router, pubsub_{server,client}: @type in <actor/>
  * buddycloud-server 0.1.5
  * router: sync fixes
  * buddycloud-server 0.1.4
  * ManageNodeAffiliations: non-owner may not elect a new owner
  * sync: log upon completion
  * sync: transaction fix
  * move some sync logic into router, lock per node
  * operations: BrowseNodeInfo/RetrieveNodeConfiguration w/o access control
  * buddycloud-server 0.1.3
  * operations: deny Unsubscribe from own nodes
  * logger: ain2 syslog transport
  * logger: message always as string
  * main: fix --stdout kludge
  * logger: avoid log level < 0
  * config.js.example: syslog on by default
  * config.js.example: logging section
  * syslog support with ain2
  * support --stdout logging
  * replace cnlogger by common-logger
  * buddycloud-server 0.1.2
  * build_binary: npm install globally (into /opt/buddycloud-server/)
  * build_binary: dedup node & npm versions
  * build_binary: default to /opt/buddycloud-server, bin/ script
  * main: process.title fix
  * version: fix package.json path
  * version from package.json in process.title and for jabber:iq:version
  * xmpp/connection: do not subscribe in probePresence()
  * buddycloud-server 0.1.1
  * build_binary: bump node & npm versions
  * backend_pubsub: reply() must also copy 'replay' field on MaxStanzaSizeExceeded
  * connection: more stanza output when MaxStanzaSizeExceeded
  * don't send ReplayArchive notifications to all online resources
  * pubsub_client/connection: wrap error replies into StanzaError earlier
  * logging fixes
  * port to cnlogger
  * port to broken winston logging
  * xmpp connection: always tell node-xmpp to reconnect
  * async.filter iterator does not take error parameter
  * model_postgres: fix nodeExists warning
  * backend_pubsub: fix notification matching
  * sync: fix router.authorizeFor() usage
  * sync: writeItem does not need author anymore
  * operations: typo
  * model_postgres: fix getListenerAffiliations() query
  * sync: careful
  * xmpp/forms: oops, s/creationTime/creationDate/
  * xmpp/connection: fix name
  * router: check for anonymous user to be online
  * anonymous user offline tracking & clean-up
  * model_postgres: fix walkListenerArchive() node in results
  * router: fix method binding
  * model_postgres: walkListenerArchive() should include node in results
  * operations: RemoveUser & model_postgres.getUserRemoteSubscriptions() & clearUserSubscriptions()
  * BuddycloudDiscovery::detectAnonymousUser
  * backend_pubsub: gracefully handle MaxStanzaSizeExceeded for notifications
  * xmpp pubsub_server & connection: fix graceful MaxStanzaSizeExceeded handling
  * errors: MaxStanzaSizeExceeded extends Error
  * operations: s/geoloc/geo/
  * operations: /subscription items shall contain jid=owner
  * metadata buddycloud#channel_type
  * proper metadata field names
  * support for creationDate
  * operations: clarify logging
  * router: fix remote backend selection
  * operations: Unsubscribe refactor & fix
  * operations: fix Register
  * buddycloud-server 0.1.0
  * operation: print opName on commit, rm debug
  * bin/buddycloud-server: don't cd so config can be loaded relatively
  * Merge remote-tracking branch 'origin/cli'
  * operations: RetractItems should allow anyone to remove their own posts
  * operations: preserve affiliation if previously affiliated
  * operations: unify into isAffiliationAtLeast()
  * operations: rm leftover TODO note
  * operations: refactor Register; should check if authoritative for user's domain
  * router.run: return 404 for nodes not locally subscribed but discovered ourselves
  * rm explicit author handling in postgres schema, model, operations
  * main: check sender authorization for authorizationPrompt
  * operations: RetrieveItems shall not virtualize items for cache case of remote nodes
  * Revert "Made the ownership of tables really clear. Should help avoid the problem that DD had the other day."
  * s/channel-server/buddycloud-server/g
  * build_binary.sh: fix invokation hint
  * README: rm some outdated stuff
  * main: fix defaultConfig stuff
  * build_binary.sh
  * operations: RetrieveItems.retrieveSubscriptionsItems() result set sorting, affiliations
  * virtual handling of /user/.../subscriptions node items
  * MAM replays subscription authorization requests
  * more authorization stuff
  * fixes
  * small fixes
  * package.json: fix bin path
  * further authorizationPrompt work
  * backend_pubsub: missedSomething was missing
  * package.json: fix coffeescript path (./node_modules/...)
  * sending authorize notification forms
  * package.json: fix .coffee compilation stage
  * operations: PrivilegedOperation.fetchActorAffilliation fetches all listener affiliations for inbox sync
  * pubsub_notifications: fix MAM stanzas
  * operations: subscribe defaultAffiliation, fixes
  * model_postgres: many fixes
  * operations: publishModel 'subscribers'
  * operations: access control fixes
  * begin access control, affiliations checking
  * model_postgres: fixes
  * errors: fix error classes
  * xmpp/connection: fix
  * xmpp/connection: fix @missedServerTimeouts usage
  * model_postgres: safety checks
  * readability, notes
  * rsm_walk: fix serious errors
  * globally refactor operation from function to value
  * sync: fixes
  * add forgotten rsm_walk file
  * move syncQueue from main.coffee to fine-grained sync.syncNode
  * xmpp/connection: readability
  * xmpp/connection: track <you-missed-something/> timers with @missedServerTimeouts
  * syncServer support, wired up to <you-missed-something/> 'syncNeeded'
  * model_postgres: for an actor, getSubscriptions() shall return not only users but also listeners
  * MAM time specification
  * primitive MAM implementation
  * send <you-missed-something/>
  * operations: PushInbox TODO note
  * sync: rm request.rsm.max clamp
  * synchronization with state resetting and subscriptions/affiliations support
  * pubsub_*: fix user/jid conventions
  * ConfigSynchronization should use browse-node-info to get node config
  * synchronizing!
  * synchronization kinda works, but hits RSM loops
  * further synchronization progress
  * begin synchronization
  * main: require async
  * measure stanza size, gracefully retry with smaller result set
  * synchronization groundwork
  * don't let backend_pubsub call router.runLocally(), return errors.SeeLocal() instead
  * errors: clean up
  * normalize: add <link rel="self" href="xmpp:...?pubsub;action=retrieve;..."/>
  * operations: Publish shall allow new items with specified @id
  * nodes browsing, with RSM
  * backend_pubsub: run() should bail out early on invalid node form
  * PostgreSQL tuning
  * complete RSM implementation
  * begin RSM for all operations
  * generify RSM stuff
  * pubsub_client: RSM
  * fixes from CCCamp11
  * RSM for local items retrieving
  * begin new RSM implementation
  * pubsub_server: publish-node-items shall reply with item ids
  * model_postgres: fix getNodeListeners() SQL
  * model_postgres: nodeExists() shall check for NOT NULL
  * model_postgres: getNodeListener() replace filter by SQL
  * model_postgres: getNodeListener() filter for null
  * model_postgres: fix setSubscription() INSERT w/o listener
  * error printout
  * forms: fix
  * operations: PushInbox author fix
  * debug
  * xml child robustness
  * model_postgres: fix nodeExists()
  * fix subscription listener for local users
  * logging cleanup
  * initiate presence tracking of users
  * xmpp/connection: use send() instead of specifying from jid
  * some logging cleanup
  * operations: push-inbox does not set subscription listener
  * fixes & TODO notes
  * operations: Notify.transaction() must call cb()
  * retrieve-node-configuration
  * forms: configToResultForm -> configToForm
  * pubsub_client: RetrieveNodeConfiguration & ManageNodeConfiguration
  * operations: catch reply cb exceptions
  * create-node operation
  * package.json: scripts
  * fixes
  * fix outgoing notifications
  * generify pubsub_notifications
  * many fixes for subscription pushing
  * router: if request writes, always go remote
  * push incoming notifications to local model
  * more subclassing of EventEmitter, incoming notifications handling
  * pubsub_server: unify PubsubRequest & PubsubOwnerRequest
  * merge request.coffee into pubsub_server.coffee
  * begin remote subscription pushing to local inbox
  * backend_pubsub: PubsubBackend.notify(): readability
  * tune to use single cb() instead of req.{reply,replyError}()
  * revive normalization
  * model_postgres: setSubscription(): coearce isSet to boolean
  * model_postgres: catch lost transactions
  * pubsub_client: error reporting, fix
  * subscribe reply status
  * model_postgres: setAffiliation() should check nodeExists()
  * fix disco.authorizeFor() usage
  * pubsub_client: fix <actor/> placement
  * refactor notifications a bit
  * pubsub_client: <actor/> placement fix
  * pubsub_client: fix <actor/> placement
  * pubsub_notifications: subscriptions/affiliations/config
  * fix registration/model callback parameters
  * operations: ManageNodeAffiliations validates accessModel & publishModel
  * setting configuration
  * fixes, fixes, config
  * only RegisterSetRequest should induce presence subscription
  * FIXME note
  * model_postgres: do not use rowCount
  * operations: Register created default configuration
  * pubsub_server: pubsub/inbox identity
  * fixes, StanzaError
  * implement pubsub_client operations
  * pubsub_notifications: byOperation()
  * fixes
  * fixes
  * fixes & debugging
  * fixes
  * debugging & fixes
  * fixes
  * begin discovering locally
  * fixes
  * Router.run: fix
  * fixes
  * operations: rename channel node to "posts"
  * begin notifications
  * a bit o' twiddling w/ subscription listeners
  * refactor router for remote requests
  * operations: subscribe/unsubscribe toggle affiliation none/member
  * router: rename frontend to backend
  * rename backend_postgres to model_postgres, revive router
  * main: move iqHandler to pubsub_server
  * manage, not only retrieve, subscriptions & affiliations
  * use subscribe sender as notification listener
  * backend_pubsub: replace ternary operator
  * need to store listener in subscriptions...
  * backend_pubsub: implement RequestCache
  * new untested buddycloud discovery with backend_pubsub.coffee
  * retrieve <actor/> generalized, begin using authorizeFor
  * ns: add BUDDYCLOUD_V1 xmlns
  * postgres.sql schema: updated column for more tables, author column for items
  * retrieving node affiliations
  * retrieving node subscriptions, fixes
  * backend_postgres: syntax fixes
  * operation: Register should set affiliation & subscription
  * retrieving subscriptions & affiliations
  * retracting items
  * publishing & retrieving items works
  * begin item retrieving
  * subscribe & unsubscribe
  * fix backend_postgres (user is a Pg keyword, must be quoted as column name)
  * publishing works
  * lots of fixes
  * fix disco requests
  * fix, fix, fix
  * begin implementing register & publish implementation
  * mv src/operations.coffee src/local/operations.coffee
  * revive backend
  * primitive operations
  * mv controller.coffee operations.coffee
  * dead code TODO
  * fixes
  * rm old dead code
  * rename iqhandler to request
  * begin some refactoring
  * begin hooking up handlers with operations
  * xmpp/pubsub_server: indicate operation types
  * notes
  * pubsub_server: PubsubOwnerHandlers
  * pubsub_server: flesh out more pubsub handlers
  * add affiliations checking
  * begin interweaving with local operations
  * a tad of interconnecting
  * pubsub_server: DiscoInfoHandler.reply()
  * xmpp client 'n stuff
  * README: draw new design
  * begin router
  * xmpp: move NS_* to ns.coffee
  * xmpp: primitive disco info works
  * begin iqhandler
  * xmpp/connection: port presence tracking
  * rm main.js
  * move src files around
  * rm model_couchdb from config, add preliminary main.coffee
  * a bit new controller
  * rm old test_controller
  * some controller work
  * old controller translated to coffeescript
  * port peripheral stuff over to coffeescript
  * README: change ejabberd port to the config default one
  * model_couchdb: s/doc.subscribers/doc.subscriptions/
  * xmpp_pubsub.js: fix typo
  * model_postgres: check nodeExists before any data modification
  * preliminary RSM (XEP-0059) implementation for retrieve-items/retrieve
  * model_couchdb: stub getUpdatesByTime()
  * MAM should result in direct message, not broadcast notification to all resources
  * MAM w/ working model_postgres backend
  * begin implementing MAM
  * controller: register/register should create /user/<jid>/subscriptions node
  * normalize fixes + tests
  * normalize
  * only one child element per item
  * model_postgres: fix setConfig()
  * model_postgres: listNodesByUser()
  * model_couchdb: listNodesByUser(), simplify listNodes()
  * controller, xmpp_pubsub: browse-nodes/by-user
  * model_postgres setConfig(): fixes
  * configuration notification
  * model_postgres setConfig(): do not set fields unspecified/without defaultConfig
  * model_postgres nodeExists(): indentation
  * controller: subscribe should not require preexisting affiliation
  * xmpp_pubsub: fix manage-subscriptions/retrieve result usage
  * controller: allow retrieving subscriptions & affiliations for members
  * xmpp_pubsub: syntax fix
  * model_postgres: fix queue pushing
  * xmpp_pubsub: fix info discovery reply FORM_TYPE
  * model_postgres: config fixes
  * more on extended config
  * model_couchdb, model_postgres: more flexible config schema
  * config: description, type, creationDate; setConfig() on create-node/register
  * xmpp_pubsub: optimize presence tracking
  * controller: requiredAffiliation='member' for config-node/retrieve
  * README: OpenFire
  * controller: defaultConfig() + use in feature 'config-node'
  * xmpp_pubsub: replace isOnline() with getOnlineResources()
  * model_postgres: fix transaction dequeueing
  * model_postgres: move cb() past process.nextTick/dbIsAvailable for safety
  * model_postgres: work around empty responses
  * test_controller: retract
  * xmpp_pubsub: disco <identity/> according to discovered @node
  * test_controller: browse-nodes
  * model_couchdb: fix preload() etag extraction + error reporting
  * xmpp_pubsub: FeatureNotImplemented message
  * controller: simulate a stack for debug info
  * test_controller: retract skeleton
  * controller unsubscribe: do not fetch affiliation from database but check by node path
  * implement & test unsubscribe
  * test_controller: skeletons
  * test_controller: publishing tests
  * test_controller: more publish testing + controller fix
  * test_controller: begin test publishing
  * model_postgres: fix forgotten variable
  * model_postgres: reconnect to database upon error
  * model_postgres: oops, syntax error
  * config.js.example: postgres is actually the one with a poolSize
  * model_postgres: oops, syntax errors
  * begin test_controller
  * fixes
  * subscriptionModified <message/>
  * xmpp_pubsub: "message" & approve() fixes
  * controller: replace ownerNotification with afterTransaction
  * access_model authorize
  * package.json & README
  * errors: pull inherits() from util/utils/sys for moving node api
  * browse open nodes with service discovery items
  * controller: refactor affiliations checking
  * xmpp_pubsub: fix subscriptions format
  * controller: treat missing accessModel as 'open'
  * model_couchdb: preload() etag fix
  * .gitignore with config.js
  * xmpp_pubsub: node config on disco info
  * model_couchdb: encodeURIComponent() only for db.head() & .get()
  * main.js: #!
  * rename config.js to config.js.example
  * restore default config.js
  * main.js: on uncaughtException
  * postgres doc & config
  * model_postgres
  * model_couchdb: fix item deserialization
  * model_couchdb: rm implemented TODOs
  * README: CouchDB configuration
  * README: TODO++
  * LICENSE
  * README: markdown fix
  * README: mention buddycloud :)
  * model_couchdb: fix views initialization
  * README & config
  * jabber:iq:register
  * model_couchdb: fixes
  * errors fixing
  * rm model_persistence
  * model_couchdb: assertNodeName()
  * main: catch uncaughtException
  * controller: fix
  * bugs, readability
  * model_couchdb: fixing
  * controller: implement affiliations checking
  * xmpp_pubsub: getAffiliations() result is now Array
  * model_couchdb: setSubscription() & setAffiliation() 'none'
  * model_couchdb: consolidate subscriptions & affiliations model
  * xmpp_pubsub: send notifications with type='headline'
  * xmpp_pubsub: subscribeIfNeeded() on <create/> & <subscribe/>
  * model_couchdb: load() shortcut when already cached
  * model_couchdb: createNode() fix
  * model_couchdb: preload()
  * model_couchdb: commit read documents too for integrity
  * model_couchdb: abstract views
  * CouchDB Optimistic Concurrency Control layer
  * controller: improve error propagation
  * defined error conditions
  * untested configuration getting/setting
  * service discovery
  * modify-affiliations
  * model_couchdb: getAffiliation()
  * begin permission checking infrastructure
  * presence probes
  * xmpp_pubsub: presence tracking
  * refactoring controller complete
  * continue refactoring controller into features/operations
  * begin refactoring controller into features/operations
  * subscribers
  * getting subscriptions & affiliations
  * createNode improvements
  * controller createNode: check node
  * model_couchdb: affiliations view
  * items getting
  * much more progress
  * implement retraction, s/notifySubscriber/notify/, s/writeItems/writeItem/
  * publish notification works
  * more frontend hooking
  * begin notification hooks
  * fixes
  * begin model_couchdb transactions
  * split model
  * some progress
  * some progress
  * createNode creates owner affiliation
  * model: indexes
  [ Thomas Jost ]
  * Add @denisw to contributors
  * Upgrade required node version to 0.8
  * We actually need remote subscriptions nodes
  * Merge branch 'feature/anon-fixes' into develop
  * Merge branch 'feature/really-validate-post-times' into develop
  * Reject remote posts with invalid dates
  * Add tests for remote posts with invalid dates
  * Force anon subscriptions to be temporary
  * Set default affiliation to 'none' for anon users
  * Merge branch 'feature/anon-fixes' into develop
  * Cleanup: remove some dead code
  * Purge remote nodes with no local subscription left
  * Merge branch 'feature/recent-items' into develop
  * Merge branch 'feature/validate-remote-items' into develop
  * Sort recent items by update time
  * Merge branch 'feature/validate-remote-items' into feature/recent-items
  * Fix tests that push remote items
  * Validate remote items
  * Add (failing) tests for invalid remote items
  * Implement recent items query
  * Add (failing) test for recent items query
  * PubSub replies can include several elements
  * Merge branch 'feature/pusher' into develop
  * Workaround callback woes
  * Fix MAM for pusher component
  * Pusher: test MAM
  * test_server: move makePublishIq into TestServer
  * Pusher: test node configuration
  * Pusher: test unsubscriptions
  * Merge branch 'feature/affiliations-fixes' into develop
  * Merge branch 'feature/pubsub-disco-features' into develop
  * Cleanup
  * Expose all implemented PubSub features
  * Pusher: test affiliations
  * Merge branch 'feature/affiliations-fixes' into feature/pusher
  * Fix affiliation in /subscriptions notifications
  * Accept PubSub-compliant affiliations notifications
  * Pusher: test subscriptions
  * Merge branch 'feature/fix-98' into develop
  * Fix SQL for updating replies
  * Add failing test for issue #98
  * Fix offline user cleanup
  * DB: drop anonymous column
  * Yet another federation test
  * Check if the example config file is valid JS
  * Add tests for pusher code
  * Pusher can MAM everything
  * Pusher is a listener for all notifications
  * Add config for pusher component
  * Merge branch 'feature/mam-fixes' into develop
  * Increase the default number of items in a MAM response
  * Make MAM return an error if there are too many results
  * Use RSM in MAM
  * Test MAM RSM
  * MAM: filter bad dates out
  * Test if MAM validates dates correctly
  * Ensure the giant MAM test doesn't pollute the test environment
  * Make affiliations notifications PubSub-compliant
  * Affiliations have update timestamps too
  * Avoid temporary subscriptions in MAM results
  * Advertise support for MAM in disco#info
  * Add a giant MAM test
  * Update Travis URL in README.md
  * Merge branch 'feature/tests' into develop
  * Correctly tests that updated items don't change <in-reply-to/>
  * Move tests on updated items to a different function
  * Add tests for updates that change <in-reply-to/>
  * Use Travis to automate testing
  * Merge branch 'master' into develop
  * Add compatibility with PostgreSQL 9.1
  * Require at least one item to retract
  * Add Emacs folding marks
  * Add retrieve and retract tests
  * Fix retraction stanza sent to remote services
  * Tombstones: include Atom namespace in <updated/> element
  * Fix error when not allowed to retract an item
  * Tombstones can't be updated
  * When publishing an update, check if the actor is the original author
  * Check if original post exists before publishing a reply
  * Reject posts from non-users
  * Don't include type in <actor/>
  * Complete post/update/retract tests
  * TestServer: fix Atom in-reply-to element
  * Fail when some unwanted event happens
  * Add description for calls to "should.exist"
  * Retraction tests
  * Workaround CoffeeScript weird scoping rules
  * Add another batch of tests
  * Update test data
  * Change the way the test server emits IQ stanzas
  * Tests for posting to remote channels
  * Test server: emit event for IQs with unknown ID
  * Test server: disco info for "remote" servers
  * More post tests
  * Add helper to run tests that trigger several different stanzas
  * Test server: handle <message/> stanzas
  * Add post tests
  * Post tests: helper to check if post was successful
  * Throw an exception when getting an unexpected error IQ
  * Start adding post tests
  * Add helpers for pubsub get IQs and Atom handling
  * Helpers to add initial test data in the database
  * Add XMPP namespaces to test_server.coffee
  * Reply to presence probes
  * Don't parse Elements again
  * Use same user and server names as in sfc
  * Safe path handling in prepare-db.sh
  * Add codo-like doc to the TestServer class
  * Add helpers to build disco and pubsub IQs
  * Expose support for PubSub node creation
  * Skip a test
  * More channel creation tests
  * New tests and helpers for forms
  * Add a helper to parse disco#info replies
  * Move common disco replies to test_server.coffee
  * Start testing for channel creation
  * Test server: handle disco#items queries
  * Make tests runnable using "npm test"
  * Basic disco tests
  * Start a test suite
  * Use an existing component connection if provided in config
  * Make it possible to require() the server
  * Update config.js.example
  * Fix autosubscribeNewUsers
  * Increase the max number of items in each RSM page
  * Better shrinking of oversized stanzas
  * Include `-dirty' in version number from git
  * Remove glob from dependencies
  * Fix indentation in main.coffee
  * Prevent existing persistent subscription from being made temporary
  * Merge branch 'feature/version-number-from-git' into develop
  * Expose support for XEP-0092 (Software Version) in disco
  * Use `git describe' to get version numbers in dev branches
  * Merge branch 'master' into next
  * Restore compatibility with Node 0.6
  * Fix handling of offline users
  * Avoid race condition in disco cache
  * Shrink oversized stanzas more aggressively
  * Avoid nulls
  * Include new files in release tarball
  * Avoid race condition in disco cache
  * Merge remote-tracking branch 'upstream/tempsub' into next
  * Merge branch 'db-versioning' into next
  * buddycloud-server 0.3.5
  * Check if remote supports temporary subscription before sending a tempsub request
  * Client can check for server features before sending an IQ
  * Make server features discoverable
  * Log errors when processing incoming messages
  * Cleanup
  * Remove empty text nodes from items
  * Fix ActivityStreams verb for replies
  * Include operation name in debug message
  * Don't notify unsubscribe when it was a temporary subscription
  * Offline user cleanup: do real unsubscribe operations
  * I'm dumb
  * Don't delete temporary subscriptions during sync
  * Don't send any notification for temporary subscriptions
  * Client and server must speak the same language
  * Only send notifications about temporary subscriptions to remote listeners
  * Cleanup offline users
  * Claim we support subscription options
  * Temporary subscriptions
  * Fix updating items
  * Add help channels to default autosubscriptions
  * Merge branch 'log-fix'
  * Inspect objets in log messages
  * Fix broken log messages
  * Don't write subscription stanzas in items table
  * Merge remote-tracking branch 'lloyd/config'
  * Populate in_reply_to column when inserting new items
  * DB cleanup at startup
  * Add README for DB schema versioning
  * Upgrade DB schema
  * Check DB schema version on startup
  * Don't change <published/> when updating an existing post
  * Fix subscription to remote private channels
  * Don't fail when the default config file does not exist
  * Add Lloyd in contributors
  * Better logging for replies sent by 'proxy' components
  * Merge branch 'mam-result'
  * Include <result/> in MAM replies
  * Merge remote-tracking branch 'schnouki/atom-tombstones'
  * Fix typo
  * Merge pull request #61 from lloydwatkin/no-mod_disco
  * Also send tombstones in retract notifications
  * Use Atom tombstones for deleted items
  * xmpp: XEP-0313 compliance
  * Handle PubSub retract "notify" attribute
  * operations: fix PushInbox notification
  * Fix undefined variable when paging backwards in RSM
  [ Tuomas Koski ]
  * Merge pull request #59 from lloydwatkin/initialise-sync
  * Merge pull request #58 from lloydwatkin/master
  [ Steven Lloyd Watkin ]
  * Ensure we do not cause BC breaks
  * Make both defaults positive rather than one positive & the other negative Broke the config options down further
  * Fix build console output
  * "package" now a reserved word in node, caused failing in builds (v0.6.15+)
  [ Denis Washington ]
  * Use local CoffeeScript "cake" for "npm install"
  [ Jonas Smedegaard ]
  * Setup access rights and needed dirs when starting daemon
  * Speedup system shutdown by avoiding explicit sysV stop
  * xmpp_pubsub: check for commandEl prior usage
  [ Reginald dude ]
  * updates sent via email from vorner.cz
  * updates sent via email from vorner.cz
  [ Reginald Dude ]
  * Most confusing config file ever
  [ ▟ ▖▟ ▖ ]
  * Merge pull request #70 from lloydwatkin/fix-is-function
  * Merge pull request #63 from lloydwatkin/no-mod_disco
  * Merge pull request #62 from lloydwatkin/no-mod_disco
  * Merge pull request #57 from Schnouki/xep-0313
  * Merge pull request #54 from Schnouki/fix-notif
  * Merge pull request #52 from lloydwatkin/master
  * Merge pull request #51 from lloydwatkin/master
  [ James Tait ]
  * Ensure both the PID dir and log dir are created on startup if they do not already exist.
  [ imaginator ]
  * aligning with INSTALL instructions
  * moved instructions to wiki
  * Edited README.md via GitHub
  [ dodo ]
  * fix accessModel of geo nodes
  * always test in production
  * buddycloud-server 0.3.4
  * Merge branch 'packaging'
  * put the /etc/init.d script into tarball
  * not needed anymore
  * default options for new channels
  * bump tarballify version
  * add bin/buddycloud-server to the tarball
  * no build step in bin/buddycloud-server anymore
  * print additional info messages in gray
  * fix 'file is not defined'
  * fix 'modName is not defined'
  * colorful output for package.js
  * bump tarballify version
  * rm trailing spaces
  * no build_binary.sh needed
  * separate devDependencies
  * export name
  * use packaging script
  * buddycloud-server 0.3.3
  * pass prefix to npm to force npm to use that particular prefix
  * $PREFIX/bin/buddycloud-server can be nonexistant .. so ignore all errors when removing
  * bump node version in build script
  * merge issue #37
  * specify interal config file as defaults, not as main config
  * backports to node 0.4
  * concat cwd path to config path only when config path is relative
  * respect the cwd
  * move to the right dir before builing
  * wscript is not needed anymore
  * merged #31. symlink detection for bin/buddycloud-server thanks to @highfellow
  * fixed gitignore
  * forgot Cakefile
  * pin node version for over 0.5 to get the require json working
  * get version directly
  * new buildsystem
  * check if config.syslog has keys
  * dont load default config over opts and args
  * main: fix config loading
  * wscript fixes
  * load config via jsconfig
  * update wscript
  * upgrade build environment
  * update requirements in readme
  * cleanup files
  [ Simon Tennant ]
  * Update config.js.example
  * change to read config file from /opt/buddycloud
  * Update master
  * don't be so --quiet (will help a lot with debugging)
  * Update _etc_init.d_buddycloud-server
  * the orwell defeault was causing jdesenberg problems.
  * Fixed the permissions to run as.
  * Update _etc_init.d_buddycloud-server
  * init script
  * make it really clear what to change (and what "jid" refers to)
  * Made the ownership of tables really clear. Should help avoid the problem that DD had the other day.
  [ Lloyd Watkin ]
  * Fix for checking of child element
  * Catch error event
  * Fix for server reset
  * Updated variable names to better describe what config does.
  * Merge branch 'master' of git://github.com/buddycloud/buddycloud-server into no-mod_disco
  * Allow buddycloud server to advertise additional 'proxy' components
  * Wait to sync
  * Rename of parameter
  * Allow user to specify a port or not, changed argument name as it may not actually be remote debugging.
  * Tidy up
  * Allow node.js debugging
  [ Simon ]
  * /etc/init.d/buddycloud-server

 -- Abmar Barros (buddycloud Nightly Builds) <abmar@buddycloud.com>  Sat, 26 Jan 2013 15:02:43 -0300


buddycloud-server (0.1) unstable; urgency=medium

  [ Astro ]
  * operations: all nodes in defaultConfiguration accessModel=authorize
  * operations: posts & subscriptions accessModel=authorize in defaultConfiguration
  * buddycloud-server 0.3.2
  * Cakefile: version.js + 

  * operations: fix run notifications control flow
  * build_binary.sh: get bin/buddycloud-server out of the way before npm i
  * buddycloud-server 0.3.1
  * package.json: honor all contributors
  * Merge remote-tracking branch 'schnouki/patch-1'
  * .npmignore: exclude debian/* from npm pkgs
  * buddycloud-server 0.3.0
  * package.json: bump dep versions
  * operations: prevent unsubscribing/demoting the node owner
  * operations: fix PushInbox callback
  * operations: run notifies first, then syncs, then calls back
  * pubsub_server: lower logging
  * operations: fix PushInbox newNodes
  * operations: move PushInbox syncNode post transaction
  * operations: PushInbox should work even if syncNode had hickups
  * operations: syncNode when PushInbox created it
  * operations: fix PushInbox notification & newModerators
  * model_postgres: fix & simplify purgeNode()
  * sync: fixes
  * sync: purge node if no local subscribers
  * purge node when local unsubscription is pushed from remote
  * operations: fix generateSubscriptionsNotifications followee
  * operations: fix PushInbox newModerators nodes
  * xmpp connection: doc, serialize stanzas only once
  * operations: NewModeratorNotify needs listener, not user
  * operations: fix NewModeratorNotify listener
  * operations: log Operation name
  * model_postgres: must quote "user" column for Postgres
  * operations: NewModeratorNotify must cb()
  * operations: Notify notifies w/ node
  * operations: fix Notify otherListeners
  * pubsub_client: rm debug
  * operations: NewModeratorNotify notifies w/ node & listener
  * model_postgres: optional Transaction callbacks
  * operations: fix Notify filterSubscription & filterAffiliation invokation
  * operations: fix this binding
  * operations: no pending subscriptions in subscriptions node
  * operations: NewModeratorNotify
  * operations: doc, filter subscriptions and affiliations for non-moderators
  * operations: reorganize
  * clean up logging
  * operations: posts node defaultAffiliation='publisher'
  * sync: fix AffiliationsSynchronization typo
  * buddycloud-server 0.2.3
  * package.json: fix install script
  * build_binary.sh: bump node.js version
  * buddycloud-server 0.2.2
  * package.json: add preinstall cake build
  * operations: fix notifications
  * build_binary.sh: bump node.js version
  * buddycloud-server 0.2.1
  * operations: fix Notify subscriptios node items
  * operations: fix Notify callback result
  * operations: BrowseNodeItems for subscriptions node calls getSubscriptions not getSubscription
  * operations: syntax fixes
  * operations: Notify subscriptions fixes
  * operations: subscriptions node notifications
  * operations: BrowseNodeItems for subscriptions node
  * sync: require errors
  * sync: avoid error output when omitting local node
  * router, sync: improve logging
  * backend_pubsub: PubsubBackend.notify listener robustness
  * operations: fix Subscribe defaultAffiliation
  * operations: fix ManageNodeAffiliations control flow
  * pubsub_server: PubsubOwnerSetAffiliationsRequest syntax fix
  * operations: fix requiredAffiliation()
  * operations: requiredAffiliation can be function to allow moderators approving topic channel subscribers
  * operations: ManageNodeSubscriptions refactor for efficiency
  * operations: ManageNodeSubscriptions should set new affiliations to defaultAffiliation
  * operations: fix Notify jid/user
  * operations: Notify should notify all users pertained by a subscription
  * operations: 'unsubscribe-node' notifies unsubscribed user
  * operations, pubsub_client: there's no "unsubscribed" subscription, only "none"
  * pubsub_server: PubsubOwnerSetSubscriptionsRequest syntax fix
  * operations: Unsubscribe needs PrivilegedOperation methods
  * operations: Unsubscribed is not a PrivilegedOperation but a ModelOperation
  * operations: fix callback scope
  * pubsub_server: robustify PubsubItemsRequest
  * operations: syntax
  * pubsub_server, operations: support for RetrieveItems by itemIds
  * build_binary.sh: bump node.js version to 0.6.10
  * buddycloud-server 0.2.0
  * operations: CreateNode should not allow creation with empty nodeUser username
  * operations: fix CreateNode defaults & creationDate
  * operations: fix CreateNode isTopic switcheroo
  * router: fix autosubscribeNewUsers operation name
  * router: autosubscribeNewUsers
  * config.js.example: default checkCreateNode hook checks for a specific topic domain
  * operations: fix CreateNode node typo
  * operations: fix CreateNode config
  * pubsub_server, operations: CreateNode with optional config
  * operations: fix CreateNode setSubscription()
  * operations: CreateNode catches missing checkCreateNode hook
  * operations: CreateNode default config
  * checkCreateNode config hook
  * model_postgres: fix getOwnersByNodePrefix SQL
  * operations: fix CreateNode setAffiliation()
  * operations: fix CreateNode getOwnersByNodePrefix()
  * operations: fix ../util require, CreateNode safety check
  * implement createNode with getOwnersByNodePrefix check
  * operations: begin creating topic channels
  * model_postgres: syntax fix
  * package.json: maintainer update
  * build_binary.sh: update to node 0.6.9
  * buddycloud-server 0.1.11
  * rsm_walk: fix logging
  * operations: checkAccessModel() before checkRequiredAffiliation()!
  * operations: Unsubscribe condition syntax fix
  * package.json: muffin dependency glob seems be incompatible in v3.*
  * operations: checkRequiredAffiliation should ignore no @requiredAffiliation
  * operations: fix isAffiliationAtLeast w/ invalid affiliation
  * jsconfig 0.2.0 is out! w00t!!!
  * Cakefile: lib/version.js from package.json
  * logger: update to ain2 1.0.0
  * main: fix config loading
  * buddycloud-server 0.1.10
  * router: fix syncServer()
  * buddycloud-server 0.1.9
  * bin/buddycloud-server: fix param quoting
  * bin/buddycloud-server: fix $cwd
  * buddycloud-server 0.1.8
  * .npmignore to package up built lib/* instead of src/*
  * build_binary.sh: install devDependencies beforehand
  * build_binary.sh: bump node.js version to 0.6.7
  * util: move getNodeUser(), getUserDomain()
  * main: "server successfully started"
  * sync: fix logging
  * model_postgres: fix writeItem() SQL parameter binding
  * sync: fix PaginatedSynchronization error callback
  * sync: rm TODO note
  * model_postgres: writeItem updated_query
  * operations: logging fixes
  * writeItem: move updated extraction from operations to model_postgres
  * model_postgres: writeItem should also INSERT existing updated value
  * model_postgres: fix syntax
  * model_postgres: SQL fixes
  * operations: PushInbox copies item published date
  * postgres schema: CREATE VIEW open_nodes + usage in model_postgres
  * model_postgres: fix query result handling
  * fix getTopFollowedNodes & getTopPublishedNodes parameters
  * model_postgres: fix SQL INTERVAL syntax
  * operations: BrowseNodes.fetchNodes() needs transaction
  * operations: BrowseNodes.transaction should use @fetchNodes()
  * operations: fetchNodes() typo
  * pubsub_server: browse /top-followed-nodes & /top-published-nodes does not request a particular node
  * getTopFollowedNodes & getTopPublishedNodes w/ XMPP disco interface
  * build_binary.sh: bump to node 0.6.6
  * buddycloud-server 0.1.7
  * package.json: rm cradle dependency
  * logger: syslog only with hostname
  * replace common-logger by underscore.logger
  * update ain2 dependency for node v0.6 compatibility
  * model_postgres walkListenerArchive: replace DISTINCT with GROUP BY
  * model_postgres: fix config order/limig
  * operations: ReplayArchive sorts results before capping
  * ReplayArchive/walkListenerArchive: properly cap result set
  * operations: ReplayArchive default max=50
  * build_binary.sh: use $PREFIX from environment if present
  * package.json: req node-stringprep >=0.1.1
  * router: fix
  * buddycloud-server 0.1.6
  * update to new node-waf paths
  * build_binary.sh: switch to node 0.6.4
  * package.json: depend on 0.3.1
  * router: RSM usage fix
  * logger: open logFile for appending, fixes issue #25
  * package.json: depend on node-xmpp >= 0.3.0
  * operations ReplayArchive: fix rsm max
  * operations: ReplayArchive RSM support
  * backend_pubsub: notificationPush updates include sender & actor
  * router: detectUserType fixes
  * router: detectUserType fixes
  * logger: fix argument iteration
  * main, backend_pubsub: logging improvements
  * backend_pubsub: include user in notfound error
  * connection: loopback stanzas to ourselves
  * router: add missing util.inspect include
  * router.run: trace req
  * router: add missing rsm include
  * logger: typo
  * logger: fix level
  * logging clean-up
  * router, pubsub_{server,client}: @type in <actor/>
  * buddycloud-server 0.1.5
  * router: sync fixes
  * buddycloud-server 0.1.4
  * ManageNodeAffiliations: non-owner may not elect a new owner
  * sync: log upon completion
  * sync: transaction fix
  * move some sync logic into router, lock per node
  * operations: BrowseNodeInfo/RetrieveNodeConfiguration w/o access control
  * buddycloud-server 0.1.3
  * operations: deny Unsubscribe from own nodes
  * logger: ain2 syslog transport
  * logger: message always as string
  * main: fix --stdout kludge
  * logger: avoid log level < 0
  * config.js.example: syslog on by default
  * config.js.example: logging section
  * syslog support with ain2
  * support --stdout logging
  * replace cnlogger by common-logger
  * buddycloud-server 0.1.2
  * build_binary: npm install globally (into /opt/buddycloud-server/)
  * build_binary: dedup node & npm versions
  * build_binary: default to /opt/buddycloud-server, bin/ script
  * main: process.title fix
  * version: fix package.json path
  * version from package.json in process.title and for jabber:iq:version
  * xmpp/connection: do not subscribe in probePresence()
  * buddycloud-server 0.1.1
  * build_binary: bump node & npm versions
  * backend_pubsub: reply() must also copy 'replay' field on MaxStanzaSizeExceeded
  * connection: more stanza output when MaxStanzaSizeExceeded
  * don't send ReplayArchive notifications to all online resources
  * pubsub_client/connection: wrap error replies into StanzaError earlier
  * logging fixes
  * port to cnlogger
  * port to broken winston logging
  * xmpp connection: always tell node-xmpp to reconnect
  * async.filter iterator does not take error parameter
  * model_postgres: fix nodeExists warning
  * backend_pubsub: fix notification matching
  * sync: fix router.authorizeFor() usage
  * sync: writeItem does not need author anymore
  * operations: typo
  * model_postgres: fix getListenerAffiliations() query
  * sync: careful
  * xmpp/forms: oops, s/creationTime/creationDate/
  * xmpp/connection: fix name
  * router: check for anonymous user to be online
  * anonymous user offline tracking & clean-up
  * model_postgres: fix walkListenerArchive() node in results
  * router: fix method binding
  * model_postgres: walkListenerArchive() should include node in results
  * operations: RemoveUser & model_postgres.getUserRemoteSubscriptions() & clearUserSubscriptions()
  * BuddycloudDiscovery::detectAnonymousUser
  * backend_pubsub: gracefully handle MaxStanzaSizeExceeded for notifications
  * xmpp pubsub_server & connection: fix graceful MaxStanzaSizeExceeded handling
  * errors: MaxStanzaSizeExceeded extends Error
  * operations: s/geoloc/geo/
  * operations: /subscription items shall contain jid=owner
  * metadata buddycloud#channel_type
  * proper metadata field names
  * support for creationDate
  * operations: clarify logging
  * router: fix remote backend selection
  * operations: Unsubscribe refactor & fix
  * operations: fix Register
  * buddycloud-server 0.1.0
  * operation: print opName on commit, rm debug
  * bin/buddycloud-server: don't cd so config can be loaded relatively
  * Merge remote-tracking branch 'origin/cli'
  * operations: RetractItems should allow anyone to remove their own posts
  * operations: preserve affiliation if previously affiliated
  * operations: unify into isAffiliationAtLeast()
  * operations: rm leftover TODO note
  * operations: refactor Register; should check if authoritative for user's domain
  * router.run: return 404 for nodes not locally subscribed but discovered ourselves
  * rm explicit author handling in postgres schema, model, operations
  * main: check sender authorization for authorizationPrompt
  * operations: RetrieveItems shall not virtualize items for cache case of remote nodes
  * Revert "Made the ownership of tables really clear. Should help avoid the problem that DD had the other day."
  * s/channel-server/buddycloud-server/g
  * build_binary.sh: fix invokation hint
  * README: rm some outdated stuff
  * main: fix defaultConfig stuff
  * build_binary.sh
  * operations: RetrieveItems.retrieveSubscriptionsItems() result set sorting, affiliations
  * virtual handling of /user/.../subscriptions node items
  * MAM replays subscription authorization requests
  * more authorization stuff
  * fixes
  * small fixes
  * package.json: fix bin path
  * further authorizationPrompt work
  * backend_pubsub: missedSomething was missing
  * package.json: fix coffeescript path (./node_modules/...)
  * sending authorize notification forms
  * package.json: fix .coffee compilation stage
  * operations: PrivilegedOperation.fetchActorAffilliation fetches all listener affiliations for inbox sync
  * pubsub_notifications: fix MAM stanzas
  * operations: subscribe defaultAffiliation, fixes
  * model_postgres: many fixes
  * operations: publishModel 'subscribers'
  * operations: access control fixes
  * begin access control, affiliations checking
  * model_postgres: fixes
  * errors: fix error classes
  * xmpp/connection: fix
  * xmpp/connection: fix @missedServerTimeouts usage
  * model_postgres: safety checks
  * readability, notes
  * rsm_walk: fix serious errors
  * globally refactor operation from function to value
  * sync: fixes
  * add forgotten rsm_walk file
  * move syncQueue from main.coffee to fine-grained sync.syncNode
  * xmpp/connection: readability
  * xmpp/connection: track <you-missed-something/> timers with @missedServerTimeouts
  * syncServer support, wired up to <you-missed-something/> 'syncNeeded'
  * model_postgres: for an actor, getSubscriptions() shall return not only users but also listeners
  * MAM time specification
  * primitive MAM implementation
  * send <you-missed-something/>
  * operations: PushInbox TODO note
  * sync: rm request.rsm.max clamp
  * synchronization with state resetting and subscriptions/affiliations support
  * pubsub_*: fix user/jid conventions
  * ConfigSynchronization should use browse-node-info to get node config
  * synchronizing!
  * synchronization kinda works, but hits RSM loops
  * further synchronization progress
  * begin synchronization
  * main: require async
  * measure stanza size, gracefully retry with smaller result set
  * synchronization groundwork
  * don't let backend_pubsub call router.runLocally(), return errors.SeeLocal() instead
  * errors: clean up
  * normalize: add <link rel="self" href="xmpp:...?pubsub;action=retrieve;..."/>
  * operations: Publish shall allow new items with specified @id
  * nodes browsing, with RSM
  * backend_pubsub: run() should bail out early on invalid node form
  * PostgreSQL tuning
  * complete RSM implementation
  * begin RSM for all operations
  * generify RSM stuff
  * pubsub_client: RSM
  * fixes from CCCamp11
  * RSM for local items retrieving
  * begin new RSM implementation
  * pubsub_server: publish-node-items shall reply with item ids
  * model_postgres: fix getNodeListeners() SQL
  * model_postgres: nodeExists() shall check for NOT NULL
  * model_postgres: getNodeListener() replace filter by SQL
  * model_postgres: getNodeListener() filter for null
  * model_postgres: fix setSubscription() INSERT w/o listener
  * error printout
  * forms: fix
  * operations: PushInbox author fix
  * debug
  * xml child robustness
  * model_postgres: fix nodeExists()
  * fix subscription listener for local users
  * logging cleanup
  * initiate presence tracking of users
  * xmpp/connection: use send() instead of specifying from jid
  * some logging cleanup
  * operations: push-inbox does not set subscription listener
  * fixes & TODO notes
  * operations: Notify.transaction() must call cb()
  * retrieve-node-configuration
  * forms: configToResultForm -> configToForm
  * pubsub_client: RetrieveNodeConfiguration & ManageNodeConfiguration
  * operations: catch reply cb exceptions
  * create-node operation
  * package.json: scripts
  * fixes
  * fix outgoing notifications
  * generify pubsub_notifications
  * many fixes for subscription pushing
  * router: if request writes, always go remote
  * push incoming notifications to local model
  * more subclassing of EventEmitter, incoming notifications handling
  * pubsub_server: unify PubsubRequest & PubsubOwnerRequest
  * merge request.coffee into pubsub_server.coffee
  * begin remote subscription pushing to local inbox
  * backend_pubsub: PubsubBackend.notify(): readability
  * tune to use single cb() instead of req.{reply,replyError}()
  * revive normalization
  * model_postgres: setSubscription(): coearce isSet to boolean
  * model_postgres: catch lost transactions
  * pubsub_client: error reporting, fix
  * subscribe reply status
  * model_postgres: setAffiliation() should check nodeExists()
  * fix disco.authorizeFor() usage
  * pubsub_client: fix <actor/> placement
  * refactor notifications a bit
  * pubsub_client: <actor/> placement fix
  * pubsub_client: fix <actor/> placement
  * pubsub_notifications: subscriptions/affiliations/config
  * fix registration/model callback parameters
  * operations: ManageNodeAffiliations validates accessModel & publishModel
  * setting configuration
  * fixes, fixes, config
  * only RegisterSetRequest should induce presence subscription
  * FIXME note
  * model_postgres: do not use rowCount
  * operations: Register created default configuration
  * pubsub_server: pubsub/inbox identity
  * fixes, StanzaError
  * implement pubsub_client operations
  * pubsub_notifications: byOperation()
  * fixes
  * fixes
  * fixes & debugging
  * fixes
  * debugging & fixes
  * fixes
  * begin discovering locally
  * fixes
  * Router.run: fix
  * fixes
  * operations: rename channel node to "posts"
  * begin notifications
  * a bit o' twiddling w/ subscription listeners
  * refactor router for remote requests
  * operations: subscribe/unsubscribe toggle affiliation none/member
  * router: rename frontend to backend
  * rename backend_postgres to model_postgres, revive router
  * main: move iqHandler to pubsub_server
  * manage, not only retrieve, subscriptions & affiliations
  * use subscribe sender as notification listener
  * backend_pubsub: replace ternary operator
  * need to store listener in subscriptions...
  * backend_pubsub: implement RequestCache
  * new untested buddycloud discovery with backend_pubsub.coffee
  * retrieve <actor/> generalized, begin using authorizeFor
  * ns: add BUDDYCLOUD_V1 xmlns
  * postgres.sql schema: updated column for more tables, author column for items
  * retrieving node affiliations
  * retrieving node subscriptions, fixes
  * backend_postgres: syntax fixes
  * operation: Register should set affiliation & subscription
  * retrieving subscriptions & affiliations
  * retracting items
  * publishing & retrieving items works
  * begin item retrieving
  * subscribe & unsubscribe
  * fix backend_postgres (user is a Pg keyword, must be quoted as column name)
  * publishing works
  * lots of fixes
  * fix disco requests
  * fix, fix, fix
  * begin implementing register & publish implementation
  * mv src/operations.coffee src/local/operations.coffee
  * revive backend
  * primitive operations
  * mv controller.coffee operations.coffee
  * dead code TODO
  * fixes
  * rm old dead code
  * rename iqhandler to request
  * begin some refactoring
  * begin hooking up handlers with operations
  * xmpp/pubsub_server: indicate operation types
  * notes
  * pubsub_server: PubsubOwnerHandlers
  * pubsub_server: flesh out more pubsub handlers
  * add affiliations checking
  * begin interweaving with local operations
  * a tad of interconnecting
  * pubsub_server: DiscoInfoHandler.reply()
  * xmpp client 'n stuff
  * README: draw new design
  * begin router
  * xmpp: move NS_* to ns.coffee
  * xmpp: primitive disco info works
  * begin iqhandler
  * xmpp/connection: port presence tracking
  * rm main.js
  * move src files around
  * rm model_couchdb from config, add preliminary main.coffee
  * a bit new controller
  * rm old test_controller
  * some controller work
  * old controller translated to coffeescript
  * port peripheral stuff over to coffeescript
  * README: change ejabberd port to the config default one
  * model_couchdb: s/doc.subscribers/doc.subscriptions/
  * xmpp_pubsub.js: fix typo
  * model_postgres: check nodeExists before any data modification
  * preliminary RSM (XEP-0059) implementation for retrieve-items/retrieve
  * model_couchdb: stub getUpdatesByTime()
  * MAM should result in direct message, not broadcast notification to all resources
  * MAM w/ working model_postgres backend
  * begin implementing MAM
  * controller: register/register should create /user/<jid>/subscriptions node
  * normalize fixes + tests
  * normalize
  * only one child element per item
  * model_postgres: fix setConfig()
  * model_postgres: listNodesByUser()
  * model_couchdb: listNodesByUser(), simplify listNodes()
  * controller, xmpp_pubsub: browse-nodes/by-user
  * model_postgres setConfig(): fixes
  * configuration notification
  * model_postgres setConfig(): do not set fields unspecified/without defaultConfig
  * model_postgres nodeExists(): indentation
  * controller: subscribe should not require preexisting affiliation
  * xmpp_pubsub: fix manage-subscriptions/retrieve result usage
  * controller: allow retrieving subscriptions & affiliations for members
  * xmpp_pubsub: syntax fix
  * model_postgres: fix queue pushing
  * xmpp_pubsub: fix info discovery reply FORM_TYPE
  * model_postgres: config fixes
  * more on extended config
  * model_couchdb, model_postgres: more flexible config schema
  * config: description, type, creationDate; setConfig() on create-node/register
  * xmpp_pubsub: optimize presence tracking
  * controller: requiredAffiliation='member' for config-node/retrieve
  * README: OpenFire
  * controller: defaultConfig() + use in feature 'config-node'
  * xmpp_pubsub: replace isOnline() with getOnlineResources()
  * model_postgres: fix transaction dequeueing
  * model_postgres: move cb() past process.nextTick/dbIsAvailable for safety
  * model_postgres: work around empty responses
  * test_controller: retract
  * xmpp_pubsub: disco <identity/> according to discovered @node
  * test_controller: browse-nodes
  * model_couchdb: fix preload() etag extraction + error reporting
  * xmpp_pubsub: FeatureNotImplemented message
  * controller: simulate a stack for debug info
  * test_controller: retract skeleton
  * controller unsubscribe: do not fetch affiliation from database but check by node path
  * implement & test unsubscribe
  * test_controller: skeletons
  * test_controller: publishing tests
  * test_controller: more publish testing + controller fix
  * test_controller: begin test publishing
  * model_postgres: fix forgotten variable
  * model_postgres: reconnect to database upon error
  * model_postgres: oops, syntax error
  * config.js.example: postgres is actually the one with a poolSize
  * model_postgres: oops, syntax errors
  * begin test_controller
  * fixes
  * subscriptionModified <message/>
  * xmpp_pubsub: "message" & approve() fixes
  * controller: replace ownerNotification with afterTransaction
  * access_model authorize
  * package.json & README
  * errors: pull inherits() from util/utils/sys for moving node api
  * browse open nodes with service discovery items
  * controller: refactor affiliations checking
  * xmpp_pubsub: fix subscriptions format
  * controller: treat missing accessModel as 'open'
  * model_couchdb: preload() etag fix
  * .gitignore with config.js
  * xmpp_pubsub: node config on disco info
  * model_couchdb: encodeURIComponent() only for db.head() & .get()
  * main.js: #!
  * rename config.js to config.js.example
  * restore default config.js
  * main.js: on uncaughtException
  * postgres doc & config
  * model_postgres
  * model_couchdb: fix item deserialization
  * model_couchdb: rm implemented TODOs
  * README: CouchDB configuration
  * README: TODO++
  * LICENSE
  * README: markdown fix
  * README: mention buddycloud :)
  * model_couchdb: fix views initialization
  * README & config
  * jabber:iq:register
  * model_couchdb: fixes
  * errors fixing
  * rm model_persistence
  * model_couchdb: assertNodeName()
  * main: catch uncaughtException
  * controller: fix
  * bugs, readability
  * model_couchdb: fixing
  * controller: implement affiliations checking
  * xmpp_pubsub: getAffiliations() result is now Array
  * model_couchdb: setSubscription() & setAffiliation() 'none'
  * model_couchdb: consolidate subscriptions & affiliations model
  * xmpp_pubsub: send notifications with type='headline'
  * xmpp_pubsub: subscribeIfNeeded() on <create/> & <subscribe/>
  * model_couchdb: load() shortcut when already cached
  * model_couchdb: createNode() fix
  * model_couchdb: preload()
  * model_couchdb: commit read documents too for integrity
  * model_couchdb: abstract views
  * CouchDB Optimistic Concurrency Control layer
  * controller: improve error propagation
  * defined error conditions
  * untested configuration getting/setting
  * service discovery
  * modify-affiliations
  * model_couchdb: getAffiliation()
  * begin permission checking infrastructure
  * presence probes
  * xmpp_pubsub: presence tracking
  * refactoring controller complete
  * continue refactoring controller into features/operations
  * begin refactoring controller into features/operations
  * subscribers
  * getting subscriptions & affiliations
  * createNode improvements
  * controller createNode: check node
  * model_couchdb: affiliations view
  * items getting
  * much more progress
  * implement retraction, s/notifySubscriber/notify/, s/writeItems/writeItem/
  * publish notification works
  * more frontend hooking
  * begin notification hooks
  * fixes
  * begin model_couchdb transactions
  * split model
  * some progress
  * some progress
  * createNode creates owner affiliation
  * model: indexes
  [ Thomas Jost ]
  * Add @denisw to contributors
  * Upgrade required node version to 0.8
  * We actually need remote subscriptions nodes
  * Merge branch 'feature/anon-fixes' into develop
  * Merge branch 'feature/really-validate-post-times' into develop
  * Reject remote posts with invalid dates
  * Add tests for remote posts with invalid dates
  * Force anon subscriptions to be temporary
  * Set default affiliation to 'none' for anon users
  * Merge branch 'feature/anon-fixes' into develop
  * Cleanup: remove some dead code
  * Purge remote nodes with no local subscription left
  * Merge branch 'feature/recent-items' into develop
  * Merge branch 'feature/validate-remote-items' into develop
  * Sort recent items by update time
  * Merge branch 'feature/validate-remote-items' into feature/recent-items
  * Fix tests that push remote items
  * Validate remote items
  * Add (failing) tests for invalid remote items
  * Implement recent items query
  * Add (failing) test for recent items query
  * PubSub replies can include several elements
  * Merge branch 'feature/pusher' into develop
  * Workaround callback woes
  * Fix MAM for pusher component
  * Pusher: test MAM
  * test_server: move makePublishIq into TestServer
  * Pusher: test node configuration
  * Pusher: test unsubscriptions
  * Merge branch 'feature/affiliations-fixes' into develop
  * Merge branch 'feature/pubsub-disco-features' into develop
  * Cleanup
  * Expose all implemented PubSub features
  * Pusher: test affiliations
  * Merge branch 'feature/affiliations-fixes' into feature/pusher
  * Fix affiliation in /subscriptions notifications
  * Accept PubSub-compliant affiliations notifications
  * Pusher: test subscriptions
  * Merge branch 'feature/fix-98' into develop
  * Fix SQL for updating replies
  * Add failing test for issue #98
  * Fix offline user cleanup
  * DB: drop anonymous column
  * Yet another federation test
  * Check if the example config file is valid JS
  * Add tests for pusher code
  * Pusher can MAM everything
  * Pusher is a listener for all notifications
  * Add config for pusher component
  * Merge branch 'feature/mam-fixes' into develop
  * Increase the default number of items in a MAM response
  * Make MAM return an error if there are too many results
  * Use RSM in MAM
  * Test MAM RSM
  * MAM: filter bad dates out
  * Test if MAM validates dates correctly
  * Ensure the giant MAM test doesn't pollute the test environment
  * Make affiliations notifications PubSub-compliant
  * Affiliations have update timestamps too
  * Avoid temporary subscriptions in MAM results
  * Advertise support for MAM in disco#info
  * Add a giant MAM test
  * Update Travis URL in README.md
  * Merge branch 'feature/tests' into develop
  * Correctly tests that updated items don't change <in-reply-to/>
  * Move tests on updated items to a different function
  * Add tests for updates that change <in-reply-to/>
  * Use Travis to automate testing
  * Merge branch 'master' into develop
  * Add compatibility with PostgreSQL 9.1
  * Require at least one item to retract
  * Add Emacs folding marks
  * Add retrieve and retract tests
  * Fix retraction stanza sent to remote services
  * Tombstones: include Atom namespace in <updated/> element
  * Fix error when not allowed to retract an item
  * Tombstones can't be updated
  * When publishing an update, check if the actor is the original author
  * Check if original post exists before publishing a reply
  * Reject posts from non-users
  * Don't include type in <actor/>
  * Complete post/update/retract tests
  * TestServer: fix Atom in-reply-to element
  * Fail when some unwanted event happens
  * Add description for calls to "should.exist"
  * Retraction tests
  * Workaround CoffeeScript weird scoping rules
  * Add another batch of tests
  * Update test data
  * Change the way the test server emits IQ stanzas
  * Tests for posting to remote channels
  * Test server: emit event for IQs with unknown ID
  * Test server: disco info for "remote" servers
  * More post tests
  * Add helper to run tests that trigger several different stanzas
  * Test server: handle <message/> stanzas
  * Add post tests
  * Post tests: helper to check if post was successful
  * Throw an exception when getting an unexpected error IQ
  * Start adding post tests
  * Add helpers for pubsub get IQs and Atom handling
  * Helpers to add initial test data in the database
  * Add XMPP namespaces to test_server.coffee
  * Reply to presence probes
  * Don't parse Elements again
  * Use same user and server names as in sfc
  * Safe path handling in prepare-db.sh
  * Add codo-like doc to the TestServer class
  * Add helpers to build disco and pubsub IQs
  * Expose support for PubSub node creation
  * Skip a test
  * More channel creation tests
  * New tests and helpers for forms
  * Add a helper to parse disco#info replies
  * Move common disco replies to test_server.coffee
  * Start testing for channel creation
  * Test server: handle disco#items queries
  * Make tests runnable using "npm test"
  * Basic disco tests
  * Start a test suite
  * Use an existing component connection if provided in config
  * Make it possible to require() the server
  * Update config.js.example
  * Fix autosubscribeNewUsers
  * Increase the max number of items in each RSM page
  * Better shrinking of oversized stanzas
  * Include `-dirty' in version number from git
  * Remove glob from dependencies
  * Fix indentation in main.coffee
  * Prevent existing persistent subscription from being made temporary
  * Merge branch 'feature/version-number-from-git' into develop
  * Expose support for XEP-0092 (Software Version) in disco
  * Use `git describe' to get version numbers in dev branches
  * Merge branch 'master' into next
  * Restore compatibility with Node 0.6
  * Fix handling of offline users
  * Avoid race condition in disco cache
  * Shrink oversized stanzas more aggressively
  * Avoid nulls
  * Include new files in release tarball
  * Avoid race condition in disco cache
  * Merge remote-tracking branch 'upstream/tempsub' into next
  * Merge branch 'db-versioning' into next
  * buddycloud-server 0.3.5
  * Check if remote supports temporary subscription before sending a tempsub request
  * Client can check for server features before sending an IQ
  * Make server features discoverable
  * Log errors when processing incoming messages
  * Cleanup
  * Remove empty text nodes from items
  * Fix ActivityStreams verb for replies
  * Include operation name in debug message
  * Don't notify unsubscribe when it was a temporary subscription
  * Offline user cleanup: do real unsubscribe operations
  * I'm dumb
  * Don't delete temporary subscriptions during sync
  * Don't send any notification for temporary subscriptions
  * Client and server must speak the same language
  * Only send notifications about temporary subscriptions to remote listeners
  * Cleanup offline users
  * Claim we support subscription options
  * Temporary subscriptions
  * Fix updating items
  * Add help channels to default autosubscriptions
  * Merge branch 'log-fix'
  * Inspect objets in log messages
  * Fix broken log messages
  * Don't write subscription stanzas in items table
  * Merge remote-tracking branch 'lloyd/config'
  * Populate in_reply_to column when inserting new items
  * DB cleanup at startup
  * Add README for DB schema versioning
  * Upgrade DB schema
  * Check DB schema version on startup
  * Don't change <published/> when updating an existing post
  * Fix subscription to remote private channels
  * Don't fail when the default config file does not exist
  * Add Lloyd in contributors
  * Better logging for replies sent by 'proxy' components
  * Merge branch 'mam-result'
  * Include <result/> in MAM replies
  * Merge remote-tracking branch 'schnouki/atom-tombstones'
  * Fix typo
  * Merge pull request #61 from lloydwatkin/no-mod_disco
  * Also send tombstones in retract notifications
  * Use Atom tombstones for deleted items
  * xmpp: XEP-0313 compliance
  * Handle PubSub retract "notify" attribute
  * operations: fix PushInbox notification
  * Fix undefined variable when paging backwards in RSM
  [ Tuomas Koski ]
  * Merge pull request #59 from lloydwatkin/initialise-sync
  * Merge pull request #58 from lloydwatkin/master
  [ Steven Lloyd Watkin ]
  * Ensure we do not cause BC breaks
  * Make both defaults positive rather than one positive & the other negative Broke the config options down further
  * Fix build console output
  * "package" now a reserved word in node, caused failing in builds (v0.6.15+)
  [ Denis Washington ]
  * Use local CoffeeScript "cake" for "npm install"
  [ Jonas Smedegaard ]
  * Setup access rights and needed dirs when starting daemon
  * Speedup system shutdown by avoiding explicit sysV stop
  * xmpp_pubsub: check for commandEl prior usage
  [ Reginald dude ]
  * updates sent via email from vorner.cz
  * updates sent via email from vorner.cz
  [ Reginald Dude ]
  * Most confusing config file ever
  [ ▟ ▖▟ ▖ ]
  * Merge pull request #70 from lloydwatkin/fix-is-function
  * Merge pull request #63 from lloydwatkin/no-mod_disco
  * Merge pull request #62 from lloydwatkin/no-mod_disco
  * Merge pull request #57 from Schnouki/xep-0313
  * Merge pull request #54 from Schnouki/fix-notif
  * Merge pull request #52 from lloydwatkin/master
  * Merge pull request #51 from lloydwatkin/master
  [ James Tait ]
  * Ensure both the PID dir and log dir are created on startup if they do not already exist.
  [ imaginator ]
  * aligning with INSTALL instructions
  * moved instructions to wiki
  * Edited README.md via GitHub
  [ dodo ]
  * fix accessModel of geo nodes
  * always test in production
  * buddycloud-server 0.3.4
  * Merge branch 'packaging'
  * put the /etc/init.d script into tarball
  * not needed anymore
  * default options for new channels
  * bump tarballify version
  * add bin/buddycloud-server to the tarball
  * no build step in bin/buddycloud-server anymore
  * print additional info messages in gray
  * fix 'file is not defined'
  * fix 'modName is not defined'
  * colorful output for package.js
  * bump tarballify version
  * rm trailing spaces
  * no build_binary.sh needed
  * separate devDependencies
  * export name
  * use packaging script
  * buddycloud-server 0.3.3
  * pass prefix to npm to force npm to use that particular prefix
  * $PREFIX/bin/buddycloud-server can be nonexistant .. so ignore all errors when removing
  * bump node version in build script
  * merge issue #37
  * specify interal config file as defaults, not as main config
  * backports to node 0.4
  * concat cwd path to config path only when config path is relative
  * respect the cwd
  * move to the right dir before builing
  * wscript is not needed anymore
  * merged #31. symlink detection for bin/buddycloud-server thanks to @highfellow
  * fixed gitignore
  * forgot Cakefile
  * pin node version for over 0.5 to get the require json working
  * get version directly
  * new buildsystem
  * check if config.syslog has keys
  * dont load default config over opts and args
  * main: fix config loading
  * wscript fixes
  * load config via jsconfig
  * update wscript
  * upgrade build environment
  * update requirements in readme
  * cleanup files
  [ Simon Tennant ]
  * Update config.js.example
  * change to read config file from /opt/buddycloud
  * Update master
  * don't be so --quiet (will help a lot with debugging)
  * Update _etc_init.d_buddycloud-server
  * the orwell defeault was causing jdesenberg problems.
  * Fixed the permissions to run as.
  * Update _etc_init.d_buddycloud-server
  * init script
  * make it really clear what to change (and what "jid" refers to)
  * Made the ownership of tables really clear. Should help avoid the problem that DD had the other day.
  [ Lloyd Watkin ]
  * Fix for checking of child element
  * Catch error event
  * Fix for server reset
  * Updated variable names to better describe what config does.
  * Merge branch 'master' of git://github.com/buddycloud/buddycloud-server into no-mod_disco
  * Allow buddycloud server to advertise additional 'proxy' components
  * Wait to sync
  * Rename of parameter
  * Allow user to specify a port or not, changed argument name as it may not actually be remote debugging.
  * Tidy up
  * Allow node.js debugging
  [ Simon ]
  * /etc/init.d/buddycloud-server

 -- Abmar Barros (buddycloud Nightly Builds) <abmar@buddycloud.com>  Sat, 26 Jan 2013 15:03:09 -0300


buddycloud-server (0.1) unstable; urgency=medium

  [ Astro ]
  * operations: all nodes in defaultConfiguration accessModel=authorize
  * operations: posts & subscriptions accessModel=authorize in defaultConfiguration
  * buddycloud-server 0.3.2
  * Cakefile: version.js + 

  * operations: fix run notifications control flow
  * build_binary.sh: get bin/buddycloud-server out of the way before npm i
  * buddycloud-server 0.3.1
  * package.json: honor all contributors
  * Merge remote-tracking branch 'schnouki/patch-1'
  * .npmignore: exclude debian/* from npm pkgs
  * buddycloud-server 0.3.0
  * package.json: bump dep versions
  * operations: prevent unsubscribing/demoting the node owner
  * operations: fix PushInbox callback
  * operations: run notifies first, then syncs, then calls back
  * pubsub_server: lower logging
  * operations: fix PushInbox newNodes
  * operations: move PushInbox syncNode post transaction
  * operations: PushInbox should work even if syncNode had hickups
  * operations: syncNode when PushInbox created it
  * operations: fix PushInbox notification & newModerators
  * model_postgres: fix & simplify purgeNode()
  * sync: fixes
  * sync: purge node if no local subscribers
  * purge node when local unsubscription is pushed from remote
  * operations: fix generateSubscriptionsNotifications followee
  * operations: fix PushInbox newModerators nodes
  * xmpp connection: doc, serialize stanzas only once
  * operations: NewModeratorNotify needs listener, not user
  * operations: fix NewModeratorNotify listener
  * operations: log Operation name
  * model_postgres: must quote "user" column for Postgres
  * operations: NewModeratorNotify must cb()
  * operations: Notify notifies w/ node
  * operations: fix Notify otherListeners
  * pubsub_client: rm debug
  * operations: NewModeratorNotify notifies w/ node & listener
  * model_postgres: optional Transaction callbacks
  * operations: fix Notify filterSubscription & filterAffiliation invokation
  * operations: fix this binding
  * operations: no pending subscriptions in subscriptions node
  * operations: NewModeratorNotify
  * operations: doc, filter subscriptions and affiliations for non-moderators
  * operations: reorganize
  * clean up logging
  * operations: posts node defaultAffiliation='publisher'
  * sync: fix AffiliationsSynchronization typo
  * buddycloud-server 0.2.3
  * package.json: fix install script
  * build_binary.sh: bump node.js version
  * buddycloud-server 0.2.2
  * package.json: add preinstall cake build
  * operations: fix notifications
  * build_binary.sh: bump node.js version
  * buddycloud-server 0.2.1
  * operations: fix Notify subscriptios node items
  * operations: fix Notify callback result
  * operations: BrowseNodeItems for subscriptions node calls getSubscriptions not getSubscription
  * operations: syntax fixes
  * operations: Notify subscriptions fixes
  * operations: subscriptions node notifications
  * operations: BrowseNodeItems for subscriptions node
  * sync: require errors
  * sync: avoid error output when omitting local node
  * router, sync: improve logging
  * backend_pubsub: PubsubBackend.notify listener robustness
  * operations: fix Subscribe defaultAffiliation
  * operations: fix ManageNodeAffiliations control flow
  * pubsub_server: PubsubOwnerSetAffiliationsRequest syntax fix
  * operations: fix requiredAffiliation()
  * operations: requiredAffiliation can be function to allow moderators approving topic channel subscribers
  * operations: ManageNodeSubscriptions refactor for efficiency
  * operations: ManageNodeSubscriptions should set new affiliations to defaultAffiliation
  * operations: fix Notify jid/user
  * operations: Notify should notify all users pertained by a subscription
  * operations: 'unsubscribe-node' notifies unsubscribed user
  * operations, pubsub_client: there's no "unsubscribed" subscription, only "none"
  * pubsub_server: PubsubOwnerSetSubscriptionsRequest syntax fix
  * operations: Unsubscribe needs PrivilegedOperation methods
  * operations: Unsubscribed is not a PrivilegedOperation but a ModelOperation
  * operations: fix callback scope
  * pubsub_server: robustify PubsubItemsRequest
  * operations: syntax
  * pubsub_server, operations: support for RetrieveItems by itemIds
  * build_binary.sh: bump node.js version to 0.6.10
  * buddycloud-server 0.2.0
  * operations: CreateNode should not allow creation with empty nodeUser username
  * operations: fix CreateNode defaults & creationDate
  * operations: fix CreateNode isTopic switcheroo
  * router: fix autosubscribeNewUsers operation name
  * router: autosubscribeNewUsers
  * config.js.example: default checkCreateNode hook checks for a specific topic domain
  * operations: fix CreateNode node typo
  * operations: fix CreateNode config
  * pubsub_server, operations: CreateNode with optional config
  * operations: fix CreateNode setSubscription()
  * operations: CreateNode catches missing checkCreateNode hook
  * operations: CreateNode default config
  * checkCreateNode config hook
  * model_postgres: fix getOwnersByNodePrefix SQL
  * operations: fix CreateNode setAffiliation()
  * operations: fix CreateNode getOwnersByNodePrefix()
  * operations: fix ../util require, CreateNode safety check
  * implement createNode with getOwnersByNodePrefix check
  * operations: begin creating topic channels
  * model_postgres: syntax fix
  * package.json: maintainer update
  * build_binary.sh: update to node 0.6.9
  * buddycloud-server 0.1.11
  * rsm_walk: fix logging
  * operations: checkAccessModel() before checkRequiredAffiliation()!
  * operations: Unsubscribe condition syntax fix
  * package.json: muffin dependency glob seems be incompatible in v3.*
  * operations: checkRequiredAffiliation should ignore no @requiredAffiliation
  * operations: fix isAffiliationAtLeast w/ invalid affiliation
  * jsconfig 0.2.0 is out! w00t!!!
  * Cakefile: lib/version.js from package.json
  * logger: update to ain2 1.0.0
  * main: fix config loading
  * buddycloud-server 0.1.10
  * router: fix syncServer()
  * buddycloud-server 0.1.9
  * bin/buddycloud-server: fix param quoting
  * bin/buddycloud-server: fix $cwd
  * buddycloud-server 0.1.8
  * .npmignore to package up built lib/* instead of src/*
  * build_binary.sh: install devDependencies beforehand
  * build_binary.sh: bump node.js version to 0.6.7
  * util: move getNodeUser(), getUserDomain()
  * main: "server successfully started"
  * sync: fix logging
  * model_postgres: fix writeItem() SQL parameter binding
  * sync: fix PaginatedSynchronization error callback
  * sync: rm TODO note
  * model_postgres: writeItem updated_query
  * operations: logging fixes
  * writeItem: move updated extraction from operations to model_postgres
  * model_postgres: writeItem should also INSERT existing updated value
  * model_postgres: fix syntax
  * model_postgres: SQL fixes
  * operations: PushInbox copies item published date
  * postgres schema: CREATE VIEW open_nodes + usage in model_postgres
  * model_postgres: fix query result handling
  * fix getTopFollowedNodes & getTopPublishedNodes parameters
  * model_postgres: fix SQL INTERVAL syntax
  * operations: BrowseNodes.fetchNodes() needs transaction
  * operations: BrowseNodes.transaction should use @fetchNodes()
  * operations: fetchNodes() typo
  * pubsub_server: browse /top-followed-nodes & /top-published-nodes does not request a particular node
  * getTopFollowedNodes & getTopPublishedNodes w/ XMPP disco interface
  * build_binary.sh: bump to node 0.6.6
  * buddycloud-server 0.1.7
  * package.json: rm cradle dependency
  * logger: syslog only with hostname
  * replace common-logger by underscore.logger
  * update ain2 dependency for node v0.6 compatibility
  * model_postgres walkListenerArchive: replace DISTINCT with GROUP BY
  * model_postgres: fix config order/limig
  * operations: ReplayArchive sorts results before capping
  * ReplayArchive/walkListenerArchive: properly cap result set
  * operations: ReplayArchive default max=50
  * build_binary.sh: use $PREFIX from environment if present
  * package.json: req node-stringprep >=0.1.1
  * router: fix
  * buddycloud-server 0.1.6
  * update to new node-waf paths
  * build_binary.sh: switch to node 0.6.4
  * package.json: depend on 0.3.1
  * router: RSM usage fix
  * logger: open logFile for appending, fixes issue #25
  * package.json: depend on node-xmpp >= 0.3.0
  * operations ReplayArchive: fix rsm max
  * operations: ReplayArchive RSM support
  * backend_pubsub: notificationPush updates include sender & actor
  * router: detectUserType fixes
  * router: detectUserType fixes
  * logger: fix argument iteration
  * main, backend_pubsub: logging improvements
  * backend_pubsub: include user in notfound error
  * connection: loopback stanzas to ourselves
  * router: add missing util.inspect include
  * router.run: trace req
  * router: add missing rsm include
  * logger: typo
  * logger: fix level
  * logging clean-up
  * router, pubsub_{server,client}: @type in <actor/>
  * buddycloud-server 0.1.5
  * router: sync fixes
  * buddycloud-server 0.1.4
  * ManageNodeAffiliations: non-owner may not elect a new owner
  * sync: log upon completion
  * sync: transaction fix
  * move some sync logic into router, lock per node
  * operations: BrowseNodeInfo/RetrieveNodeConfiguration w/o access control
  * buddycloud-server 0.1.3
  * operations: deny Unsubscribe from own nodes
  * logger: ain2 syslog transport
  * logger: message always as string
  * main: fix --stdout kludge
  * logger: avoid log level < 0
  * config.js.example: syslog on by default
  * config.js.example: logging section
  * syslog support with ain2
  * support --stdout logging
  * replace cnlogger by common-logger
  * buddycloud-server 0.1.2
  * build_binary: npm install globally (into /opt/buddycloud-server/)
  * build_binary: dedup node & npm versions
  * build_binary: default to /opt/buddycloud-server, bin/ script
  * main: process.title fix
  * version: fix package.json path
  * version from package.json in process.title and for jabber:iq:version
  * xmpp/connection: do not subscribe in probePresence()
  * buddycloud-server 0.1.1
  * build_binary: bump node & npm versions
  * backend_pubsub: reply() must also copy 'replay' field on MaxStanzaSizeExceeded
  * connection: more stanza output when MaxStanzaSizeExceeded
  * don't send ReplayArchive notifications to all online resources
  * pubsub_client/connection: wrap error replies into StanzaError earlier
  * logging fixes
  * port to cnlogger
  * port to broken winston logging
  * xmpp connection: always tell node-xmpp to reconnect
  * async.filter iterator does not take error parameter
  * model_postgres: fix nodeExists warning
  * backend_pubsub: fix notification matching
  * sync: fix router.authorizeFor() usage
  * sync: writeItem does not need author anymore
  * operations: typo
  * model_postgres: fix getListenerAffiliations() query
  * sync: careful
  * xmpp/forms: oops, s/creationTime/creationDate/
  * xmpp/connection: fix name
  * router: check for anonymous user to be online
  * anonymous user offline tracking & clean-up
  * model_postgres: fix walkListenerArchive() node in results
  * router: fix method binding
  * model_postgres: walkListenerArchive() should include node in results
  * operations: RemoveUser & model_postgres.getUserRemoteSubscriptions() & clearUserSubscriptions()
  * BuddycloudDiscovery::detectAnonymousUser
  * backend_pubsub: gracefully handle MaxStanzaSizeExceeded for notifications
  * xmpp pubsub_server & connection: fix graceful MaxStanzaSizeExceeded handling
  * errors: MaxStanzaSizeExceeded extends Error
  * operations: s/geoloc/geo/
  * operations: /subscription items shall contain jid=owner
  * metadata buddycloud#channel_type
  * proper metadata field names
  * support for creationDate
  * operations: clarify logging
  * router: fix remote backend selection
  * operations: Unsubscribe refactor & fix
  * operations: fix Register
  * buddycloud-server 0.1.0
  * operation: print opName on commit, rm debug
  * bin/buddycloud-server: don't cd so config can be loaded relatively
  * Merge remote-tracking branch 'origin/cli'
  * operations: RetractItems should allow anyone to remove their own posts
  * operations: preserve affiliation if previously affiliated
  * operations: unify into isAffiliationAtLeast()
  * operations: rm leftover TODO note
  * operations: refactor Register; should check if authoritative for user's domain
  * router.run: return 404 for nodes not locally subscribed but discovered ourselves
  * rm explicit author handling in postgres schema, model, operations
  * main: check sender authorization for authorizationPrompt
  * operations: RetrieveItems shall not virtualize items for cache case of remote nodes
  * Revert "Made the ownership of tables really clear. Should help avoid the problem that DD had the other day."
  * s/channel-server/buddycloud-server/g
  * build_binary.sh: fix invokation hint
  * README: rm some outdated stuff
  * main: fix defaultConfig stuff
  * build_binary.sh
  * operations: RetrieveItems.retrieveSubscriptionsItems() result set sorting, affiliations
  * virtual handling of /user/.../subscriptions node items
  * MAM replays subscription authorization requests
  * more authorization stuff
  * fixes
  * small fixes
  * package.json: fix bin path
  * further authorizationPrompt work
  * backend_pubsub: missedSomething was missing
  * package.json: fix coffeescript path (./node_modules/...)
  * sending authorize notification forms
  * package.json: fix .coffee compilation stage
  * operations: PrivilegedOperation.fetchActorAffilliation fetches all listener affiliations for inbox sync
  * pubsub_notifications: fix MAM stanzas
  * operations: subscribe defaultAffiliation, fixes
  * model_postgres: many fixes
  * operations: publishModel 'subscribers'
  * operations: access control fixes
  * begin access control, affiliations checking
  * model_postgres: fixes
  * errors: fix error classes
  * xmpp/connection: fix
  * xmpp/connection: fix @missedServerTimeouts usage
  * model_postgres: safety checks
  * readability, notes
  * rsm_walk: fix serious errors
  * globally refactor operation from function to value
  * sync: fixes
  * add forgotten rsm_walk file
  * move syncQueue from main.coffee to fine-grained sync.syncNode
  * xmpp/connection: readability
  * xmpp/connection: track <you-missed-something/> timers with @missedServerTimeouts
  * syncServer support, wired up to <you-missed-something/> 'syncNeeded'
  * model_postgres: for an actor, getSubscriptions() shall return not only users but also listeners
  * MAM time specification
  * primitive MAM implementation
  * send <you-missed-something/>
  * operations: PushInbox TODO note
  * sync: rm request.rsm.max clamp
  * synchronization with state resetting and subscriptions/affiliations support
  * pubsub_*: fix user/jid conventions
  * ConfigSynchronization should use browse-node-info to get node config
  * synchronizing!
  * synchronization kinda works, but hits RSM loops
  * further synchronization progress
  * begin synchronization
  * main: require async
  * measure stanza size, gracefully retry with smaller result set
  * synchronization groundwork
  * don't let backend_pubsub call router.runLocally(), return errors.SeeLocal() instead
  * errors: clean up
  * normalize: add <link rel="self" href="xmpp:...?pubsub;action=retrieve;..."/>
  * operations: Publish shall allow new items with specified @id
  * nodes browsing, with RSM
  * backend_pubsub: run() should bail out early on invalid node form
  * PostgreSQL tuning
  * complete RSM implementation
  * begin RSM for all operations
  * generify RSM stuff
  * pubsub_client: RSM
  * fixes from CCCamp11
  * RSM for local items retrieving
  * begin new RSM implementation
  * pubsub_server: publish-node-items shall reply with item ids
  * model_postgres: fix getNodeListeners() SQL
  * model_postgres: nodeExists() shall check for NOT NULL
  * model_postgres: getNodeListener() replace filter by SQL
  * model_postgres: getNodeListener() filter for null
  * model_postgres: fix setSubscription() INSERT w/o listener
  * error printout
  * forms: fix
  * operations: PushInbox author fix
  * debug
  * xml child robustness
  * model_postgres: fix nodeExists()
  * fix subscription listener for local users
  * logging cleanup
  * initiate presence tracking of users
  * xmpp/connection: use send() instead of specifying from jid
  * some logging cleanup
  * operations: push-inbox does not set subscription listener
  * fixes & TODO notes
  * operations: Notify.transaction() must call cb()
  * retrieve-node-configuration
  * forms: configToResultForm -> configToForm
  * pubsub_client: RetrieveNodeConfiguration & ManageNodeConfiguration
  * operations: catch reply cb exceptions
  * create-node operation
  * package.json: scripts
  * fixes
  * fix outgoing notifications
  * generify pubsub_notifications
  * many fixes for subscription pushing
  * router: if request writes, always go remote
  * push incoming notifications to local model
  * more subclassing of EventEmitter, incoming notifications handling
  * pubsub_server: unify PubsubRequest & PubsubOwnerRequest
  * merge request.coffee into pubsub_server.coffee
  * begin remote subscription pushing to local inbox
  * backend_pubsub: PubsubBackend.notify(): readability
  * tune to use single cb() instead of req.{reply,replyError}()
  * revive normalization
  * model_postgres: setSubscription(): coearce isSet to boolean
  * model_postgres: catch lost transactions
  * pubsub_client: error reporting, fix
  * subscribe reply status
  * model_postgres: setAffiliation() should check nodeExists()
  * fix disco.authorizeFor() usage
  * pubsub_client: fix <actor/> placement
  * refactor notifications a bit
  * pubsub_client: <actor/> placement fix
  * pubsub_client: fix <actor/> placement
  * pubsub_notifications: subscriptions/affiliations/config
  * fix registration/model callback parameters
  * operations: ManageNodeAffiliations validates accessModel & publishModel
  * setting configuration
  * fixes, fixes, config
  * only RegisterSetRequest should induce presence subscription
  * FIXME note
  * model_postgres: do not use rowCount
  * operations: Register created default configuration
  * pubsub_server: pubsub/inbox identity
  * fixes, StanzaError
  * implement pubsub_client operations
  * pubsub_notifications: byOperation()
  * fixes
  * fixes
  * fixes & debugging
  * fixes
  * debugging & fixes
  * fixes
  * begin discovering locally
  * fixes
  * Router.run: fix
  * fixes
  * operations: rename channel node to "posts"
  * begin notifications
  * a bit o' twiddling w/ subscription listeners
  * refactor router for remote requests
  * operations: subscribe/unsubscribe toggle affiliation none/member
  * router: rename frontend to backend
  * rename backend_postgres to model_postgres, revive router
  * main: move iqHandler to pubsub_server
  * manage, not only retrieve, subscriptions & affiliations
  * use subscribe sender as notification listener
  * backend_pubsub: replace ternary operator
  * need to store listener in subscriptions...
  * backend_pubsub: implement RequestCache
  * new untested buddycloud discovery with backend_pubsub.coffee
  * retrieve <actor/> generalized, begin using authorizeFor
  * ns: add BUDDYCLOUD_V1 xmlns
  * postgres.sql schema: updated column for more tables, author column for items
  * retrieving node affiliations
  * retrieving node subscriptions, fixes
  * backend_postgres: syntax fixes
  * operation: Register should set affiliation & subscription
  * retrieving subscriptions & affiliations
  * retracting items
  * publishing & retrieving items works
  * begin item retrieving
  * subscribe & unsubscribe
  * fix backend_postgres (user is a Pg keyword, must be quoted as column name)
  * publishing works
  * lots of fixes
  * fix disco requests
  * fix, fix, fix
  * begin implementing register & publish implementation
  * mv src/operations.coffee src/local/operations.coffee
  * revive backend
  * primitive operations
  * mv controller.coffee operations.coffee
  * dead code TODO
  * fixes
  * rm old dead code
  * rename iqhandler to request
  * begin some refactoring
  * begin hooking up handlers with operations
  * xmpp/pubsub_server: indicate operation types
  * notes
  * pubsub_server: PubsubOwnerHandlers
  * pubsub_server: flesh out more pubsub handlers
  * add affiliations checking
  * begin interweaving with local operations
  * a tad of interconnecting
  * pubsub_server: DiscoInfoHandler.reply()
  * xmpp client 'n stuff
  * README: draw new design
  * begin router
  * xmpp: move NS_* to ns.coffee
  * xmpp: primitive disco info works
  * begin iqhandler
  * xmpp/connection: port presence tracking
  * rm main.js
  * move src files around
  * rm model_couchdb from config, add preliminary main.coffee
  * a bit new controller
  * rm old test_controller
  * some controller work
  * old controller translated to coffeescript
  * port peripheral stuff over to coffeescript
  * README: change ejabberd port to the config default one
  * model_couchdb: s/doc.subscribers/doc.subscriptions/
  * xmpp_pubsub.js: fix typo
  * model_postgres: check nodeExists before any data modification
  * preliminary RSM (XEP-0059) implementation for retrieve-items/retrieve
  * model_couchdb: stub getUpdatesByTime()
  * MAM should result in direct message, not broadcast notification to all resources
  * MAM w/ working model_postgres backend
  * begin implementing MAM
  * controller: register/register should create /user/<jid>/subscriptions node
  * normalize fixes + tests
  * normalize
  * only one child element per item
  * model_postgres: fix setConfig()
  * model_postgres: listNodesByUser()
  * model_couchdb: listNodesByUser(), simplify listNodes()
  * controller, xmpp_pubsub: browse-nodes/by-user
  * model_postgres setConfig(): fixes
  * configuration notification
  * model_postgres setConfig(): do not set fields unspecified/without defaultConfig
  * model_postgres nodeExists(): indentation
  * controller: subscribe should not require preexisting affiliation
  * xmpp_pubsub: fix manage-subscriptions/retrieve result usage
  * controller: allow retrieving subscriptions & affiliations for members
  * xmpp_pubsub: syntax fix
  * model_postgres: fix queue pushing
  * xmpp_pubsub: fix info discovery reply FORM_TYPE
  * model_postgres: config fixes
  * more on extended config
  * model_couchdb, model_postgres: more flexible config schema
  * config: description, type, creationDate; setConfig() on create-node/register
  * xmpp_pubsub: optimize presence tracking
  * controller: requiredAffiliation='member' for config-node/retrieve
  * README: OpenFire
  * controller: defaultConfig() + use in feature 'config-node'
  * xmpp_pubsub: replace isOnline() with getOnlineResources()
  * model_postgres: fix transaction dequeueing
  * model_postgres: move cb() past process.nextTick/dbIsAvailable for safety
  * model_postgres: work around empty responses
  * test_controller: retract
  * xmpp_pubsub: disco <identity/> according to discovered @node
  * test_controller: browse-nodes
  * model_couchdb: fix preload() etag extraction + error reporting
  * xmpp_pubsub: FeatureNotImplemented message
  * controller: simulate a stack for debug info
  * test_controller: retract skeleton
  * controller unsubscribe: do not fetch affiliation from database but check by node path
  * implement & test unsubscribe
  * test_controller: skeletons
  * test_controller: publishing tests
  * test_controller: more publish testing + controller fix
  * test_controller: begin test publishing
  * model_postgres: fix forgotten variable
  * model_postgres: reconnect to database upon error
  * model_postgres: oops, syntax error
  * config.js.example: postgres is actually the one with a poolSize
  * model_postgres: oops, syntax errors
  * begin test_controller
  * fixes
  * subscriptionModified <message/>
  * xmpp_pubsub: "message" & approve() fixes
  * controller: replace ownerNotification with afterTransaction
  * access_model authorize
  * package.json & README
  * errors: pull inherits() from util/utils/sys for moving node api
  * browse open nodes with service discovery items
  * controller: refactor affiliations checking
  * xmpp_pubsub: fix subscriptions format
  * controller: treat missing accessModel as 'open'
  * model_couchdb: preload() etag fix
  * .gitignore with config.js
  * xmpp_pubsub: node config on disco info
  * model_couchdb: encodeURIComponent() only for db.head() & .get()
  * main.js: #!
  * rename config.js to config.js.example
  * restore default config.js
  * main.js: on uncaughtException
  * postgres doc & config
  * model_postgres
  * model_couchdb: fix item deserialization
  * model_couchdb: rm implemented TODOs
  * README: CouchDB configuration
  * README: TODO++
  * LICENSE
  * README: markdown fix
  * README: mention buddycloud :)
  * model_couchdb: fix views initialization
  * README & config
  * jabber:iq:register
  * model_couchdb: fixes
  * errors fixing
  * rm model_persistence
  * model_couchdb: assertNodeName()
  * main: catch uncaughtException
  * controller: fix
  * bugs, readability
  * model_couchdb: fixing
  * controller: implement affiliations checking
  * xmpp_pubsub: getAffiliations() result is now Array
  * model_couchdb: setSubscription() & setAffiliation() 'none'
  * model_couchdb: consolidate subscriptions & affiliations model
  * xmpp_pubsub: send notifications with type='headline'
  * xmpp_pubsub: subscribeIfNeeded() on <create/> & <subscribe/>
  * model_couchdb: load() shortcut when already cached
  * model_couchdb: createNode() fix
  * model_couchdb: preload()
  * model_couchdb: commit read documents too for integrity
  * model_couchdb: abstract views
  * CouchDB Optimistic Concurrency Control layer
  * controller: improve error propagation
  * defined error conditions
  * untested configuration getting/setting
  * service discovery
  * modify-affiliations
  * model_couchdb: getAffiliation()
  * begin permission checking infrastructure
  * presence probes
  * xmpp_pubsub: presence tracking
  * refactoring controller complete
  * continue refactoring controller into features/operations
  * begin refactoring controller into features/operations
  * subscribers
  * getting subscriptions & affiliations
  * createNode improvements
  * controller createNode: check node
  * model_couchdb: affiliations view
  * items getting
  * much more progress
  * implement retraction, s/notifySubscriber/notify/, s/writeItems/writeItem/
  * publish notification works
  * more frontend hooking
  * begin notification hooks
  * fixes
  * begin model_couchdb transactions
  * split model
  * some progress
  * some progress
  * createNode creates owner affiliation
  * model: indexes
  [ Thomas Jost ]
  * Add @denisw to contributors
  * Upgrade required node version to 0.8
  * We actually need remote subscriptions nodes
  * Merge branch 'feature/anon-fixes' into develop
  * Merge branch 'feature/really-validate-post-times' into develop
  * Reject remote posts with invalid dates
  * Add tests for remote posts with invalid dates
  * Force anon subscriptions to be temporary
  * Set default affiliation to 'none' for anon users
  * Merge branch 'feature/anon-fixes' into develop
  * Cleanup: remove some dead code
  * Purge remote nodes with no local subscription left
  * Merge branch 'feature/recent-items' into develop
  * Merge branch 'feature/validate-remote-items' into develop
  * Sort recent items by update time
  * Merge branch 'feature/validate-remote-items' into feature/recent-items
  * Fix tests that push remote items
  * Validate remote items
  * Add (failing) tests for invalid remote items
  * Implement recent items query
  * Add (failing) test for recent items query
  * PubSub replies can include several elements
  * Merge branch 'feature/pusher' into develop
  * Workaround callback woes
  * Fix MAM for pusher component
  * Pusher: test MAM
  * test_server: move makePublishIq into TestServer
  * Pusher: test node configuration
  * Pusher: test unsubscriptions
  * Merge branch 'feature/affiliations-fixes' into develop
  * Merge branch 'feature/pubsub-disco-features' into develop
  * Cleanup
  * Expose all implemented PubSub features
  * Pusher: test affiliations
  * Merge branch 'feature/affiliations-fixes' into feature/pusher
  * Fix affiliation in /subscriptions notifications
  * Accept PubSub-compliant affiliations notifications
  * Pusher: test subscriptions
  * Merge branch 'feature/fix-98' into develop
  * Fix SQL for updating replies
  * Add failing test for issue #98
  * Fix offline user cleanup
  * DB: drop anonymous column
  * Yet another federation test
  * Check if the example config file is valid JS
  * Add tests for pusher code
  * Pusher can MAM everything
  * Pusher is a listener for all notifications
  * Add config for pusher component
  * Merge branch 'feature/mam-fixes' into develop
  * Increase the default number of items in a MAM response
  * Make MAM return an error if there are too many results
  * Use RSM in MAM
  * Test MAM RSM
  * MAM: filter bad dates out
  * Test if MAM validates dates correctly
  * Ensure the giant MAM test doesn't pollute the test environment
  * Make affiliations notifications PubSub-compliant
  * Affiliations have update timestamps too
  * Avoid temporary subscriptions in MAM results
  * Advertise support for MAM in disco#info
  * Add a giant MAM test
  * Update Travis URL in README.md
  * Merge branch 'feature/tests' into develop
  * Correctly tests that updated items don't change <in-reply-to/>
  * Move tests on updated items to a different function
  * Add tests for updates that change <in-reply-to/>
  * Use Travis to automate testing
  * Merge branch 'master' into develop
  * Add compatibility with PostgreSQL 9.1
  * Require at least one item to retract
  * Add Emacs folding marks
  * Add retrieve and retract tests
  * Fix retraction stanza sent to remote services
  * Tombstones: include Atom namespace in <updated/> element
  * Fix error when not allowed to retract an item
  * Tombstones can't be updated
  * When publishing an update, check if the actor is the original author
  * Check if original post exists before publishing a reply
  * Reject posts from non-users
  * Don't include type in <actor/>
  * Complete post/update/retract tests
  * TestServer: fix Atom in-reply-to element
  * Fail when some unwanted event happens
  * Add description for calls to "should.exist"
  * Retraction tests
  * Workaround CoffeeScript weird scoping rules
  * Add another batch of tests
  * Update test data
  * Change the way the test server emits IQ stanzas
  * Tests for posting to remote channels
  * Test server: emit event for IQs with unknown ID
  * Test server: disco info for "remote" servers
  * More post tests
  * Add helper to run tests that trigger several different stanzas
  * Test server: handle <message/> stanzas
  * Add post tests
  * Post tests: helper to check if post was successful
  * Throw an exception when getting an unexpected error IQ
  * Start adding post tests
  * Add helpers for pubsub get IQs and Atom handling
  * Helpers to add initial test data in the database
  * Add XMPP namespaces to test_server.coffee
  * Reply to presence probes
  * Don't parse Elements again
  * Use same user and server names as in sfc
  * Safe path handling in prepare-db.sh
  * Add codo-like doc to the TestServer class
  * Add helpers to build disco and pubsub IQs
  * Expose support for PubSub node creation
  * Skip a test
  * More channel creation tests
  * New tests and helpers for forms
  * Add a helper to parse disco#info replies
  * Move common disco replies to test_server.coffee
  * Start testing for channel creation
  * Test server: handle disco#items queries
  * Make tests runnable using "npm test"
  * Basic disco tests
  * Start a test suite
  * Use an existing component connection if provided in config
  * Make it possible to require() the server
  * Update config.js.example
  * Fix autosubscribeNewUsers
  * Increase the max number of items in each RSM page
  * Better shrinking of oversized stanzas
  * Include `-dirty' in version number from git
  * Remove glob from dependencies
  * Fix indentation in main.coffee
  * Prevent existing persistent subscription from being made temporary
  * Merge branch 'feature/version-number-from-git' into develop
  * Expose support for XEP-0092 (Software Version) in disco
  * Use `git describe' to get version numbers in dev branches
  * Merge branch 'master' into next
  * Restore compatibility with Node 0.6
  * Fix handling of offline users
  * Avoid race condition in disco cache
  * Shrink oversized stanzas more aggressively
  * Avoid nulls
  * Include new files in release tarball
  * Avoid race condition in disco cache
  * Merge remote-tracking branch 'upstream/tempsub' into next
  * Merge branch 'db-versioning' into next
  * buddycloud-server 0.3.5
  * Check if remote supports temporary subscription before sending a tempsub request
  * Client can check for server features before sending an IQ
  * Make server features discoverable
  * Log errors when processing incoming messages
  * Cleanup
  * Remove empty text nodes from items
  * Fix ActivityStreams verb for replies
  * Include operation name in debug message
  * Don't notify unsubscribe when it was a temporary subscription
  * Offline user cleanup: do real unsubscribe operations
  * I'm dumb
  * Don't delete temporary subscriptions during sync
  * Don't send any notification for temporary subscriptions
  * Client and server must speak the same language
  * Only send notifications about temporary subscriptions to remote listeners
  * Cleanup offline users
  * Claim we support subscription options
  * Temporary subscriptions
  * Fix updating items
  * Add help channels to default autosubscriptions
  * Merge branch 'log-fix'
  * Inspect objets in log messages
  * Fix broken log messages
  * Don't write subscription stanzas in items table
  * Merge remote-tracking branch 'lloyd/config'
  * Populate in_reply_to column when inserting new items
  * DB cleanup at startup
  * Add README for DB schema versioning
  * Upgrade DB schema
  * Check DB schema version on startup
  * Don't change <published/> when updating an existing post
  * Fix subscription to remote private channels
  * Don't fail when the default config file does not exist
  * Add Lloyd in contributors
  * Better logging for replies sent by 'proxy' components
  * Merge branch 'mam-result'
  * Include <result/> in MAM replies
  * Merge remote-tracking branch 'schnouki/atom-tombstones'
  * Fix typo
  * Merge pull request #61 from lloydwatkin/no-mod_disco
  * Also send tombstones in retract notifications
  * Use Atom tombstones for deleted items
  * xmpp: XEP-0313 compliance
  * Handle PubSub retract "notify" attribute
  * operations: fix PushInbox notification
  * Fix undefined variable when paging backwards in RSM
  [ Tuomas Koski ]
  * Merge pull request #59 from lloydwatkin/initialise-sync
  * Merge pull request #58 from lloydwatkin/master
  [ Steven Lloyd Watkin ]
  * Ensure we do not cause BC breaks
  * Make both defaults positive rather than one positive & the other negative Broke the config options down further
  * Fix build console output
  * "package" now a reserved word in node, caused failing in builds (v0.6.15+)
  [ Denis Washington ]
  * Use local CoffeeScript "cake" for "npm install"
  [ Jonas Smedegaard ]
  * Setup access rights and needed dirs when starting daemon
  * Speedup system shutdown by avoiding explicit sysV stop
  * xmpp_pubsub: check for commandEl prior usage
  [ Reginald dude ]
  * updates sent via email from vorner.cz
  * updates sent via email from vorner.cz
  [ Reginald Dude ]
  * Most confusing config file ever
  [ ▟ ▖▟ ▖ ]
  * Merge pull request #70 from lloydwatkin/fix-is-function
  * Merge pull request #63 from lloydwatkin/no-mod_disco
  * Merge pull request #62 from lloydwatkin/no-mod_disco
  * Merge pull request #57 from Schnouki/xep-0313
  * Merge pull request #54 from Schnouki/fix-notif
  * Merge pull request #52 from lloydwatkin/master
  * Merge pull request #51 from lloydwatkin/master
  [ James Tait ]
  * Ensure both the PID dir and log dir are created on startup if they do not already exist.
  [ imaginator ]
  * aligning with INSTALL instructions
  * moved instructions to wiki
  * Edited README.md via GitHub
  [ dodo ]
  * fix accessModel of geo nodes
  * always test in production
  * buddycloud-server 0.3.4
  * Merge branch 'packaging'
  * put the /etc/init.d script into tarball
  * not needed anymore
  * default options for new channels
  * bump tarballify version
  * add bin/buddycloud-server to the tarball
  * no build step in bin/buddycloud-server anymore
  * print additional info messages in gray
  * fix 'file is not defined'
  * fix 'modName is not defined'
  * colorful output for package.js
  * bump tarballify version
  * rm trailing spaces
  * no build_binary.sh needed
  * separate devDependencies
  * export name
  * use packaging script
  * buddycloud-server 0.3.3
  * pass prefix to npm to force npm to use that particular prefix
  * $PREFIX/bin/buddycloud-server can be nonexistant .. so ignore all errors when removing
  * bump node version in build script
  * merge issue #37
  * specify interal config file as defaults, not as main config
  * backports to node 0.4
  * concat cwd path to config path only when config path is relative
  * respect the cwd
  * move to the right dir before builing
  * wscript is not needed anymore
  * merged #31. symlink detection for bin/buddycloud-server thanks to @highfellow
  * fixed gitignore
  * forgot Cakefile
  * pin node version for over 0.5 to get the require json working
  * get version directly
  * new buildsystem
  * check if config.syslog has keys
  * dont load default config over opts and args
  * main: fix config loading
  * wscript fixes
  * load config via jsconfig
  * update wscript
  * upgrade build environment
  * update requirements in readme
  * cleanup files
  [ Simon Tennant ]
  * Update config.js.example
  * change to read config file from /opt/buddycloud
  * Update master
  * don't be so --quiet (will help a lot with debugging)
  * Update _etc_init.d_buddycloud-server
  * the orwell defeault was causing jdesenberg problems.
  * Fixed the permissions to run as.
  * Update _etc_init.d_buddycloud-server
  * init script
  * make it really clear what to change (and what "jid" refers to)
  * Made the ownership of tables really clear. Should help avoid the problem that DD had the other day.
  [ Lloyd Watkin ]
  * Fix for checking of child element
  * Catch error event
  * Fix for server reset
  * Updated variable names to better describe what config does.
  * Merge branch 'master' of git://github.com/buddycloud/buddycloud-server into no-mod_disco
  * Allow buddycloud server to advertise additional 'proxy' components
  * Wait to sync
  * Rename of parameter
  * Allow user to specify a port or not, changed argument name as it may not actually be remote debugging.
  * Tidy up
  * Allow node.js debugging
  [ Simon ]
  * /etc/init.d/buddycloud-server

 -- Abmar Barros (buddycloud Nightly Builds) <abmar@buddycloud.com>  Sat, 26 Jan 2013 15:04:03 -0300


buddycloud-server (0.1) unstable; urgency=medium

  [ Astro ]
  * operations: all nodes in defaultConfiguration accessModel=authorize
  * operations: posts & subscriptions accessModel=authorize in defaultConfiguration
  * buddycloud-server 0.3.2
  * Cakefile: version.js + 

  * operations: fix run notifications control flow
  * build_binary.sh: get bin/buddycloud-server out of the way before npm i
  * buddycloud-server 0.3.1
  * package.json: honor all contributors
  * Merge remote-tracking branch 'schnouki/patch-1'
  * .npmignore: exclude debian/* from npm pkgs
  * buddycloud-server 0.3.0
  * package.json: bump dep versions
  * operations: prevent unsubscribing/demoting the node owner
  * operations: fix PushInbox callback
  * operations: run notifies first, then syncs, then calls back
  * pubsub_server: lower logging
  * operations: fix PushInbox newNodes
  * operations: move PushInbox syncNode post transaction
  * operations: PushInbox should work even if syncNode had hickups
  * operations: syncNode when PushInbox created it
  * operations: fix PushInbox notification & newModerators
  * model_postgres: fix & simplify purgeNode()
  * sync: fixes
  * sync: purge node if no local subscribers
  * purge node when local unsubscription is pushed from remote
  * operations: fix generateSubscriptionsNotifications followee
  * operations: fix PushInbox newModerators nodes
  * xmpp connection: doc, serialize stanzas only once
  * operations: NewModeratorNotify needs listener, not user
  * operations: fix NewModeratorNotify listener
  * operations: log Operation name
  * model_postgres: must quote "user" column for Postgres
  * operations: NewModeratorNotify must cb()
  * operations: Notify notifies w/ node
  * operations: fix Notify otherListeners
  * pubsub_client: rm debug
  * operations: NewModeratorNotify notifies w/ node & listener
  * model_postgres: optional Transaction callbacks
  * operations: fix Notify filterSubscription & filterAffiliation invokation
  * operations: fix this binding
  * operations: no pending subscriptions in subscriptions node
  * operations: NewModeratorNotify
  * operations: doc, filter subscriptions and affiliations for non-moderators
  * operations: reorganize
  * clean up logging
  * operations: posts node defaultAffiliation='publisher'
  * sync: fix AffiliationsSynchronization typo
  * buddycloud-server 0.2.3
  * package.json: fix install script
  * build_binary.sh: bump node.js version
  * buddycloud-server 0.2.2
  * package.json: add preinstall cake build
  * operations: fix notifications
  * build_binary.sh: bump node.js version
  * buddycloud-server 0.2.1
  * operations: fix Notify subscriptios node items
  * operations: fix Notify callback result
  * operations: BrowseNodeItems for subscriptions node calls getSubscriptions not getSubscription
  * operations: syntax fixes
  * operations: Notify subscriptions fixes
  * operations: subscriptions node notifications
  * operations: BrowseNodeItems for subscriptions node
  * sync: require errors
  * sync: avoid error output when omitting local node
  * router, sync: improve logging
  * backend_pubsub: PubsubBackend.notify listener robustness
  * operations: fix Subscribe defaultAffiliation
  * operations: fix ManageNodeAffiliations control flow
  * pubsub_server: PubsubOwnerSetAffiliationsRequest syntax fix
  * operations: fix requiredAffiliation()
  * operations: requiredAffiliation can be function to allow moderators approving topic channel subscribers
  * operations: ManageNodeSubscriptions refactor for efficiency
  * operations: ManageNodeSubscriptions should set new affiliations to defaultAffiliation
  * operations: fix Notify jid/user
  * operations: Notify should notify all users pertained by a subscription
  * operations: 'unsubscribe-node' notifies unsubscribed user
  * operations, pubsub_client: there's no "unsubscribed" subscription, only "none"
  * pubsub_server: PubsubOwnerSetSubscriptionsRequest syntax fix
  * operations: Unsubscribe needs PrivilegedOperation methods
  * operations: Unsubscribed is not a PrivilegedOperation but a ModelOperation
  * operations: fix callback scope
  * pubsub_server: robustify PubsubItemsRequest
  * operations: syntax
  * pubsub_server, operations: support for RetrieveItems by itemIds
  * build_binary.sh: bump node.js version to 0.6.10
  * buddycloud-server 0.2.0
  * operations: CreateNode should not allow creation with empty nodeUser username
  * operations: fix CreateNode defaults & creationDate
  * operations: fix CreateNode isTopic switcheroo
  * router: fix autosubscribeNewUsers operation name
  * router: autosubscribeNewUsers
  * config.js.example: default checkCreateNode hook checks for a specific topic domain
  * operations: fix CreateNode node typo
  * operations: fix CreateNode config
  * pubsub_server, operations: CreateNode with optional config
  * operations: fix CreateNode setSubscription()
  * operations: CreateNode catches missing checkCreateNode hook
  * operations: CreateNode default config
  * checkCreateNode config hook
  * model_postgres: fix getOwnersByNodePrefix SQL
  * operations: fix CreateNode setAffiliation()
  * operations: fix CreateNode getOwnersByNodePrefix()
  * operations: fix ../util require, CreateNode safety check
  * implement createNode with getOwnersByNodePrefix check
  * operations: begin creating topic channels
  * model_postgres: syntax fix
  * package.json: maintainer update
  * build_binary.sh: update to node 0.6.9
  * buddycloud-server 0.1.11
  * rsm_walk: fix logging
  * operations: checkAccessModel() before checkRequiredAffiliation()!
  * operations: Unsubscribe condition syntax fix
  * package.json: muffin dependency glob seems be incompatible in v3.*
  * operations: checkRequiredAffiliation should ignore no @requiredAffiliation
  * operations: fix isAffiliationAtLeast w/ invalid affiliation
  * jsconfig 0.2.0 is out! w00t!!!
  * Cakefile: lib/version.js from package.json
  * logger: update to ain2 1.0.0
  * main: fix config loading
  * buddycloud-server 0.1.10
  * router: fix syncServer()
  * buddycloud-server 0.1.9
  * bin/buddycloud-server: fix param quoting
  * bin/buddycloud-server: fix $cwd
  * buddycloud-server 0.1.8
  * .npmignore to package up built lib/* instead of src/*
  * build_binary.sh: install devDependencies beforehand
  * build_binary.sh: bump node.js version to 0.6.7
  * util: move getNodeUser(), getUserDomain()
  * main: "server successfully started"
  * sync: fix logging
  * model_postgres: fix writeItem() SQL parameter binding
  * sync: fix PaginatedSynchronization error callback
  * sync: rm TODO note
  * model_postgres: writeItem updated_query
  * operations: logging fixes
  * writeItem: move updated extraction from operations to model_postgres
  * model_postgres: writeItem should also INSERT existing updated value
  * model_postgres: fix syntax
  * model_postgres: SQL fixes
  * operations: PushInbox copies item published date
  * postgres schema: CREATE VIEW open_nodes + usage in model_postgres
  * model_postgres: fix query result handling
  * fix getTopFollowedNodes & getTopPublishedNodes parameters
  * model_postgres: fix SQL INTERVAL syntax
  * operations: BrowseNodes.fetchNodes() needs transaction
  * operations: BrowseNodes.transaction should use @fetchNodes()
  * operations: fetchNodes() typo
  * pubsub_server: browse /top-followed-nodes & /top-published-nodes does not request a particular node
  * getTopFollowedNodes & getTopPublishedNodes w/ XMPP disco interface
  * build_binary.sh: bump to node 0.6.6
  * buddycloud-server 0.1.7
  * package.json: rm cradle dependency
  * logger: syslog only with hostname
  * replace common-logger by underscore.logger
  * update ain2 dependency for node v0.6 compatibility
  * model_postgres walkListenerArchive: replace DISTINCT with GROUP BY
  * model_postgres: fix config order/limig
  * operations: ReplayArchive sorts results before capping
  * ReplayArchive/walkListenerArchive: properly cap result set
  * operations: ReplayArchive default max=50
  * build_binary.sh: use $PREFIX from environment if present
  * package.json: req node-stringprep >=0.1.1
  * router: fix
  * buddycloud-server 0.1.6
  * update to new node-waf paths
  * build_binary.sh: switch to node 0.6.4
  * package.json: depend on 0.3.1
  * router: RSM usage fix
  * logger: open logFile for appending, fixes issue #25
  * package.json: depend on node-xmpp >= 0.3.0
  * operations ReplayArchive: fix rsm max
  * operations: ReplayArchive RSM support
  * backend_pubsub: notificationPush updates include sender & actor
  * router: detectUserType fixes
  * router: detectUserType fixes
  * logger: fix argument iteration
  * main, backend_pubsub: logging improvements
  * backend_pubsub: include user in notfound error
  * connection: loopback stanzas to ourselves
  * router: add missing util.inspect include
  * router.run: trace req
  * router: add missing rsm include
  * logger: typo
  * logger: fix level
  * logging clean-up
  * router, pubsub_{server,client}: @type in <actor/>
  * buddycloud-server 0.1.5
  * router: sync fixes
  * buddycloud-server 0.1.4
  * ManageNodeAffiliations: non-owner may not elect a new owner
  * sync: log upon completion
  * sync: transaction fix
  * move some sync logic into router, lock per node
  * operations: BrowseNodeInfo/RetrieveNodeConfiguration w/o access control
  * buddycloud-server 0.1.3
  * operations: deny Unsubscribe from own nodes
  * logger: ain2 syslog transport
  * logger: message always as string
  * main: fix --stdout kludge
  * logger: avoid log level < 0
  * config.js.example: syslog on by default
  * config.js.example: logging section
  * syslog support with ain2
  * support --stdout logging
  * replace cnlogger by common-logger
  * buddycloud-server 0.1.2
  * build_binary: npm install globally (into /opt/buddycloud-server/)
  * build_binary: dedup node & npm versions
  * build_binary: default to /opt/buddycloud-server, bin/ script
  * main: process.title fix
  * version: fix package.json path
  * version from package.json in process.title and for jabber:iq:version
  * xmpp/connection: do not subscribe in probePresence()
  * buddycloud-server 0.1.1
  * build_binary: bump node & npm versions
  * backend_pubsub: reply() must also copy 'replay' field on MaxStanzaSizeExceeded
  * connection: more stanza output when MaxStanzaSizeExceeded
  * don't send ReplayArchive notifications to all online resources
  * pubsub_client/connection: wrap error replies into StanzaError earlier
  * logging fixes
  * port to cnlogger
  * port to broken winston logging
  * xmpp connection: always tell node-xmpp to reconnect
  * async.filter iterator does not take error parameter
  * model_postgres: fix nodeExists warning
  * backend_pubsub: fix notification matching
  * sync: fix router.authorizeFor() usage
  * sync: writeItem does not need author anymore
  * operations: typo
  * model_postgres: fix getListenerAffiliations() query
  * sync: careful
  * xmpp/forms: oops, s/creationTime/creationDate/
  * xmpp/connection: fix name
  * router: check for anonymous user to be online
  * anonymous user offline tracking & clean-up
  * model_postgres: fix walkListenerArchive() node in results
  * router: fix method binding
  * model_postgres: walkListenerArchive() should include node in results
  * operations: RemoveUser & model_postgres.getUserRemoteSubscriptions() & clearUserSubscriptions()
  * BuddycloudDiscovery::detectAnonymousUser
  * backend_pubsub: gracefully handle MaxStanzaSizeExceeded for notifications
  * xmpp pubsub_server & connection: fix graceful MaxStanzaSizeExceeded handling
  * errors: MaxStanzaSizeExceeded extends Error
  * operations: s/geoloc/geo/
  * operations: /subscription items shall contain jid=owner
  * metadata buddycloud#channel_type
  * proper metadata field names
  * support for creationDate
  * operations: clarify logging
  * router: fix remote backend selection
  * operations: Unsubscribe refactor & fix
  * operations: fix Register
  * buddycloud-server 0.1.0
  * operation: print opName on commit, rm debug
  * bin/buddycloud-server: don't cd so config can be loaded relatively
  * Merge remote-tracking branch 'origin/cli'
  * operations: RetractItems should allow anyone to remove their own posts
  * operations: preserve affiliation if previously affiliated
  * operations: unify into isAffiliationAtLeast()
  * operations: rm leftover TODO note
  * operations: refactor Register; should check if authoritative for user's domain
  * router.run: return 404 for nodes not locally subscribed but discovered ourselves
  * rm explicit author handling in postgres schema, model, operations
  * main: check sender authorization for authorizationPrompt
  * operations: RetrieveItems shall not virtualize items for cache case of remote nodes
  * Revert "Made the ownership of tables really clear. Should help avoid the problem that DD had the other day."
  * s/channel-server/buddycloud-server/g
  * build_binary.sh: fix invokation hint
  * README: rm some outdated stuff
  * main: fix defaultConfig stuff
  * build_binary.sh
  * operations: RetrieveItems.retrieveSubscriptionsItems() result set sorting, affiliations
  * virtual handling of /user/.../subscriptions node items
  * MAM replays subscription authorization requests
  * more authorization stuff
  * fixes
  * small fixes
  * package.json: fix bin path
  * further authorizationPrompt work
  * backend_pubsub: missedSomething was missing
  * package.json: fix coffeescript path (./node_modules/...)
  * sending authorize notification forms
  * package.json: fix .coffee compilation stage
  * operations: PrivilegedOperation.fetchActorAffilliation fetches all listener affiliations for inbox sync
  * pubsub_notifications: fix MAM stanzas
  * operations: subscribe defaultAffiliation, fixes
  * model_postgres: many fixes
  * operations: publishModel 'subscribers'
  * operations: access control fixes
  * begin access control, affiliations checking
  * model_postgres: fixes
  * errors: fix error classes
  * xmpp/connection: fix
  * xmpp/connection: fix @missedServerTimeouts usage
  * model_postgres: safety checks
  * readability, notes
  * rsm_walk: fix serious errors
  * globally refactor operation from function to value
  * sync: fixes
  * add forgotten rsm_walk file
  * move syncQueue from main.coffee to fine-grained sync.syncNode
  * xmpp/connection: readability
  * xmpp/connection: track <you-missed-something/> timers with @missedServerTimeouts
  * syncServer support, wired up to <you-missed-something/> 'syncNeeded'
  * model_postgres: for an actor, getSubscriptions() shall return not only users but also listeners
  * MAM time specification
  * primitive MAM implementation
  * send <you-missed-something/>
  * operations: PushInbox TODO note
  * sync: rm request.rsm.max clamp
  * synchronization with state resetting and subscriptions/affiliations support
  * pubsub_*: fix user/jid conventions
  * ConfigSynchronization should use browse-node-info to get node config
  * synchronizing!
  * synchronization kinda works, but hits RSM loops
  * further synchronization progress
  * begin synchronization
  * main: require async
  * measure stanza size, gracefully retry with smaller result set
  * synchronization groundwork
  * don't let backend_pubsub call router.runLocally(), return errors.SeeLocal() instead
  * errors: clean up
  * normalize: add <link rel="self" href="xmpp:...?pubsub;action=retrieve;..."/>
  * operations: Publish shall allow new items with specified @id
  * nodes browsing, with RSM
  * backend_pubsub: run() should bail out early on invalid node form
  * PostgreSQL tuning
  * complete RSM implementation
  * begin RSM for all operations
  * generify RSM stuff
  * pubsub_client: RSM
  * fixes from CCCamp11
  * RSM for local items retrieving
  * begin new RSM implementation
  * pubsub_server: publish-node-items shall reply with item ids
  * model_postgres: fix getNodeListeners() SQL
  * model_postgres: nodeExists() shall check for NOT NULL
  * model_postgres: getNodeListener() replace filter by SQL
  * model_postgres: getNodeListener() filter for null
  * model_postgres: fix setSubscription() INSERT w/o listener
  * error printout
  * forms: fix
  * operations: PushInbox author fix
  * debug
  * xml child robustness
  * model_postgres: fix nodeExists()
  * fix subscription listener for local users
  * logging cleanup
  * initiate presence tracking of users
  * xmpp/connection: use send() instead of specifying from jid
  * some logging cleanup
  * operations: push-inbox does not set subscription listener
  * fixes & TODO notes
  * operations: Notify.transaction() must call cb()
  * retrieve-node-configuration
  * forms: configToResultForm -> configToForm
  * pubsub_client: RetrieveNodeConfiguration & ManageNodeConfiguration
  * operations: catch reply cb exceptions
  * create-node operation
  * package.json: scripts
  * fixes
  * fix outgoing notifications
  * generify pubsub_notifications
  * many fixes for subscription pushing
  * router: if request writes, always go remote
  * push incoming notifications to local model
  * more subclassing of EventEmitter, incoming notifications handling
  * pubsub_server: unify PubsubRequest & PubsubOwnerRequest
  * merge request.coffee into pubsub_server.coffee
  * begin remote subscription pushing to local inbox
  * backend_pubsub: PubsubBackend.notify(): readability
  * tune to use single cb() instead of req.{reply,replyError}()
  * revive normalization
  * model_postgres: setSubscription(): coearce isSet to boolean
  * model_postgres: catch lost transactions
  * pubsub_client: error reporting, fix
  * subscribe reply status
  * model_postgres: setAffiliation() should check nodeExists()
  * fix disco.authorizeFor() usage
  * pubsub_client: fix <actor/> placement
  * refactor notifications a bit
  * pubsub_client: <actor/> placement fix
  * pubsub_client: fix <actor/> placement
  * pubsub_notifications: subscriptions/affiliations/config
  * fix registration/model callback parameters
  * operations: ManageNodeAffiliations validates accessModel & publishModel
  * setting configuration
  * fixes, fixes, config
  * only RegisterSetRequest should induce presence subscription
  * FIXME note
  * model_postgres: do not use rowCount
  * operations: Register created default configuration
  * pubsub_server: pubsub/inbox identity
  * fixes, StanzaError
  * implement pubsub_client operations
  * pubsub_notifications: byOperation()
  * fixes
  * fixes
  * fixes & debugging
  * fixes
  * debugging & fixes
  * fixes
  * begin discovering locally
  * fixes
  * Router.run: fix
  * fixes
  * operations: rename channel node to "posts"
  * begin notifications
  * a bit o' twiddling w/ subscription listeners
  * refactor router for remote requests
  * operations: subscribe/unsubscribe toggle affiliation none/member
  * router: rename frontend to backend
  * rename backend_postgres to model_postgres, revive router
  * main: move iqHandler to pubsub_server
  * manage, not only retrieve, subscriptions & affiliations
  * use subscribe sender as notification listener
  * backend_pubsub: replace ternary operator
  * need to store listener in subscriptions...
  * backend_pubsub: implement RequestCache
  * new untested buddycloud discovery with backend_pubsub.coffee
  * retrieve <actor/> generalized, begin using authorizeFor
  * ns: add BUDDYCLOUD_V1 xmlns
  * postgres.sql schema: updated column for more tables, author column for items
  * retrieving node affiliations
  * retrieving node subscriptions, fixes
  * backend_postgres: syntax fixes
  * operation: Register should set affiliation & subscription
  * retrieving subscriptions & affiliations
  * retracting items
  * publishing & retrieving items works
  * begin item retrieving
  * subscribe & unsubscribe
  * fix backend_postgres (user is a Pg keyword, must be quoted as column name)
  * publishing works
  * lots of fixes
  * fix disco requests
  * fix, fix, fix
  * begin implementing register & publish implementation
  * mv src/operations.coffee src/local/operations.coffee
  * revive backend
  * primitive operations
  * mv controller.coffee operations.coffee
  * dead code TODO
  * fixes
  * rm old dead code
  * rename iqhandler to request
  * begin some refactoring
  * begin hooking up handlers with operations
  * xmpp/pubsub_server: indicate operation types
  * notes
  * pubsub_server: PubsubOwnerHandlers
  * pubsub_server: flesh out more pubsub handlers
  * add affiliations checking
  * begin interweaving with local operations
  * a tad of interconnecting
  * pubsub_server: DiscoInfoHandler.reply()
  * xmpp client 'n stuff
  * README: draw new design
  * begin router
  * xmpp: move NS_* to ns.coffee
  * xmpp: primitive disco info works
  * begin iqhandler
  * xmpp/connection: port presence tracking
  * rm main.js
  * move src files around
  * rm model_couchdb from config, add preliminary main.coffee
  * a bit new controller
  * rm old test_controller
  * some controller work
  * old controller translated to coffeescript
  * port peripheral stuff over to coffeescript
  * README: change ejabberd port to the config default one
  * model_couchdb: s/doc.subscribers/doc.subscriptions/
  * xmpp_pubsub.js: fix typo
  * model_postgres: check nodeExists before any data modification
  * preliminary RSM (XEP-0059) implementation for retrieve-items/retrieve
  * model_couchdb: stub getUpdatesByTime()
  * MAM should result in direct message, not broadcast notification to all resources
  * MAM w/ working model_postgres backend
  * begin implementing MAM
  * controller: register/register should create /user/<jid>/subscriptions node
  * normalize fixes + tests
  * normalize
  * only one child element per item
  * model_postgres: fix setConfig()
  * model_postgres: listNodesByUser()
  * model_couchdb: listNodesByUser(), simplify listNodes()
  * controller, xmpp_pubsub: browse-nodes/by-user
  * model_postgres setConfig(): fixes
  * configuration notification
  * model_postgres setConfig(): do not set fields unspecified/without defaultConfig
  * model_postgres nodeExists(): indentation
  * controller: subscribe should not require preexisting affiliation
  * xmpp_pubsub: fix manage-subscriptions/retrieve result usage
  * controller: allow retrieving subscriptions & affiliations for members
  * xmpp_pubsub: syntax fix
  * model_postgres: fix queue pushing
  * xmpp_pubsub: fix info discovery reply FORM_TYPE
  * model_postgres: config fixes
  * more on extended config
  * model_couchdb, model_postgres: more flexible config schema
  * config: description, type, creationDate; setConfig() on create-node/register
  * xmpp_pubsub: optimize presence tracking
  * controller: requiredAffiliation='member' for config-node/retrieve
  * README: OpenFire
  * controller: defaultConfig() + use in feature 'config-node'
  * xmpp_pubsub: replace isOnline() with getOnlineResources()
  * model_postgres: fix transaction dequeueing
  * model_postgres: move cb() past process.nextTick/dbIsAvailable for safety
  * model_postgres: work around empty responses
  * test_controller: retract
  * xmpp_pubsub: disco <identity/> according to discovered @node
  * test_controller: browse-nodes
  * model_couchdb: fix preload() etag extraction + error reporting
  * xmpp_pubsub: FeatureNotImplemented message
  * controller: simulate a stack for debug info
  * test_controller: retract skeleton
  * controller unsubscribe: do not fetch affiliation from database but check by node path
  * implement & test unsubscribe
  * test_controller: skeletons
  * test_controller: publishing tests
  * test_controller: more publish testing + controller fix
  * test_controller: begin test publishing
  * model_postgres: fix forgotten variable
  * model_postgres: reconnect to database upon error
  * model_postgres: oops, syntax error
  * config.js.example: postgres is actually the one with a poolSize
  * model_postgres: oops, syntax errors
  * begin test_controller
  * fixes
  * subscriptionModified <message/>
  * xmpp_pubsub: "message" & approve() fixes
  * controller: replace ownerNotification with afterTransaction
  * access_model authorize
  * package.json & README
  * errors: pull inherits() from util/utils/sys for moving node api
  * browse open nodes with service discovery items
  * controller: refactor affiliations checking
  * xmpp_pubsub: fix subscriptions format
  * controller: treat missing accessModel as 'open'
  * model_couchdb: preload() etag fix
  * .gitignore with config.js
  * xmpp_pubsub: node config on disco info
  * model_couchdb: encodeURIComponent() only for db.head() & .get()
  * main.js: #!
  * rename config.js to config.js.example
  * restore default config.js
  * main.js: on uncaughtException
  * postgres doc & config
  * model_postgres
  * model_couchdb: fix item deserialization
  * model_couchdb: rm implemented TODOs
  * README: CouchDB configuration
  * README: TODO++
  * LICENSE
  * README: markdown fix
  * README: mention buddycloud :)
  * model_couchdb: fix views initialization
  * README & config
  * jabber:iq:register
  * model_couchdb: fixes
  * errors fixing
  * rm model_persistence
  * model_couchdb: assertNodeName()
  * main: catch uncaughtException
  * controller: fix
  * bugs, readability
  * model_couchdb: fixing
  * controller: implement affiliations checking
  * xmpp_pubsub: getAffiliations() result is now Array
  * model_couchdb: setSubscription() & setAffiliation() 'none'
  * model_couchdb: consolidate subscriptions & affiliations model
  * xmpp_pubsub: send notifications with type='headline'
  * xmpp_pubsub: subscribeIfNeeded() on <create/> & <subscribe/>
  * model_couchdb: load() shortcut when already cached
  * model_couchdb: createNode() fix
  * model_couchdb: preload()
  * model_couchdb: commit read documents too for integrity
  * model_couchdb: abstract views
  * CouchDB Optimistic Concurrency Control layer
  * controller: improve error propagation
  * defined error conditions
  * untested configuration getting/setting
  * service discovery
  * modify-affiliations
  * model_couchdb: getAffiliation()
  * begin permission checking infrastructure
  * presence probes
  * xmpp_pubsub: presence tracking
  * refactoring controller complete
  * continue refactoring controller into features/operations
  * begin refactoring controller into features/operations
  * subscribers
  * getting subscriptions & affiliations
  * createNode improvements
  * controller createNode: check node
  * model_couchdb: affiliations view
  * items getting
  * much more progress
  * implement retraction, s/notifySubscriber/notify/, s/writeItems/writeItem/
  * publish notification works
  * more frontend hooking
  * begin notification hooks
  * fixes
  * begin model_couchdb transactions
  * split model
  * some progress
  * some progress
  * createNode creates owner affiliation
  * model: indexes
  [ Thomas Jost ]
  * Add @denisw to contributors
  * Upgrade required node version to 0.8
  * We actually need remote subscriptions nodes
  * Merge branch 'feature/anon-fixes' into develop
  * Merge branch 'feature/really-validate-post-times' into develop
  * Reject remote posts with invalid dates
  * Add tests for remote posts with invalid dates
  * Force anon subscriptions to be temporary
  * Set default affiliation to 'none' for anon users
  * Merge branch 'feature/anon-fixes' into develop
  * Cleanup: remove some dead code
  * Purge remote nodes with no local subscription left
  * Merge branch 'feature/recent-items' into develop
  * Merge branch 'feature/validate-remote-items' into develop
  * Sort recent items by update time
  * Merge branch 'feature/validate-remote-items' into feature/recent-items
  * Fix tests that push remote items
  * Validate remote items
  * Add (failing) tests for invalid remote items
  * Implement recent items query
  * Add (failing) test for recent items query
  * PubSub replies can include several elements
  * Merge branch 'feature/pusher' into develop
  * Workaround callback woes
  * Fix MAM for pusher component
  * Pusher: test MAM
  * test_server: move makePublishIq into TestServer
  * Pusher: test node configuration
  * Pusher: test unsubscriptions
  * Merge branch 'feature/affiliations-fixes' into develop
  * Merge branch 'feature/pubsub-disco-features' into develop
  * Cleanup
  * Expose all implemented PubSub features
  * Pusher: test affiliations
  * Merge branch 'feature/affiliations-fixes' into feature/pusher
  * Fix affiliation in /subscriptions notifications
  * Accept PubSub-compliant affiliations notifications
  * Pusher: test subscriptions
  * Merge branch 'feature/fix-98' into develop
  * Fix SQL for updating replies
  * Add failing test for issue #98
  * Fix offline user cleanup
  * DB: drop anonymous column
  * Yet another federation test
  * Check if the example config file is valid JS
  * Add tests for pusher code
  * Pusher can MAM everything
  * Pusher is a listener for all notifications
  * Add config for pusher component
  * Merge branch 'feature/mam-fixes' into develop
  * Increase the default number of items in a MAM response
  * Make MAM return an error if there are too many results
  * Use RSM in MAM
  * Test MAM RSM
  * MAM: filter bad dates out
  * Test if MAM validates dates correctly
  * Ensure the giant MAM test doesn't pollute the test environment
  * Make affiliations notifications PubSub-compliant
  * Affiliations have update timestamps too
  * Avoid temporary subscriptions in MAM results
  * Advertise support for MAM in disco#info
  * Add a giant MAM test
  * Update Travis URL in README.md
  * Merge branch 'feature/tests' into develop
  * Correctly tests that updated items don't change <in-reply-to/>
  * Move tests on updated items to a different function
  * Add tests for updates that change <in-reply-to/>
  * Use Travis to automate testing
  * Merge branch 'master' into develop
  * Add compatibility with PostgreSQL 9.1
  * Require at least one item to retract
  * Add Emacs folding marks
  * Add retrieve and retract tests
  * Fix retraction stanza sent to remote services
  * Tombstones: include Atom namespace in <updated/> element
  * Fix error when not allowed to retract an item
  * Tombstones can't be updated
  * When publishing an update, check if the actor is the original author
  * Check if original post exists before publishing a reply
  * Reject posts from non-users
  * Don't include type in <actor/>
  * Complete post/update/retract tests
  * TestServer: fix Atom in-reply-to element
  * Fail when some unwanted event happens
  * Add description for calls to "should.exist"
  * Retraction tests
  * Workaround CoffeeScript weird scoping rules
  * Add another batch of tests
  * Update test data
  * Change the way the test server emits IQ stanzas
  * Tests for posting to remote channels
  * Test server: emit event for IQs with unknown ID
  * Test server: disco info for "remote" servers
  * More post tests
  * Add helper to run tests that trigger several different stanzas
  * Test server: handle <message/> stanzas
  * Add post tests
  * Post tests: helper to check if post was successful
  * Throw an exception when getting an unexpected error IQ
  * Start adding post tests
  * Add helpers for pubsub get IQs and Atom handling
  * Helpers to add initial test data in the database
  * Add XMPP namespaces to test_server.coffee
  * Reply to presence probes
  * Don't parse Elements again
  * Use same user and server names as in sfc
  * Safe path handling in prepare-db.sh
  * Add codo-like doc to the TestServer class
  * Add helpers to build disco and pubsub IQs
  * Expose support for PubSub node creation
  * Skip a test
  * More channel creation tests
  * New tests and helpers for forms
  * Add a helper to parse disco#info replies
  * Move common disco replies to test_server.coffee
  * Start testing for channel creation
  * Test server: handle disco#items queries
  * Make tests runnable using "npm test"
  * Basic disco tests
  * Start a test suite
  * Use an existing component connection if provided in config
  * Make it possible to require() the server
  * Update config.js.example
  * Fix autosubscribeNewUsers
  * Increase the max number of items in each RSM page
  * Better shrinking of oversized stanzas
  * Include `-dirty' in version number from git
  * Remove glob from dependencies
  * Fix indentation in main.coffee
  * Prevent existing persistent subscription from being made temporary
  * Merge branch 'feature/version-number-from-git' into develop
  * Expose support for XEP-0092 (Software Version) in disco
  * Use `git describe' to get version numbers in dev branches
  * Merge branch 'master' into next
  * Restore compatibility with Node 0.6
  * Fix handling of offline users
  * Avoid race condition in disco cache
  * Shrink oversized stanzas more aggressively
  * Avoid nulls
  * Include new files in release tarball
  * Avoid race condition in disco cache
  * Merge remote-tracking branch 'upstream/tempsub' into next
  * Merge branch 'db-versioning' into next
  * buddycloud-server 0.3.5
  * Check if remote supports temporary subscription before sending a tempsub request
  * Client can check for server features before sending an IQ
  * Make server features discoverable
  * Log errors when processing incoming messages
  * Cleanup
  * Remove empty text nodes from items
  * Fix ActivityStreams verb for replies
  * Include operation name in debug message
  * Don't notify unsubscribe when it was a temporary subscription
  * Offline user cleanup: do real unsubscribe operations
  * I'm dumb
  * Don't delete temporary subscriptions during sync
  * Don't send any notification for temporary subscriptions
  * Client and server must speak the same language
  * Only send notifications about temporary subscriptions to remote listeners
  * Cleanup offline users
  * Claim we support subscription options
  * Temporary subscriptions
  * Fix updating items
  * Add help channels to default autosubscriptions
  * Merge branch 'log-fix'
  * Inspect objets in log messages
  * Fix broken log messages
  * Don't write subscription stanzas in items table
  * Merge remote-tracking branch 'lloyd/config'
  * Populate in_reply_to column when inserting new items
  * DB cleanup at startup
  * Add README for DB schema versioning
  * Upgrade DB schema
  * Check DB schema version on startup
  * Don't change <published/> when updating an existing post
  * Fix subscription to remote private channels
  * Don't fail when the default config file does not exist
  * Add Lloyd in contributors
  * Better logging for replies sent by 'proxy' components
  * Merge branch 'mam-result'
  * Include <result/> in MAM replies
  * Merge remote-tracking branch 'schnouki/atom-tombstones'
  * Fix typo
  * Merge pull request #61 from lloydwatkin/no-mod_disco
  * Also send tombstones in retract notifications
  * Use Atom tombstones for deleted items
  * xmpp: XEP-0313 compliance
  * Handle PubSub retract "notify" attribute
  * operations: fix PushInbox notification
  * Fix undefined variable when paging backwards in RSM
  [ Tuomas Koski ]
  * Merge pull request #59 from lloydwatkin/initialise-sync
  * Merge pull request #58 from lloydwatkin/master
  [ Steven Lloyd Watkin ]
  * Ensure we do not cause BC breaks
  * Make both defaults positive rather than one positive & the other negative Broke the config options down further
  * Fix build console output
  * "package" now a reserved word in node, caused failing in builds (v0.6.15+)
  [ Denis Washington ]
  * Use local CoffeeScript "cake" for "npm install"
  [ Jonas Smedegaard ]
  * Setup access rights and needed dirs when starting daemon
  * Speedup system shutdown by avoiding explicit sysV stop
  * xmpp_pubsub: check for commandEl prior usage
  [ Reginald dude ]
  * updates sent via email from vorner.cz
  * updates sent via email from vorner.cz
  [ Reginald Dude ]
  * Most confusing config file ever
  [ ▟ ▖▟ ▖ ]
  * Merge pull request #70 from lloydwatkin/fix-is-function
  * Merge pull request #63 from lloydwatkin/no-mod_disco
  * Merge pull request #62 from lloydwatkin/no-mod_disco
  * Merge pull request #57 from Schnouki/xep-0313
  * Merge pull request #54 from Schnouki/fix-notif
  * Merge pull request #52 from lloydwatkin/master
  * Merge pull request #51 from lloydwatkin/master
  [ James Tait ]
  * Ensure both the PID dir and log dir are created on startup if they do not already exist.
  [ imaginator ]
  * aligning with INSTALL instructions
  * moved instructions to wiki
  * Edited README.md via GitHub
  [ dodo ]
  * fix accessModel of geo nodes
  * always test in production
  * buddycloud-server 0.3.4
  * Merge branch 'packaging'
  * put the /etc/init.d script into tarball
  * not needed anymore
  * default options for new channels
  * bump tarballify version
  * add bin/buddycloud-server to the tarball
  * no build step in bin/buddycloud-server anymore
  * print additional info messages in gray
  * fix 'file is not defined'
  * fix 'modName is not defined'
  * colorful output for package.js
  * bump tarballify version
  * rm trailing spaces
  * no build_binary.sh needed
  * separate devDependencies
  * export name
  * use packaging script
  * buddycloud-server 0.3.3
  * pass prefix to npm to force npm to use that particular prefix
  * $PREFIX/bin/buddycloud-server can be nonexistant .. so ignore all errors when removing
  * bump node version in build script
  * merge issue #37
  * specify interal config file as defaults, not as main config
  * backports to node 0.4
  * concat cwd path to config path only when config path is relative
  * respect the cwd
  * move to the right dir before builing
  * wscript is not needed anymore
  * merged #31. symlink detection for bin/buddycloud-server thanks to @highfellow
  * fixed gitignore
  * forgot Cakefile
  * pin node version for over 0.5 to get the require json working
  * get version directly
  * new buildsystem
  * check if config.syslog has keys
  * dont load default config over opts and args
  * main: fix config loading
  * wscript fixes
  * load config via jsconfig
  * update wscript
  * upgrade build environment
  * update requirements in readme
  * cleanup files
  [ Simon Tennant ]
  * Update config.js.example
  * change to read config file from /opt/buddycloud
  * Update master
  * don't be so --quiet (will help a lot with debugging)
  * Update _etc_init.d_buddycloud-server
  * the orwell defeault was causing jdesenberg problems.
  * Fixed the permissions to run as.
  * Update _etc_init.d_buddycloud-server
  * init script
  * make it really clear what to change (and what "jid" refers to)
  * Made the ownership of tables really clear. Should help avoid the problem that DD had the other day.
  [ Lloyd Watkin ]
  * Fix for checking of child element
  * Catch error event
  * Fix for server reset
  * Updated variable names to better describe what config does.
  * Merge branch 'master' of git://github.com/buddycloud/buddycloud-server into no-mod_disco
  * Allow buddycloud server to advertise additional 'proxy' components
  * Wait to sync
  * Rename of parameter
  * Allow user to specify a port or not, changed argument name as it may not actually be remote debugging.
  * Tidy up
  * Allow node.js debugging
  [ Simon ]
  * /etc/init.d/buddycloud-server

 -- Abmar Barros (buddycloud Nightly Builds) <abmar@buddycloud.com>  Sat, 26 Jan 2013 15:04:15 -0300


buddycloud-server (0.1) unstable; urgency=medium

  [ Astro ]
  * operations: all nodes in defaultConfiguration accessModel=authorize
  * operations: posts & subscriptions accessModel=authorize in defaultConfiguration
  * buddycloud-server 0.3.2
  * Cakefile: version.js + 

  * operations: fix run notifications control flow
  * build_binary.sh: get bin/buddycloud-server out of the way before npm i
  * buddycloud-server 0.3.1
  * package.json: honor all contributors
  * Merge remote-tracking branch 'schnouki/patch-1'
  * .npmignore: exclude debian/* from npm pkgs
  * buddycloud-server 0.3.0
  * package.json: bump dep versions
  * operations: prevent unsubscribing/demoting the node owner
  * operations: fix PushInbox callback
  * operations: run notifies first, then syncs, then calls back
  * pubsub_server: lower logging
  * operations: fix PushInbox newNodes
  * operations: move PushInbox syncNode post transaction
  * operations: PushInbox should work even if syncNode had hickups
  * operations: syncNode when PushInbox created it
  * operations: fix PushInbox notification & newModerators
  * model_postgres: fix & simplify purgeNode()
  * sync: fixes
  * sync: purge node if no local subscribers
  * purge node when local unsubscription is pushed from remote
  * operations: fix generateSubscriptionsNotifications followee
  * operations: fix PushInbox newModerators nodes
  * xmpp connection: doc, serialize stanzas only once
  * operations: NewModeratorNotify needs listener, not user
  * operations: fix NewModeratorNotify listener
  * operations: log Operation name
  * model_postgres: must quote "user" column for Postgres
  * operations: NewModeratorNotify must cb()
  * operations: Notify notifies w/ node
  * operations: fix Notify otherListeners
  * pubsub_client: rm debug
  * operations: NewModeratorNotify notifies w/ node & listener
  * model_postgres: optional Transaction callbacks
  * operations: fix Notify filterSubscription & filterAffiliation invokation
  * operations: fix this binding
  * operations: no pending subscriptions in subscriptions node
  * operations: NewModeratorNotify
  * operations: doc, filter subscriptions and affiliations for non-moderators
  * operations: reorganize
  * clean up logging
  * operations: posts node defaultAffiliation='publisher'
  * sync: fix AffiliationsSynchronization typo
  * buddycloud-server 0.2.3
  * package.json: fix install script
  * build_binary.sh: bump node.js version
  * buddycloud-server 0.2.2
  * package.json: add preinstall cake build
  * operations: fix notifications
  * build_binary.sh: bump node.js version
  * buddycloud-server 0.2.1
  * operations: fix Notify subscriptios node items
  * operations: fix Notify callback result
  * operations: BrowseNodeItems for subscriptions node calls getSubscriptions not getSubscription
  * operations: syntax fixes
  * operations: Notify subscriptions fixes
  * operations: subscriptions node notifications
  * operations: BrowseNodeItems for subscriptions node
  * sync: require errors
  * sync: avoid error output when omitting local node
  * router, sync: improve logging
  * backend_pubsub: PubsubBackend.notify listener robustness
  * operations: fix Subscribe defaultAffiliation
  * operations: fix ManageNodeAffiliations control flow
  * pubsub_server: PubsubOwnerSetAffiliationsRequest syntax fix
  * operations: fix requiredAffiliation()
  * operations: requiredAffiliation can be function to allow moderators approving topic channel subscribers
  * operations: ManageNodeSubscriptions refactor for efficiency
  * operations: ManageNodeSubscriptions should set new affiliations to defaultAffiliation
  * operations: fix Notify jid/user
  * operations: Notify should notify all users pertained by a subscription
  * operations: 'unsubscribe-node' notifies unsubscribed user
  * operations, pubsub_client: there's no "unsubscribed" subscription, only "none"
  * pubsub_server: PubsubOwnerSetSubscriptionsRequest syntax fix
  * operations: Unsubscribe needs PrivilegedOperation methods
  * operations: Unsubscribed is not a PrivilegedOperation but a ModelOperation
  * operations: fix callback scope
  * pubsub_server: robustify PubsubItemsRequest
  * operations: syntax
  * pubsub_server, operations: support for RetrieveItems by itemIds
  * build_binary.sh: bump node.js version to 0.6.10
  * buddycloud-server 0.2.0
  * operations: CreateNode should not allow creation with empty nodeUser username
  * operations: fix CreateNode defaults & creationDate
  * operations: fix CreateNode isTopic switcheroo
  * router: fix autosubscribeNewUsers operation name
  * router: autosubscribeNewUsers
  * config.js.example: default checkCreateNode hook checks for a specific topic domain
  * operations: fix CreateNode node typo
  * operations: fix CreateNode config
  * pubsub_server, operations: CreateNode with optional config
  * operations: fix CreateNode setSubscription()
  * operations: CreateNode catches missing checkCreateNode hook
  * operations: CreateNode default config
  * checkCreateNode config hook
  * model_postgres: fix getOwnersByNodePrefix SQL
  * operations: fix CreateNode setAffiliation()
  * operations: fix CreateNode getOwnersByNodePrefix()
  * operations: fix ../util require, CreateNode safety check
  * implement createNode with getOwnersByNodePrefix check
  * operations: begin creating topic channels
  * model_postgres: syntax fix
  * package.json: maintainer update
  * build_binary.sh: update to node 0.6.9
  * buddycloud-server 0.1.11
  * rsm_walk: fix logging
  * operations: checkAccessModel() before checkRequiredAffiliation()!
  * operations: Unsubscribe condition syntax fix
  * package.json: muffin dependency glob seems be incompatible in v3.*
  * operations: checkRequiredAffiliation should ignore no @requiredAffiliation
  * operations: fix isAffiliationAtLeast w/ invalid affiliation
  * jsconfig 0.2.0 is out! w00t!!!
  * Cakefile: lib/version.js from package.json
  * logger: update to ain2 1.0.0
  * main: fix config loading
  * buddycloud-server 0.1.10
  * router: fix syncServer()
  * buddycloud-server 0.1.9
  * bin/buddycloud-server: fix param quoting
  * bin/buddycloud-server: fix $cwd
  * buddycloud-server 0.1.8
  * .npmignore to package up built lib/* instead of src/*
  * build_binary.sh: install devDependencies beforehand
  * build_binary.sh: bump node.js version to 0.6.7
  * util: move getNodeUser(), getUserDomain()
  * main: "server successfully started"
  * sync: fix logging
  * model_postgres: fix writeItem() SQL parameter binding
  * sync: fix PaginatedSynchronization error callback
  * sync: rm TODO note
  * model_postgres: writeItem updated_query
  * operations: logging fixes
  * writeItem: move updated extraction from operations to model_postgres
  * model_postgres: writeItem should also INSERT existing updated value
  * model_postgres: fix syntax
  * model_postgres: SQL fixes
  * operations: PushInbox copies item published date
  * postgres schema: CREATE VIEW open_nodes + usage in model_postgres
  * model_postgres: fix query result handling
  * fix getTopFollowedNodes & getTopPublishedNodes parameters
  * model_postgres: fix SQL INTERVAL syntax
  * operations: BrowseNodes.fetchNodes() needs transaction
  * operations: BrowseNodes.transaction should use @fetchNodes()
  * operations: fetchNodes() typo
  * pubsub_server: browse /top-followed-nodes & /top-published-nodes does not request a particular node
  * getTopFollowedNodes & getTopPublishedNodes w/ XMPP disco interface
  * build_binary.sh: bump to node 0.6.6
  * buddycloud-server 0.1.7
  * package.json: rm cradle dependency
  * logger: syslog only with hostname
  * replace common-logger by underscore.logger
  * update ain2 dependency for node v0.6 compatibility
  * model_postgres walkListenerArchive: replace DISTINCT with GROUP BY
  * model_postgres: fix config order/limig
  * operations: ReplayArchive sorts results before capping
  * ReplayArchive/walkListenerArchive: properly cap result set
  * operations: ReplayArchive default max=50
  * build_binary.sh: use $PREFIX from environment if present
  * package.json: req node-stringprep >=0.1.1
  * router: fix
  * buddycloud-server 0.1.6
  * update to new node-waf paths
  * build_binary.sh: switch to node 0.6.4
  * package.json: depend on 0.3.1
  * router: RSM usage fix
  * logger: open logFile for appending, fixes issue #25
  * package.json: depend on node-xmpp >= 0.3.0
  * operations ReplayArchive: fix rsm max
  * operations: ReplayArchive RSM support
  * backend_pubsub: notificationPush updates include sender & actor
  * router: detectUserType fixes
  * router: detectUserType fixes
  * logger: fix argument iteration
  * main, backend_pubsub: logging improvements
  * backend_pubsub: include user in notfound error
  * connection: loopback stanzas to ourselves
  * router: add missing util.inspect include
  * router.run: trace req
  * router: add missing rsm include
  * logger: typo
  * logger: fix level
  * logging clean-up
  * router, pubsub_{server,client}: @type in <actor/>
  * buddycloud-server 0.1.5
  * router: sync fixes
  * buddycloud-server 0.1.4
  * ManageNodeAffiliations: non-owner may not elect a new owner
  * sync: log upon completion
  * sync: transaction fix
  * move some sync logic into router, lock per node
  * operations: BrowseNodeInfo/RetrieveNodeConfiguration w/o access control
  * buddycloud-server 0.1.3
  * operations: deny Unsubscribe from own nodes
  * logger: ain2 syslog transport
  * logger: message always as string
  * main: fix --stdout kludge
  * logger: avoid log level < 0
  * config.js.example: syslog on by default
  * config.js.example: logging section
  * syslog support with ain2
  * support --stdout logging
  * replace cnlogger by common-logger
  * buddycloud-server 0.1.2
  * build_binary: npm install globally (into /opt/buddycloud-server/)
  * build_binary: dedup node & npm versions
  * build_binary: default to /opt/buddycloud-server, bin/ script
  * main: process.title fix
  * version: fix package.json path
  * version from package.json in process.title and for jabber:iq:version
  * xmpp/connection: do not subscribe in probePresence()
  * buddycloud-server 0.1.1
  * build_binary: bump node & npm versions
  * backend_pubsub: reply() must also copy 'replay' field on MaxStanzaSizeExceeded
  * connection: more stanza output when MaxStanzaSizeExceeded
  * don't send ReplayArchive notifications to all online resources
  * pubsub_client/connection: wrap error replies into StanzaError earlier
  * logging fixes
  * port to cnlogger
  * port to broken winston logging
  * xmpp connection: always tell node-xmpp to reconnect
  * async.filter iterator does not take error parameter
  * model_postgres: fix nodeExists warning
  * backend_pubsub: fix notification matching
  * sync: fix router.authorizeFor() usage
  * sync: writeItem does not need author anymore
  * operations: typo
  * model_postgres: fix getListenerAffiliations() query
  * sync: careful
  * xmpp/forms: oops, s/creationTime/creationDate/
  * xmpp/connection: fix name
  * router: check for anonymous user to be online
  * anonymous user offline tracking & clean-up
  * model_postgres: fix walkListenerArchive() node in results
  * router: fix method binding
  * model_postgres: walkListenerArchive() should include node in results
  * operations: RemoveUser & model_postgres.getUserRemoteSubscriptions() & clearUserSubscriptions()
  * BuddycloudDiscovery::detectAnonymousUser
  * backend_pubsub: gracefully handle MaxStanzaSizeExceeded for notifications
  * xmpp pubsub_server & connection: fix graceful MaxStanzaSizeExceeded handling
  * errors: MaxStanzaSizeExceeded extends Error
  * operations: s/geoloc/geo/
  * operations: /subscription items shall contain jid=owner
  * metadata buddycloud#channel_type
  * proper metadata field names
  * support for creationDate
  * operations: clarify logging
  * router: fix remote backend selection
  * operations: Unsubscribe refactor & fix
  * operations: fix Register
  * buddycloud-server 0.1.0
  * operation: print opName on commit, rm debug
  * bin/buddycloud-server: don't cd so config can be loaded relatively
  * Merge remote-tracking branch 'origin/cli'
  * operations: RetractItems should allow anyone to remove their own posts
  * operations: preserve affiliation if previously affiliated
  * operations: unify into isAffiliationAtLeast()
  * operations: rm leftover TODO note
  * operations: refactor Register; should check if authoritative for user's domain
  * router.run: return 404 for nodes not locally subscribed but discovered ourselves
  * rm explicit author handling in postgres schema, model, operations
  * main: check sender authorization for authorizationPrompt
  * operations: RetrieveItems shall not virtualize items for cache case of remote nodes
  * Revert "Made the ownership of tables really clear. Should help avoid the problem that DD had the other day."
  * s/channel-server/buddycloud-server/g
  * build_binary.sh: fix invokation hint
  * README: rm some outdated stuff
  * main: fix defaultConfig stuff
  * build_binary.sh
  * operations: RetrieveItems.retrieveSubscriptionsItems() result set sorting, affiliations
  * virtual handling of /user/.../subscriptions node items
  * MAM replays subscription authorization requests
  * more authorization stuff
  * fixes
  * small fixes
  * package.json: fix bin path
  * further authorizationPrompt work
  * backend_pubsub: missedSomething was missing
  * package.json: fix coffeescript path (./node_modules/...)
  * sending authorize notification forms
  * package.json: fix .coffee compilation stage
  * operations: PrivilegedOperation.fetchActorAffilliation fetches all listener affiliations for inbox sync
  * pubsub_notifications: fix MAM stanzas
  * operations: subscribe defaultAffiliation, fixes
  * model_postgres: many fixes
  * operations: publishModel 'subscribers'
  * operations: access control fixes
  * begin access control, affiliations checking
  * model_postgres: fixes
  * errors: fix error classes
  * xmpp/connection: fix
  * xmpp/connection: fix @missedServerTimeouts usage
  * model_postgres: safety checks
  * readability, notes
  * rsm_walk: fix serious errors
  * globally refactor operation from function to value
  * sync: fixes
  * add forgotten rsm_walk file
  * move syncQueue from main.coffee to fine-grained sync.syncNode
  * xmpp/connection: readability
  * xmpp/connection: track <you-missed-something/> timers with @missedServerTimeouts
  * syncServer support, wired up to <you-missed-something/> 'syncNeeded'
  * model_postgres: for an actor, getSubscriptions() shall return not only users but also listeners
  * MAM time specification
  * primitive MAM implementation
  * send <you-missed-something/>
  * operations: PushInbox TODO note
  * sync: rm request.rsm.max clamp
  * synchronization with state resetting and subscriptions/affiliations support
  * pubsub_*: fix user/jid conventions
  * ConfigSynchronization should use browse-node-info to get node config
  * synchronizing!
  * synchronization kinda works, but hits RSM loops
  * further synchronization progress
  * begin synchronization
  * main: require async
  * measure stanza size, gracefully retry with smaller result set
  * synchronization groundwork
  * don't let backend_pubsub call router.runLocally(), return errors.SeeLocal() instead
  * errors: clean up
  * normalize: add <link rel="self" href="xmpp:...?pubsub;action=retrieve;..."/>
  * operations: Publish shall allow new items with specified @id
  * nodes browsing, with RSM
  * backend_pubsub: run() should bail out early on invalid node form
  * PostgreSQL tuning
  * complete RSM implementation
  * begin RSM for all operations
  * generify RSM stuff
  * pubsub_client: RSM
  * fixes from CCCamp11
  * RSM for local items retrieving
  * begin new RSM implementation
  * pubsub_server: publish-node-items shall reply with item ids
  * model_postgres: fix getNodeListeners() SQL
  * model_postgres: nodeExists() shall check for NOT NULL
  * model_postgres: getNodeListener() replace filter by SQL
  * model_postgres: getNodeListener() filter for null
  * model_postgres: fix setSubscription() INSERT w/o listener
  * error printout
  * forms: fix
  * operations: PushInbox author fix
  * debug
  * xml child robustness
  * model_postgres: fix nodeExists()
  * fix subscription listener for local users
  * logging cleanup
  * initiate presence tracking of users
  * xmpp/connection: use send() instead of specifying from jid
  * some logging cleanup
  * operations: push-inbox does not set subscription listener
  * fixes & TODO notes
  * operations: Notify.transaction() must call cb()
  * retrieve-node-configuration
  * forms: configToResultForm -> configToForm
  * pubsub_client: RetrieveNodeConfiguration & ManageNodeConfiguration
  * operations: catch reply cb exceptions
  * create-node operation
  * package.json: scripts
  * fixes
  * fix outgoing notifications
  * generify pubsub_notifications
  * many fixes for subscription pushing
  * router: if request writes, always go remote
  * push incoming notifications to local model
  * more subclassing of EventEmitter, incoming notifications handling
  * pubsub_server: unify PubsubRequest & PubsubOwnerRequest
  * merge request.coffee into pubsub_server.coffee
  * begin remote subscription pushing to local inbox
  * backend_pubsub: PubsubBackend.notify(): readability
  * tune to use single cb() instead of req.{reply,replyError}()
  * revive normalization
  * model_postgres: setSubscription(): coearce isSet to boolean
  * model_postgres: catch lost transactions
  * pubsub_client: error reporting, fix
  * subscribe reply status
  * model_postgres: setAffiliation() should check nodeExists()
  * fix disco.authorizeFor() usage
  * pubsub_client: fix <actor/> placement
  * refactor notifications a bit
  * pubsub_client: <actor/> placement fix
  * pubsub_client: fix <actor/> placement
  * pubsub_notifications: subscriptions/affiliations/config
  * fix registration/model callback parameters
  * operations: ManageNodeAffiliations validates accessModel & publishModel
  * setting configuration
  * fixes, fixes, config
  * only RegisterSetRequest should induce presence subscription
  * FIXME note
  * model_postgres: do not use rowCount
  * operations: Register created default configuration
  * pubsub_server: pubsub/inbox identity
  * fixes, StanzaError
  * implement pubsub_client operations
  * pubsub_notifications: byOperation()
  * fixes
  * fixes
  * fixes & debugging
  * fixes
  * debugging & fixes
  * fixes
  * begin discovering locally
  * fixes
  * Router.run: fix
  * fixes
  * operations: rename channel node to "posts"
  * begin notifications
  * a bit o' twiddling w/ subscription listeners
  * refactor router for remote requests
  * operations: subscribe/unsubscribe toggle affiliation none/member
  * router: rename frontend to backend
  * rename backend_postgres to model_postgres, revive router
  * main: move iqHandler to pubsub_server
  * manage, not only retrieve, subscriptions & affiliations
  * use subscribe sender as notification listener
  * backend_pubsub: replace ternary operator
  * need to store listener in subscriptions...
  * backend_pubsub: implement RequestCache
  * new untested buddycloud discovery with backend_pubsub.coffee
  * retrieve <actor/> generalized, begin using authorizeFor
  * ns: add BUDDYCLOUD_V1 xmlns
  * postgres.sql schema: updated column for more tables, author column for items
  * retrieving node affiliations
  * retrieving node subscriptions, fixes
  * backend_postgres: syntax fixes
  * operation: Register should set affiliation & subscription
  * retrieving subscriptions & affiliations
  * retracting items
  * publishing & retrieving items works
  * begin item retrieving
  * subscribe & unsubscribe
  * fix backend_postgres (user is a Pg keyword, must be quoted as column name)
  * publishing works
  * lots of fixes
  * fix disco requests
  * fix, fix, fix
  * begin implementing register & publish implementation
  * mv src/operations.coffee src/local/operations.coffee
  * revive backend
  * primitive operations
  * mv controller.coffee operations.coffee
  * dead code TODO
  * fixes
  * rm old dead code
  * rename iqhandler to request
  * begin some refactoring
  * begin hooking up handlers with operations
  * xmpp/pubsub_server: indicate operation types
  * notes
  * pubsub_server: PubsubOwnerHandlers
  * pubsub_server: flesh out more pubsub handlers
  * add affiliations checking
  * begin interweaving with local operations
  * a tad of interconnecting
  * pubsub_server: DiscoInfoHandler.reply()
  * xmpp client 'n stuff
  * README: draw new design
  * begin router
  * xmpp: move NS_* to ns.coffee
  * xmpp: primitive disco info works
  * begin iqhandler
  * xmpp/connection: port presence tracking
  * rm main.js
  * move src files around
  * rm model_couchdb from config, add preliminary main.coffee
  * a bit new controller
  * rm old test_controller
  * some controller work
  * old controller translated to coffeescript
  * port peripheral stuff over to coffeescript
  * README: change ejabberd port to the config default one
  * model_couchdb: s/doc.subscribers/doc.subscriptions/
  * xmpp_pubsub.js: fix typo
  * model_postgres: check nodeExists before any data modification
  * preliminary RSM (XEP-0059) implementation for retrieve-items/retrieve
  * model_couchdb: stub getUpdatesByTime()
  * MAM should result in direct message, not broadcast notification to all resources
  * MAM w/ working model_postgres backend
  * begin implementing MAM
  * controller: register/register should create /user/<jid>/subscriptions node
  * normalize fixes + tests
  * normalize
  * only one child element per item
  * model_postgres: fix setConfig()
  * model_postgres: listNodesByUser()
  * model_couchdb: listNodesByUser(), simplify listNodes()
  * controller, xmpp_pubsub: browse-nodes/by-user
  * model_postgres setConfig(): fixes
  * configuration notification
  * model_postgres setConfig(): do not set fields unspecified/without defaultConfig
  * model_postgres nodeExists(): indentation
  * controller: subscribe should not require preexisting affiliation
  * xmpp_pubsub: fix manage-subscriptions/retrieve result usage
  * controller: allow retrieving subscriptions & affiliations for members
  * xmpp_pubsub: syntax fix
  * model_postgres: fix queue pushing
  * xmpp_pubsub: fix info discovery reply FORM_TYPE
  * model_postgres: config fixes
  * more on extended config
  * model_couchdb, model_postgres: more flexible config schema
  * config: description, type, creationDate; setConfig() on create-node/register
  * xmpp_pubsub: optimize presence tracking
  * controller: requiredAffiliation='member' for config-node/retrieve
  * README: OpenFire
  * controller: defaultConfig() + use in feature 'config-node'
  * xmpp_pubsub: replace isOnline() with getOnlineResources()
  * model_postgres: fix transaction dequeueing
  * model_postgres: move cb() past process.nextTick/dbIsAvailable for safety
  * model_postgres: work around empty responses
  * test_controller: retract
  * xmpp_pubsub: disco <identity/> according to discovered @node
  * test_controller: browse-nodes
  * model_couchdb: fix preload() etag extraction + error reporting
  * xmpp_pubsub: FeatureNotImplemented message
  * controller: simulate a stack for debug info
  * test_controller: retract skeleton
  * controller unsubscribe: do not fetch affiliation from database but check by node path
  * implement & test unsubscribe
  * test_controller: skeletons
  * test_controller: publishing tests
  * test_controller: more publish testing + controller fix
  * test_controller: begin test publishing
  * model_postgres: fix forgotten variable
  * model_postgres: reconnect to database upon error
  * model_postgres: oops, syntax error
  * config.js.example: postgres is actually the one with a poolSize
  * model_postgres: oops, syntax errors
  * begin test_controller
  * fixes
  * subscriptionModified <message/>
  * xmpp_pubsub: "message" & approve() fixes
  * controller: replace ownerNotification with afterTransaction
  * access_model authorize
  * package.json & README
  * errors: pull inherits() from util/utils/sys for moving node api
  * browse open nodes with service discovery items
  * controller: refactor affiliations checking
  * xmpp_pubsub: fix subscriptions format
  * controller: treat missing accessModel as 'open'
  * model_couchdb: preload() etag fix
  * .gitignore with config.js
  * xmpp_pubsub: node config on disco info
  * model_couchdb: encodeURIComponent() only for db.head() & .get()
  * main.js: #!
  * rename config.js to config.js.example
  * restore default config.js
  * main.js: on uncaughtException
  * postgres doc & config
  * model_postgres
  * model_couchdb: fix item deserialization
  * model_couchdb: rm implemented TODOs
  * README: CouchDB configuration
  * README: TODO++
  * LICENSE
  * README: markdown fix
  * README: mention buddycloud :)
  * model_couchdb: fix views initialization
  * README & config
  * jabber:iq:register
  * model_couchdb: fixes
  * errors fixing
  * rm model_persistence
  * model_couchdb: assertNodeName()
  * main: catch uncaughtException
  * controller: fix
  * bugs, readability
  * model_couchdb: fixing
  * controller: implement affiliations checking
  * xmpp_pubsub: getAffiliations() result is now Array
  * model_couchdb: setSubscription() & setAffiliation() 'none'
  * model_couchdb: consolidate subscriptions & affiliations model
  * xmpp_pubsub: send notifications with type='headline'
  * xmpp_pubsub: subscribeIfNeeded() on <create/> & <subscribe/>
  * model_couchdb: load() shortcut when already cached
  * model_couchdb: createNode() fix
  * model_couchdb: preload()
  * model_couchdb: commit read documents too for integrity
  * model_couchdb: abstract views
  * CouchDB Optimistic Concurrency Control layer
  * controller: improve error propagation
  * defined error conditions
  * untested configuration getting/setting
  * service discovery
  * modify-affiliations
  * model_couchdb: getAffiliation()
  * begin permission checking infrastructure
  * presence probes
  * xmpp_pubsub: presence tracking
  * refactoring controller complete
  * continue refactoring controller into features/operations
  * begin refactoring controller into features/operations
  * subscribers
  * getting subscriptions & affiliations
  * createNode improvements
  * controller createNode: check node
  * model_couchdb: affiliations view
  * items getting
  * much more progress
  * implement retraction, s/notifySubscriber/notify/, s/writeItems/writeItem/
  * publish notification works
  * more frontend hooking
  * begin notification hooks
  * fixes
  * begin model_couchdb transactions
  * split model
  * some progress
  * some progress
  * createNode creates owner affiliation
  * model: indexes
  [ Thomas Jost ]
  * Add @denisw to contributors
  * Upgrade required node version to 0.8
  * We actually need remote subscriptions nodes
  * Merge branch 'feature/anon-fixes' into develop
  * Merge branch 'feature/really-validate-post-times' into develop
  * Reject remote posts with invalid dates
  * Add tests for remote posts with invalid dates
  * Force anon subscriptions to be temporary
  * Set default affiliation to 'none' for anon users
  * Merge branch 'feature/anon-fixes' into develop
  * Cleanup: remove some dead code
  * Purge remote nodes with no local subscription left
  * Merge branch 'feature/recent-items' into develop
  * Merge branch 'feature/validate-remote-items' into develop
  * Sort recent items by update time
  * Merge branch 'feature/validate-remote-items' into feature/recent-items
  * Fix tests that push remote items
  * Validate remote items
  * Add (failing) tests for invalid remote items
  * Implement recent items query
  * Add (failing) test for recent items query
  * PubSub replies can include several elements
  * Merge branch 'feature/pusher' into develop
  * Workaround callback woes
  * Fix MAM for pusher component
  * Pusher: test MAM
  * test_server: move makePublishIq into TestServer
  * Pusher: test node configuration
  * Pusher: test unsubscriptions
  * Merge branch 'feature/affiliations-fixes' into develop
  * Merge branch 'feature/pubsub-disco-features' into develop
  * Cleanup
  * Expose all implemented PubSub features
  * Pusher: test affiliations
  * Merge branch 'feature/affiliations-fixes' into feature/pusher
  * Fix affiliation in /subscriptions notifications
  * Accept PubSub-compliant affiliations notifications
  * Pusher: test subscriptions
  * Merge branch 'feature/fix-98' into develop
  * Fix SQL for updating replies
  * Add failing test for issue #98
  * Fix offline user cleanup
  * DB: drop anonymous column
  * Yet another federation test
  * Check if the example config file is valid JS
  * Add tests for pusher code
  * Pusher can MAM everything
  * Pusher is a listener for all notifications
  * Add config for pusher component
  * Merge branch 'feature/mam-fixes' into develop
  * Increase the default number of items in a MAM response
  * Make MAM return an error if there are too many results
  * Use RSM in MAM
  * Test MAM RSM
  * MAM: filter bad dates out
  * Test if MAM validates dates correctly
  * Ensure the giant MAM test doesn't pollute the test environment
  * Make affiliations notifications PubSub-compliant
  * Affiliations have update timestamps too
  * Avoid temporary subscriptions in MAM results
  * Advertise support for MAM in disco#info
  * Add a giant MAM test
  * Update Travis URL in README.md
  * Merge branch 'feature/tests' into develop
  * Correctly tests that updated items don't change <in-reply-to/>
  * Move tests on updated items to a different function
  * Add tests for updates that change <in-reply-to/>
  * Use Travis to automate testing
  * Merge branch 'master' into develop
  * Add compatibility with PostgreSQL 9.1
  * Require at least one item to retract
  * Add Emacs folding marks
  * Add retrieve and retract tests
  * Fix retraction stanza sent to remote services
  * Tombstones: include Atom namespace in <updated/> element
  * Fix error when not allowed to retract an item
  * Tombstones can't be updated
  * When publishing an update, check if the actor is the original author
  * Check if original post exists before publishing a reply
  * Reject posts from non-users
  * Don't include type in <actor/>
  * Complete post/update/retract tests
  * TestServer: fix Atom in-reply-to element
  * Fail when some unwanted event happens
  * Add description for calls to "should.exist"
  * Retraction tests
  * Workaround CoffeeScript weird scoping rules
  * Add another batch of tests
  * Update test data
  * Change the way the test server emits IQ stanzas
  * Tests for posting to remote channels
  * Test server: emit event for IQs with unknown ID
  * Test server: disco info for "remote" servers
  * More post tests
  * Add helper to run tests that trigger several different stanzas
  * Test server: handle <message/> stanzas
  * Add post tests
  * Post tests: helper to check if post was successful
  * Throw an exception when getting an unexpected error IQ
  * Start adding post tests
  * Add helpers for pubsub get IQs and Atom handling
  * Helpers to add initial test data in the database
  * Add XMPP namespaces to test_server.coffee
  * Reply to presence probes
  * Don't parse Elements again
  * Use same user and server names as in sfc
  * Safe path handling in prepare-db.sh
  * Add codo-like doc to the TestServer class
  * Add helpers to build disco and pubsub IQs
  * Expose support for PubSub node creation
  * Skip a test
  * More channel creation tests
  * New tests and helpers for forms
  * Add a helper to parse disco#info replies
  * Move common disco replies to test_server.coffee
  * Start testing for channel creation
  * Test server: handle disco#items queries
  * Make tests runnable using "npm test"
  * Basic disco tests
  * Start a test suite
  * Use an existing component connection if provided in config
  * Make it possible to require() the server
  * Update config.js.example
  * Fix autosubscribeNewUsers
  * Increase the max number of items in each RSM page
  * Better shrinking of oversized stanzas
  * Include `-dirty' in version number from git
  * Remove glob from dependencies
  * Fix indentation in main.coffee
  * Prevent existing persistent subscription from being made temporary
  * Merge branch 'feature/version-number-from-git' into develop
  * Expose support for XEP-0092 (Software Version) in disco
  * Use `git describe' to get version numbers in dev branches
  * Merge branch 'master' into next
  * Restore compatibility with Node 0.6
  * Fix handling of offline users
  * Avoid race condition in disco cache
  * Shrink oversized stanzas more aggressively
  * Avoid nulls
  * Include new files in release tarball
  * Avoid race condition in disco cache
  * Merge remote-tracking branch 'upstream/tempsub' into next
  * Merge branch 'db-versioning' into next
  * buddycloud-server 0.3.5
  * Check if remote supports temporary subscription before sending a tempsub request
  * Client can check for server features before sending an IQ
  * Make server features discoverable
  * Log errors when processing incoming messages
  * Cleanup
  * Remove empty text nodes from items
  * Fix ActivityStreams verb for replies
  * Include operation name in debug message
  * Don't notify unsubscribe when it was a temporary subscription
  * Offline user cleanup: do real unsubscribe operations
  * I'm dumb
  * Don't delete temporary subscriptions during sync
  * Don't send any notification for temporary subscriptions
  * Client and server must speak the same language
  * Only send notifications about temporary subscriptions to remote listeners
  * Cleanup offline users
  * Claim we support subscription options
  * Temporary subscriptions
  * Fix updating items
  * Add help channels to default autosubscriptions
  * Merge branch 'log-fix'
  * Inspect objets in log messages
  * Fix broken log messages
  * Don't write subscription stanzas in items table
  * Merge remote-tracking branch 'lloyd/config'
  * Populate in_reply_to column when inserting new items
  * DB cleanup at startup
  * Add README for DB schema versioning
  * Upgrade DB schema
  * Check DB schema version on startup
  * Don't change <published/> when updating an existing post
  * Fix subscription to remote private channels
  * Don't fail when the default config file does not exist
  * Add Lloyd in contributors
  * Better logging for replies sent by 'proxy' components
  * Merge branch 'mam-result'
  * Include <result/> in MAM replies
  * Merge remote-tracking branch 'schnouki/atom-tombstones'
  * Fix typo
  * Merge pull request #61 from lloydwatkin/no-mod_disco
  * Also send tombstones in retract notifications
  * Use Atom tombstones for deleted items
  * xmpp: XEP-0313 compliance
  * Handle PubSub retract "notify" attribute
  * operations: fix PushInbox notification
  * Fix undefined variable when paging backwards in RSM
  [ Tuomas Koski ]
  * Merge pull request #59 from lloydwatkin/initialise-sync
  * Merge pull request #58 from lloydwatkin/master
  [ Steven Lloyd Watkin ]
  * Ensure we do not cause BC breaks
  * Make both defaults positive rather than one positive & the other negative Broke the config options down further
  * Fix build console output
  * "package" now a reserved word in node, caused failing in builds (v0.6.15+)
  [ Denis Washington ]
  * Use local CoffeeScript "cake" for "npm install"
  [ Jonas Smedegaard ]
  * Setup access rights and needed dirs when starting daemon
  * Speedup system shutdown by avoiding explicit sysV stop
  * xmpp_pubsub: check for commandEl prior usage
  [ Reginald dude ]
  * updates sent via email from vorner.cz
  * updates sent via email from vorner.cz
  [ Reginald Dude ]
  * Most confusing config file ever
  [ ▟ ▖▟ ▖ ]
  * Merge pull request #70 from lloydwatkin/fix-is-function
  * Merge pull request #63 from lloydwatkin/no-mod_disco
  * Merge pull request #62 from lloydwatkin/no-mod_disco
  * Merge pull request #57 from Schnouki/xep-0313
  * Merge pull request #54 from Schnouki/fix-notif
  * Merge pull request #52 from lloydwatkin/master
  * Merge pull request #51 from lloydwatkin/master
  [ James Tait ]
  * Ensure both the PID dir and log dir are created on startup if they do not already exist.
  [ imaginator ]
  * aligning with INSTALL instructions
  * moved instructions to wiki
  * Edited README.md via GitHub
  [ dodo ]
  * fix accessModel of geo nodes
  * always test in production
  * buddycloud-server 0.3.4
  * Merge branch 'packaging'
  * put the /etc/init.d script into tarball
  * not needed anymore
  * default options for new channels
  * bump tarballify version
  * add bin/buddycloud-server to the tarball
  * no build step in bin/buddycloud-server anymore
  * print additional info messages in gray
  * fix 'file is not defined'
  * fix 'modName is not defined'
  * colorful output for package.js
  * bump tarballify version
  * rm trailing spaces
  * no build_binary.sh needed
  * separate devDependencies
  * export name
  * use packaging script
  * buddycloud-server 0.3.3
  * pass prefix to npm to force npm to use that particular prefix
  * $PREFIX/bin/buddycloud-server can be nonexistant .. so ignore all errors when removing
  * bump node version in build script
  * merge issue #37
  * specify interal config file as defaults, not as main config
  * backports to node 0.4
  * concat cwd path to config path only when config path is relative
  * respect the cwd
  * move to the right dir before builing
  * wscript is not needed anymore
  * merged #31. symlink detection for bin/buddycloud-server thanks to @highfellow
  * fixed gitignore
  * forgot Cakefile
  * pin node version for over 0.5 to get the require json working
  * get version directly
  * new buildsystem
  * check if config.syslog has keys
  * dont load default config over opts and args
  * main: fix config loading
  * wscript fixes
  * load config via jsconfig
  * update wscript
  * upgrade build environment
  * update requirements in readme
  * cleanup files
  [ Simon Tennant ]
  * Update config.js.example
  * change to read config file from /opt/buddycloud
  * Update master
  * don't be so --quiet (will help a lot with debugging)
  * Update _etc_init.d_buddycloud-server
  * the orwell defeault was causing jdesenberg problems.
  * Fixed the permissions to run as.
  * Update _etc_init.d_buddycloud-server
  * init script
  * make it really clear what to change (and what "jid" refers to)
  * Made the ownership of tables really clear. Should help avoid the problem that DD had the other day.
  [ Lloyd Watkin ]
  * Fix for checking of child element
  * Catch error event
  * Fix for server reset
  * Updated variable names to better describe what config does.
  * Merge branch 'master' of git://github.com/buddycloud/buddycloud-server into no-mod_disco
  * Allow buddycloud server to advertise additional 'proxy' components
  * Wait to sync
  * Rename of parameter
  * Allow user to specify a port or not, changed argument name as it may not actually be remote debugging.
  * Tidy up
  * Allow node.js debugging
  [ Simon ]
  * /etc/init.d/buddycloud-server

 -- Abmar Barros (buddycloud Nightly Builds) <abmar@buddycloud.com>  Sat, 26 Jan 2013 15:12:53 -0300


buddycloud-server (0.1) unstable; urgency=medium

  [ Astro ]
  * operations: all nodes in defaultConfiguration accessModel=authorize
  * operations: posts & subscriptions accessModel=authorize in defaultConfiguration
  * buddycloud-server 0.3.2
  * Cakefile: version.js + 

  * operations: fix run notifications control flow
  * build_binary.sh: get bin/buddycloud-server out of the way before npm i
  * buddycloud-server 0.3.1
  * package.json: honor all contributors
  * Merge remote-tracking branch 'schnouki/patch-1'
  * .npmignore: exclude debian/* from npm pkgs
  * buddycloud-server 0.3.0
  * package.json: bump dep versions
  * operations: prevent unsubscribing/demoting the node owner
  * operations: fix PushInbox callback
  * operations: run notifies first, then syncs, then calls back
  * pubsub_server: lower logging
  * operations: fix PushInbox newNodes
  * operations: move PushInbox syncNode post transaction
  * operations: PushInbox should work even if syncNode had hickups
  * operations: syncNode when PushInbox created it
  * operations: fix PushInbox notification & newModerators
  * model_postgres: fix & simplify purgeNode()
  * sync: fixes
  * sync: purge node if no local subscribers
  * purge node when local unsubscription is pushed from remote
  * operations: fix generateSubscriptionsNotifications followee
  * operations: fix PushInbox newModerators nodes
  * xmpp connection: doc, serialize stanzas only once
  * operations: NewModeratorNotify needs listener, not user
  * operations: fix NewModeratorNotify listener
  * operations: log Operation name
  * model_postgres: must quote "user" column for Postgres
  * operations: NewModeratorNotify must cb()
  * operations: Notify notifies w/ node
  * operations: fix Notify otherListeners
  * pubsub_client: rm debug
  * operations: NewModeratorNotify notifies w/ node & listener
  * model_postgres: optional Transaction callbacks
  * operations: fix Notify filterSubscription & filterAffiliation invokation
  * operations: fix this binding
  * operations: no pending subscriptions in subscriptions node
  * operations: NewModeratorNotify
  * operations: doc, filter subscriptions and affiliations for non-moderators
  * operations: reorganize
  * clean up logging
  * operations: posts node defaultAffiliation='publisher'
  * sync: fix AffiliationsSynchronization typo
  * buddycloud-server 0.2.3
  * package.json: fix install script
  * build_binary.sh: bump node.js version
  * buddycloud-server 0.2.2
  * package.json: add preinstall cake build
  * operations: fix notifications
  * build_binary.sh: bump node.js version
  * buddycloud-server 0.2.1
  * operations: fix Notify subscriptios node items
  * operations: fix Notify callback result
  * operations: BrowseNodeItems for subscriptions node calls getSubscriptions not getSubscription
  * operations: syntax fixes
  * operations: Notify subscriptions fixes
  * operations: subscriptions node notifications
  * operations: BrowseNodeItems for subscriptions node
  * sync: require errors
  * sync: avoid error output when omitting local node
  * router, sync: improve logging
  * backend_pubsub: PubsubBackend.notify listener robustness
  * operations: fix Subscribe defaultAffiliation
  * operations: fix ManageNodeAffiliations control flow
  * pubsub_server: PubsubOwnerSetAffiliationsRequest syntax fix
  * operations: fix requiredAffiliation()
  * operations: requiredAffiliation can be function to allow moderators approving topic channel subscribers
  * operations: ManageNodeSubscriptions refactor for efficiency
  * operations: ManageNodeSubscriptions should set new affiliations to defaultAffiliation
  * operations: fix Notify jid/user
  * operations: Notify should notify all users pertained by a subscription
  * operations: 'unsubscribe-node' notifies unsubscribed user
  * operations, pubsub_client: there's no "unsubscribed" subscription, only "none"
  * pubsub_server: PubsubOwnerSetSubscriptionsRequest syntax fix
  * operations: Unsubscribe needs PrivilegedOperation methods
  * operations: Unsubscribed is not a PrivilegedOperation but a ModelOperation
  * operations: fix callback scope
  * pubsub_server: robustify PubsubItemsRequest
  * operations: syntax
  * pubsub_server, operations: support for RetrieveItems by itemIds
  * build_binary.sh: bump node.js version to 0.6.10
  * buddycloud-server 0.2.0
  * operations: CreateNode should not allow creation with empty nodeUser username
  * operations: fix CreateNode defaults & creationDate
  * operations: fix CreateNode isTopic switcheroo
  * router: fix autosubscribeNewUsers operation name
  * router: autosubscribeNewUsers
  * config.js.example: default checkCreateNode hook checks for a specific topic domain
  * operations: fix CreateNode node typo
  * operations: fix CreateNode config
  * pubsub_server, operations: CreateNode with optional config
  * operations: fix CreateNode setSubscription()
  * operations: CreateNode catches missing checkCreateNode hook
  * operations: CreateNode default config
  * checkCreateNode config hook
  * model_postgres: fix getOwnersByNodePrefix SQL
  * operations: fix CreateNode setAffiliation()
  * operations: fix CreateNode getOwnersByNodePrefix()
  * operations: fix ../util require, CreateNode safety check
  * implement createNode with getOwnersByNodePrefix check
  * operations: begin creating topic channels
  * model_postgres: syntax fix
  * package.json: maintainer update
  * build_binary.sh: update to node 0.6.9
  * buddycloud-server 0.1.11
  * rsm_walk: fix logging
  * operations: checkAccessModel() before checkRequiredAffiliation()!
  * operations: Unsubscribe condition syntax fix
  * package.json: muffin dependency glob seems be incompatible in v3.*
  * operations: checkRequiredAffiliation should ignore no @requiredAffiliation
  * operations: fix isAffiliationAtLeast w/ invalid affiliation
  * jsconfig 0.2.0 is out! w00t!!!
  * Cakefile: lib/version.js from package.json
  * logger: update to ain2 1.0.0
  * main: fix config loading
  * buddycloud-server 0.1.10
  * router: fix syncServer()
  * buddycloud-server 0.1.9
  * bin/buddycloud-server: fix param quoting
  * bin/buddycloud-server: fix $cwd
  * buddycloud-server 0.1.8
  * .npmignore to package up built lib/* instead of src/*
  * build_binary.sh: install devDependencies beforehand
  * build_binary.sh: bump node.js version to 0.6.7
  * util: move getNodeUser(), getUserDomain()
  * main: "server successfully started"
  * sync: fix logging
  * model_postgres: fix writeItem() SQL parameter binding
  * sync: fix PaginatedSynchronization error callback
  * sync: rm TODO note
  * model_postgres: writeItem updated_query
  * operations: logging fixes
  * writeItem: move updated extraction from operations to model_postgres
  * model_postgres: writeItem should also INSERT existing updated value
  * model_postgres: fix syntax
  * model_postgres: SQL fixes
  * operations: PushInbox copies item published date
  * postgres schema: CREATE VIEW open_nodes + usage in model_postgres
  * model_postgres: fix query result handling
  * fix getTopFollowedNodes & getTopPublishedNodes parameters
  * model_postgres: fix SQL INTERVAL syntax
  * operations: BrowseNodes.fetchNodes() needs transaction
  * operations: BrowseNodes.transaction should use @fetchNodes()
  * operations: fetchNodes() typo
  * pubsub_server: browse /top-followed-nodes & /top-published-nodes does not request a particular node
  * getTopFollowedNodes & getTopPublishedNodes w/ XMPP disco interface
  * build_binary.sh: bump to node 0.6.6
  * buddycloud-server 0.1.7
  * package.json: rm cradle dependency
  * logger: syslog only with hostname
  * replace common-logger by underscore.logger
  * update ain2 dependency for node v0.6 compatibility
  * model_postgres walkListenerArchive: replace DISTINCT with GROUP BY
  * model_postgres: fix config order/limig
  * operations: ReplayArchive sorts results before capping
  * ReplayArchive/walkListenerArchive: properly cap result set
  * operations: ReplayArchive default max=50
  * build_binary.sh: use $PREFIX from environment if present
  * package.json: req node-stringprep >=0.1.1
  * router: fix
  * buddycloud-server 0.1.6
  * update to new node-waf paths
  * build_binary.sh: switch to node 0.6.4
  * package.json: depend on 0.3.1
  * router: RSM usage fix
  * logger: open logFile for appending, fixes issue #25
  * package.json: depend on node-xmpp >= 0.3.0
  * operations ReplayArchive: fix rsm max
  * operations: ReplayArchive RSM support
  * backend_pubsub: notificationPush updates include sender & actor
  * router: detectUserType fixes
  * router: detectUserType fixes
  * logger: fix argument iteration
  * main, backend_pubsub: logging improvements
  * backend_pubsub: include user in notfound error
  * connection: loopback stanzas to ourselves
  * router: add missing util.inspect include
  * router.run: trace req
  * router: add missing rsm include
  * logger: typo
  * logger: fix level
  * logging clean-up
  * router, pubsub_{server,client}: @type in <actor/>
  * buddycloud-server 0.1.5
  * router: sync fixes
  * buddycloud-server 0.1.4
  * ManageNodeAffiliations: non-owner may not elect a new owner
  * sync: log upon completion
  * sync: transaction fix
  * move some sync logic into router, lock per node
  * operations: BrowseNodeInfo/RetrieveNodeConfiguration w/o access control
  * buddycloud-server 0.1.3
  * operations: deny Unsubscribe from own nodes
  * logger: ain2 syslog transport
  * logger: message always as string
  * main: fix --stdout kludge
  * logger: avoid log level < 0
  * config.js.example: syslog on by default
  * config.js.example: logging section
  * syslog support with ain2
  * support --stdout logging
  * replace cnlogger by common-logger
  * buddycloud-server 0.1.2
  * build_binary: npm install globally (into /opt/buddycloud-server/)
  * build_binary: dedup node & npm versions
  * build_binary: default to /opt/buddycloud-server, bin/ script
  * main: process.title fix
  * version: fix package.json path
  * version from package.json in process.title and for jabber:iq:version
  * xmpp/connection: do not subscribe in probePresence()
  * buddycloud-server 0.1.1
  * build_binary: bump node & npm versions
  * backend_pubsub: reply() must also copy 'replay' field on MaxStanzaSizeExceeded
  * connection: more stanza output when MaxStanzaSizeExceeded
  * don't send ReplayArchive notifications to all online resources
  * pubsub_client/connection: wrap error replies into StanzaError earlier
  * logging fixes
  * port to cnlogger
  * port to broken winston logging
  * xmpp connection: always tell node-xmpp to reconnect
  * async.filter iterator does not take error parameter
  * model_postgres: fix nodeExists warning
  * backend_pubsub: fix notification matching
  * sync: fix router.authorizeFor() usage
  * sync: writeItem does not need author anymore
  * operations: typo
  * model_postgres: fix getListenerAffiliations() query
  * sync: careful
  * xmpp/forms: oops, s/creationTime/creationDate/
  * xmpp/connection: fix name
  * router: check for anonymous user to be online
  * anonymous user offline tracking & clean-up
  * model_postgres: fix walkListenerArchive() node in results
  * router: fix method binding
  * model_postgres: walkListenerArchive() should include node in results
  * operations: RemoveUser & model_postgres.getUserRemoteSubscriptions() & clearUserSubscriptions()
  * BuddycloudDiscovery::detectAnonymousUser
  * backend_pubsub: gracefully handle MaxStanzaSizeExceeded for notifications
  * xmpp pubsub_server & connection: fix graceful MaxStanzaSizeExceeded handling
  * errors: MaxStanzaSizeExceeded extends Error
  * operations: s/geoloc/geo/
  * operations: /subscription items shall contain jid=owner
  * metadata buddycloud#channel_type
  * proper metadata field names
  * support for creationDate
  * operations: clarify logging
  * router: fix remote backend selection
  * operations: Unsubscribe refactor & fix
  * operations: fix Register
  * buddycloud-server 0.1.0
  * operation: print opName on commit, rm debug
  * bin/buddycloud-server: don't cd so config can be loaded relatively
  * Merge remote-tracking branch 'origin/cli'
  * operations: RetractItems should allow anyone to remove their own posts
  * operations: preserve affiliation if previously affiliated
  * operations: unify into isAffiliationAtLeast()
  * operations: rm leftover TODO note
  * operations: refactor Register; should check if authoritative for user's domain
  * router.run: return 404 for nodes not locally subscribed but discovered ourselves
  * rm explicit author handling in postgres schema, model, operations
  * main: check sender authorization for authorizationPrompt
  * operations: RetrieveItems shall not virtualize items for cache case of remote nodes
  * Revert "Made the ownership of tables really clear. Should help avoid the problem that DD had the other day."
  * s/channel-server/buddycloud-server/g
  * build_binary.sh: fix invokation hint
  * README: rm some outdated stuff
  * main: fix defaultConfig stuff
  * build_binary.sh
  * operations: RetrieveItems.retrieveSubscriptionsItems() result set sorting, affiliations
  * virtual handling of /user/.../subscriptions node items
  * MAM replays subscription authorization requests
  * more authorization stuff
  * fixes
  * small fixes
  * package.json: fix bin path
  * further authorizationPrompt work
  * backend_pubsub: missedSomething was missing
  * package.json: fix coffeescript path (./node_modules/...)
  * sending authorize notification forms
  * package.json: fix .coffee compilation stage
  * operations: PrivilegedOperation.fetchActorAffilliation fetches all listener affiliations for inbox sync
  * pubsub_notifications: fix MAM stanzas
  * operations: subscribe defaultAffiliation, fixes
  * model_postgres: many fixes
  * operations: publishModel 'subscribers'
  * operations: access control fixes
  * begin access control, affiliations checking
  * model_postgres: fixes
  * errors: fix error classes
  * xmpp/connection: fix
  * xmpp/connection: fix @missedServerTimeouts usage
  * model_postgres: safety checks
  * readability, notes
  * rsm_walk: fix serious errors
  * globally refactor operation from function to value
  * sync: fixes
  * add forgotten rsm_walk file
  * move syncQueue from main.coffee to fine-grained sync.syncNode
  * xmpp/connection: readability
  * xmpp/connection: track <you-missed-something/> timers with @missedServerTimeouts
  * syncServer support, wired up to <you-missed-something/> 'syncNeeded'
  * model_postgres: for an actor, getSubscriptions() shall return not only users but also listeners
  * MAM time specification
  * primitive MAM implementation
  * send <you-missed-something/>
  * operations: PushInbox TODO note
  * sync: rm request.rsm.max clamp
  * synchronization with state resetting and subscriptions/affiliations support
  * pubsub_*: fix user/jid conventions
  * ConfigSynchronization should use browse-node-info to get node config
  * synchronizing!
  * synchronization kinda works, but hits RSM loops
  * further synchronization progress
  * begin synchronization
  * main: require async
  * measure stanza size, gracefully retry with smaller result set
  * synchronization groundwork
  * don't let backend_pubsub call router.runLocally(), return errors.SeeLocal() instead
  * errors: clean up
  * normalize: add <link rel="self" href="xmpp:...?pubsub;action=retrieve;..."/>
  * operations: Publish shall allow new items with specified @id
  * nodes browsing, with RSM
  * backend_pubsub: run() should bail out early on invalid node form
  * PostgreSQL tuning
  * complete RSM implementation
  * begin RSM for all operations
  * generify RSM stuff
  * pubsub_client: RSM
  * fixes from CCCamp11
  * RSM for local items retrieving
  * begin new RSM implementation
  * pubsub_server: publish-node-items shall reply with item ids
  * model_postgres: fix getNodeListeners() SQL
  * model_postgres: nodeExists() shall check for NOT NULL
  * model_postgres: getNodeListener() replace filter by SQL
  * model_postgres: getNodeListener() filter for null
  * model_postgres: fix setSubscription() INSERT w/o listener
  * error printout
  * forms: fix
  * operations: PushInbox author fix
  * debug
  * xml child robustness
  * model_postgres: fix nodeExists()
  * fix subscription listener for local users
  * logging cleanup
  * initiate presence tracking of users
  * xmpp/connection: use send() instead of specifying from jid
  * some logging cleanup
  * operations: push-inbox does not set subscription listener
  * fixes & TODO notes
  * operations: Notify.transaction() must call cb()
  * retrieve-node-configuration
  * forms: configToResultForm -> configToForm
  * pubsub_client: RetrieveNodeConfiguration & ManageNodeConfiguration
  * operations: catch reply cb exceptions
  * create-node operation
  * package.json: scripts
  * fixes
  * fix outgoing notifications
  * generify pubsub_notifications
  * many fixes for subscription pushing
  * router: if request writes, always go remote
  * push incoming notifications to local model
  * more subclassing of EventEmitter, incoming notifications handling
  * pubsub_server: unify PubsubRequest & PubsubOwnerRequest
  * merge request.coffee into pubsub_server.coffee
  * begin remote subscription pushing to local inbox
  * backend_pubsub: PubsubBackend.notify(): readability
  * tune to use single cb() instead of req.{reply,replyError}()
  * revive normalization
  * model_postgres: setSubscription(): coearce isSet to boolean
  * model_postgres: catch lost transactions
  * pubsub_client: error reporting, fix
  * subscribe reply status
  * model_postgres: setAffiliation() should check nodeExists()
  * fix disco.authorizeFor() usage
  * pubsub_client: fix <actor/> placement
  * refactor notifications a bit
  * pubsub_client: <actor/> placement fix
  * pubsub_client: fix <actor/> placement
  * pubsub_notifications: subscriptions/affiliations/config
  * fix registration/model callback parameters
  * operations: ManageNodeAffiliations validates accessModel & publishModel
  * setting configuration
  * fixes, fixes, config
  * only RegisterSetRequest should induce presence subscription
  * FIXME note
  * model_postgres: do not use rowCount
  * operations: Register created default configuration
  * pubsub_server: pubsub/inbox identity
  * fixes, StanzaError
  * implement pubsub_client operations
  * pubsub_notifications: byOperation()
  * fixes
  * fixes
  * fixes & debugging
  * fixes
  * debugging & fixes
  * fixes
  * begin discovering locally
  * fixes
  * Router.run: fix
  * fixes
  * operations: rename channel node to "posts"
  * begin notifications
  * a bit o' twiddling w/ subscription listeners
  * refactor router for remote requests
  * operations: subscribe/unsubscribe toggle affiliation none/member
  * router: rename frontend to backend
  * rename backend_postgres to model_postgres, revive router
  * main: move iqHandler to pubsub_server
  * manage, not only retrieve, subscriptions & affiliations
  * use subscribe sender as notification listener
  * backend_pubsub: replace ternary operator
  * need to store listener in subscriptions...
  * backend_pubsub: implement RequestCache
  * new untested buddycloud discovery with backend_pubsub.coffee
  * retrieve <actor/> generalized, begin using authorizeFor
  * ns: add BUDDYCLOUD_V1 xmlns
  * postgres.sql schema: updated column for more tables, author column for items
  * retrieving node affiliations
  * retrieving node subscriptions, fixes
  * backend_postgres: syntax fixes
  * operation: Register should set affiliation & subscription
  * retrieving subscriptions & affiliations
  * retracting items
  * publishing & retrieving items works
  * begin item retrieving
  * subscribe & unsubscribe
  * fix backend_postgres (user is a Pg keyword, must be quoted as column name)
  * publishing works
  * lots of fixes
  * fix disco requests
  * fix, fix, fix
  * begin implementing register & publish implementation
  * mv src/operations.coffee src/local/operations.coffee
  * revive backend
  * primitive operations
  * mv controller.coffee operations.coffee
  * dead code TODO
  * fixes
  * rm old dead code
  * rename iqhandler to request
  * begin some refactoring
  * begin hooking up handlers with operations
  * xmpp/pubsub_server: indicate operation types
  * notes
  * pubsub_server: PubsubOwnerHandlers
  * pubsub_server: flesh out more pubsub handlers
  * add affiliations checking
  * begin interweaving with local operations
  * a tad of interconnecting
  * pubsub_server: DiscoInfoHandler.reply()
  * xmpp client 'n stuff
  * README: draw new design
  * begin router
  * xmpp: move NS_* to ns.coffee
  * xmpp: primitive disco info works
  * begin iqhandler
  * xmpp/connection: port presence tracking
  * rm main.js
  * move src files around
  * rm model_couchdb from config, add preliminary main.coffee
  * a bit new controller
  * rm old test_controller
  * some controller work
  * old controller translated to coffeescript
  * port peripheral stuff over to coffeescript
  * README: change ejabberd port to the config default one
  * model_couchdb: s/doc.subscribers/doc.subscriptions/
  * xmpp_pubsub.js: fix typo
  * model_postgres: check nodeExists before any data modification
  * preliminary RSM (XEP-0059) implementation for retrieve-items/retrieve
  * model_couchdb: stub getUpdatesByTime()
  * MAM should result in direct message, not broadcast notification to all resources
  * MAM w/ working model_postgres backend
  * begin implementing MAM
  * controller: register/register should create /user/<jid>/subscriptions node
  * normalize fixes + tests
  * normalize
  * only one child element per item
  * model_postgres: fix setConfig()
  * model_postgres: listNodesByUser()
  * model_couchdb: listNodesByUser(), simplify listNodes()
  * controller, xmpp_pubsub: browse-nodes/by-user
  * model_postgres setConfig(): fixes
  * configuration notification
  * model_postgres setConfig(): do not set fields unspecified/without defaultConfig
  * model_postgres nodeExists(): indentation
  * controller: subscribe should not require preexisting affiliation
  * xmpp_pubsub: fix manage-subscriptions/retrieve result usage
  * controller: allow retrieving subscriptions & affiliations for members
  * xmpp_pubsub: syntax fix
  * model_postgres: fix queue pushing
  * xmpp_pubsub: fix info discovery reply FORM_TYPE
  * model_postgres: config fixes
  * more on extended config
  * model_couchdb, model_postgres: more flexible config schema
  * config: description, type, creationDate; setConfig() on create-node/register
  * xmpp_pubsub: optimize presence tracking
  * controller: requiredAffiliation='member' for config-node/retrieve
  * README: OpenFire
  * controller: defaultConfig() + use in feature 'config-node'
  * xmpp_pubsub: replace isOnline() with getOnlineResources()
  * model_postgres: fix transaction dequeueing
  * model_postgres: move cb() past process.nextTick/dbIsAvailable for safety
  * model_postgres: work around empty responses
  * test_controller: retract
  * xmpp_pubsub: disco <identity/> according to discovered @node
  * test_controller: browse-nodes
  * model_couchdb: fix preload() etag extraction + error reporting
  * xmpp_pubsub: FeatureNotImplemented message
  * controller: simulate a stack for debug info
  * test_controller: retract skeleton
  * controller unsubscribe: do not fetch affiliation from database but check by node path
  * implement & test unsubscribe
  * test_controller: skeletons
  * test_controller: publishing tests
  * test_controller: more publish testing + controller fix
  * test_controller: begin test publishing
  * model_postgres: fix forgotten variable
  * model_postgres: reconnect to database upon error
  * model_postgres: oops, syntax error
  * config.js.example: postgres is actually the one with a poolSize
  * model_postgres: oops, syntax errors
  * begin test_controller
  * fixes
  * subscriptionModified <message/>
  * xmpp_pubsub: "message" & approve() fixes
  * controller: replace ownerNotification with afterTransaction
  * access_model authorize
  * package.json & README
  * errors: pull inherits() from util/utils/sys for moving node api
  * browse open nodes with service discovery items
  * controller: refactor affiliations checking
  * xmpp_pubsub: fix subscriptions format
  * controller: treat missing accessModel as 'open'
  * model_couchdb: preload() etag fix
  * .gitignore with config.js
  * xmpp_pubsub: node config on disco info
  * model_couchdb: encodeURIComponent() only for db.head() & .get()
  * main.js: #!
  * rename config.js to config.js.example
  * restore default config.js
  * main.js: on uncaughtException
  * postgres doc & config
  * model_postgres
  * model_couchdb: fix item deserialization
  * model_couchdb: rm implemented TODOs
  * README: CouchDB configuration
  * README: TODO++
  * LICENSE
  * README: markdown fix
  * README: mention buddycloud :)
  * model_couchdb: fix views initialization
  * README & config
  * jabber:iq:register
  * model_couchdb: fixes
  * errors fixing
  * rm model_persistence
  * model_couchdb: assertNodeName()
  * main: catch uncaughtException
  * controller: fix
  * bugs, readability
  * model_couchdb: fixing
  * controller: implement affiliations checking
  * xmpp_pubsub: getAffiliations() result is now Array
  * model_couchdb: setSubscription() & setAffiliation() 'none'
  * model_couchdb: consolidate subscriptions & affiliations model
  * xmpp_pubsub: send notifications with type='headline'
  * xmpp_pubsub: subscribeIfNeeded() on <create/> & <subscribe/>
  * model_couchdb: load() shortcut when already cached
  * model_couchdb: createNode() fix
  * model_couchdb: preload()
  * model_couchdb: commit read documents too for integrity
  * model_couchdb: abstract views
  * CouchDB Optimistic Concurrency Control layer
  * controller: improve error propagation
  * defined error conditions
  * untested configuration getting/setting
  * service discovery
  * modify-affiliations
  * model_couchdb: getAffiliation()
  * begin permission checking infrastructure
  * presence probes
  * xmpp_pubsub: presence tracking
  * refactoring controller complete
  * continue refactoring controller into features/operations
  * begin refactoring controller into features/operations
  * subscribers
  * getting subscriptions & affiliations
  * createNode improvements
  * controller createNode: check node
  * model_couchdb: affiliations view
  * items getting
  * much more progress
  * implement retraction, s/notifySubscriber/notify/, s/writeItems/writeItem/
  * publish notification works
  * more frontend hooking
  * begin notification hooks
  * fixes
  * begin model_couchdb transactions
  * split model
  * some progress
  * some progress
  * createNode creates owner affiliation
  * model: indexes
  [ Thomas Jost ]
  * Add @denisw to contributors
  * Upgrade required node version to 0.8
  * We actually need remote subscriptions nodes
  * Merge branch 'feature/anon-fixes' into develop
  * Merge branch 'feature/really-validate-post-times' into develop
  * Reject remote posts with invalid dates
  * Add tests for remote posts with invalid dates
  * Force anon subscriptions to be temporary
  * Set default affiliation to 'none' for anon users
  * Merge branch 'feature/anon-fixes' into develop
  * Cleanup: remove some dead code
  * Purge remote nodes with no local subscription left
  * Merge branch 'feature/recent-items' into develop
  * Merge branch 'feature/validate-remote-items' into develop
  * Sort recent items by update time
  * Merge branch 'feature/validate-remote-items' into feature/recent-items
  * Fix tests that push remote items
  * Validate remote items
  * Add (failing) tests for invalid remote items
  * Implement recent items query
  * Add (failing) test for recent items query
  * PubSub replies can include several elements
  * Merge branch 'feature/pusher' into develop
  * Workaround callback woes
  * Fix MAM for pusher component
  * Pusher: test MAM
  * test_server: move makePublishIq into TestServer
  * Pusher: test node configuration
  * Pusher: test unsubscriptions
  * Merge branch 'feature/affiliations-fixes' into develop
  * Merge branch 'feature/pubsub-disco-features' into develop
  * Cleanup
  * Expose all implemented PubSub features
  * Pusher: test affiliations
  * Merge branch 'feature/affiliations-fixes' into feature/pusher
  * Fix affiliation in /subscriptions notifications
  * Accept PubSub-compliant affiliations notifications
  * Pusher: test subscriptions
  * Merge branch 'feature/fix-98' into develop
  * Fix SQL for updating replies
  * Add failing test for issue #98
  * Fix offline user cleanup
  * DB: drop anonymous column
  * Yet another federation test
  * Check if the example config file is valid JS
  * Add tests for pusher code
  * Pusher can MAM everything
  * Pusher is a listener for all notifications
  * Add config for pusher component
  * Merge branch 'feature/mam-fixes' into develop
  * Increase the default number of items in a MAM response
  * Make MAM return an error if there are too many results
  * Use RSM in MAM
  * Test MAM RSM
  * MAM: filter bad dates out
  * Test if MAM validates dates correctly
  * Ensure the giant MAM test doesn't pollute the test environment
  * Make affiliations notifications PubSub-compliant
  * Affiliations have update timestamps too
  * Avoid temporary subscriptions in MAM results
  * Advertise support for MAM in disco#info
  * Add a giant MAM test
  * Update Travis URL in README.md
  * Merge branch 'feature/tests' into develop
  * Correctly tests that updated items don't change <in-reply-to/>
  * Move tests on updated items to a different function
  * Add tests for updates that change <in-reply-to/>
  * Use Travis to automate testing
  * Merge branch 'master' into develop
  * Add compatibility with PostgreSQL 9.1
  * Require at least one item to retract
  * Add Emacs folding marks
  * Add retrieve and retract tests
  * Fix retraction stanza sent to remote services
  * Tombstones: include Atom namespace in <updated/> element
  * Fix error when not allowed to retract an item
  * Tombstones can't be updated
  * When publishing an update, check if the actor is the original author
  * Check if original post exists before publishing a reply
  * Reject posts from non-users
  * Don't include type in <actor/>
  * Complete post/update/retract tests
  * TestServer: fix Atom in-reply-to element
  * Fail when some unwanted event happens
  * Add description for calls to "should.exist"
  * Retraction tests
  * Workaround CoffeeScript weird scoping rules
  * Add another batch of tests
  * Update test data
  * Change the way the test server emits IQ stanzas
  * Tests for posting to remote channels
  * Test server: emit event for IQs with unknown ID
  * Test server: disco info for "remote" servers
  * More post tests
  * Add helper to run tests that trigger several different stanzas
  * Test server: handle <message/> stanzas
  * Add post tests
  * Post tests: helper to check if post was successful
  * Throw an exception when getting an unexpected error IQ
  * Start adding post tests
  * Add helpers for pubsub get IQs and Atom handling
  * Helpers to add initial test data in the database
  * Add XMPP namespaces to test_server.coffee
  * Reply to presence probes
  * Don't parse Elements again
  * Use same user and server names as in sfc
  * Safe path handling in prepare-db.sh
  * Add codo-like doc to the TestServer class
  * Add helpers to build disco and pubsub IQs
  * Expose support for PubSub node creation
  * Skip a test
  * More channel creation tests
  * New tests and helpers for forms
  * Add a helper to parse disco#info replies
  * Move common disco replies to test_server.coffee
  * Start testing for channel creation
  * Test server: handle disco#items queries
  * Make tests runnable using "npm test"
  * Basic disco tests
  * Start a test suite
  * Use an existing component connection if provided in config
  * Make it possible to require() the server
  * Update config.js.example
  * Fix autosubscribeNewUsers
  * Increase the max number of items in each RSM page
  * Better shrinking of oversized stanzas
  * Include `-dirty' in version number from git
  * Remove glob from dependencies
  * Fix indentation in main.coffee
  * Prevent existing persistent subscription from being made temporary
  * Merge branch 'feature/version-number-from-git' into develop
  * Expose support for XEP-0092 (Software Version) in disco
  * Use `git describe' to get version numbers in dev branches
  * Merge branch 'master' into next
  * Restore compatibility with Node 0.6
  * Fix handling of offline users
  * Avoid race condition in disco cache
  * Shrink oversized stanzas more aggressively
  * Avoid nulls
  * Include new files in release tarball
  * Avoid race condition in disco cache
  * Merge remote-tracking branch 'upstream/tempsub' into next
  * Merge branch 'db-versioning' into next
  * buddycloud-server 0.3.5
  * Check if remote supports temporary subscription before sending a tempsub request
  * Client can check for server features before sending an IQ
  * Make server features discoverable
  * Log errors when processing incoming messages
  * Cleanup
  * Remove empty text nodes from items
  * Fix ActivityStreams verb for replies
  * Include operation name in debug message
  * Don't notify unsubscribe when it was a temporary subscription
  * Offline user cleanup: do real unsubscribe operations
  * I'm dumb
  * Don't delete temporary subscriptions during sync
  * Don't send any notification for temporary subscriptions
  * Client and server must speak the same language
  * Only send notifications about temporary subscriptions to remote listeners
  * Cleanup offline users
  * Claim we support subscription options
  * Temporary subscriptions
  * Fix updating items
  * Add help channels to default autosubscriptions
  * Merge branch 'log-fix'
  * Inspect objets in log messages
  * Fix broken log messages
  * Don't write subscription stanzas in items table
  * Merge remote-tracking branch 'lloyd/config'
  * Populate in_reply_to column when inserting new items
  * DB cleanup at startup
  * Add README for DB schema versioning
  * Upgrade DB schema
  * Check DB schema version on startup
  * Don't change <published/> when updating an existing post
  * Fix subscription to remote private channels
  * Don't fail when the default config file does not exist
  * Add Lloyd in contributors
  * Better logging for replies sent by 'proxy' components
  * Merge branch 'mam-result'
  * Include <result/> in MAM replies
  * Merge remote-tracking branch 'schnouki/atom-tombstones'
  * Fix typo
  * Merge pull request #61 from lloydwatkin/no-mod_disco
  * Also send tombstones in retract notifications
  * Use Atom tombstones for deleted items
  * xmpp: XEP-0313 compliance
  * Handle PubSub retract "notify" attribute
  * operations: fix PushInbox notification
  * Fix undefined variable when paging backwards in RSM
  [ Tuomas Koski ]
  * Merge pull request #59 from lloydwatkin/initialise-sync
  * Merge pull request #58 from lloydwatkin/master
  [ Steven Lloyd Watkin ]
  * Ensure we do not cause BC breaks
  * Make both defaults positive rather than one positive & the other negative Broke the config options down further
  * Fix build console output
  * "package" now a reserved word in node, caused failing in builds (v0.6.15+)
  [ Denis Washington ]
  * Use local CoffeeScript "cake" for "npm install"
  [ Jonas Smedegaard ]
  * Setup access rights and needed dirs when starting daemon
  * Speedup system shutdown by avoiding explicit sysV stop
  * xmpp_pubsub: check for commandEl prior usage
  [ Reginald dude ]
  * updates sent via email from vorner.cz
  * updates sent via email from vorner.cz
  [ Reginald Dude ]
  * Most confusing config file ever
  [ ▟ ▖▟ ▖ ]
  * Merge pull request #70 from lloydwatkin/fix-is-function
  * Merge pull request #63 from lloydwatkin/no-mod_disco
  * Merge pull request #62 from lloydwatkin/no-mod_disco
  * Merge pull request #57 from Schnouki/xep-0313
  * Merge pull request #54 from Schnouki/fix-notif
  * Merge pull request #52 from lloydwatkin/master
  * Merge pull request #51 from lloydwatkin/master
  [ James Tait ]
  * Ensure both the PID dir and log dir are created on startup if they do not already exist.
  [ imaginator ]
  * aligning with INSTALL instructions
  * moved instructions to wiki
  * Edited README.md via GitHub
  [ dodo ]
  * fix accessModel of geo nodes
  * always test in production
  * buddycloud-server 0.3.4
  * Merge branch 'packaging'
  * put the /etc/init.d script into tarball
  * not needed anymore
  * default options for new channels
  * bump tarballify version
  * add bin/buddycloud-server to the tarball
  * no build step in bin/buddycloud-server anymore
  * print additional info messages in gray
  * fix 'file is not defined'
  * fix 'modName is not defined'
  * colorful output for package.js
  * bump tarballify version
  * rm trailing spaces
  * no build_binary.sh needed
  * separate devDependencies
  * export name
  * use packaging script
  * buddycloud-server 0.3.3
  * pass prefix to npm to force npm to use that particular prefix
  * $PREFIX/bin/buddycloud-server can be nonexistant .. so ignore all errors when removing
  * bump node version in build script
  * merge issue #37
  * specify interal config file as defaults, not as main config
  * backports to node 0.4
  * concat cwd path to config path only when config path is relative
  * respect the cwd
  * move to the right dir before builing
  * wscript is not needed anymore
  * merged #31. symlink detection for bin/buddycloud-server thanks to @highfellow
  * fixed gitignore
  * forgot Cakefile
  * pin node version for over 0.5 to get the require json working
  * get version directly
  * new buildsystem
  * check if config.syslog has keys
  * dont load default config over opts and args
  * main: fix config loading
  * wscript fixes
  * load config via jsconfig
  * update wscript
  * upgrade build environment
  * update requirements in readme
  * cleanup files
  [ Simon Tennant ]
  * Update config.js.example
  * change to read config file from /opt/buddycloud
  * Update master
  * don't be so --quiet (will help a lot with debugging)
  * Update _etc_init.d_buddycloud-server
  * the orwell defeault was causing jdesenberg problems.
  * Fixed the permissions to run as.
  * Update _etc_init.d_buddycloud-server
  * init script
  * make it really clear what to change (and what "jid" refers to)
  * Made the ownership of tables really clear. Should help avoid the problem that DD had the other day.
  [ Lloyd Watkin ]
  * Fix for checking of child element
  * Catch error event
  * Fix for server reset
  * Updated variable names to better describe what config does.
  * Merge branch 'master' of git://github.com/buddycloud/buddycloud-server into no-mod_disco
  * Allow buddycloud server to advertise additional 'proxy' components
  * Wait to sync
  * Rename of parameter
  * Allow user to specify a port or not, changed argument name as it may not actually be remote debugging.
  * Tidy up
  * Allow node.js debugging
  [ Simon ]
  * /etc/init.d/buddycloud-server

 -- Abmar Barros (buddycloud Nightly Builds) <abmar@buddycloud.com>  Sat, 26 Jan 2013 15:13:22 -0300


buddycloud-server (0.1) unstable; urgency=medium

  [ Astro ]
  * operations: all nodes in defaultConfiguration accessModel=authorize
  * operations: posts & subscriptions accessModel=authorize in defaultConfiguration
  * buddycloud-server 0.3.2
  * Cakefile: version.js + 

  * operations: fix run notifications control flow
  * build_binary.sh: get bin/buddycloud-server out of the way before npm i
  * buddycloud-server 0.3.1
  * package.json: honor all contributors
  * Merge remote-tracking branch 'schnouki/patch-1'
  * .npmignore: exclude debian/* from npm pkgs
  * buddycloud-server 0.3.0
  * package.json: bump dep versions
  * operations: prevent unsubscribing/demoting the node owner
  * operations: fix PushInbox callback
  * operations: run notifies first, then syncs, then calls back
  * pubsub_server: lower logging
  * operations: fix PushInbox newNodes
  * operations: move PushInbox syncNode post transaction
  * operations: PushInbox should work even if syncNode had hickups
  * operations: syncNode when PushInbox created it
  * operations: fix PushInbox notification & newModerators
  * model_postgres: fix & simplify purgeNode()
  * sync: fixes
  * sync: purge node if no local subscribers
  * purge node when local unsubscription is pushed from remote
  * operations: fix generateSubscriptionsNotifications followee
  * operations: fix PushInbox newModerators nodes
  * xmpp connection: doc, serialize stanzas only once
  * operations: NewModeratorNotify needs listener, not user
  * operations: fix NewModeratorNotify listener
  * operations: log Operation name
  * model_postgres: must quote "user" column for Postgres
  * operations: NewModeratorNotify must cb()
  * operations: Notify notifies w/ node
  * operations: fix Notify otherListeners
  * pubsub_client: rm debug
  * operations: NewModeratorNotify notifies w/ node & listener
  * model_postgres: optional Transaction callbacks
  * operations: fix Notify filterSubscription & filterAffiliation invokation
  * operations: fix this binding
  * operations: no pending subscriptions in subscriptions node
  * operations: NewModeratorNotify
  * operations: doc, filter subscriptions and affiliations for non-moderators
  * operations: reorganize
  * clean up logging
  * operations: posts node defaultAffiliation='publisher'
  * sync: fix AffiliationsSynchronization typo
  * buddycloud-server 0.2.3
  * package.json: fix install script
  * build_binary.sh: bump node.js version
  * buddycloud-server 0.2.2
  * package.json: add preinstall cake build
  * operations: fix notifications
  * build_binary.sh: bump node.js version
  * buddycloud-server 0.2.1
  * operations: fix Notify subscriptios node items
  * operations: fix Notify callback result
  * operations: BrowseNodeItems for subscriptions node calls getSubscriptions not getSubscription
  * operations: syntax fixes
  * operations: Notify subscriptions fixes
  * operations: subscriptions node notifications
  * operations: BrowseNodeItems for subscriptions node
  * sync: require errors
  * sync: avoid error output when omitting local node
  * router, sync: improve logging
  * backend_pubsub: PubsubBackend.notify listener robustness
  * operations: fix Subscribe defaultAffiliation
  * operations: fix ManageNodeAffiliations control flow
  * pubsub_server: PubsubOwnerSetAffiliationsRequest syntax fix
  * operations: fix requiredAffiliation()
  * operations: requiredAffiliation can be function to allow moderators approving topic channel subscribers
  * operations: ManageNodeSubscriptions refactor for efficiency
  * operations: ManageNodeSubscriptions should set new affiliations to defaultAffiliation
  * operations: fix Notify jid/user
  * operations: Notify should notify all users pertained by a subscription
  * operations: 'unsubscribe-node' notifies unsubscribed user
  * operations, pubsub_client: there's no "unsubscribed" subscription, only "none"
  * pubsub_server: PubsubOwnerSetSubscriptionsRequest syntax fix
  * operations: Unsubscribe needs PrivilegedOperation methods
  * operations: Unsubscribed is not a PrivilegedOperation but a ModelOperation
  * operations: fix callback scope
  * pubsub_server: robustify PubsubItemsRequest
  * operations: syntax
  * pubsub_server, operations: support for RetrieveItems by itemIds
  * build_binary.sh: bump node.js version to 0.6.10
  * buddycloud-server 0.2.0
  * operations: CreateNode should not allow creation with empty nodeUser username
  * operations: fix CreateNode defaults & creationDate
  * operations: fix CreateNode isTopic switcheroo
  * router: fix autosubscribeNewUsers operation name
  * router: autosubscribeNewUsers
  * config.js.example: default checkCreateNode hook checks for a specific topic domain
  * operations: fix CreateNode node typo
  * operations: fix CreateNode config
  * pubsub_server, operations: CreateNode with optional config
  * operations: fix CreateNode setSubscription()
  * operations: CreateNode catches missing checkCreateNode hook
  * operations: CreateNode default config
  * checkCreateNode config hook
  * model_postgres: fix getOwnersByNodePrefix SQL
  * operations: fix CreateNode setAffiliation()
  * operations: fix CreateNode getOwnersByNodePrefix()
  * operations: fix ../util require, CreateNode safety check
  * implement createNode with getOwnersByNodePrefix check
  * operations: begin creating topic channels
  * model_postgres: syntax fix
  * package.json: maintainer update
  * build_binary.sh: update to node 0.6.9
  * buddycloud-server 0.1.11
  * rsm_walk: fix logging
  * operations: checkAccessModel() before checkRequiredAffiliation()!
  * operations: Unsubscribe condition syntax fix
  * package.json: muffin dependency glob seems be incompatible in v3.*
  * operations: checkRequiredAffiliation should ignore no @requiredAffiliation
  * operations: fix isAffiliationAtLeast w/ invalid affiliation
  * jsconfig 0.2.0 is out! w00t!!!
  * Cakefile: lib/version.js from package.json
  * logger: update to ain2 1.0.0
  * main: fix config loading
  * buddycloud-server 0.1.10
  * router: fix syncServer()
  * buddycloud-server 0.1.9
  * bin/buddycloud-server: fix param quoting
  * bin/buddycloud-server: fix $cwd
  * buddycloud-server 0.1.8
  * .npmignore to package up built lib/* instead of src/*
  * build_binary.sh: install devDependencies beforehand
  * build_binary.sh: bump node.js version to 0.6.7
  * util: move getNodeUser(), getUserDomain()
  * main: "server successfully started"
  * sync: fix logging
  * model_postgres: fix writeItem() SQL parameter binding
  * sync: fix PaginatedSynchronization error callback
  * sync: rm TODO note
  * model_postgres: writeItem updated_query
  * operations: logging fixes
  * writeItem: move updated extraction from operations to model_postgres
  * model_postgres: writeItem should also INSERT existing updated value
  * model_postgres: fix syntax
  * model_postgres: SQL fixes
  * operations: PushInbox copies item published date
  * postgres schema: CREATE VIEW open_nodes + usage in model_postgres
  * model_postgres: fix query result handling
  * fix getTopFollowedNodes & getTopPublishedNodes parameters
  * model_postgres: fix SQL INTERVAL syntax
  * operations: BrowseNodes.fetchNodes() needs transaction
  * operations: BrowseNodes.transaction should use @fetchNodes()
  * operations: fetchNodes() typo
  * pubsub_server: browse /top-followed-nodes & /top-published-nodes does not request a particular node
  * getTopFollowedNodes & getTopPublishedNodes w/ XMPP disco interface
  * build_binary.sh: bump to node 0.6.6
  * buddycloud-server 0.1.7
  * package.json: rm cradle dependency
  * logger: syslog only with hostname
  * replace common-logger by underscore.logger
  * update ain2 dependency for node v0.6 compatibility
  * model_postgres walkListenerArchive: replace DISTINCT with GROUP BY
  * model_postgres: fix config order/limig
  * operations: ReplayArchive sorts results before capping
  * ReplayArchive/walkListenerArchive: properly cap result set
  * operations: ReplayArchive default max=50
  * build_binary.sh: use $PREFIX from environment if present
  * package.json: req node-stringprep >=0.1.1
  * router: fix
  * buddycloud-server 0.1.6
  * update to new node-waf paths
  * build_binary.sh: switch to node 0.6.4
  * package.json: depend on 0.3.1
  * router: RSM usage fix
  * logger: open logFile for appending, fixes issue #25
  * package.json: depend on node-xmpp >= 0.3.0
  * operations ReplayArchive: fix rsm max
  * operations: ReplayArchive RSM support
  * backend_pubsub: notificationPush updates include sender & actor
  * router: detectUserType fixes
  * router: detectUserType fixes
  * logger: fix argument iteration
  * main, backend_pubsub: logging improvements
  * backend_pubsub: include user in notfound error
  * connection: loopback stanzas to ourselves
  * router: add missing util.inspect include
  * router.run: trace req
  * router: add missing rsm include
  * logger: typo
  * logger: fix level
  * logging clean-up
  * router, pubsub_{server,client}: @type in <actor/>
  * buddycloud-server 0.1.5
  * router: sync fixes
  * buddycloud-server 0.1.4
  * ManageNodeAffiliations: non-owner may not elect a new owner
  * sync: log upon completion
  * sync: transaction fix
  * move some sync logic into router, lock per node
  * operations: BrowseNodeInfo/RetrieveNodeConfiguration w/o access control
  * buddycloud-server 0.1.3
  * operations: deny Unsubscribe from own nodes
  * logger: ain2 syslog transport
  * logger: message always as string
  * main: fix --stdout kludge
  * logger: avoid log level < 0
  * config.js.example: syslog on by default
  * config.js.example: logging section
  * syslog support with ain2
  * support --stdout logging
  * replace cnlogger by common-logger
  * buddycloud-server 0.1.2
  * build_binary: npm install globally (into /opt/buddycloud-server/)
  * build_binary: dedup node & npm versions
  * build_binary: default to /opt/buddycloud-server, bin/ script
  * main: process.title fix
  * version: fix package.json path
  * version from package.json in process.title and for jabber:iq:version
  * xmpp/connection: do not subscribe in probePresence()
  * buddycloud-server 0.1.1
  * build_binary: bump node & npm versions
  * backend_pubsub: reply() must also copy 'replay' field on MaxStanzaSizeExceeded
  * connection: more stanza output when MaxStanzaSizeExceeded
  * don't send ReplayArchive notifications to all online resources
  * pubsub_client/connection: wrap error replies into StanzaError earlier
  * logging fixes
  * port to cnlogger
  * port to broken winston logging
  * xmpp connection: always tell node-xmpp to reconnect
  * async.filter iterator does not take error parameter
  * model_postgres: fix nodeExists warning
  * backend_pubsub: fix notification matching
  * sync: fix router.authorizeFor() usage
  * sync: writeItem does not need author anymore
  * operations: typo
  * model_postgres: fix getListenerAffiliations() query
  * sync: careful
  * xmpp/forms: oops, s/creationTime/creationDate/
  * xmpp/connection: fix name
  * router: check for anonymous user to be online
  * anonymous user offline tracking & clean-up
  * model_postgres: fix walkListenerArchive() node in results
  * router: fix method binding
  * model_postgres: walkListenerArchive() should include node in results
  * operations: RemoveUser & model_postgres.getUserRemoteSubscriptions() & clearUserSubscriptions()
  * BuddycloudDiscovery::detectAnonymousUser
  * backend_pubsub: gracefully handle MaxStanzaSizeExceeded for notifications
  * xmpp pubsub_server & connection: fix graceful MaxStanzaSizeExceeded handling
  * errors: MaxStanzaSizeExceeded extends Error
  * operations: s/geoloc/geo/
  * operations: /subscription items shall contain jid=owner
  * metadata buddycloud#channel_type
  * proper metadata field names
  * support for creationDate
  * operations: clarify logging
  * router: fix remote backend selection
  * operations: Unsubscribe refactor & fix
  * operations: fix Register
  * buddycloud-server 0.1.0
  * operation: print opName on commit, rm debug
  * bin/buddycloud-server: don't cd so config can be loaded relatively
  * Merge remote-tracking branch 'origin/cli'
  * operations: RetractItems should allow anyone to remove their own posts
  * operations: preserve affiliation if previously affiliated
  * operations: unify into isAffiliationAtLeast()
  * operations: rm leftover TODO note
  * operations: refactor Register; should check if authoritative for user's domain
  * router.run: return 404 for nodes not locally subscribed but discovered ourselves
  * rm explicit author handling in postgres schema, model, operations
  * main: check sender authorization for authorizationPrompt
  * operations: RetrieveItems shall not virtualize items for cache case of remote nodes
  * Revert "Made the ownership of tables really clear. Should help avoid the problem that DD had the other day."
  * s/channel-server/buddycloud-server/g
  * build_binary.sh: fix invokation hint
  * README: rm some outdated stuff
  * main: fix defaultConfig stuff
  * build_binary.sh
  * operations: RetrieveItems.retrieveSubscriptionsItems() result set sorting, affiliations
  * virtual handling of /user/.../subscriptions node items
  * MAM replays subscription authorization requests
  * more authorization stuff
  * fixes
  * small fixes
  * package.json: fix bin path
  * further authorizationPrompt work
  * backend_pubsub: missedSomething was missing
  * package.json: fix coffeescript path (./node_modules/...)
  * sending authorize notification forms
  * package.json: fix .coffee compilation stage
  * operations: PrivilegedOperation.fetchActorAffilliation fetches all listener affiliations for inbox sync
  * pubsub_notifications: fix MAM stanzas
  * operations: subscribe defaultAffiliation, fixes
  * model_postgres: many fixes
  * operations: publishModel 'subscribers'
  * operations: access control fixes
  * begin access control, affiliations checking
  * model_postgres: fixes
  * errors: fix error classes
  * xmpp/connection: fix
  * xmpp/connection: fix @missedServerTimeouts usage
  * model_postgres: safety checks
  * readability, notes
  * rsm_walk: fix serious errors
  * globally refactor operation from function to value
  * sync: fixes
  * add forgotten rsm_walk file
  * move syncQueue from main.coffee to fine-grained sync.syncNode
  * xmpp/connection: readability
  * xmpp/connection: track <you-missed-something/> timers with @missedServerTimeouts
  * syncServer support, wired up to <you-missed-something/> 'syncNeeded'
  * model_postgres: for an actor, getSubscriptions() shall return not only users but also listeners
  * MAM time specification
  * primitive MAM implementation
  * send <you-missed-something/>
  * operations: PushInbox TODO note
  * sync: rm request.rsm.max clamp
  * synchronization with state resetting and subscriptions/affiliations support
  * pubsub_*: fix user/jid conventions
  * ConfigSynchronization should use browse-node-info to get node config
  * synchronizing!
  * synchronization kinda works, but hits RSM loops
  * further synchronization progress
  * begin synchronization
  * main: require async
  * measure stanza size, gracefully retry with smaller result set
  * synchronization groundwork
  * don't let backend_pubsub call router.runLocally(), return errors.SeeLocal() instead
  * errors: clean up
  * normalize: add <link rel="self" href="xmpp:...?pubsub;action=retrieve;..."/>
  * operations: Publish shall allow new items with specified @id
  * nodes browsing, with RSM
  * backend_pubsub: run() should bail out early on invalid node form
  * PostgreSQL tuning
  * complete RSM implementation
  * begin RSM for all operations
  * generify RSM stuff
  * pubsub_client: RSM
  * fixes from CCCamp11
  * RSM for local items retrieving
  * begin new RSM implementation
  * pubsub_server: publish-node-items shall reply with item ids
  * model_postgres: fix getNodeListeners() SQL
  * model_postgres: nodeExists() shall check for NOT NULL
  * model_postgres: getNodeListener() replace filter by SQL
  * model_postgres: getNodeListener() filter for null
  * model_postgres: fix setSubscription() INSERT w/o listener
  * error printout
  * forms: fix
  * operations: PushInbox author fix
  * debug
  * xml child robustness
  * model_postgres: fix nodeExists()
  * fix subscription listener for local users
  * logging cleanup
  * initiate presence tracking of users
  * xmpp/connection: use send() instead of specifying from jid
  * some logging cleanup
  * operations: push-inbox does not set subscription listener
  * fixes & TODO notes
  * operations: Notify.transaction() must call cb()
  * retrieve-node-configuration
  * forms: configToResultForm -> configToForm
  * pubsub_client: RetrieveNodeConfiguration & ManageNodeConfiguration
  * operations: catch reply cb exceptions
  * create-node operation
  * package.json: scripts
  * fixes
  * fix outgoing notifications
  * generify pubsub_notifications
  * many fixes for subscription pushing
  * router: if request writes, always go remote
  * push incoming notifications to local model
  * more subclassing of EventEmitter, incoming notifications handling
  * pubsub_server: unify PubsubRequest & PubsubOwnerRequest
  * merge request.coffee into pubsub_server.coffee
  * begin remote subscription pushing to local inbox
  * backend_pubsub: PubsubBackend.notify(): readability
  * tune to use single cb() instead of req.{reply,replyError}()
  * revive normalization
  * model_postgres: setSubscription(): coearce isSet to boolean
  * model_postgres: catch lost transactions
  * pubsub_client: error reporting, fix
  * subscribe reply status
  * model_postgres: setAffiliation() should check nodeExists()
  * fix disco.authorizeFor() usage
  * pubsub_client: fix <actor/> placement
  * refactor notifications a bit
  * pubsub_client: <actor/> placement fix
  * pubsub_client: fix <actor/> placement
  * pubsub_notifications: subscriptions/affiliations/config
  * fix registration/model callback parameters
  * operations: ManageNodeAffiliations validates accessModel & publishModel
  * setting configuration
  * fixes, fixes, config
  * only RegisterSetRequest should induce presence subscription
  * FIXME note
  * model_postgres: do not use rowCount
  * operations: Register created default configuration
  * pubsub_server: pubsub/inbox identity
  * fixes, StanzaError
  * implement pubsub_client operations
  * pubsub_notifications: byOperation()
  * fixes
  * fixes
  * fixes & debugging
  * fixes
  * debugging & fixes
  * fixes
  * begin discovering locally
  * fixes
  * Router.run: fix
  * fixes
  * operations: rename channel node to "posts"
  * begin notifications
  * a bit o' twiddling w/ subscription listeners
  * refactor router for remote requests
  * operations: subscribe/unsubscribe toggle affiliation none/member
  * router: rename frontend to backend
  * rename backend_postgres to model_postgres, revive router
  * main: move iqHandler to pubsub_server
  * manage, not only retrieve, subscriptions & affiliations
  * use subscribe sender as notification listener
  * backend_pubsub: replace ternary operator
  * need to store listener in subscriptions...
  * backend_pubsub: implement RequestCache
  * new untested buddycloud discovery with backend_pubsub.coffee
  * retrieve <actor/> generalized, begin using authorizeFor
  * ns: add BUDDYCLOUD_V1 xmlns
  * postgres.sql schema: updated column for more tables, author column for items
  * retrieving node affiliations
  * retrieving node subscriptions, fixes
  * backend_postgres: syntax fixes
  * operation: Register should set affiliation & subscription
  * retrieving subscriptions & affiliations
  * retracting items
  * publishing & retrieving items works
  * begin item retrieving
  * subscribe & unsubscribe
  * fix backend_postgres (user is a Pg keyword, must be quoted as column name)
  * publishing works
  * lots of fixes
  * fix disco requests
  * fix, fix, fix
  * begin implementing register & publish implementation
  * mv src/operations.coffee src/local/operations.coffee
  * revive backend
  * primitive operations
  * mv controller.coffee operations.coffee
  * dead code TODO
  * fixes
  * rm old dead code
  * rename iqhandler to request
  * begin some refactoring
  * begin hooking up handlers with operations
  * xmpp/pubsub_server: indicate operation types
  * notes
  * pubsub_server: PubsubOwnerHandlers
  * pubsub_server: flesh out more pubsub handlers
  * add affiliations checking
  * begin interweaving with local operations
  * a tad of interconnecting
  * pubsub_server: DiscoInfoHandler.reply()
  * xmpp client 'n stuff
  * README: draw new design
  * begin router
  * xmpp: move NS_* to ns.coffee
  * xmpp: primitive disco info works
  * begin iqhandler
  * xmpp/connection: port presence tracking
  * rm main.js
  * move src files around
  * rm model_couchdb from config, add preliminary main.coffee
  * a bit new controller
  * rm old test_controller
  * some controller work
  * old controller translated to coffeescript
  * port peripheral stuff over to coffeescript
  * README: change ejabberd port to the config default one
  * model_couchdb: s/doc.subscribers/doc.subscriptions/
  * xmpp_pubsub.js: fix typo
  * model_postgres: check nodeExists before any data modification
  * preliminary RSM (XEP-0059) implementation for retrieve-items/retrieve
  * model_couchdb: stub getUpdatesByTime()
  * MAM should result in direct message, not broadcast notification to all resources
  * MAM w/ working model_postgres backend
  * begin implementing MAM
  * controller: register/register should create /user/<jid>/subscriptions node
  * normalize fixes + tests
  * normalize
  * only one child element per item
  * model_postgres: fix setConfig()
  * model_postgres: listNodesByUser()
  * model_couchdb: listNodesByUser(), simplify listNodes()
  * controller, xmpp_pubsub: browse-nodes/by-user
  * model_postgres setConfig(): fixes
  * configuration notification
  * model_postgres setConfig(): do not set fields unspecified/without defaultConfig
  * model_postgres nodeExists(): indentation
  * controller: subscribe should not require preexisting affiliation
  * xmpp_pubsub: fix manage-subscriptions/retrieve result usage
  * controller: allow retrieving subscriptions & affiliations for members
  * xmpp_pubsub: syntax fix
  * model_postgres: fix queue pushing
  * xmpp_pubsub: fix info discovery reply FORM_TYPE
  * model_postgres: config fixes
  * more on extended config
  * model_couchdb, model_postgres: more flexible config schema
  * config: description, type, creationDate; setConfig() on create-node/register
  * xmpp_pubsub: optimize presence tracking
  * controller: requiredAffiliation='member' for config-node/retrieve
  * README: OpenFire
  * controller: defaultConfig() + use in feature 'config-node'
  * xmpp_pubsub: replace isOnline() with getOnlineResources()
  * model_postgres: fix transaction dequeueing
  * model_postgres: move cb() past process.nextTick/dbIsAvailable for safety
  * model_postgres: work around empty responses
  * test_controller: retract
  * xmpp_pubsub: disco <identity/> according to discovered @node
  * test_controller: browse-nodes
  * model_couchdb: fix preload() etag extraction + error reporting
  * xmpp_pubsub: FeatureNotImplemented message
  * controller: simulate a stack for debug info
  * test_controller: retract skeleton
  * controller unsubscribe: do not fetch affiliation from database but check by node path
  * implement & test unsubscribe
  * test_controller: skeletons
  * test_controller: publishing tests
  * test_controller: more publish testing + controller fix
  * test_controller: begin test publishing
  * model_postgres: fix forgotten variable
  * model_postgres: reconnect to database upon error
  * model_postgres: oops, syntax error
  * config.js.example: postgres is actually the one with a poolSize
  * model_postgres: oops, syntax errors
  * begin test_controller
  * fixes
  * subscriptionModified <message/>
  * xmpp_pubsub: "message" & approve() fixes
  * controller: replace ownerNotification with afterTransaction
  * access_model authorize
  * package.json & README
  * errors: pull inherits() from util/utils/sys for moving node api
  * browse open nodes with service discovery items
  * controller: refactor affiliations checking
  * xmpp_pubsub: fix subscriptions format
  * controller: treat missing accessModel as 'open'
  * model_couchdb: preload() etag fix
  * .gitignore with config.js
  * xmpp_pubsub: node config on disco info
  * model_couchdb: encodeURIComponent() only for db.head() & .get()
  * main.js: #!
  * rename config.js to config.js.example
  * restore default config.js
  * main.js: on uncaughtException
  * postgres doc & config
  * model_postgres
  * model_couchdb: fix item deserialization
  * model_couchdb: rm implemented TODOs
  * README: CouchDB configuration
  * README: TODO++
  * LICENSE
  * README: markdown fix
  * README: mention buddycloud :)
  * model_couchdb: fix views initialization
  * README & config
  * jabber:iq:register
  * model_couchdb: fixes
  * errors fixing
  * rm model_persistence
  * model_couchdb: assertNodeName()
  * main: catch uncaughtException
  * controller: fix
  * bugs, readability
  * model_couchdb: fixing
  * controller: implement affiliations checking
  * xmpp_pubsub: getAffiliations() result is now Array
  * model_couchdb: setSubscription() & setAffiliation() 'none'
  * model_couchdb: consolidate subscriptions & affiliations model
  * xmpp_pubsub: send notifications with type='headline'
  * xmpp_pubsub: subscribeIfNeeded() on <create/> & <subscribe/>
  * model_couchdb: load() shortcut when already cached
  * model_couchdb: createNode() fix
  * model_couchdb: preload()
  * model_couchdb: commit read documents too for integrity
  * model_couchdb: abstract views
  * CouchDB Optimistic Concurrency Control layer
  * controller: improve error propagation
  * defined error conditions
  * untested configuration getting/setting
  * service discovery
  * modify-affiliations
  * model_couchdb: getAffiliation()
  * begin permission checking infrastructure
  * presence probes
  * xmpp_pubsub: presence tracking
  * refactoring controller complete
  * continue refactoring controller into features/operations
  * begin refactoring controller into features/operations
  * subscribers
  * getting subscriptions & affiliations
  * createNode improvements
  * controller createNode: check node
  * model_couchdb: affiliations view
  * items getting
  * much more progress
  * implement retraction, s/notifySubscriber/notify/, s/writeItems/writeItem/
  * publish notification works
  * more frontend hooking
  * begin notification hooks
  * fixes
  * begin model_couchdb transactions
  * split model
  * some progress
  * some progress
  * createNode creates owner affiliation
  * model: indexes
  [ Thomas Jost ]
  * Add @denisw to contributors
  * Upgrade required node version to 0.8
  * We actually need remote subscriptions nodes
  * Merge branch 'feature/anon-fixes' into develop
  * Merge branch 'feature/really-validate-post-times' into develop
  * Reject remote posts with invalid dates
  * Add tests for remote posts with invalid dates
  * Force anon subscriptions to be temporary
  * Set default affiliation to 'none' for anon users
  * Merge branch 'feature/anon-fixes' into develop
  * Cleanup: remove some dead code
  * Purge remote nodes with no local subscription left
  * Merge branch 'feature/recent-items' into develop
  * Merge branch 'feature/validate-remote-items' into develop
  * Sort recent items by update time
  * Merge branch 'feature/validate-remote-items' into feature/recent-items
  * Fix tests that push remote items
  * Validate remote items
  * Add (failing) tests for invalid remote items
  * Implement recent items query
  * Add (failing) test for recent items query
  * PubSub replies can include several elements
  * Merge branch 'feature/pusher' into develop
  * Workaround callback woes
  * Fix MAM for pusher component
  * Pusher: test MAM
  * test_server: move makePublishIq into TestServer
  * Pusher: test node configuration
  * Pusher: test unsubscriptions
  * Merge branch 'feature/affiliations-fixes' into develop
  * Merge branch 'feature/pubsub-disco-features' into develop
  * Cleanup
  * Expose all implemented PubSub features
  * Pusher: test affiliations
  * Merge branch 'feature/affiliations-fixes' into feature/pusher
  * Fix affiliation in /subscriptions notifications
  * Accept PubSub-compliant affiliations notifications
  * Pusher: test subscriptions
  * Merge branch 'feature/fix-98' into develop
  * Fix SQL for updating replies
  * Add failing test for issue #98
  * Fix offline user cleanup
  * DB: drop anonymous column
  * Yet another federation test
  * Check if the example config file is valid JS
  * Add tests for pusher code
  * Pusher can MAM everything
  * Pusher is a listener for all notifications
  * Add config for pusher component
  * Merge branch 'feature/mam-fixes' into develop
  * Increase the default number of items in a MAM response
  * Make MAM return an error if there are too many results
  * Use RSM in MAM
  * Test MAM RSM
  * MAM: filter bad dates out
  * Test if MAM validates dates correctly
  * Ensure the giant MAM test doesn't pollute the test environment
  * Make affiliations notifications PubSub-compliant
  * Affiliations have update timestamps too
  * Avoid temporary subscriptions in MAM results
  * Advertise support for MAM in disco#info
  * Add a giant MAM test
  * Update Travis URL in README.md
  * Merge branch 'feature/tests' into develop
  * Correctly tests that updated items don't change <in-reply-to/>
  * Move tests on updated items to a different function
  * Add tests for updates that change <in-reply-to/>
  * Use Travis to automate testing
  * Merge branch 'master' into develop
  * Add compatibility with PostgreSQL 9.1
  * Require at least one item to retract
  * Add Emacs folding marks
  * Add retrieve and retract tests
  * Fix retraction stanza sent to remote services
  * Tombstones: include Atom namespace in <updated/> element
  * Fix error when not allowed to retract an item
  * Tombstones can't be updated
  * When publishing an update, check if the actor is the original author
  * Check if original post exists before publishing a reply
  * Reject posts from non-users
  * Don't include type in <actor/>
  * Complete post/update/retract tests
  * TestServer: fix Atom in-reply-to element
  * Fail when some unwanted event happens
  * Add description for calls to "should.exist"
  * Retraction tests
  * Workaround CoffeeScript weird scoping rules
  * Add another batch of tests
  * Update test data
  * Change the way the test server emits IQ stanzas
  * Tests for posting to remote channels
  * Test server: emit event for IQs with unknown ID
  * Test server: disco info for "remote" servers
  * More post tests
  * Add helper to run tests that trigger several different stanzas
  * Test server: handle <message/> stanzas
  * Add post tests
  * Post tests: helper to check if post was successful
  * Throw an exception when getting an unexpected error IQ
  * Start adding post tests
  * Add helpers for pubsub get IQs and Atom handling
  * Helpers to add initial test data in the database
  * Add XMPP namespaces to test_server.coffee
  * Reply to presence probes
  * Don't parse Elements again
  * Use same user and server names as in sfc
  * Safe path handling in prepare-db.sh
  * Add codo-like doc to the TestServer class
  * Add helpers to build disco and pubsub IQs
  * Expose support for PubSub node creation
  * Skip a test
  * More channel creation tests
  * New tests and helpers for forms
  * Add a helper to parse disco#info replies
  * Move common disco replies to test_server.coffee
  * Start testing for channel creation
  * Test server: handle disco#items queries
  * Make tests runnable using "npm test"
  * Basic disco tests
  * Start a test suite
  * Use an existing component connection if provided in config
  * Make it possible to require() the server
  * Update config.js.example
  * Fix autosubscribeNewUsers
  * Increase the max number of items in each RSM page
  * Better shrinking of oversized stanzas
  * Include `-dirty' in version number from git
  * Remove glob from dependencies
  * Fix indentation in main.coffee
  * Prevent existing persistent subscription from being made temporary
  * Merge branch 'feature/version-number-from-git' into develop
  * Expose support for XEP-0092 (Software Version) in disco
  * Use `git describe' to get version numbers in dev branches
  * Merge branch 'master' into next
  * Restore compatibility with Node 0.6
  * Fix handling of offline users
  * Avoid race condition in disco cache
  * Shrink oversized stanzas more aggressively
  * Avoid nulls
  * Include new files in release tarball
  * Avoid race condition in disco cache
  * Merge remote-tracking branch 'upstream/tempsub' into next
  * Merge branch 'db-versioning' into next
  * buddycloud-server 0.3.5
  * Check if remote supports temporary subscription before sending a tempsub request
  * Client can check for server features before sending an IQ
  * Make server features discoverable
  * Log errors when processing incoming messages
  * Cleanup
  * Remove empty text nodes from items
  * Fix ActivityStreams verb for replies
  * Include operation name in debug message
  * Don't notify unsubscribe when it was a temporary subscription
  * Offline user cleanup: do real unsubscribe operations
  * I'm dumb
  * Don't delete temporary subscriptions during sync
  * Don't send any notification for temporary subscriptions
  * Client and server must speak the same language
  * Only send notifications about temporary subscriptions to remote listeners
  * Cleanup offline users
  * Claim we support subscription options
  * Temporary subscriptions
  * Fix updating items
  * Add help channels to default autosubscriptions
  * Merge branch 'log-fix'
  * Inspect objets in log messages
  * Fix broken log messages
  * Don't write subscription stanzas in items table
  * Merge remote-tracking branch 'lloyd/config'
  * Populate in_reply_to column when inserting new items
  * DB cleanup at startup
  * Add README for DB schema versioning
  * Upgrade DB schema
  * Check DB schema version on startup
  * Don't change <published/> when updating an existing post
  * Fix subscription to remote private channels
  * Don't fail when the default config file does not exist
  * Add Lloyd in contributors
  * Better logging for replies sent by 'proxy' components
  * Merge branch 'mam-result'
  * Include <result/> in MAM replies
  * Merge remote-tracking branch 'schnouki/atom-tombstones'
  * Fix typo
  * Merge pull request #61 from lloydwatkin/no-mod_disco
  * Also send tombstones in retract notifications
  * Use Atom tombstones for deleted items
  * xmpp: XEP-0313 compliance
  * Handle PubSub retract "notify" attribute
  * operations: fix PushInbox notification
  * Fix undefined variable when paging backwards in RSM
  [ Tuomas Koski ]
  * Merge pull request #59 from lloydwatkin/initialise-sync
  * Merge pull request #58 from lloydwatkin/master
  [ Steven Lloyd Watkin ]
  * Ensure we do not cause BC breaks
  * Make both defaults positive rather than one positive & the other negative Broke the config options down further
  * Fix build console output
  * "package" now a reserved word in node, caused failing in builds (v0.6.15+)
  [ Denis Washington ]
  * Use local CoffeeScript "cake" for "npm install"
  [ Jonas Smedegaard ]
  * Setup access rights and needed dirs when starting daemon
  * Speedup system shutdown by avoiding explicit sysV stop
  * xmpp_pubsub: check for commandEl prior usage
  [ Reginald dude ]
  * updates sent via email from vorner.cz
  * updates sent via email from vorner.cz
  [ Reginald Dude ]
  * Most confusing config file ever
  [ ▟ ▖▟ ▖ ]
  * Merge pull request #70 from lloydwatkin/fix-is-function
  * Merge pull request #63 from lloydwatkin/no-mod_disco
  * Merge pull request #62 from lloydwatkin/no-mod_disco
  * Merge pull request #57 from Schnouki/xep-0313
  * Merge pull request #54 from Schnouki/fix-notif
  * Merge pull request #52 from lloydwatkin/master
  * Merge pull request #51 from lloydwatkin/master
  [ James Tait ]
  * Ensure both the PID dir and log dir are created on startup if they do not already exist.
  [ imaginator ]
  * aligning with INSTALL instructions
  * moved instructions to wiki
  * Edited README.md via GitHub
  [ dodo ]
  * fix accessModel of geo nodes
  * always test in production
  * buddycloud-server 0.3.4
  * Merge branch 'packaging'
  * put the /etc/init.d script into tarball
  * not needed anymore
  * default options for new channels
  * bump tarballify version
  * add bin/buddycloud-server to the tarball
  * no build step in bin/buddycloud-server anymore
  * print additional info messages in gray
  * fix 'file is not defined'
  * fix 'modName is not defined'
  * colorful output for package.js
  * bump tarballify version
  * rm trailing spaces
  * no build_binary.sh needed
  * separate devDependencies
  * export name
  * use packaging script
  * buddycloud-server 0.3.3
  * pass prefix to npm to force npm to use that particular prefix
  * $PREFIX/bin/buddycloud-server can be nonexistant .. so ignore all errors when removing
  * bump node version in build script
  * merge issue #37
  * specify interal config file as defaults, not as main config
  * backports to node 0.4
  * concat cwd path to config path only when config path is relative
  * respect the cwd
  * move to the right dir before builing
  * wscript is not needed anymore
  * merged #31. symlink detection for bin/buddycloud-server thanks to @highfellow
  * fixed gitignore
  * forgot Cakefile
  * pin node version for over 0.5 to get the require json working
  * get version directly
  * new buildsystem
  * check if config.syslog has keys
  * dont load default config over opts and args
  * main: fix config loading
  * wscript fixes
  * load config via jsconfig
  * update wscript
  * upgrade build environment
  * update requirements in readme
  * cleanup files
  [ Simon Tennant ]
  * Update config.js.example
  * change to read config file from /opt/buddycloud
  * Update master
  * don't be so --quiet (will help a lot with debugging)
  * Update _etc_init.d_buddycloud-server
  * the orwell defeault was causing jdesenberg problems.
  * Fixed the permissions to run as.
  * Update _etc_init.d_buddycloud-server
  * init script
  * make it really clear what to change (and what "jid" refers to)
  * Made the ownership of tables really clear. Should help avoid the problem that DD had the other day.
  [ Lloyd Watkin ]
  * Fix for checking of child element
  * Catch error event
  * Fix for server reset
  * Updated variable names to better describe what config does.
  * Merge branch 'master' of git://github.com/buddycloud/buddycloud-server into no-mod_disco
  * Allow buddycloud server to advertise additional 'proxy' components
  * Wait to sync
  * Rename of parameter
  * Allow user to specify a port or not, changed argument name as it may not actually be remote debugging.
  * Tidy up
  * Allow node.js debugging
  [ Simon ]
  * /etc/init.d/buddycloud-server

 -- Abmar Barros (buddycloud Nightly Builds) <abmar@buddycloud.com>  Sat, 26 Jan 2013 15:15:54 -0300


buddycloud-server (0.1) unstable; urgency=medium

  [ Astro ]
  * operations: all nodes in defaultConfiguration accessModel=authorize
  * operations: posts & subscriptions accessModel=authorize in defaultConfiguration
  * buddycloud-server 0.3.2
  * Cakefile: version.js + 

  * operations: fix run notifications control flow
  * build_binary.sh: get bin/buddycloud-server out of the way before npm i
  * buddycloud-server 0.3.1
  * package.json: honor all contributors
  * Merge remote-tracking branch 'schnouki/patch-1'
  * .npmignore: exclude debian/* from npm pkgs
  * buddycloud-server 0.3.0
  * package.json: bump dep versions
  * operations: prevent unsubscribing/demoting the node owner
  * operations: fix PushInbox callback
  * operations: run notifies first, then syncs, then calls back
  * pubsub_server: lower logging
  * operations: fix PushInbox newNodes
  * operations: move PushInbox syncNode post transaction
  * operations: PushInbox should work even if syncNode had hickups
  * operations: syncNode when PushInbox created it
  * operations: fix PushInbox notification & newModerators
  * model_postgres: fix & simplify purgeNode()
  * sync: fixes
  * sync: purge node if no local subscribers
  * purge node when local unsubscription is pushed from remote
  * operations: fix generateSubscriptionsNotifications followee
  * operations: fix PushInbox newModerators nodes
  * xmpp connection: doc, serialize stanzas only once
  * operations: NewModeratorNotify needs listener, not user
  * operations: fix NewModeratorNotify listener
  * operations: log Operation name
  * model_postgres: must quote "user" column for Postgres
  * operations: NewModeratorNotify must cb()
  * operations: Notify notifies w/ node
  * operations: fix Notify otherListeners
  * pubsub_client: rm debug
  * operations: NewModeratorNotify notifies w/ node & listener
  * model_postgres: optional Transaction callbacks
  * operations: fix Notify filterSubscription & filterAffiliation invokation
  * operations: fix this binding
  * operations: no pending subscriptions in subscriptions node
  * operations: NewModeratorNotify
  * operations: doc, filter subscriptions and affiliations for non-moderators
  * operations: reorganize
  * clean up logging
  * operations: posts node defaultAffiliation='publisher'
  * sync: fix AffiliationsSynchronization typo
  * buddycloud-server 0.2.3
  * package.json: fix install script
  * build_binary.sh: bump node.js version
  * buddycloud-server 0.2.2
  * package.json: add preinstall cake build
  * operations: fix notifications
  * build_binary.sh: bump node.js version
  * buddycloud-server 0.2.1
  * operations: fix Notify subscriptios node items
  * operations: fix Notify callback result
  * operations: BrowseNodeItems for subscriptions node calls getSubscriptions not getSubscription
  * operations: syntax fixes
  * operations: Notify subscriptions fixes
  * operations: subscriptions node notifications
  * operations: BrowseNodeItems for subscriptions node
  * sync: require errors
  * sync: avoid error output when omitting local node
  * router, sync: improve logging
  * backend_pubsub: PubsubBackend.notify listener robustness
  * operations: fix Subscribe defaultAffiliation
  * operations: fix ManageNodeAffiliations control flow
  * pubsub_server: PubsubOwnerSetAffiliationsRequest syntax fix
  * operations: fix requiredAffiliation()
  * operations: requiredAffiliation can be function to allow moderators approving topic channel subscribers
  * operations: ManageNodeSubscriptions refactor for efficiency
  * operations: ManageNodeSubscriptions should set new affiliations to defaultAffiliation
  * operations: fix Notify jid/user
  * operations: Notify should notify all users pertained by a subscription
  * operations: 'unsubscribe-node' notifies unsubscribed user
  * operations, pubsub_client: there's no "unsubscribed" subscription, only "none"
  * pubsub_server: PubsubOwnerSetSubscriptionsRequest syntax fix
  * operations: Unsubscribe needs PrivilegedOperation methods
  * operations: Unsubscribed is not a PrivilegedOperation but a ModelOperation
  * operations: fix callback scope
  * pubsub_server: robustify PubsubItemsRequest
  * operations: syntax
  * pubsub_server, operations: support for RetrieveItems by itemIds
  * build_binary.sh: bump node.js version to 0.6.10
  * buddycloud-server 0.2.0
  * operations: CreateNode should not allow creation with empty nodeUser username
  * operations: fix CreateNode defaults & creationDate
  * operations: fix CreateNode isTopic switcheroo
  * router: fix autosubscribeNewUsers operation name
  * router: autosubscribeNewUsers
  * config.js.example: default checkCreateNode hook checks for a specific topic domain
  * operations: fix CreateNode node typo
  * operations: fix CreateNode config
  * pubsub_server, operations: CreateNode with optional config
  * operations: fix CreateNode setSubscription()
  * operations: CreateNode catches missing checkCreateNode hook
  * operations: CreateNode default config
  * checkCreateNode config hook
  * model_postgres: fix getOwnersByNodePrefix SQL
  * operations: fix CreateNode setAffiliation()
  * operations: fix CreateNode getOwnersByNodePrefix()
  * operations: fix ../util require, CreateNode safety check
  * implement createNode with getOwnersByNodePrefix check
  * operations: begin creating topic channels
  * model_postgres: syntax fix
  * package.json: maintainer update
  * build_binary.sh: update to node 0.6.9
  * buddycloud-server 0.1.11
  * rsm_walk: fix logging
  * operations: checkAccessModel() before checkRequiredAffiliation()!
  * operations: Unsubscribe condition syntax fix
  * package.json: muffin dependency glob seems be incompatible in v3.*
  * operations: checkRequiredAffiliation should ignore no @requiredAffiliation
  * operations: fix isAffiliationAtLeast w/ invalid affiliation
  * jsconfig 0.2.0 is out! w00t!!!
  * Cakefile: lib/version.js from package.json
  * logger: update to ain2 1.0.0
  * main: fix config loading
  * buddycloud-server 0.1.10
  * router: fix syncServer()
  * buddycloud-server 0.1.9
  * bin/buddycloud-server: fix param quoting
  * bin/buddycloud-server: fix $cwd
  * buddycloud-server 0.1.8
  * .npmignore to package up built lib/* instead of src/*
  * build_binary.sh: install devDependencies beforehand
  * build_binary.sh: bump node.js version to 0.6.7
  * util: move getNodeUser(), getUserDomain()
  * main: "server successfully started"
  * sync: fix logging
  * model_postgres: fix writeItem() SQL parameter binding
  * sync: fix PaginatedSynchronization error callback
  * sync: rm TODO note
  * model_postgres: writeItem updated_query
  * operations: logging fixes
  * writeItem: move updated extraction from operations to model_postgres
  * model_postgres: writeItem should also INSERT existing updated value
  * model_postgres: fix syntax
  * model_postgres: SQL fixes
  * operations: PushInbox copies item published date
  * postgres schema: CREATE VIEW open_nodes + usage in model_postgres
  * model_postgres: fix query result handling
  * fix getTopFollowedNodes & getTopPublishedNodes parameters
  * model_postgres: fix SQL INTERVAL syntax
  * operations: BrowseNodes.fetchNodes() needs transaction
  * operations: BrowseNodes.transaction should use @fetchNodes()
  * operations: fetchNodes() typo
  * pubsub_server: browse /top-followed-nodes & /top-published-nodes does not request a particular node
  * getTopFollowedNodes & getTopPublishedNodes w/ XMPP disco interface
  * build_binary.sh: bump to node 0.6.6
  * buddycloud-server 0.1.7
  * package.json: rm cradle dependency
  * logger: syslog only with hostname
  * replace common-logger by underscore.logger
  * update ain2 dependency for node v0.6 compatibility
  * model_postgres walkListenerArchive: replace DISTINCT with GROUP BY
  * model_postgres: fix config order/limig
  * operations: ReplayArchive sorts results before capping
  * ReplayArchive/walkListenerArchive: properly cap result set
  * operations: ReplayArchive default max=50
  * build_binary.sh: use $PREFIX from environment if present
  * package.json: req node-stringprep >=0.1.1
  * router: fix
  * buddycloud-server 0.1.6
  * update to new node-waf paths
  * build_binary.sh: switch to node 0.6.4
  * package.json: depend on 0.3.1
  * router: RSM usage fix
  * logger: open logFile for appending, fixes issue #25
  * package.json: depend on node-xmpp >= 0.3.0
  * operations ReplayArchive: fix rsm max
  * operations: ReplayArchive RSM support
  * backend_pubsub: notificationPush updates include sender & actor
  * router: detectUserType fixes
  * router: detectUserType fixes
  * logger: fix argument iteration
  * main, backend_pubsub: logging improvements
  * backend_pubsub: include user in notfound error
  * connection: loopback stanzas to ourselves
  * router: add missing util.inspect include
  * router.run: trace req
  * router: add missing rsm include
  * logger: typo
  * logger: fix level
  * logging clean-up
  * router, pubsub_{server,client}: @type in <actor/>
  * buddycloud-server 0.1.5
  * router: sync fixes
  * buddycloud-server 0.1.4
  * ManageNodeAffiliations: non-owner may not elect a new owner
  * sync: log upon completion
  * sync: transaction fix
  * move some sync logic into router, lock per node
  * operations: BrowseNodeInfo/RetrieveNodeConfiguration w/o access control
  * buddycloud-server 0.1.3
  * operations: deny Unsubscribe from own nodes
  * logger: ain2 syslog transport
  * logger: message always as string
  * main: fix --stdout kludge
  * logger: avoid log level < 0
  * config.js.example: syslog on by default
  * config.js.example: logging section
  * syslog support with ain2
  * support --stdout logging
  * replace cnlogger by common-logger
  * buddycloud-server 0.1.2
  * build_binary: npm install globally (into /opt/buddycloud-server/)
  * build_binary: dedup node & npm versions
  * build_binary: default to /opt/buddycloud-server, bin/ script
  * main: process.title fix
  * version: fix package.json path
  * version from package.json in process.title and for jabber:iq:version
  * xmpp/connection: do not subscribe in probePresence()
  * buddycloud-server 0.1.1
  * build_binary: bump node & npm versions
  * backend_pubsub: reply() must also copy 'replay' field on MaxStanzaSizeExceeded
  * connection: more stanza output when MaxStanzaSizeExceeded
  * don't send ReplayArchive notifications to all online resources
  * pubsub_client/connection: wrap error replies into StanzaError earlier
  * logging fixes
  * port to cnlogger
  * port to broken winston logging
  * xmpp connection: always tell node-xmpp to reconnect
  * async.filter iterator does not take error parameter
  * model_postgres: fix nodeExists warning
  * backend_pubsub: fix notification matching
  * sync: fix router.authorizeFor() usage
  * sync: writeItem does not need author anymore
  * operations: typo
  * model_postgres: fix getListenerAffiliations() query
  * sync: careful
  * xmpp/forms: oops, s/creationTime/creationDate/
  * xmpp/connection: fix name
  * router: check for anonymous user to be online
  * anonymous user offline tracking & clean-up
  * model_postgres: fix walkListenerArchive() node in results
  * router: fix method binding
  * model_postgres: walkListenerArchive() should include node in results
  * operations: RemoveUser & model_postgres.getUserRemoteSubscriptions() & clearUserSubscriptions()
  * BuddycloudDiscovery::detectAnonymousUser
  * backend_pubsub: gracefully handle MaxStanzaSizeExceeded for notifications
  * xmpp pubsub_server & connection: fix graceful MaxStanzaSizeExceeded handling
  * errors: MaxStanzaSizeExceeded extends Error
  * operations: s/geoloc/geo/
  * operations: /subscription items shall contain jid=owner
  * metadata buddycloud#channel_type
  * proper metadata field names
  * support for creationDate
  * operations: clarify logging
  * router: fix remote backend selection
  * operations: Unsubscribe refactor & fix
  * operations: fix Register
  * buddycloud-server 0.1.0
  * operation: print opName on commit, rm debug
  * bin/buddycloud-server: don't cd so config can be loaded relatively
  * Merge remote-tracking branch 'origin/cli'
  * operations: RetractItems should allow anyone to remove their own posts
  * operations: preserve affiliation if previously affiliated
  * operations: unify into isAffiliationAtLeast()
  * operations: rm leftover TODO note
  * operations: refactor Register; should check if authoritative for user's domain
  * router.run: return 404 for nodes not locally subscribed but discovered ourselves
  * rm explicit author handling in postgres schema, model, operations
  * main: check sender authorization for authorizationPrompt
  * operations: RetrieveItems shall not virtualize items for cache case of remote nodes
  * Revert "Made the ownership of tables really clear. Should help avoid the problem that DD had the other day."
  * s/channel-server/buddycloud-server/g
  * build_binary.sh: fix invokation hint
  * README: rm some outdated stuff
  * main: fix defaultConfig stuff
  * build_binary.sh
  * operations: RetrieveItems.retrieveSubscriptionsItems() result set sorting, affiliations
  * virtual handling of /user/.../subscriptions node items
  * MAM replays subscription authorization requests
  * more authorization stuff
  * fixes
  * small fixes
  * package.json: fix bin path
  * further authorizationPrompt work
  * backend_pubsub: missedSomething was missing
  * package.json: fix coffeescript path (./node_modules/...)
  * sending authorize notification forms
  * package.json: fix .coffee compilation stage
  * operations: PrivilegedOperation.fetchActorAffilliation fetches all listener affiliations for inbox sync
  * pubsub_notifications: fix MAM stanzas
  * operations: subscribe defaultAffiliation, fixes
  * model_postgres: many fixes
  * operations: publishModel 'subscribers'
  * operations: access control fixes
  * begin access control, affiliations checking
  * model_postgres: fixes
  * errors: fix error classes
  * xmpp/connection: fix
  * xmpp/connection: fix @missedServerTimeouts usage
  * model_postgres: safety checks
  * readability, notes
  * rsm_walk: fix serious errors
  * globally refactor operation from function to value
  * sync: fixes
  * add forgotten rsm_walk file
  * move syncQueue from main.coffee to fine-grained sync.syncNode
  * xmpp/connection: readability
  * xmpp/connection: track <you-missed-something/> timers with @missedServerTimeouts
  * syncServer support, wired up to <you-missed-something/> 'syncNeeded'
  * model_postgres: for an actor, getSubscriptions() shall return not only users but also listeners
  * MAM time specification
  * primitive MAM implementation
  * send <you-missed-something/>
  * operations: PushInbox TODO note
  * sync: rm request.rsm.max clamp
  * synchronization with state resetting and subscriptions/affiliations support
  * pubsub_*: fix user/jid conventions
  * ConfigSynchronization should use browse-node-info to get node config
  * synchronizing!
  * synchronization kinda works, but hits RSM loops
  * further synchronization progress
  * begin synchronization
  * main: require async
  * measure stanza size, gracefully retry with smaller result set
  * synchronization groundwork
  * don't let backend_pubsub call router.runLocally(), return errors.SeeLocal() instead
  * errors: clean up
  * normalize: add <link rel="self" href="xmpp:...?pubsub;action=retrieve;..."/>
  * operations: Publish shall allow new items with specified @id
  * nodes browsing, with RSM
  * backend_pubsub: run() should bail out early on invalid node form
  * PostgreSQL tuning
  * complete RSM implementation
  * begin RSM for all operations
  * generify RSM stuff
  * pubsub_client: RSM
  * fixes from CCCamp11
  * RSM for local items retrieving
  * begin new RSM implementation
  * pubsub_server: publish-node-items shall reply with item ids
  * model_postgres: fix getNodeListeners() SQL
  * model_postgres: nodeExists() shall check for NOT NULL
  * model_postgres: getNodeListener() replace filter by SQL
  * model_postgres: getNodeListener() filter for null
  * model_postgres: fix setSubscription() INSERT w/o listener
  * error printout
  * forms: fix
  * operations: PushInbox author fix
  * debug
  * xml child robustness
  * model_postgres: fix nodeExists()
  * fix subscription listener for local users
  * logging cleanup
  * initiate presence tracking of users
  * xmpp/connection: use send() instead of specifying from jid
  * some logging cleanup
  * operations: push-inbox does not set subscription listener
  * fixes & TODO notes
  * operations: Notify.transaction() must call cb()
  * retrieve-node-configuration
  * forms: configToResultForm -> configToForm
  * pubsub_client: RetrieveNodeConfiguration & ManageNodeConfiguration
  * operations: catch reply cb exceptions
  * create-node operation
  * package.json: scripts
  * fixes
  * fix outgoing notifications
  * generify pubsub_notifications
  * many fixes for subscription pushing
  * router: if request writes, always go remote
  * push incoming notifications to local model
  * more subclassing of EventEmitter, incoming notifications handling
  * pubsub_server: unify PubsubRequest & PubsubOwnerRequest
  * merge request.coffee into pubsub_server.coffee
  * begin remote subscription pushing to local inbox
  * backend_pubsub: PubsubBackend.notify(): readability
  * tune to use single cb() instead of req.{reply,replyError}()
  * revive normalization
  * model_postgres: setSubscription(): coearce isSet to boolean
  * model_postgres: catch lost transactions
  * pubsub_client: error reporting, fix
  * subscribe reply status
  * model_postgres: setAffiliation() should check nodeExists()
  * fix disco.authorizeFor() usage
  * pubsub_client: fix <actor/> placement
  * refactor notifications a bit
  * pubsub_client: <actor/> placement fix
  * pubsub_client: fix <actor/> placement
  * pubsub_notifications: subscriptions/affiliations/config
  * fix registration/model callback parameters
  * operations: ManageNodeAffiliations validates accessModel & publishModel
  * setting configuration
  * fixes, fixes, config
  * only RegisterSetRequest should induce presence subscription
  * FIXME note
  * model_postgres: do not use rowCount
  * operations: Register created default configuration
  * pubsub_server: pubsub/inbox identity
  * fixes, StanzaError
  * implement pubsub_client operations
  * pubsub_notifications: byOperation()
  * fixes
  * fixes
  * fixes & debugging
  * fixes
  * debugging & fixes
  * fixes
  * begin discovering locally
  * fixes
  * Router.run: fix
  * fixes
  * operations: rename channel node to "posts"
  * begin notifications
  * a bit o' twiddling w/ subscription listeners
  * refactor router for remote requests
  * operations: subscribe/unsubscribe toggle affiliation none/member
  * router: rename frontend to backend
  * rename backend_postgres to model_postgres, revive router
  * main: move iqHandler to pubsub_server
  * manage, not only retrieve, subscriptions & affiliations
  * use subscribe sender as notification listener
  * backend_pubsub: replace ternary operator
  * need to store listener in subscriptions...
  * backend_pubsub: implement RequestCache
  * new untested buddycloud discovery with backend_pubsub.coffee
  * retrieve <actor/> generalized, begin using authorizeFor
  * ns: add BUDDYCLOUD_V1 xmlns
  * postgres.sql schema: updated column for more tables, author column for items
  * retrieving node affiliations
  * retrieving node subscriptions, fixes
  * backend_postgres: syntax fixes
  * operation: Register should set affiliation & subscription
  * retrieving subscriptions & affiliations
  * retracting items
  * publishing & retrieving items works
  * begin item retrieving
  * subscribe & unsubscribe
  * fix backend_postgres (user is a Pg keyword, must be quoted as column name)
  * publishing works
  * lots of fixes
  * fix disco requests
  * fix, fix, fix
  * begin implementing register & publish implementation
  * mv src/operations.coffee src/local/operations.coffee
  * revive backend
  * primitive operations
  * mv controller.coffee operations.coffee
  * dead code TODO
  * fixes
  * rm old dead code
  * rename iqhandler to request
  * begin some refactoring
  * begin hooking up handlers with operations
  * xmpp/pubsub_server: indicate operation types
  * notes
  * pubsub_server: PubsubOwnerHandlers
  * pubsub_server: flesh out more pubsub handlers
  * add affiliations checking
  * begin interweaving with local operations
  * a tad of interconnecting
  * pubsub_server: DiscoInfoHandler.reply()
  * xmpp client 'n stuff
  * README: draw new design
  * begin router
  * xmpp: move NS_* to ns.coffee
  * xmpp: primitive disco info works
  * begin iqhandler
  * xmpp/connection: port presence tracking
  * rm main.js
  * move src files around
  * rm model_couchdb from config, add preliminary main.coffee
  * a bit new controller
  * rm old test_controller
  * some controller work
  * old controller translated to coffeescript
  * port peripheral stuff over to coffeescript
  * README: change ejabberd port to the config default one
  * model_couchdb: s/doc.subscribers/doc.subscriptions/
  * xmpp_pubsub.js: fix typo
  * model_postgres: check nodeExists before any data modification
  * preliminary RSM (XEP-0059) implementation for retrieve-items/retrieve
  * model_couchdb: stub getUpdatesByTime()
  * MAM should result in direct message, not broadcast notification to all resources
  * MAM w/ working model_postgres backend
  * begin implementing MAM
  * controller: register/register should create /user/<jid>/subscriptions node
  * normalize fixes + tests
  * normalize
  * only one child element per item
  * model_postgres: fix setConfig()
  * model_postgres: listNodesByUser()
  * model_couchdb: listNodesByUser(), simplify listNodes()
  * controller, xmpp_pubsub: browse-nodes/by-user
  * model_postgres setConfig(): fixes
  * configuration notification
  * model_postgres setConfig(): do not set fields unspecified/without defaultConfig
  * model_postgres nodeExists(): indentation
  * controller: subscribe should not require preexisting affiliation
  * xmpp_pubsub: fix manage-subscriptions/retrieve result usage
  * controller: allow retrieving subscriptions & affiliations for members
  * xmpp_pubsub: syntax fix
  * model_postgres: fix queue pushing
  * xmpp_pubsub: fix info discovery reply FORM_TYPE
  * model_postgres: config fixes
  * more on extended config
  * model_couchdb, model_postgres: more flexible config schema
  * config: description, type, creationDate; setConfig() on create-node/register
  * xmpp_pubsub: optimize presence tracking
  * controller: requiredAffiliation='member' for config-node/retrieve
  * README: OpenFire
  * controller: defaultConfig() + use in feature 'config-node'
  * xmpp_pubsub: replace isOnline() with getOnlineResources()
  * model_postgres: fix transaction dequeueing
  * model_postgres: move cb() past process.nextTick/dbIsAvailable for safety
  * model_postgres: work around empty responses
  * test_controller: retract
  * xmpp_pubsub: disco <identity/> according to discovered @node
  * test_controller: browse-nodes
  * model_couchdb: fix preload() etag extraction + error reporting
  * xmpp_pubsub: FeatureNotImplemented message
  * controller: simulate a stack for debug info
  * test_controller: retract skeleton
  * controller unsubscribe: do not fetch affiliation from database but check by node path
  * implement & test unsubscribe
  * test_controller: skeletons
  * test_controller: publishing tests
  * test_controller: more publish testing + controller fix
  * test_controller: begin test publishing
  * model_postgres: fix forgotten variable
  * model_postgres: reconnect to database upon error
  * model_postgres: oops, syntax error
  * config.js.example: postgres is actually the one with a poolSize
  * model_postgres: oops, syntax errors
  * begin test_controller
  * fixes
  * subscriptionModified <message/>
  * xmpp_pubsub: "message" & approve() fixes
  * controller: replace ownerNotification with afterTransaction
  * access_model authorize
  * package.json & README
  * errors: pull inherits() from util/utils/sys for moving node api
  * browse open nodes with service discovery items
  * controller: refactor affiliations checking
  * xmpp_pubsub: fix subscriptions format
  * controller: treat missing accessModel as 'open'
  * model_couchdb: preload() etag fix
  * .gitignore with config.js
  * xmpp_pubsub: node config on disco info
  * model_couchdb: encodeURIComponent() only for db.head() & .get()
  * main.js: #!
  * rename config.js to config.js.example
  * restore default config.js
  * main.js: on uncaughtException
  * postgres doc & config
  * model_postgres
  * model_couchdb: fix item deserialization
  * model_couchdb: rm implemented TODOs
  * README: CouchDB configuration
  * README: TODO++
  * LICENSE
  * README: markdown fix
  * README: mention buddycloud :)
  * model_couchdb: fix views initialization
  * README & config
  * jabber:iq:register
  * model_couchdb: fixes
  * errors fixing
  * rm model_persistence
  * model_couchdb: assertNodeName()
  * main: catch uncaughtException
  * controller: fix
  * bugs, readability
  * model_couchdb: fixing
  * controller: implement affiliations checking
  * xmpp_pubsub: getAffiliations() result is now Array
  * model_couchdb: setSubscription() & setAffiliation() 'none'
  * model_couchdb: consolidate subscriptions & affiliations model
  * xmpp_pubsub: send notifications with type='headline'
  * xmpp_pubsub: subscribeIfNeeded() on <create/> & <subscribe/>
  * model_couchdb: load() shortcut when already cached
  * model_couchdb: createNode() fix
  * model_couchdb: preload()
  * model_couchdb: commit read documents too for integrity
  * model_couchdb: abstract views
  * CouchDB Optimistic Concurrency Control layer
  * controller: improve error propagation
  * defined error conditions
  * untested configuration getting/setting
  * service discovery
  * modify-affiliations
  * model_couchdb: getAffiliation()
  * begin permission checking infrastructure
  * presence probes
  * xmpp_pubsub: presence tracking
  * refactoring controller complete
  * continue refactoring controller into features/operations
  * begin refactoring controller into features/operations
  * subscribers
  * getting subscriptions & affiliations
  * createNode improvements
  * controller createNode: check node
  * model_couchdb: affiliations view
  * items getting
  * much more progress
  * implement retraction, s/notifySubscriber/notify/, s/writeItems/writeItem/
  * publish notification works
  * more frontend hooking
  * begin notification hooks
  * fixes
  * begin model_couchdb transactions
  * split model
  * some progress
  * some progress
  * createNode creates owner affiliation
  * model: indexes
  [ Thomas Jost ]
  * Add @denisw to contributors
  * Upgrade required node version to 0.8
  * We actually need remote subscriptions nodes
  * Merge branch 'feature/anon-fixes' into develop
  * Merge branch 'feature/really-validate-post-times' into develop
  * Reject remote posts with invalid dates
  * Add tests for remote posts with invalid dates
  * Force anon subscriptions to be temporary
  * Set default affiliation to 'none' for anon users
  * Merge branch 'feature/anon-fixes' into develop
  * Cleanup: remove some dead code
  * Purge remote nodes with no local subscription left
  * Merge branch 'feature/recent-items' into develop
  * Merge branch 'feature/validate-remote-items' into develop
  * Sort recent items by update time
  * Merge branch 'feature/validate-remote-items' into feature/recent-items
  * Fix tests that push remote items
  * Validate remote items
  * Add (failing) tests for invalid remote items
  * Implement recent items query
  * Add (failing) test for recent items query
  * PubSub replies can include several elements
  * Merge branch 'feature/pusher' into develop
  * Workaround callback woes
  * Fix MAM for pusher component
  * Pusher: test MAM
  * test_server: move makePublishIq into TestServer
  * Pusher: test node configuration
  * Pusher: test unsubscriptions
  * Merge branch 'feature/affiliations-fixes' into develop
  * Merge branch 'feature/pubsub-disco-features' into develop
  * Cleanup
  * Expose all implemented PubSub features
  * Pusher: test affiliations
  * Merge branch 'feature/affiliations-fixes' into feature/pusher
  * Fix affiliation in /subscriptions notifications
  * Accept PubSub-compliant affiliations notifications
  * Pusher: test subscriptions
  * Merge branch 'feature/fix-98' into develop
  * Fix SQL for updating replies
  * Add failing test for issue #98
  * Fix offline user cleanup
  * DB: drop anonymous column
  * Yet another federation test
  * Check if the example config file is valid JS
  * Add tests for pusher code
  * Pusher can MAM everything
  * Pusher is a listener for all notifications
  * Add config for pusher component
  * Merge branch 'feature/mam-fixes' into develop
  * Increase the default number of items in a MAM response
  * Make MAM return an error if there are too many results
  * Use RSM in MAM
  * Test MAM RSM
  * MAM: filter bad dates out
  * Test if MAM validates dates correctly
  * Ensure the giant MAM test doesn't pollute the test environment
  * Make affiliations notifications PubSub-compliant
  * Affiliations have update timestamps too
  * Avoid temporary subscriptions in MAM results
  * Advertise support for MAM in disco#info
  * Add a giant MAM test
  * Update Travis URL in README.md
  * Merge branch 'feature/tests' into develop
  * Correctly tests that updated items don't change <in-reply-to/>
  * Move tests on updated items to a different function
  * Add tests for updates that change <in-reply-to/>
  * Use Travis to automate testing
  * Merge branch 'master' into develop
  * Add compatibility with PostgreSQL 9.1
  * Require at least one item to retract
  * Add Emacs folding marks
  * Add retrieve and retract tests
  * Fix retraction stanza sent to remote services
  * Tombstones: include Atom namespace in <updated/> element
  * Fix error when not allowed to retract an item
  * Tombstones can't be updated
  * When publishing an update, check if the actor is the original author
  * Check if original post exists before publishing a reply
  * Reject posts from non-users
  * Don't include type in <actor/>
  * Complete post/update/retract tests
  * TestServer: fix Atom in-reply-to element
  * Fail when some unwanted event happens
  * Add description for calls to "should.exist"
  * Retraction tests
  * Workaround CoffeeScript weird scoping rules
  * Add another batch of tests
  * Update test data
  * Change the way the test server emits IQ stanzas
  * Tests for posting to remote channels
  * Test server: emit event for IQs with unknown ID
  * Test server: disco info for "remote" servers
  * More post tests
  * Add helper to run tests that trigger several different stanzas
  * Test server: handle <message/> stanzas
  * Add post tests
  * Post tests: helper to check if post was successful
  * Throw an exception when getting an unexpected error IQ
  * Start adding post tests
  * Add helpers for pubsub get IQs and Atom handling
  * Helpers to add initial test data in the database
  * Add XMPP namespaces to test_server.coffee
  * Reply to presence probes
  * Don't parse Elements again
  * Use same user and server names as in sfc
  * Safe path handling in prepare-db.sh
  * Add codo-like doc to the TestServer class
  * Add helpers to build disco and pubsub IQs
  * Expose support for PubSub node creation
  * Skip a test
  * More channel creation tests
  * New tests and helpers for forms
  * Add a helper to parse disco#info replies
  * Move common disco replies to test_server.coffee
  * Start testing for channel creation
  * Test server: handle disco#items queries
  * Make tests runnable using "npm test"
  * Basic disco tests
  * Start a test suite
  * Use an existing component connection if provided in config
  * Make it possible to require() the server
  * Update config.js.example
  * Fix autosubscribeNewUsers
  * Increase the max number of items in each RSM page
  * Better shrinking of oversized stanzas
  * Include `-dirty' in version number from git
  * Remove glob from dependencies
  * Fix indentation in main.coffee
  * Prevent existing persistent subscription from being made temporary
  * Merge branch 'feature/version-number-from-git' into develop
  * Expose support for XEP-0092 (Software Version) in disco
  * Use `git describe' to get version numbers in dev branches
  * Merge branch 'master' into next
  * Restore compatibility with Node 0.6
  * Fix handling of offline users
  * Avoid race condition in disco cache
  * Shrink oversized stanzas more aggressively
  * Avoid nulls
  * Include new files in release tarball
  * Avoid race condition in disco cache
  * Merge remote-tracking branch 'upstream/tempsub' into next
  * Merge branch 'db-versioning' into next
  * buddycloud-server 0.3.5
  * Check if remote supports temporary subscription before sending a tempsub request
  * Client can check for server features before sending an IQ
  * Make server features discoverable
  * Log errors when processing incoming messages
  * Cleanup
  * Remove empty text nodes from items
  * Fix ActivityStreams verb for replies
  * Include operation name in debug message
  * Don't notify unsubscribe when it was a temporary subscription
  * Offline user cleanup: do real unsubscribe operations
  * I'm dumb
  * Don't delete temporary subscriptions during sync
  * Don't send any notification for temporary subscriptions
  * Client and server must speak the same language
  * Only send notifications about temporary subscriptions to remote listeners
  * Cleanup offline users
  * Claim we support subscription options
  * Temporary subscriptions
  * Fix updating items
  * Add help channels to default autosubscriptions
  * Merge branch 'log-fix'
  * Inspect objets in log messages
  * Fix broken log messages
  * Don't write subscription stanzas in items table
  * Merge remote-tracking branch 'lloyd/config'
  * Populate in_reply_to column when inserting new items
  * DB cleanup at startup
  * Add README for DB schema versioning
  * Upgrade DB schema
  * Check DB schema version on startup
  * Don't change <published/> when updating an existing post
  * Fix subscription to remote private channels
  * Don't fail when the default config file does not exist
  * Add Lloyd in contributors
  * Better logging for replies sent by 'proxy' components
  * Merge branch 'mam-result'
  * Include <result/> in MAM replies
  * Merge remote-tracking branch 'schnouki/atom-tombstones'
  * Fix typo
  * Merge pull request #61 from lloydwatkin/no-mod_disco
  * Also send tombstones in retract notifications
  * Use Atom tombstones for deleted items
  * xmpp: XEP-0313 compliance
  * Handle PubSub retract "notify" attribute
  * operations: fix PushInbox notification
  * Fix undefined variable when paging backwards in RSM
  [ Tuomas Koski ]
  * Merge pull request #59 from lloydwatkin/initialise-sync
  * Merge pull request #58 from lloydwatkin/master
  [ Steven Lloyd Watkin ]
  * Ensure we do not cause BC breaks
  * Make both defaults positive rather than one positive & the other negative Broke the config options down further
  * Fix build console output
  * "package" now a reserved word in node, caused failing in builds (v0.6.15+)
  [ Denis Washington ]
  * Use local CoffeeScript "cake" for "npm install"
  [ Jonas Smedegaard ]
  * Setup access rights and needed dirs when starting daemon
  * Speedup system shutdown by avoiding explicit sysV stop
  * xmpp_pubsub: check for commandEl prior usage
  [ Reginald dude ]
  * updates sent via email from vorner.cz
  * updates sent via email from vorner.cz
  [ Reginald Dude ]
  * Most confusing config file ever
  [ ▟ ▖▟ ▖ ]
  * Merge pull request #70 from lloydwatkin/fix-is-function
  * Merge pull request #63 from lloydwatkin/no-mod_disco
  * Merge pull request #62 from lloydwatkin/no-mod_disco
  * Merge pull request #57 from Schnouki/xep-0313
  * Merge pull request #54 from Schnouki/fix-notif
  * Merge pull request #52 from lloydwatkin/master
  * Merge pull request #51 from lloydwatkin/master
  [ James Tait ]
  * Ensure both the PID dir and log dir are created on startup if they do not already exist.
  [ imaginator ]
  * aligning with INSTALL instructions
  * moved instructions to wiki
  * Edited README.md via GitHub
  [ dodo ]
  * fix accessModel of geo nodes
  * always test in production
  * buddycloud-server 0.3.4
  * Merge branch 'packaging'
  * put the /etc/init.d script into tarball
  * not needed anymore
  * default options for new channels
  * bump tarballify version
  * add bin/buddycloud-server to the tarball
  * no build step in bin/buddycloud-server anymore
  * print additional info messages in gray
  * fix 'file is not defined'
  * fix 'modName is not defined'
  * colorful output for package.js
  * bump tarballify version
  * rm trailing spaces
  * no build_binary.sh needed
  * separate devDependencies
  * export name
  * use packaging script
  * buddycloud-server 0.3.3
  * pass prefix to npm to force npm to use that particular prefix
  * $PREFIX/bin/buddycloud-server can be nonexistant .. so ignore all errors when removing
  * bump node version in build script
  * merge issue #37
  * specify interal config file as defaults, not as main config
  * backports to node 0.4
  * concat cwd path to config path only when config path is relative
  * respect the cwd
  * move to the right dir before builing
  * wscript is not needed anymore
  * merged #31. symlink detection for bin/buddycloud-server thanks to @highfellow
  * fixed gitignore
  * forgot Cakefile
  * pin node version for over 0.5 to get the require json working
  * get version directly
  * new buildsystem
  * check if config.syslog has keys
  * dont load default config over opts and args
  * main: fix config loading
  * wscript fixes
  * load config via jsconfig
  * update wscript
  * upgrade build environment
  * update requirements in readme
  * cleanup files
  [ Simon Tennant ]
  * Update config.js.example
  * change to read config file from /opt/buddycloud
  * Update master
  * don't be so --quiet (will help a lot with debugging)
  * Update _etc_init.d_buddycloud-server
  * the orwell defeault was causing jdesenberg problems.
  * Fixed the permissions to run as.
  * Update _etc_init.d_buddycloud-server
  * init script
  * make it really clear what to change (and what "jid" refers to)
  * Made the ownership of tables really clear. Should help avoid the problem that DD had the other day.
  [ Lloyd Watkin ]
  * Fix for checking of child element
  * Catch error event
  * Fix for server reset
  * Updated variable names to better describe what config does.
  * Merge branch 'master' of git://github.com/buddycloud/buddycloud-server into no-mod_disco
  * Allow buddycloud server to advertise additional 'proxy' components
  * Wait to sync
  * Rename of parameter
  * Allow user to specify a port or not, changed argument name as it may not actually be remote debugging.
  * Tidy up
  * Allow node.js debugging
  [ Simon ]
  * /etc/init.d/buddycloud-server

 -- Abmar Barros (buddycloud Nightly Builds) <abmar@buddycloud.com>  Sat, 26 Jan 2013 15:16:28 -0300


buddycloud-server (0.1) unstable; urgency=medium

  [ Astro ]
  * operations: all nodes in defaultConfiguration accessModel=authorize
  * operations: posts & subscriptions accessModel=authorize in defaultConfiguration
  * buddycloud-server 0.3.2
  * Cakefile: version.js + 

  * operations: fix run notifications control flow
  * build_binary.sh: get bin/buddycloud-server out of the way before npm i
  * buddycloud-server 0.3.1
  * package.json: honor all contributors
  * Merge remote-tracking branch 'schnouki/patch-1'
  * .npmignore: exclude debian/* from npm pkgs
  * buddycloud-server 0.3.0
  * package.json: bump dep versions
  * operations: prevent unsubscribing/demoting the node owner
  * operations: fix PushInbox callback
  * operations: run notifies first, then syncs, then calls back
  * pubsub_server: lower logging
  * operations: fix PushInbox newNodes
  * operations: move PushInbox syncNode post transaction
  * operations: PushInbox should work even if syncNode had hickups
  * operations: syncNode when PushInbox created it
  * operations: fix PushInbox notification & newModerators
  * model_postgres: fix & simplify purgeNode()
  * sync: fixes
  * sync: purge node if no local subscribers
  * purge node when local unsubscription is pushed from remote
  * operations: fix generateSubscriptionsNotifications followee
  * operations: fix PushInbox newModerators nodes
  * xmpp connection: doc, serialize stanzas only once
  * operations: NewModeratorNotify needs listener, not user
  * operations: fix NewModeratorNotify listener
  * operations: log Operation name
  * model_postgres: must quote "user" column for Postgres
  * operations: NewModeratorNotify must cb()
  * operations: Notify notifies w/ node
  * operations: fix Notify otherListeners
  * pubsub_client: rm debug
  * operations: NewModeratorNotify notifies w/ node & listener
  * model_postgres: optional Transaction callbacks
  * operations: fix Notify filterSubscription & filterAffiliation invokation
  * operations: fix this binding
  * operations: no pending subscriptions in subscriptions node
  * operations: NewModeratorNotify
  * operations: doc, filter subscriptions and affiliations for non-moderators
  * operations: reorganize
  * clean up logging
  * operations: posts node defaultAffiliation='publisher'
  * sync: fix AffiliationsSynchronization typo
  * buddycloud-server 0.2.3
  * package.json: fix install script
  * build_binary.sh: bump node.js version
  * buddycloud-server 0.2.2
  * package.json: add preinstall cake build
  * operations: fix notifications
  * build_binary.sh: bump node.js version
  * buddycloud-server 0.2.1
  * operations: fix Notify subscriptios node items
  * operations: fix Notify callback result
  * operations: BrowseNodeItems for subscriptions node calls getSubscriptions not getSubscription
  * operations: syntax fixes
  * operations: Notify subscriptions fixes
  * operations: subscriptions node notifications
  * operations: BrowseNodeItems for subscriptions node
  * sync: require errors
  * sync: avoid error output when omitting local node
  * router, sync: improve logging
  * backend_pubsub: PubsubBackend.notify listener robustness
  * operations: fix Subscribe defaultAffiliation
  * operations: fix ManageNodeAffiliations control flow
  * pubsub_server: PubsubOwnerSetAffiliationsRequest syntax fix
  * operations: fix requiredAffiliation()
  * operations: requiredAffiliation can be function to allow moderators approving topic channel subscribers
  * operations: ManageNodeSubscriptions refactor for efficiency
  * operations: ManageNodeSubscriptions should set new affiliations to defaultAffiliation
  * operations: fix Notify jid/user
  * operations: Notify should notify all users pertained by a subscription
  * operations: 'unsubscribe-node' notifies unsubscribed user
  * operations, pubsub_client: there's no "unsubscribed" subscription, only "none"
  * pubsub_server: PubsubOwnerSetSubscriptionsRequest syntax fix
  * operations: Unsubscribe needs PrivilegedOperation methods
  * operations: Unsubscribed is not a PrivilegedOperation but a ModelOperation
  * operations: fix callback scope
  * pubsub_server: robustify PubsubItemsRequest
  * operations: syntax
  * pubsub_server, operations: support for RetrieveItems by itemIds
  * build_binary.sh: bump node.js version to 0.6.10
  * buddycloud-server 0.2.0
  * operations: CreateNode should not allow creation with empty nodeUser username
  * operations: fix CreateNode defaults & creationDate
  * operations: fix CreateNode isTopic switcheroo
  * router: fix autosubscribeNewUsers operation name
  * router: autosubscribeNewUsers
  * config.js.example: default checkCreateNode hook checks for a specific topic domain
  * operations: fix CreateNode node typo
  * operations: fix CreateNode config
  * pubsub_server, operations: CreateNode with optional config
  * operations: fix CreateNode setSubscription()
  * operations: CreateNode catches missing checkCreateNode hook
  * operations: CreateNode default config
  * checkCreateNode config hook
  * model_postgres: fix getOwnersByNodePrefix SQL
  * operations: fix CreateNode setAffiliation()
  * operations: fix CreateNode getOwnersByNodePrefix()
  * operations: fix ../util require, CreateNode safety check
  * implement createNode with getOwnersByNodePrefix check
  * operations: begin creating topic channels
  * model_postgres: syntax fix
  * package.json: maintainer update
  * build_binary.sh: update to node 0.6.9
  * buddycloud-server 0.1.11
  * rsm_walk: fix logging
  * operations: checkAccessModel() before checkRequiredAffiliation()!
  * operations: Unsubscribe condition syntax fix
  * package.json: muffin dependency glob seems be incompatible in v3.*
  * operations: checkRequiredAffiliation should ignore no @requiredAffiliation
  * operations: fix isAffiliationAtLeast w/ invalid affiliation
  * jsconfig 0.2.0 is out! w00t!!!
  * Cakefile: lib/version.js from package.json
  * logger: update to ain2 1.0.0
  * main: fix config loading
  * buddycloud-server 0.1.10
  * router: fix syncServer()
  * buddycloud-server 0.1.9
  * bin/buddycloud-server: fix param quoting
  * bin/buddycloud-server: fix $cwd
  * buddycloud-server 0.1.8
  * .npmignore to package up built lib/* instead of src/*
  * build_binary.sh: install devDependencies beforehand
  * build_binary.sh: bump node.js version to 0.6.7
  * util: move getNodeUser(), getUserDomain()
  * main: "server successfully started"
  * sync: fix logging
  * model_postgres: fix writeItem() SQL parameter binding
  * sync: fix PaginatedSynchronization error callback
  * sync: rm TODO note
  * model_postgres: writeItem updated_query
  * operations: logging fixes
  * writeItem: move updated extraction from operations to model_postgres
  * model_postgres: writeItem should also INSERT existing updated value
  * model_postgres: fix syntax
  * model_postgres: SQL fixes
  * operations: PushInbox copies item published date
  * postgres schema: CREATE VIEW open_nodes + usage in model_postgres
  * model_postgres: fix query result handling
  * fix getTopFollowedNodes & getTopPublishedNodes parameters
  * model_postgres: fix SQL INTERVAL syntax
  * operations: BrowseNodes.fetchNodes() needs transaction
  * operations: BrowseNodes.transaction should use @fetchNodes()
  * operations: fetchNodes() typo
  * pubsub_server: browse /top-followed-nodes & /top-published-nodes does not request a particular node
  * getTopFollowedNodes & getTopPublishedNodes w/ XMPP disco interface
  * build_binary.sh: bump to node 0.6.6
  * buddycloud-server 0.1.7
  * package.json: rm cradle dependency
  * logger: syslog only with hostname
  * replace common-logger by underscore.logger
  * update ain2 dependency for node v0.6 compatibility
  * model_postgres walkListenerArchive: replace DISTINCT with GROUP BY
  * model_postgres: fix config order/limig
  * operations: ReplayArchive sorts results before capping
  * ReplayArchive/walkListenerArchive: properly cap result set
  * operations: ReplayArchive default max=50
  * build_binary.sh: use $PREFIX from environment if present
  * package.json: req node-stringprep >=0.1.1
  * router: fix
  * buddycloud-server 0.1.6
  * update to new node-waf paths
  * build_binary.sh: switch to node 0.6.4
  * package.json: depend on 0.3.1
  * router: RSM usage fix
  * logger: open logFile for appending, fixes issue #25
  * package.json: depend on node-xmpp >= 0.3.0
  * operations ReplayArchive: fix rsm max
  * operations: ReplayArchive RSM support
  * backend_pubsub: notificationPush updates include sender & actor
  * router: detectUserType fixes
  * router: detectUserType fixes
  * logger: fix argument iteration
  * main, backend_pubsub: logging improvements
  * backend_pubsub: include user in notfound error
  * connection: loopback stanzas to ourselves
  * router: add missing util.inspect include
  * router.run: trace req
  * router: add missing rsm include
  * logger: typo
  * logger: fix level
  * logging clean-up
  * router, pubsub_{server,client}: @type in <actor/>
  * buddycloud-server 0.1.5
  * router: sync fixes
  * buddycloud-server 0.1.4
  * ManageNodeAffiliations: non-owner may not elect a new owner
  * sync: log upon completion
  * sync: transaction fix
  * move some sync logic into router, lock per node
  * operations: BrowseNodeInfo/RetrieveNodeConfiguration w/o access control
  * buddycloud-server 0.1.3
  * operations: deny Unsubscribe from own nodes
  * logger: ain2 syslog transport
  * logger: message always as string
  * main: fix --stdout kludge
  * logger: avoid log level < 0
  * config.js.example: syslog on by default
  * config.js.example: logging section
  * syslog support with ain2
  * support --stdout logging
  * replace cnlogger by common-logger
  * buddycloud-server 0.1.2
  * build_binary: npm install globally (into /opt/buddycloud-server/)
  * build_binary: dedup node & npm versions
  * build_binary: default to /opt/buddycloud-server, bin/ script
  * main: process.title fix
  * version: fix package.json path
  * version from package.json in process.title and for jabber:iq:version
  * xmpp/connection: do not subscribe in probePresence()
  * buddycloud-server 0.1.1
  * build_binary: bump node & npm versions
  * backend_pubsub: reply() must also copy 'replay' field on MaxStanzaSizeExceeded
  * connection: more stanza output when MaxStanzaSizeExceeded
  * don't send ReplayArchive notifications to all online resources
  * pubsub_client/connection: wrap error replies into StanzaError earlier
  * logging fixes
  * port to cnlogger
  * port to broken winston logging
  * xmpp connection: always tell node-xmpp to reconnect
  * async.filter iterator does not take error parameter
  * model_postgres: fix nodeExists warning
  * backend_pubsub: fix notification matching
  * sync: fix router.authorizeFor() usage
  * sync: writeItem does not need author anymore
  * operations: typo
  * model_postgres: fix getListenerAffiliations() query
  * sync: careful
  * xmpp/forms: oops, s/creationTime/creationDate/
  * xmpp/connection: fix name
  * router: check for anonymous user to be online
  * anonymous user offline tracking & clean-up
  * model_postgres: fix walkListenerArchive() node in results
  * router: fix method binding
  * model_postgres: walkListenerArchive() should include node in results
  * operations: RemoveUser & model_postgres.getUserRemoteSubscriptions() & clearUserSubscriptions()
  * BuddycloudDiscovery::detectAnonymousUser
  * backend_pubsub: gracefully handle MaxStanzaSizeExceeded for notifications
  * xmpp pubsub_server & connection: fix graceful MaxStanzaSizeExceeded handling
  * errors: MaxStanzaSizeExceeded extends Error
  * operations: s/geoloc/geo/
  * operations: /subscription items shall contain jid=owner
  * metadata buddycloud#channel_type
  * proper metadata field names
  * support for creationDate
  * operations: clarify logging
  * router: fix remote backend selection
  * operations: Unsubscribe refactor & fix
  * operations: fix Register
  * buddycloud-server 0.1.0
  * operation: print opName on commit, rm debug
  * bin/buddycloud-server: don't cd so config can be loaded relatively
  * Merge remote-tracking branch 'origin/cli'
  * operations: RetractItems should allow anyone to remove their own posts
  * operations: preserve affiliation if previously affiliated
  * operations: unify into isAffiliationAtLeast()
  * operations: rm leftover TODO note
  * operations: refactor Register; should check if authoritative for user's domain
  * router.run: return 404 for nodes not locally subscribed but discovered ourselves
  * rm explicit author handling in postgres schema, model, operations
  * main: check sender authorization for authorizationPrompt
  * operations: RetrieveItems shall not virtualize items for cache case of remote nodes
  * Revert "Made the ownership of tables really clear. Should help avoid the problem that DD had the other day."
  * s/channel-server/buddycloud-server/g
  * build_binary.sh: fix invokation hint
  * README: rm some outdated stuff
  * main: fix defaultConfig stuff
  * build_binary.sh
  * operations: RetrieveItems.retrieveSubscriptionsItems() result set sorting, affiliations
  * virtual handling of /user/.../subscriptions node items
  * MAM replays subscription authorization requests
  * more authorization stuff
  * fixes
  * small fixes
  * package.json: fix bin path
  * further authorizationPrompt work
  * backend_pubsub: missedSomething was missing
  * package.json: fix coffeescript path (./node_modules/...)
  * sending authorize notification forms
  * package.json: fix .coffee compilation stage
  * operations: PrivilegedOperation.fetchActorAffilliation fetches all listener affiliations for inbox sync
  * pubsub_notifications: fix MAM stanzas
  * operations: subscribe defaultAffiliation, fixes
  * model_postgres: many fixes
  * operations: publishModel 'subscribers'
  * operations: access control fixes
  * begin access control, affiliations checking
  * model_postgres: fixes
  * errors: fix error classes
  * xmpp/connection: fix
  * xmpp/connection: fix @missedServerTimeouts usage
  * model_postgres: safety checks
  * readability, notes
  * rsm_walk: fix serious errors
  * globally refactor operation from function to value
  * sync: fixes
  * add forgotten rsm_walk file
  * move syncQueue from main.coffee to fine-grained sync.syncNode
  * xmpp/connection: readability
  * xmpp/connection: track <you-missed-something/> timers with @missedServerTimeouts
  * syncServer support, wired up to <you-missed-something/> 'syncNeeded'
  * model_postgres: for an actor, getSubscriptions() shall return not only users but also listeners
  * MAM time specification
  * primitive MAM implementation
  * send <you-missed-something/>
  * operations: PushInbox TODO note
  * sync: rm request.rsm.max clamp
  * synchronization with state resetting and subscriptions/affiliations support
  * pubsub_*: fix user/jid conventions
  * ConfigSynchronization should use browse-node-info to get node config
  * synchronizing!
  * synchronization kinda works, but hits RSM loops
  * further synchronization progress
  * begin synchronization
  * main: require async
  * measure stanza size, gracefully retry with smaller result set
  * synchronization groundwork
  * don't let backend_pubsub call router.runLocally(), return errors.SeeLocal() instead
  * errors: clean up
  * normalize: add <link rel="self" href="xmpp:...?pubsub;action=retrieve;..."/>
  * operations: Publish shall allow new items with specified @id
  * nodes browsing, with RSM
  * backend_pubsub: run() should bail out early on invalid node form
  * PostgreSQL tuning
  * complete RSM implementation
  * begin RSM for all operations
  * generify RSM stuff
  * pubsub_client: RSM
  * fixes from CCCamp11
  * RSM for local items retrieving
  * begin new RSM implementation
  * pubsub_server: publish-node-items shall reply with item ids
  * model_postgres: fix getNodeListeners() SQL
  * model_postgres: nodeExists() shall check for NOT NULL
  * model_postgres: getNodeListener() replace filter by SQL
  * model_postgres: getNodeListener() filter for null
  * model_postgres: fix setSubscription() INSERT w/o listener
  * error printout
  * forms: fix
  * operations: PushInbox author fix
  * debug
  * xml child robustness
  * model_postgres: fix nodeExists()
  * fix subscription listener for local users
  * logging cleanup
  * initiate presence tracking of users
  * xmpp/connection: use send() instead of specifying from jid
  * some logging cleanup
  * operations: push-inbox does not set subscription listener
  * fixes & TODO notes
  * operations: Notify.transaction() must call cb()
  * retrieve-node-configuration
  * forms: configToResultForm -> configToForm
  * pubsub_client: RetrieveNodeConfiguration & ManageNodeConfiguration
  * operations: catch reply cb exceptions
  * create-node operation
  * package.json: scripts
  * fixes
  * fix outgoing notifications
  * generify pubsub_notifications
  * many fixes for subscription pushing
  * router: if request writes, always go remote
  * push incoming notifications to local model
  * more subclassing of EventEmitter, incoming notifications handling
  * pubsub_server: unify PubsubRequest & PubsubOwnerRequest
  * merge request.coffee into pubsub_server.coffee
  * begin remote subscription pushing to local inbox
  * backend_pubsub: PubsubBackend.notify(): readability
  * tune to use single cb() instead of req.{reply,replyError}()
  * revive normalization
  * model_postgres: setSubscription(): coearce isSet to boolean
  * model_postgres: catch lost transactions
  * pubsub_client: error reporting, fix
  * subscribe reply status
  * model_postgres: setAffiliation() should check nodeExists()
  * fix disco.authorizeFor() usage
  * pubsub_client: fix <actor/> placement
  * refactor notifications a bit
  * pubsub_client: <actor/> placement fix
  * pubsub_client: fix <actor/> placement
  * pubsub_notifications: subscriptions/affiliations/config
  * fix registration/model callback parameters
  * operations: ManageNodeAffiliations validates accessModel & publishModel
  * setting configuration
  * fixes, fixes, config
  * only RegisterSetRequest should induce presence subscription
  * FIXME note
  * model_postgres: do not use rowCount
  * operations: Register created default configuration
  * pubsub_server: pubsub/inbox identity
  * fixes, StanzaError
  * implement pubsub_client operations
  * pubsub_notifications: byOperation()
  * fixes
  * fixes
  * fixes & debugging
  * fixes
  * debugging & fixes
  * fixes
  * begin discovering locally
  * fixes
  * Router.run: fix
  * fixes
  * operations: rename channel node to "posts"
  * begin notifications
  * a bit o' twiddling w/ subscription listeners
  * refactor router for remote requests
  * operations: subscribe/unsubscribe toggle affiliation none/member
  * router: rename frontend to backend
  * rename backend_postgres to model_postgres, revive router
  * main: move iqHandler to pubsub_server
  * manage, not only retrieve, subscriptions & affiliations
  * use subscribe sender as notification listener
  * backend_pubsub: replace ternary operator
  * need to store listener in subscriptions...
  * backend_pubsub: implement RequestCache
  * new untested buddycloud discovery with backend_pubsub.coffee
  * retrieve <actor/> generalized, begin using authorizeFor
  * ns: add BUDDYCLOUD_V1 xmlns
  * postgres.sql schema: updated column for more tables, author column for items
  * retrieving node affiliations
  * retrieving node subscriptions, fixes
  * backend_postgres: syntax fixes
  * operation: Register should set affiliation & subscription
  * retrieving subscriptions & affiliations
  * retracting items
  * publishing & retrieving items works
  * begin item retrieving
  * subscribe & unsubscribe
  * fix backend_postgres (user is a Pg keyword, must be quoted as column name)
  * publishing works
  * lots of fixes
  * fix disco requests
  * fix, fix, fix
  * begin implementing register & publish implementation
  * mv src/operations.coffee src/local/operations.coffee
  * revive backend
  * primitive operations
  * mv controller.coffee operations.coffee
  * dead code TODO
  * fixes
  * rm old dead code
  * rename iqhandler to request
  * begin some refactoring
  * begin hooking up handlers with operations
  * xmpp/pubsub_server: indicate operation types
  * notes
  * pubsub_server: PubsubOwnerHandlers
  * pubsub_server: flesh out more pubsub handlers
  * add affiliations checking
  * begin interweaving with local operations
  * a tad of interconnecting
  * pubsub_server: DiscoInfoHandler.reply()
  * xmpp client 'n stuff
  * README: draw new design
  * begin router
  * xmpp: move NS_* to ns.coffee
  * xmpp: primitive disco info works
  * begin iqhandler
  * xmpp/connection: port presence tracking
  * rm main.js
  * move src files around
  * rm model_couchdb from config, add preliminary main.coffee
  * a bit new controller
  * rm old test_controller
  * some controller work
  * old controller translated to coffeescript
  * port peripheral stuff over to coffeescript
  * README: change ejabberd port to the config default one
  * model_couchdb: s/doc.subscribers/doc.subscriptions/
  * xmpp_pubsub.js: fix typo
  * model_postgres: check nodeExists before any data modification
  * preliminary RSM (XEP-0059) implementation for retrieve-items/retrieve
  * model_couchdb: stub getUpdatesByTime()
  * MAM should result in direct message, not broadcast notification to all resources
  * MAM w/ working model_postgres backend
  * begin implementing MAM
  * controller: register/register should create /user/<jid>/subscriptions node
  * normalize fixes + tests
  * normalize
  * only one child element per item
  * model_postgres: fix setConfig()
  * model_postgres: listNodesByUser()
  * model_couchdb: listNodesByUser(), simplify listNodes()
  * controller, xmpp_pubsub: browse-nodes/by-user
  * model_postgres setConfig(): fixes
  * configuration notification
  * model_postgres setConfig(): do not set fields unspecified/without defaultConfig
  * model_postgres nodeExists(): indentation
  * controller: subscribe should not require preexisting affiliation
  * xmpp_pubsub: fix manage-subscriptions/retrieve result usage
  * controller: allow retrieving subscriptions & affiliations for members
  * xmpp_pubsub: syntax fix
  * model_postgres: fix queue pushing
  * xmpp_pubsub: fix info discovery reply FORM_TYPE
  * model_postgres: config fixes
  * more on extended config
  * model_couchdb, model_postgres: more flexible config schema
  * config: description, type, creationDate; setConfig() on create-node/register
  * xmpp_pubsub: optimize presence tracking
  * controller: requiredAffiliation='member' for config-node/retrieve
  * README: OpenFire
  * controller: defaultConfig() + use in feature 'config-node'
  * xmpp_pubsub: replace isOnline() with getOnlineResources()
  * model_postgres: fix transaction dequeueing
  * model_postgres: move cb() past process.nextTick/dbIsAvailable for safety
  * model_postgres: work around empty responses
  * test_controller: retract
  * xmpp_pubsub: disco <identity/> according to discovered @node
  * test_controller: browse-nodes
  * model_couchdb: fix preload() etag extraction + error reporting
  * xmpp_pubsub: FeatureNotImplemented message
  * controller: simulate a stack for debug info
  * test_controller: retract skeleton
  * controller unsubscribe: do not fetch affiliation from database but check by node path
  * implement & test unsubscribe
  * test_controller: skeletons
  * test_controller: publishing tests
  * test_controller: more publish testing + controller fix
  * test_controller: begin test publishing
  * model_postgres: fix forgotten variable
  * model_postgres: reconnect to database upon error
  * model_postgres: oops, syntax error
  * config.js.example: postgres is actually the one with a poolSize
  * model_postgres: oops, syntax errors
  * begin test_controller
  * fixes
  * subscriptionModified <message/>
  * xmpp_pubsub: "message" & approve() fixes
  * controller: replace ownerNotification with afterTransaction
  * access_model authorize
  * package.json & README
  * errors: pull inherits() from util/utils/sys for moving node api
  * browse open nodes with service discovery items
  * controller: refactor affiliations checking
  * xmpp_pubsub: fix subscriptions format
  * controller: treat missing accessModel as 'open'
  * model_couchdb: preload() etag fix
  * .gitignore with config.js
  * xmpp_pubsub: node config on disco info
  * model_couchdb: encodeURIComponent() only for db.head() & .get()
  * main.js: #!
  * rename config.js to config.js.example
  * restore default config.js
  * main.js: on uncaughtException
  * postgres doc & config
  * model_postgres
  * model_couchdb: fix item deserialization
  * model_couchdb: rm implemented TODOs
  * README: CouchDB configuration
  * README: TODO++
  * LICENSE
  * README: markdown fix
  * README: mention buddycloud :)
  * model_couchdb: fix views initialization
  * README & config
  * jabber:iq:register
  * model_couchdb: fixes
  * errors fixing
  * rm model_persistence
  * model_couchdb: assertNodeName()
  * main: catch uncaughtException
  * controller: fix
  * bugs, readability
  * model_couchdb: fixing
  * controller: implement affiliations checking
  * xmpp_pubsub: getAffiliations() result is now Array
  * model_couchdb: setSubscription() & setAffiliation() 'none'
  * model_couchdb: consolidate subscriptions & affiliations model
  * xmpp_pubsub: send notifications with type='headline'
  * xmpp_pubsub: subscribeIfNeeded() on <create/> & <subscribe/>
  * model_couchdb: load() shortcut when already cached
  * model_couchdb: createNode() fix
  * model_couchdb: preload()
  * model_couchdb: commit read documents too for integrity
  * model_couchdb: abstract views
  * CouchDB Optimistic Concurrency Control layer
  * controller: improve error propagation
  * defined error conditions
  * untested configuration getting/setting
  * service discovery
  * modify-affiliations
  * model_couchdb: getAffiliation()
  * begin permission checking infrastructure
  * presence probes
  * xmpp_pubsub: presence tracking
  * refactoring controller complete
  * continue refactoring controller into features/operations
  * begin refactoring controller into features/operations
  * subscribers
  * getting subscriptions & affiliations
  * createNode improvements
  * controller createNode: check node
  * model_couchdb: affiliations view
  * items getting
  * much more progress
  * implement retraction, s/notifySubscriber/notify/, s/writeItems/writeItem/
  * publish notification works
  * more frontend hooking
  * begin notification hooks
  * fixes
  * begin model_couchdb transactions
  * split model
  * some progress
  * some progress
  * createNode creates owner affiliation
  * model: indexes
  [ Thomas Jost ]
  * Add @denisw to contributors
  * Upgrade required node version to 0.8
  * We actually need remote subscriptions nodes
  * Merge branch 'feature/anon-fixes' into develop
  * Merge branch 'feature/really-validate-post-times' into develop
  * Reject remote posts with invalid dates
  * Add tests for remote posts with invalid dates
  * Force anon subscriptions to be temporary
  * Set default affiliation to 'none' for anon users
  * Merge branch 'feature/anon-fixes' into develop
  * Cleanup: remove some dead code
  * Purge remote nodes with no local subscription left
  * Merge branch 'feature/recent-items' into develop
  * Merge branch 'feature/validate-remote-items' into develop
  * Sort recent items by update time
  * Merge branch 'feature/validate-remote-items' into feature/recent-items
  * Fix tests that push remote items
  * Validate remote items
  * Add (failing) tests for invalid remote items
  * Implement recent items query
  * Add (failing) test for recent items query
  * PubSub replies can include several elements
  * Merge branch 'feature/pusher' into develop
  * Workaround callback woes
  * Fix MAM for pusher component
  * Pusher: test MAM
  * test_server: move makePublishIq into TestServer
  * Pusher: test node configuration
  * Pusher: test unsubscriptions
  * Merge branch 'feature/affiliations-fixes' into develop
  * Merge branch 'feature/pubsub-disco-features' into develop
  * Cleanup
  * Expose all implemented PubSub features
  * Pusher: test affiliations
  * Merge branch 'feature/affiliations-fixes' into feature/pusher
  * Fix affiliation in /subscriptions notifications
  * Accept PubSub-compliant affiliations notifications
  * Pusher: test subscriptions
  * Merge branch 'feature/fix-98' into develop
  * Fix SQL for updating replies
  * Add failing test for issue #98
  * Fix offline user cleanup
  * DB: drop anonymous column
  * Yet another federation test
  * Check if the example config file is valid JS
  * Add tests for pusher code
  * Pusher can MAM everything
  * Pusher is a listener for all notifications
  * Add config for pusher component
  * Merge branch 'feature/mam-fixes' into develop
  * Increase the default number of items in a MAM response
  * Make MAM return an error if there are too many results
  * Use RSM in MAM
  * Test MAM RSM
  * MAM: filter bad dates out
  * Test if MAM validates dates correctly
  * Ensure the giant MAM test doesn't pollute the test environment
  * Make affiliations notifications PubSub-compliant
  * Affiliations have update timestamps too
  * Avoid temporary subscriptions in MAM results
  * Advertise support for MAM in disco#info
  * Add a giant MAM test
  * Update Travis URL in README.md
  * Merge branch 'feature/tests' into develop
  * Correctly tests that updated items don't change <in-reply-to/>
  * Move tests on updated items to a different function
  * Add tests for updates that change <in-reply-to/>
  * Use Travis to automate testing
  * Merge branch 'master' into develop
  * Add compatibility with PostgreSQL 9.1
  * Require at least one item to retract
  * Add Emacs folding marks
  * Add retrieve and retract tests
  * Fix retraction stanza sent to remote services
  * Tombstones: include Atom namespace in <updated/> element
  * Fix error when not allowed to retract an item
  * Tombstones can't be updated
  * When publishing an update, check if the actor is the original author
  * Check if original post exists before publishing a reply
  * Reject posts from non-users
  * Don't include type in <actor/>
  * Complete post/update/retract tests
  * TestServer: fix Atom in-reply-to element
  * Fail when some unwanted event happens
  * Add description for calls to "should.exist"
  * Retraction tests
  * Workaround CoffeeScript weird scoping rules
  * Add another batch of tests
  * Update test data
  * Change the way the test server emits IQ stanzas
  * Tests for posting to remote channels
  * Test server: emit event for IQs with unknown ID
  * Test server: disco info for "remote" servers
  * More post tests
  * Add helper to run tests that trigger several different stanzas
  * Test server: handle <message/> stanzas
  * Add post tests
  * Post tests: helper to check if post was successful
  * Throw an exception when getting an unexpected error IQ
  * Start adding post tests
  * Add helpers for pubsub get IQs and Atom handling
  * Helpers to add initial test data in the database
  * Add XMPP namespaces to test_server.coffee
  * Reply to presence probes
  * Don't parse Elements again
  * Use same user and server names as in sfc
  * Safe path handling in prepare-db.sh
  * Add codo-like doc to the TestServer class
  * Add helpers to build disco and pubsub IQs
  * Expose support for PubSub node creation
  * Skip a test
  * More channel creation tests
  * New tests and helpers for forms
  * Add a helper to parse disco#info replies
  * Move common disco replies to test_server.coffee
  * Start testing for channel creation
  * Test server: handle disco#items queries
  * Make tests runnable using "npm test"
  * Basic disco tests
  * Start a test suite
  * Use an existing component connection if provided in config
  * Make it possible to require() the server
  * Update config.js.example
  * Fix autosubscribeNewUsers
  * Increase the max number of items in each RSM page
  * Better shrinking of oversized stanzas
  * Include `-dirty' in version number from git
  * Remove glob from dependencies
  * Fix indentation in main.coffee
  * Prevent existing persistent subscription from being made temporary
  * Merge branch 'feature/version-number-from-git' into develop
  * Expose support for XEP-0092 (Software Version) in disco
  * Use `git describe' to get version numbers in dev branches
  * Merge branch 'master' into next
  * Restore compatibility with Node 0.6
  * Fix handling of offline users
  * Avoid race condition in disco cache
  * Shrink oversized stanzas more aggressively
  * Avoid nulls
  * Include new files in release tarball
  * Avoid race condition in disco cache
  * Merge remote-tracking branch 'upstream/tempsub' into next
  * Merge branch 'db-versioning' into next
  * buddycloud-server 0.3.5
  * Check if remote supports temporary subscription before sending a tempsub request
  * Client can check for server features before sending an IQ
  * Make server features discoverable
  * Log errors when processing incoming messages
  * Cleanup
  * Remove empty text nodes from items
  * Fix ActivityStreams verb for replies
  * Include operation name in debug message
  * Don't notify unsubscribe when it was a temporary subscription
  * Offline user cleanup: do real unsubscribe operations
  * I'm dumb
  * Don't delete temporary subscriptions during sync
  * Don't send any notification for temporary subscriptions
  * Client and server must speak the same language
  * Only send notifications about temporary subscriptions to remote listeners
  * Cleanup offline users
  * Claim we support subscription options
  * Temporary subscriptions
  * Fix updating items
  * Add help channels to default autosubscriptions
  * Merge branch 'log-fix'
  * Inspect objets in log messages
  * Fix broken log messages
  * Don't write subscription stanzas in items table
  * Merge remote-tracking branch 'lloyd/config'
  * Populate in_reply_to column when inserting new items
  * DB cleanup at startup
  * Add README for DB schema versioning
  * Upgrade DB schema
  * Check DB schema version on startup
  * Don't change <published/> when updating an existing post
  * Fix subscription to remote private channels
  * Don't fail when the default config file does not exist
  * Add Lloyd in contributors
  * Better logging for replies sent by 'proxy' components
  * Merge branch 'mam-result'
  * Include <result/> in MAM replies
  * Merge remote-tracking branch 'schnouki/atom-tombstones'
  * Fix typo
  * Merge pull request #61 from lloydwatkin/no-mod_disco
  * Also send tombstones in retract notifications
  * Use Atom tombstones for deleted items
  * xmpp: XEP-0313 compliance
  * Handle PubSub retract "notify" attribute
  * operations: fix PushInbox notification
  * Fix undefined variable when paging backwards in RSM
  [ Tuomas Koski ]
  * Merge pull request #59 from lloydwatkin/initialise-sync
  * Merge pull request #58 from lloydwatkin/master
  [ Steven Lloyd Watkin ]
  * Ensure we do not cause BC breaks
  * Make both defaults positive rather than one positive & the other negative Broke the config options down further
  * Fix build console output
  * "package" now a reserved word in node, caused failing in builds (v0.6.15+)
  [ Denis Washington ]
  * Use local CoffeeScript "cake" for "npm install"
  [ Jonas Smedegaard ]
  * Setup access rights and needed dirs when starting daemon
  * Speedup system shutdown by avoiding explicit sysV stop
  * xmpp_pubsub: check for commandEl prior usage
  [ Reginald dude ]
  * updates sent via email from vorner.cz
  * updates sent via email from vorner.cz
  [ Reginald Dude ]
  * Most confusing config file ever
  [ ▟ ▖▟ ▖ ]
  * Merge pull request #70 from lloydwatkin/fix-is-function
  * Merge pull request #63 from lloydwatkin/no-mod_disco
  * Merge pull request #62 from lloydwatkin/no-mod_disco
  * Merge pull request #57 from Schnouki/xep-0313
  * Merge pull request #54 from Schnouki/fix-notif
  * Merge pull request #52 from lloydwatkin/master
  * Merge pull request #51 from lloydwatkin/master
  [ James Tait ]
  * Ensure both the PID dir and log dir are created on startup if they do not already exist.
  [ imaginator ]
  * aligning with INSTALL instructions
  * moved instructions to wiki
  * Edited README.md via GitHub
  [ dodo ]
  * fix accessModel of geo nodes
  * always test in production
  * buddycloud-server 0.3.4
  * Merge branch 'packaging'
  * put the /etc/init.d script into tarball
  * not needed anymore
  * default options for new channels
  * bump tarballify version
  * add bin/buddycloud-server to the tarball
  * no build step in bin/buddycloud-server anymore
  * print additional info messages in gray
  * fix 'file is not defined'
  * fix 'modName is not defined'
  * colorful output for package.js
  * bump tarballify version
  * rm trailing spaces
  * no build_binary.sh needed
  * separate devDependencies
  * export name
  * use packaging script
  * buddycloud-server 0.3.3
  * pass prefix to npm to force npm to use that particular prefix
  * $PREFIX/bin/buddycloud-server can be nonexistant .. so ignore all errors when removing
  * bump node version in build script
  * merge issue #37
  * specify interal config file as defaults, not as main config
  * backports to node 0.4
  * concat cwd path to config path only when config path is relative
  * respect the cwd
  * move to the right dir before builing
  * wscript is not needed anymore
  * merged #31. symlink detection for bin/buddycloud-server thanks to @highfellow
  * fixed gitignore
  * forgot Cakefile
  * pin node version for over 0.5 to get the require json working
  * get version directly
  * new buildsystem
  * check if config.syslog has keys
  * dont load default config over opts and args
  * main: fix config loading
  * wscript fixes
  * load config via jsconfig
  * update wscript
  * upgrade build environment
  * update requirements in readme
  * cleanup files
  [ Simon Tennant ]
  * Update config.js.example
  * change to read config file from /opt/buddycloud
  * Update master
  * don't be so --quiet (will help a lot with debugging)
  * Update _etc_init.d_buddycloud-server
  * the orwell defeault was causing jdesenberg problems.
  * Fixed the permissions to run as.
  * Update _etc_init.d_buddycloud-server
  * init script
  * make it really clear what to change (and what "jid" refers to)
  * Made the ownership of tables really clear. Should help avoid the problem that DD had the other day.
  [ Lloyd Watkin ]
  * Fix for checking of child element
  * Catch error event
  * Fix for server reset
  * Updated variable names to better describe what config does.
  * Merge branch 'master' of git://github.com/buddycloud/buddycloud-server into no-mod_disco
  * Allow buddycloud server to advertise additional 'proxy' components
  * Wait to sync
  * Rename of parameter
  * Allow user to specify a port or not, changed argument name as it may not actually be remote debugging.
  * Tidy up
  * Allow node.js debugging
  [ Simon ]
  * /etc/init.d/buddycloud-server

 -- Abmar Barros (buddycloud Nightly Builds) <abmar@buddycloud.com>  Sat, 26 Jan 2013 15:17:35 -0300


buddycloud-server (0.1) unstable; urgency=medium

  [ Astro ]
  * operations: all nodes in defaultConfiguration accessModel=authorize
  * operations: posts & subscriptions accessModel=authorize in defaultConfiguration
  * buddycloud-server 0.3.2
  * Cakefile: version.js + 

  * operations: fix run notifications control flow
  * build_binary.sh: get bin/buddycloud-server out of the way before npm i
  * buddycloud-server 0.3.1
  * package.json: honor all contributors
  * Merge remote-tracking branch 'schnouki/patch-1'
  * .npmignore: exclude debian/* from npm pkgs
  * buddycloud-server 0.3.0
  * package.json: bump dep versions
  * operations: prevent unsubscribing/demoting the node owner
  * operations: fix PushInbox callback
  * operations: run notifies first, then syncs, then calls back
  * pubsub_server: lower logging
  * operations: fix PushInbox newNodes
  * operations: move PushInbox syncNode post transaction
  * operations: PushInbox should work even if syncNode had hickups
  * operations: syncNode when PushInbox created it
  * operations: fix PushInbox notification & newModerators
  * model_postgres: fix & simplify purgeNode()
  * sync: fixes
  * sync: purge node if no local subscribers
  * purge node when local unsubscription is pushed from remote
  * operations: fix generateSubscriptionsNotifications followee
  * operations: fix PushInbox newModerators nodes
  * xmpp connection: doc, serialize stanzas only once
  * operations: NewModeratorNotify needs listener, not user
  * operations: fix NewModeratorNotify listener
  * operations: log Operation name
  * model_postgres: must quote "user" column for Postgres
  * operations: NewModeratorNotify must cb()
  * operations: Notify notifies w/ node
  * operations: fix Notify otherListeners
  * pubsub_client: rm debug
  * operations: NewModeratorNotify notifies w/ node & listener
  * model_postgres: optional Transaction callbacks
  * operations: fix Notify filterSubscription & filterAffiliation invokation
  * operations: fix this binding
  * operations: no pending subscriptions in subscriptions node
  * operations: NewModeratorNotify
  * operations: doc, filter subscriptions and affiliations for non-moderators
  * operations: reorganize
  * clean up logging
  * operations: posts node defaultAffiliation='publisher'
  * sync: fix AffiliationsSynchronization typo
  * buddycloud-server 0.2.3
  * package.json: fix install script
  * build_binary.sh: bump node.js version
  * buddycloud-server 0.2.2
  * package.json: add preinstall cake build
  * operations: fix notifications
  * build_binary.sh: bump node.js version
  * buddycloud-server 0.2.1
  * operations: fix Notify subscriptios node items
  * operations: fix Notify callback result
  * operations: BrowseNodeItems for subscriptions node calls getSubscriptions not getSubscription
  * operations: syntax fixes
  * operations: Notify subscriptions fixes
  * operations: subscriptions node notifications
  * operations: BrowseNodeItems for subscriptions node
  * sync: require errors
  * sync: avoid error output when omitting local node
  * router, sync: improve logging
  * backend_pubsub: PubsubBackend.notify listener robustness
  * operations: fix Subscribe defaultAffiliation
  * operations: fix ManageNodeAffiliations control flow
  * pubsub_server: PubsubOwnerSetAffiliationsRequest syntax fix
  * operations: fix requiredAffiliation()
  * operations: requiredAffiliation can be function to allow moderators approving topic channel subscribers
  * operations: ManageNodeSubscriptions refactor for efficiency
  * operations: ManageNodeSubscriptions should set new affiliations to defaultAffiliation
  * operations: fix Notify jid/user
  * operations: Notify should notify all users pertained by a subscription
  * operations: 'unsubscribe-node' notifies unsubscribed user
  * operations, pubsub_client: there's no "unsubscribed" subscription, only "none"
  * pubsub_server: PubsubOwnerSetSubscriptionsRequest syntax fix
  * operations: Unsubscribe needs PrivilegedOperation methods
  * operations: Unsubscribed is not a PrivilegedOperation but a ModelOperation
  * operations: fix callback scope
  * pubsub_server: robustify PubsubItemsRequest
  * operations: syntax
  * pubsub_server, operations: support for RetrieveItems by itemIds
  * build_binary.sh: bump node.js version to 0.6.10
  * buddycloud-server 0.2.0
  * operations: CreateNode should not allow creation with empty nodeUser username
  * operations: fix CreateNode defaults & creationDate
  * operations: fix CreateNode isTopic switcheroo
  * router: fix autosubscribeNewUsers operation name
  * router: autosubscribeNewUsers
  * config.js.example: default checkCreateNode hook checks for a specific topic domain
  * operations: fix CreateNode node typo
  * operations: fix CreateNode config
  * pubsub_server, operations: CreateNode with optional config
  * operations: fix CreateNode setSubscription()
  * operations: CreateNode catches missing checkCreateNode hook
  * operations: CreateNode default config
  * checkCreateNode config hook
  * model_postgres: fix getOwnersByNodePrefix SQL
  * operations: fix CreateNode setAffiliation()
  * operations: fix CreateNode getOwnersByNodePrefix()
  * operations: fix ../util require, CreateNode safety check
  * implement createNode with getOwnersByNodePrefix check
  * operations: begin creating topic channels
  * model_postgres: syntax fix
  * package.json: maintainer update
  * build_binary.sh: update to node 0.6.9
  * buddycloud-server 0.1.11
  * rsm_walk: fix logging
  * operations: checkAccessModel() before checkRequiredAffiliation()!
  * operations: Unsubscribe condition syntax fix
  * package.json: muffin dependency glob seems be incompatible in v3.*
  * operations: checkRequiredAffiliation should ignore no @requiredAffiliation
  * operations: fix isAffiliationAtLeast w/ invalid affiliation
  * jsconfig 0.2.0 is out! w00t!!!
  * Cakefile: lib/version.js from package.json
  * logger: update to ain2 1.0.0
  * main: fix config loading
  * buddycloud-server 0.1.10
  * router: fix syncServer()
  * buddycloud-server 0.1.9
  * bin/buddycloud-server: fix param quoting
  * bin/buddycloud-server: fix $cwd
  * buddycloud-server 0.1.8
  * .npmignore to package up built lib/* instead of src/*
  * build_binary.sh: install devDependencies beforehand
  * build_binary.sh: bump node.js version to 0.6.7
  * util: move getNodeUser(), getUserDomain()
  * main: "server successfully started"
  * sync: fix logging
  * model_postgres: fix writeItem() SQL parameter binding
  * sync: fix PaginatedSynchronization error callback
  * sync: rm TODO note
  * model_postgres: writeItem updated_query
  * operations: logging fixes
  * writeItem: move updated extraction from operations to model_postgres
  * model_postgres: writeItem should also INSERT existing updated value
  * model_postgres: fix syntax
  * model_postgres: SQL fixes
  * operations: PushInbox copies item published date
  * postgres schema: CREATE VIEW open_nodes + usage in model_postgres
  * model_postgres: fix query result handling
  * fix getTopFollowedNodes & getTopPublishedNodes parameters
  * model_postgres: fix SQL INTERVAL syntax
  * operations: BrowseNodes.fetchNodes() needs transaction
  * operations: BrowseNodes.transaction should use @fetchNodes()
  * operations: fetchNodes() typo
  * pubsub_server: browse /top-followed-nodes & /top-published-nodes does not request a particular node
  * getTopFollowedNodes & getTopPublishedNodes w/ XMPP disco interface
  * build_binary.sh: bump to node 0.6.6
  * buddycloud-server 0.1.7
  * package.json: rm cradle dependency
  * logger: syslog only with hostname
  * replace common-logger by underscore.logger
  * update ain2 dependency for node v0.6 compatibility
  * model_postgres walkListenerArchive: replace DISTINCT with GROUP BY
  * model_postgres: fix config order/limig
  * operations: ReplayArchive sorts results before capping
  * ReplayArchive/walkListenerArchive: properly cap result set
  * operations: ReplayArchive default max=50
  * build_binary.sh: use $PREFIX from environment if present
  * package.json: req node-stringprep >=0.1.1
  * router: fix
  * buddycloud-server 0.1.6
  * update to new node-waf paths
  * build_binary.sh: switch to node 0.6.4
  * package.json: depend on 0.3.1
  * router: RSM usage fix
  * logger: open logFile for appending, fixes issue #25
  * package.json: depend on node-xmpp >= 0.3.0
  * operations ReplayArchive: fix rsm max
  * operations: ReplayArchive RSM support
  * backend_pubsub: notificationPush updates include sender & actor
  * router: detectUserType fixes
  * router: detectUserType fixes
  * logger: fix argument iteration
  * main, backend_pubsub: logging improvements
  * backend_pubsub: include user in notfound error
  * connection: loopback stanzas to ourselves
  * router: add missing util.inspect include
  * router.run: trace req
  * router: add missing rsm include
  * logger: typo
  * logger: fix level
  * logging clean-up
  * router, pubsub_{server,client}: @type in <actor/>
  * buddycloud-server 0.1.5
  * router: sync fixes
  * buddycloud-server 0.1.4
  * ManageNodeAffiliations: non-owner may not elect a new owner
  * sync: log upon completion
  * sync: transaction fix
  * move some sync logic into router, lock per node
  * operations: BrowseNodeInfo/RetrieveNodeConfiguration w/o access control
  * buddycloud-server 0.1.3
  * operations: deny Unsubscribe from own nodes
  * logger: ain2 syslog transport
  * logger: message always as string
  * main: fix --stdout kludge
  * logger: avoid log level < 0
  * config.js.example: syslog on by default
  * config.js.example: logging section
  * syslog support with ain2
  * support --stdout logging
  * replace cnlogger by common-logger
  * buddycloud-server 0.1.2
  * build_binary: npm install globally (into /opt/buddycloud-server/)
  * build_binary: dedup node & npm versions
  * build_binary: default to /opt/buddycloud-server, bin/ script
  * main: process.title fix
  * version: fix package.json path
  * version from package.json in process.title and for jabber:iq:version
  * xmpp/connection: do not subscribe in probePresence()
  * buddycloud-server 0.1.1
  * build_binary: bump node & npm versions
  * backend_pubsub: reply() must also copy 'replay' field on MaxStanzaSizeExceeded
  * connection: more stanza output when MaxStanzaSizeExceeded
  * don't send ReplayArchive notifications to all online resources
  * pubsub_client/connection: wrap error replies into StanzaError earlier
  * logging fixes
  * port to cnlogger
  * port to broken winston logging
  * xmpp connection: always tell node-xmpp to reconnect
  * async.filter iterator does not take error parameter
  * model_postgres: fix nodeExists warning
  * backend_pubsub: fix notification matching
  * sync: fix router.authorizeFor() usage
  * sync: writeItem does not need author anymore
  * operations: typo
  * model_postgres: fix getListenerAffiliations() query
  * sync: careful
  * xmpp/forms: oops, s/creationTime/creationDate/
  * xmpp/connection: fix name
  * router: check for anonymous user to be online
  * anonymous user offline tracking & clean-up
  * model_postgres: fix walkListenerArchive() node in results
  * router: fix method binding
  * model_postgres: walkListenerArchive() should include node in results
  * operations: RemoveUser & model_postgres.getUserRemoteSubscriptions() & clearUserSubscriptions()
  * BuddycloudDiscovery::detectAnonymousUser
  * backend_pubsub: gracefully handle MaxStanzaSizeExceeded for notifications
  * xmpp pubsub_server & connection: fix graceful MaxStanzaSizeExceeded handling
  * errors: MaxStanzaSizeExceeded extends Error
  * operations: s/geoloc/geo/
  * operations: /subscription items shall contain jid=owner
  * metadata buddycloud#channel_type
  * proper metadata field names
  * support for creationDate
  * operations: clarify logging
  * router: fix remote backend selection
  * operations: Unsubscribe refactor & fix
  * operations: fix Register
  * buddycloud-server 0.1.0
  * operation: print opName on commit, rm debug
  * bin/buddycloud-server: don't cd so config can be loaded relatively
  * Merge remote-tracking branch 'origin/cli'
  * operations: RetractItems should allow anyone to remove their own posts
  * operations: preserve affiliation if previously affiliated
  * operations: unify into isAffiliationAtLeast()
  * operations: rm leftover TODO note
  * operations: refactor Register; should check if authoritative for user's domain
  * router.run: return 404 for nodes not locally subscribed but discovered ourselves
  * rm explicit author handling in postgres schema, model, operations
  * main: check sender authorization for authorizationPrompt
  * operations: RetrieveItems shall not virtualize items for cache case of remote nodes
  * Revert "Made the ownership of tables really clear. Should help avoid the problem that DD had the other day."
  * s/channel-server/buddycloud-server/g
  * build_binary.sh: fix invokation hint
  * README: rm some outdated stuff
  * main: fix defaultConfig stuff
  * build_binary.sh
  * operations: RetrieveItems.retrieveSubscriptionsItems() result set sorting, affiliations
  * virtual handling of /user/.../subscriptions node items
  * MAM replays subscription authorization requests
  * more authorization stuff
  * fixes
  * small fixes
  * package.json: fix bin path
  * further authorizationPrompt work
  * backend_pubsub: missedSomething was missing
  * package.json: fix coffeescript path (./node_modules/...)
  * sending authorize notification forms
  * package.json: fix .coffee compilation stage
  * operations: PrivilegedOperation.fetchActorAffilliation fetches all listener affiliations for inbox sync
  * pubsub_notifications: fix MAM stanzas
  * operations: subscribe defaultAffiliation, fixes
  * model_postgres: many fixes
  * operations: publishModel 'subscribers'
  * operations: access control fixes
  * begin access control, affiliations checking
  * model_postgres: fixes
  * errors: fix error classes
  * xmpp/connection: fix
  * xmpp/connection: fix @missedServerTimeouts usage
  * model_postgres: safety checks
  * readability, notes
  * rsm_walk: fix serious errors
  * globally refactor operation from function to value
  * sync: fixes
  * add forgotten rsm_walk file
  * move syncQueue from main.coffee to fine-grained sync.syncNode
  * xmpp/connection: readability
  * xmpp/connection: track <you-missed-something/> timers with @missedServerTimeouts
  * syncServer support, wired up to <you-missed-something/> 'syncNeeded'
  * model_postgres: for an actor, getSubscriptions() shall return not only users but also listeners
  * MAM time specification
  * primitive MAM implementation
  * send <you-missed-something/>
  * operations: PushInbox TODO note
  * sync: rm request.rsm.max clamp
  * synchronization with state resetting and subscriptions/affiliations support
  * pubsub_*: fix user/jid conventions
  * ConfigSynchronization should use browse-node-info to get node config
  * synchronizing!
  * synchronization kinda works, but hits RSM loops
  * further synchronization progress
  * begin synchronization
  * main: require async
  * measure stanza size, gracefully retry with smaller result set
  * synchronization groundwork
  * don't let backend_pubsub call router.runLocally(), return errors.SeeLocal() instead
  * errors: clean up
  * normalize: add <link rel="self" href="xmpp:...?pubsub;action=retrieve;..."/>
  * operations: Publish shall allow new items with specified @id
  * nodes browsing, with RSM
  * backend_pubsub: run() should bail out early on invalid node form
  * PostgreSQL tuning
  * complete RSM implementation
  * begin RSM for all operations
  * generify RSM stuff
  * pubsub_client: RSM
  * fixes from CCCamp11
  * RSM for local items retrieving
  * begin new RSM implementation
  * pubsub_server: publish-node-items shall reply with item ids
  * model_postgres: fix getNodeListeners() SQL
  * model_postgres: nodeExists() shall check for NOT NULL
  * model_postgres: getNodeListener() replace filter by SQL
  * model_postgres: getNodeListener() filter for null
  * model_postgres: fix setSubscription() INSERT w/o listener
  * error printout
  * forms: fix
  * operations: PushInbox author fix
  * debug
  * xml child robustness
  * model_postgres: fix nodeExists()
  * fix subscription listener for local users
  * logging cleanup
  * initiate presence tracking of users
  * xmpp/connection: use send() instead of specifying from jid
  * some logging cleanup
  * operations: push-inbox does not set subscription listener
  * fixes & TODO notes
  * operations: Notify.transaction() must call cb()
  * retrieve-node-configuration
  * forms: configToResultForm -> configToForm
  * pubsub_client: RetrieveNodeConfiguration & ManageNodeConfiguration
  * operations: catch reply cb exceptions
  * create-node operation
  * package.json: scripts
  * fixes
  * fix outgoing notifications
  * generify pubsub_notifications
  * many fixes for subscription pushing
  * router: if request writes, always go remote
  * push incoming notifications to local model
  * more subclassing of EventEmitter, incoming notifications handling
  * pubsub_server: unify PubsubRequest & PubsubOwnerRequest
  * merge request.coffee into pubsub_server.coffee
  * begin remote subscription pushing to local inbox
  * backend_pubsub: PubsubBackend.notify(): readability
  * tune to use single cb() instead of req.{reply,replyError}()
  * revive normalization
  * model_postgres: setSubscription(): coearce isSet to boolean
  * model_postgres: catch lost transactions
  * pubsub_client: error reporting, fix
  * subscribe reply status
  * model_postgres: setAffiliation() should check nodeExists()
  * fix disco.authorizeFor() usage
  * pubsub_client: fix <actor/> placement
  * refactor notifications a bit
  * pubsub_client: <actor/> placement fix
  * pubsub_client: fix <actor/> placement
  * pubsub_notifications: subscriptions/affiliations/config
  * fix registration/model callback parameters
  * operations: ManageNodeAffiliations validates accessModel & publishModel
  * setting configuration
  * fixes, fixes, config
  * only RegisterSetRequest should induce presence subscription
  * FIXME note
  * model_postgres: do not use rowCount
  * operations: Register created default configuration
  * pubsub_server: pubsub/inbox identity
  * fixes, StanzaError
  * implement pubsub_client operations
  * pubsub_notifications: byOperation()
  * fixes
  * fixes
  * fixes & debugging
  * fixes
  * debugging & fixes
  * fixes
  * begin discovering locally
  * fixes
  * Router.run: fix
  * fixes
  * operations: rename channel node to "posts"
  * begin notifications
  * a bit o' twiddling w/ subscription listeners
  * refactor router for remote requests
  * operations: subscribe/unsubscribe toggle affiliation none/member
  * router: rename frontend to backend
  * rename backend_postgres to model_postgres, revive router
  * main: move iqHandler to pubsub_server
  * manage, not only retrieve, subscriptions & affiliations
  * use subscribe sender as notification listener
  * backend_pubsub: replace ternary operator
  * need to store listener in subscriptions...
  * backend_pubsub: implement RequestCache
  * new untested buddycloud discovery with backend_pubsub.coffee
  * retrieve <actor/> generalized, begin using authorizeFor
  * ns: add BUDDYCLOUD_V1 xmlns
  * postgres.sql schema: updated column for more tables, author column for items
  * retrieving node affiliations
  * retrieving node subscriptions, fixes
  * backend_postgres: syntax fixes
  * operation: Register should set affiliation & subscription
  * retrieving subscriptions & affiliations
  * retracting items
  * publishing & retrieving items works
  * begin item retrieving
  * subscribe & unsubscribe
  * fix backend_postgres (user is a Pg keyword, must be quoted as column name)
  * publishing works
  * lots of fixes
  * fix disco requests
  * fix, fix, fix
  * begin implementing register & publish implementation
  * mv src/operations.coffee src/local/operations.coffee
  * revive backend
  * primitive operations
  * mv controller.coffee operations.coffee
  * dead code TODO
  * fixes
  * rm old dead code
  * rename iqhandler to request
  * begin some refactoring
  * begin hooking up handlers with operations
  * xmpp/pubsub_server: indicate operation types
  * notes
  * pubsub_server: PubsubOwnerHandlers
  * pubsub_server: flesh out more pubsub handlers
  * add affiliations checking
  * begin interweaving with local operations
  * a tad of interconnecting
  * pubsub_server: DiscoInfoHandler.reply()
  * xmpp client 'n stuff
  * README: draw new design
  * begin router
  * xmpp: move NS_* to ns.coffee
  * xmpp: primitive disco info works
  * begin iqhandler
  * xmpp/connection: port presence tracking
  * rm main.js
  * move src files around
  * rm model_couchdb from config, add preliminary main.coffee
  * a bit new controller
  * rm old test_controller
  * some controller work
  * old controller translated to coffeescript
  * port peripheral stuff over to coffeescript
  * README: change ejabberd port to the config default one
  * model_couchdb: s/doc.subscribers/doc.subscriptions/
  * xmpp_pubsub.js: fix typo
  * model_postgres: check nodeExists before any data modification
  * preliminary RSM (XEP-0059) implementation for retrieve-items/retrieve
  * model_couchdb: stub getUpdatesByTime()
  * MAM should result in direct message, not broadcast notification to all resources
  * MAM w/ working model_postgres backend
  * begin implementing MAM
  * controller: register/register should create /user/<jid>/subscriptions node
  * normalize fixes + tests
  * normalize
  * only one child element per item
  * model_postgres: fix setConfig()
  * model_postgres: listNodesByUser()
  * model_couchdb: listNodesByUser(), simplify listNodes()
  * controller, xmpp_pubsub: browse-nodes/by-user
  * model_postgres setConfig(): fixes
  * configuration notification
  * model_postgres setConfig(): do not set fields unspecified/without defaultConfig
  * model_postgres nodeExists(): indentation
  * controller: subscribe should not require preexisting affiliation
  * xmpp_pubsub: fix manage-subscriptions/retrieve result usage
  * controller: allow retrieving subscriptions & affiliations for members
  * xmpp_pubsub: syntax fix
  * model_postgres: fix queue pushing
  * xmpp_pubsub: fix info discovery reply FORM_TYPE
  * model_postgres: config fixes
  * more on extended config
  * model_couchdb, model_postgres: more flexible config schema
  * config: description, type, creationDate; setConfig() on create-node/register
  * xmpp_pubsub: optimize presence tracking
  * controller: requiredAffiliation='member' for config-node/retrieve
  * README: OpenFire
  * controller: defaultConfig() + use in feature 'config-node'
  * xmpp_pubsub: replace isOnline() with getOnlineResources()
  * model_postgres: fix transaction dequeueing
  * model_postgres: move cb() past process.nextTick/dbIsAvailable for safety
  * model_postgres: work around empty responses
  * test_controller: retract
  * xmpp_pubsub: disco <identity/> according to discovered @node
  * test_controller: browse-nodes
  * model_couchdb: fix preload() etag extraction + error reporting
  * xmpp_pubsub: FeatureNotImplemented message
  * controller: simulate a stack for debug info
  * test_controller: retract skeleton
  * controller unsubscribe: do not fetch affiliation from database but check by node path
  * implement & test unsubscribe
  * test_controller: skeletons
  * test_controller: publishing tests
  * test_controller: more publish testing + controller fix
  * test_controller: begin test publishing
  * model_postgres: fix forgotten variable
  * model_postgres: reconnect to database upon error
  * model_postgres: oops, syntax error
  * config.js.example: postgres is actually the one with a poolSize
  * model_postgres: oops, syntax errors
  * begin test_controller
  * fixes
  * subscriptionModified <message/>
  * xmpp_pubsub: "message" & approve() fixes
  * controller: replace ownerNotification with afterTransaction
  * access_model authorize
  * package.json & README
  * errors: pull inherits() from util/utils/sys for moving node api
  * browse open nodes with service discovery items
  * controller: refactor affiliations checking
  * xmpp_pubsub: fix subscriptions format
  * controller: treat missing accessModel as 'open'
  * model_couchdb: preload() etag fix
  * .gitignore with config.js
  * xmpp_pubsub: node config on disco info
  * model_couchdb: encodeURIComponent() only for db.head() & .get()
  * main.js: #!
  * rename config.js to config.js.example
  * restore default config.js
  * main.js: on uncaughtException
  * postgres doc & config
  * model_postgres
  * model_couchdb: fix item deserialization
  * model_couchdb: rm implemented TODOs
  * README: CouchDB configuration
  * README: TODO++
  * LICENSE
  * README: markdown fix
  * README: mention buddycloud :)
  * model_couchdb: fix views initialization
  * README & config
  * jabber:iq:register
  * model_couchdb: fixes
  * errors fixing
  * rm model_persistence
  * model_couchdb: assertNodeName()
  * main: catch uncaughtException
  * controller: fix
  * bugs, readability
  * model_couchdb: fixing
  * controller: implement affiliations checking
  * xmpp_pubsub: getAffiliations() result is now Array
  * model_couchdb: setSubscription() & setAffiliation() 'none'
  * model_couchdb: consolidate subscriptions & affiliations model
  * xmpp_pubsub: send notifications with type='headline'
  * xmpp_pubsub: subscribeIfNeeded() on <create/> & <subscribe/>
  * model_couchdb: load() shortcut when already cached
  * model_couchdb: createNode() fix
  * model_couchdb: preload()
  * model_couchdb: commit read documents too for integrity
  * model_couchdb: abstract views
  * CouchDB Optimistic Concurrency Control layer
  * controller: improve error propagation
  * defined error conditions
  * untested configuration getting/setting
  * service discovery
  * modify-affiliations
  * model_couchdb: getAffiliation()
  * begin permission checking infrastructure
  * presence probes
  * xmpp_pubsub: presence tracking
  * refactoring controller complete
  * continue refactoring controller into features/operations
  * begin refactoring controller into features/operations
  * subscribers
  * getting subscriptions & affiliations
  * createNode improvements
  * controller createNode: check node
  * model_couchdb: affiliations view
  * items getting
  * much more progress
  * implement retraction, s/notifySubscriber/notify/, s/writeItems/writeItem/
  * publish notification works
  * more frontend hooking
  * begin notification hooks
  * fixes
  * begin model_couchdb transactions
  * split model
  * some progress
  * some progress
  * createNode creates owner affiliation
  * model: indexes
  [ Thomas Jost ]
  * Add @denisw to contributors
  * Upgrade required node version to 0.8
  * We actually need remote subscriptions nodes
  * Merge branch 'feature/anon-fixes' into develop
  * Merge branch 'feature/really-validate-post-times' into develop
  * Reject remote posts with invalid dates
  * Add tests for remote posts with invalid dates
  * Force anon subscriptions to be temporary
  * Set default affiliation to 'none' for anon users
  * Merge branch 'feature/anon-fixes' into develop
  * Cleanup: remove some dead code
  * Purge remote nodes with no local subscription left
  * Merge branch 'feature/recent-items' into develop
  * Merge branch 'feature/validate-remote-items' into develop
  * Sort recent items by update time
  * Merge branch 'feature/validate-remote-items' into feature/recent-items
  * Fix tests that push remote items
  * Validate remote items
  * Add (failing) tests for invalid remote items
  * Implement recent items query
  * Add (failing) test for recent items query
  * PubSub replies can include several elements
  * Merge branch 'feature/pusher' into develop
  * Workaround callback woes
  * Fix MAM for pusher component
  * Pusher: test MAM
  * test_server: move makePublishIq into TestServer
  * Pusher: test node configuration
  * Pusher: test unsubscriptions
  * Merge branch 'feature/affiliations-fixes' into develop
  * Merge branch 'feature/pubsub-disco-features' into develop
  * Cleanup
  * Expose all implemented PubSub features
  * Pusher: test affiliations
  * Merge branch 'feature/affiliations-fixes' into feature/pusher
  * Fix affiliation in /subscriptions notifications
  * Accept PubSub-compliant affiliations notifications
  * Pusher: test subscriptions
  * Merge branch 'feature/fix-98' into develop
  * Fix SQL for updating replies
  * Add failing test for issue #98
  * Fix offline user cleanup
  * DB: drop anonymous column
  * Yet another federation test
  * Check if the example config file is valid JS
  * Add tests for pusher code
  * Pusher can MAM everything
  * Pusher is a listener for all notifications
  * Add config for pusher component
  * Merge branch 'feature/mam-fixes' into develop
  * Increase the default number of items in a MAM response
  * Make MAM return an error if there are too many results
  * Use RSM in MAM
  * Test MAM RSM
  * MAM: filter bad dates out
  * Test if MAM validates dates correctly
  * Ensure the giant MAM test doesn't pollute the test environment
  * Make affiliations notifications PubSub-compliant
  * Affiliations have update timestamps too
  * Avoid temporary subscriptions in MAM results
  * Advertise support for MAM in disco#info
  * Add a giant MAM test
  * Update Travis URL in README.md
  * Merge branch 'feature/tests' into develop
  * Correctly tests that updated items don't change <in-reply-to/>
  * Move tests on updated items to a different function
  * Add tests for updates that change <in-reply-to/>
  * Use Travis to automate testing
  * Merge branch 'master' into develop
  * Add compatibility with PostgreSQL 9.1
  * Require at least one item to retract
  * Add Emacs folding marks
  * Add retrieve and retract tests
  * Fix retraction stanza sent to remote services
  * Tombstones: include Atom namespace in <updated/> element
  * Fix error when not allowed to retract an item
  * Tombstones can't be updated
  * When publishing an update, check if the actor is the original author
  * Check if original post exists before publishing a reply
  * Reject posts from non-users
  * Don't include type in <actor/>
  * Complete post/update/retract tests
  * TestServer: fix Atom in-reply-to element
  * Fail when some unwanted event happens
  * Add description for calls to "should.exist"
  * Retraction tests
  * Workaround CoffeeScript weird scoping rules
  * Add another batch of tests
  * Update test data
  * Change the way the test server emits IQ stanzas
  * Tests for posting to remote channels
  * Test server: emit event for IQs with unknown ID
  * Test server: disco info for "remote" servers
  * More post tests
  * Add helper to run tests that trigger several different stanzas
  * Test server: handle <message/> stanzas
  * Add post tests
  * Post tests: helper to check if post was successful
  * Throw an exception when getting an unexpected error IQ
  * Start adding post tests
  * Add helpers for pubsub get IQs and Atom handling
  * Helpers to add initial test data in the database
  * Add XMPP namespaces to test_server.coffee
  * Reply to presence probes
  * Don't parse Elements again
  * Use same user and server names as in sfc
  * Safe path handling in prepare-db.sh
  * Add codo-like doc to the TestServer class
  * Add helpers to build disco and pubsub IQs
  * Expose support for PubSub node creation
  * Skip a test
  * More channel creation tests
  * New tests and helpers for forms
  * Add a helper to parse disco#info replies
  * Move common disco replies to test_server.coffee
  * Start testing for channel creation
  * Test server: handle disco#items queries
  * Make tests runnable using "npm test"
  * Basic disco tests
  * Start a test suite
  * Use an existing component connection if provided in config
  * Make it possible to require() the server
  * Update config.js.example
  * Fix autosubscribeNewUsers
  * Increase the max number of items in each RSM page
  * Better shrinking of oversized stanzas
  * Include `-dirty' in version number from git
  * Remove glob from dependencies
  * Fix indentation in main.coffee
  * Prevent existing persistent subscription from being made temporary
  * Merge branch 'feature/version-number-from-git' into develop
  * Expose support for XEP-0092 (Software Version) in disco
  * Use `git describe' to get version numbers in dev branches
  * Merge branch 'master' into next
  * Restore compatibility with Node 0.6
  * Fix handling of offline users
  * Avoid race condition in disco cache
  * Shrink oversized stanzas more aggressively
  * Avoid nulls
  * Include new files in release tarball
  * Avoid race condition in disco cache
  * Merge remote-tracking branch 'upstream/tempsub' into next
  * Merge branch 'db-versioning' into next
  * buddycloud-server 0.3.5
  * Check if remote supports temporary subscription before sending a tempsub request
  * Client can check for server features before sending an IQ
  * Make server features discoverable
  * Log errors when processing incoming messages
  * Cleanup
  * Remove empty text nodes from items
  * Fix ActivityStreams verb for replies
  * Include operation name in debug message
  * Don't notify unsubscribe when it was a temporary subscription
  * Offline user cleanup: do real unsubscribe operations
  * I'm dumb
  * Don't delete temporary subscriptions during sync
  * Don't send any notification for temporary subscriptions
  * Client and server must speak the same language
  * Only send notifications about temporary subscriptions to remote listeners
  * Cleanup offline users
  * Claim we support subscription options
  * Temporary subscriptions
  * Fix updating items
  * Add help channels to default autosubscriptions
  * Merge branch 'log-fix'
  * Inspect objets in log messages
  * Fix broken log messages
  * Don't write subscription stanzas in items table
  * Merge remote-tracking branch 'lloyd/config'
  * Populate in_reply_to column when inserting new items
  * DB cleanup at startup
  * Add README for DB schema versioning
  * Upgrade DB schema
  * Check DB schema version on startup
  * Don't change <published/> when updating an existing post
  * Fix subscription to remote private channels
  * Don't fail when the default config file does not exist
  * Add Lloyd in contributors
  * Better logging for replies sent by 'proxy' components
  * Merge branch 'mam-result'
  * Include <result/> in MAM replies
  * Merge remote-tracking branch 'schnouki/atom-tombstones'
  * Fix typo
  * Merge pull request #61 from lloydwatkin/no-mod_disco
  * Also send tombstones in retract notifications
  * Use Atom tombstones for deleted items
  * xmpp: XEP-0313 compliance
  * Handle PubSub retract "notify" attribute
  * operations: fix PushInbox notification
  * Fix undefined variable when paging backwards in RSM
  [ Tuomas Koski ]
  * Merge pull request #59 from lloydwatkin/initialise-sync
  * Merge pull request #58 from lloydwatkin/master
  [ Steven Lloyd Watkin ]
  * Ensure we do not cause BC breaks
  * Make both defaults positive rather than one positive & the other negative Broke the config options down further
  * Fix build console output
  * "package" now a reserved word in node, caused failing in builds (v0.6.15+)
  [ Denis Washington ]
  * Use local CoffeeScript "cake" for "npm install"
  [ Jonas Smedegaard ]
  * Setup access rights and needed dirs when starting daemon
  * Speedup system shutdown by avoiding explicit sysV stop
  * xmpp_pubsub: check for commandEl prior usage
  [ Reginald dude ]
  * updates sent via email from vorner.cz
  * updates sent via email from vorner.cz
  [ Reginald Dude ]
  * Most confusing config file ever
  [ ▟ ▖▟ ▖ ]
  * Merge pull request #70 from lloydwatkin/fix-is-function
  * Merge pull request #63 from lloydwatkin/no-mod_disco
  * Merge pull request #62 from lloydwatkin/no-mod_disco
  * Merge pull request #57 from Schnouki/xep-0313
  * Merge pull request #54 from Schnouki/fix-notif
  * Merge pull request #52 from lloydwatkin/master
  * Merge pull request #51 from lloydwatkin/master
  [ James Tait ]
  * Ensure both the PID dir and log dir are created on startup if they do not already exist.
  [ imaginator ]
  * aligning with INSTALL instructions
  * moved instructions to wiki
  * Edited README.md via GitHub
  [ dodo ]
  * fix accessModel of geo nodes
  * always test in production
  * buddycloud-server 0.3.4
  * Merge branch 'packaging'
  * put the /etc/init.d script into tarball
  * not needed anymore
  * default options for new channels
  * bump tarballify version
  * add bin/buddycloud-server to the tarball
  * no build step in bin/buddycloud-server anymore
  * print additional info messages in gray
  * fix 'file is not defined'
  * fix 'modName is not defined'
  * colorful output for package.js
  * bump tarballify version
  * rm trailing spaces
  * no build_binary.sh needed
  * separate devDependencies
  * export name
  * use packaging script
  * buddycloud-server 0.3.3
  * pass prefix to npm to force npm to use that particular prefix
  * $PREFIX/bin/buddycloud-server can be nonexistant .. so ignore all errors when removing
  * bump node version in build script
  * merge issue #37
  * specify interal config file as defaults, not as main config
  * backports to node 0.4
  * concat cwd path to config path only when config path is relative
  * respect the cwd
  * move to the right dir before builing
  * wscript is not needed anymore
  * merged #31. symlink detection for bin/buddycloud-server thanks to @highfellow
  * fixed gitignore
  * forgot Cakefile
  * pin node version for over 0.5 to get the require json working
  * get version directly
  * new buildsystem
  * check if config.syslog has keys
  * dont load default config over opts and args
  * main: fix config loading
  * wscript fixes
  * load config via jsconfig
  * update wscript
  * upgrade build environment
  * update requirements in readme
  * cleanup files
  [ Simon Tennant ]
  * Update config.js.example
  * change to read config file from /opt/buddycloud
  * Update master
  * don't be so --quiet (will help a lot with debugging)
  * Update _etc_init.d_buddycloud-server
  * the orwell defeault was causing jdesenberg problems.
  * Fixed the permissions to run as.
  * Update _etc_init.d_buddycloud-server
  * init script
  * make it really clear what to change (and what "jid" refers to)
  * Made the ownership of tables really clear. Should help avoid the problem that DD had the other day.
  [ Lloyd Watkin ]
  * Fix for checking of child element
  * Catch error event
  * Fix for server reset
  * Updated variable names to better describe what config does.
  * Merge branch 'master' of git://github.com/buddycloud/buddycloud-server into no-mod_disco
  * Allow buddycloud server to advertise additional 'proxy' components
  * Wait to sync
  * Rename of parameter
  * Allow user to specify a port or not, changed argument name as it may not actually be remote debugging.
  * Tidy up
  * Allow node.js debugging
  [ Simon ]
  * /etc/init.d/buddycloud-server

 -- Abmar Barros (buddycloud Nightly Builds) <abmar@buddycloud.com>  Sat, 26 Jan 2013 15:18:26 -0300


buddycloud-server (0.1) unstable; urgency=medium

  [ Astro ]
  * operations: all nodes in defaultConfiguration accessModel=authorize
  * operations: posts & subscriptions accessModel=authorize in defaultConfiguration
  * buddycloud-server 0.3.2
  * Cakefile: version.js + 

  * operations: fix run notifications control flow
  * build_binary.sh: get bin/buddycloud-server out of the way before npm i
  * buddycloud-server 0.3.1
  * package.json: honor all contributors
  * Merge remote-tracking branch 'schnouki/patch-1'
  * .npmignore: exclude debian/* from npm pkgs
  * buddycloud-server 0.3.0
  * package.json: bump dep versions
  * operations: prevent unsubscribing/demoting the node owner
  * operations: fix PushInbox callback
  * operations: run notifies first, then syncs, then calls back
  * pubsub_server: lower logging
  * operations: fix PushInbox newNodes
  * operations: move PushInbox syncNode post transaction
  * operations: PushInbox should work even if syncNode had hickups
  * operations: syncNode when PushInbox created it
  * operations: fix PushInbox notification & newModerators
  * model_postgres: fix & simplify purgeNode()
  * sync: fixes
  * sync: purge node if no local subscribers
  * purge node when local unsubscription is pushed from remote
  * operations: fix generateSubscriptionsNotifications followee
  * operations: fix PushInbox newModerators nodes
  * xmpp connection: doc, serialize stanzas only once
  * operations: NewModeratorNotify needs listener, not user
  * operations: fix NewModeratorNotify listener
  * operations: log Operation name
  * model_postgres: must quote "user" column for Postgres
  * operations: NewModeratorNotify must cb()
  * operations: Notify notifies w/ node
  * operations: fix Notify otherListeners
  * pubsub_client: rm debug
  * operations: NewModeratorNotify notifies w/ node & listener
  * model_postgres: optional Transaction callbacks
  * operations: fix Notify filterSubscription & filterAffiliation invokation
  * operations: fix this binding
  * operations: no pending subscriptions in subscriptions node
  * operations: NewModeratorNotify
  * operations: doc, filter subscriptions and affiliations for non-moderators
  * operations: reorganize
  * clean up logging
  * operations: posts node defaultAffiliation='publisher'
  * sync: fix AffiliationsSynchronization typo
  * buddycloud-server 0.2.3
  * package.json: fix install script
  * build_binary.sh: bump node.js version
  * buddycloud-server 0.2.2
  * package.json: add preinstall cake build
  * operations: fix notifications
  * build_binary.sh: bump node.js version
  * buddycloud-server 0.2.1
  * operations: fix Notify subscriptios node items
  * operations: fix Notify callback result
  * operations: BrowseNodeItems for subscriptions node calls getSubscriptions not getSubscription
  * operations: syntax fixes
  * operations: Notify subscriptions fixes
  * operations: subscriptions node notifications
  * operations: BrowseNodeItems for subscriptions node
  * sync: require errors
  * sync: avoid error output when omitting local node
  * router, sync: improve logging
  * backend_pubsub: PubsubBackend.notify listener robustness
  * operations: fix Subscribe defaultAffiliation
  * operations: fix ManageNodeAffiliations control flow
  * pubsub_server: PubsubOwnerSetAffiliationsRequest syntax fix
  * operations: fix requiredAffiliation()
  * operations: requiredAffiliation can be function to allow moderators approving topic channel subscribers
  * operations: ManageNodeSubscriptions refactor for efficiency
  * operations: ManageNodeSubscriptions should set new affiliations to defaultAffiliation
  * operations: fix Notify jid/user
  * operations: Notify should notify all users pertained by a subscription
  * operations: 'unsubscribe-node' notifies unsubscribed user
  * operations, pubsub_client: there's no "unsubscribed" subscription, only "none"
  * pubsub_server: PubsubOwnerSetSubscriptionsRequest syntax fix
  * operations: Unsubscribe needs PrivilegedOperation methods
  * operations: Unsubscribed is not a PrivilegedOperation but a ModelOperation
  * operations: fix callback scope
  * pubsub_server: robustify PubsubItemsRequest
  * operations: syntax
  * pubsub_server, operations: support for RetrieveItems by itemIds
  * build_binary.sh: bump node.js version to 0.6.10
  * buddycloud-server 0.2.0
  * operations: CreateNode should not allow creation with empty nodeUser username
  * operations: fix CreateNode defaults & creationDate
  * operations: fix CreateNode isTopic switcheroo
  * router: fix autosubscribeNewUsers operation name
  * router: autosubscribeNewUsers
  * config.js.example: default checkCreateNode hook checks for a specific topic domain
  * operations: fix CreateNode node typo
  * operations: fix CreateNode config
  * pubsub_server, operations: CreateNode with optional config
  * operations: fix CreateNode setSubscription()
  * operations: CreateNode catches missing checkCreateNode hook
  * operations: CreateNode default config
  * checkCreateNode config hook
  * model_postgres: fix getOwnersByNodePrefix SQL
  * operations: fix CreateNode setAffiliation()
  * operations: fix CreateNode getOwnersByNodePrefix()
  * operations: fix ../util require, CreateNode safety check
  * implement createNode with getOwnersByNodePrefix check
  * operations: begin creating topic channels
  * model_postgres: syntax fix
  * package.json: maintainer update
  * build_binary.sh: update to node 0.6.9
  * buddycloud-server 0.1.11
  * rsm_walk: fix logging
  * operations: checkAccessModel() before checkRequiredAffiliation()!
  * operations: Unsubscribe condition syntax fix
  * package.json: muffin dependency glob seems be incompatible in v3.*
  * operations: checkRequiredAffiliation should ignore no @requiredAffiliation
  * operations: fix isAffiliationAtLeast w/ invalid affiliation
  * jsconfig 0.2.0 is out! w00t!!!
  * Cakefile: lib/version.js from package.json
  * logger: update to ain2 1.0.0
  * main: fix config loading
  * buddycloud-server 0.1.10
  * router: fix syncServer()
  * buddycloud-server 0.1.9
  * bin/buddycloud-server: fix param quoting
  * bin/buddycloud-server: fix $cwd
  * buddycloud-server 0.1.8
  * .npmignore to package up built lib/* instead of src/*
  * build_binary.sh: install devDependencies beforehand
  * build_binary.sh: bump node.js version to 0.6.7
  * util: move getNodeUser(), getUserDomain()
  * main: "server successfully started"
  * sync: fix logging
  * model_postgres: fix writeItem() SQL parameter binding
  * sync: fix PaginatedSynchronization error callback
  * sync: rm TODO note
  * model_postgres: writeItem updated_query
  * operations: logging fixes
  * writeItem: move updated extraction from operations to model_postgres
  * model_postgres: writeItem should also INSERT existing updated value
  * model_postgres: fix syntax
  * model_postgres: SQL fixes
  * operations: PushInbox copies item published date
  * postgres schema: CREATE VIEW open_nodes + usage in model_postgres
  * model_postgres: fix query result handling
  * fix getTopFollowedNodes & getTopPublishedNodes parameters
  * model_postgres: fix SQL INTERVAL syntax
  * operations: BrowseNodes.fetchNodes() needs transaction
  * operations: BrowseNodes.transaction should use @fetchNodes()
  * operations: fetchNodes() typo
  * pubsub_server: browse /top-followed-nodes & /top-published-nodes does not request a particular node
  * getTopFollowedNodes & getTopPublishedNodes w/ XMPP disco interface
  * build_binary.sh: bump to node 0.6.6
  * buddycloud-server 0.1.7
  * package.json: rm cradle dependency
  * logger: syslog only with hostname
  * replace common-logger by underscore.logger
  * update ain2 dependency for node v0.6 compatibility
  * model_postgres walkListenerArchive: replace DISTINCT with GROUP BY
  * model_postgres: fix config order/limig
  * operations: ReplayArchive sorts results before capping
  * ReplayArchive/walkListenerArchive: properly cap result set
  * operations: ReplayArchive default max=50
  * build_binary.sh: use $PREFIX from environment if present
  * package.json: req node-stringprep >=0.1.1
  * router: fix
  * buddycloud-server 0.1.6
  * update to new node-waf paths
  * build_binary.sh: switch to node 0.6.4
  * package.json: depend on 0.3.1
  * router: RSM usage fix
  * logger: open logFile for appending, fixes issue #25
  * package.json: depend on node-xmpp >= 0.3.0
  * operations ReplayArchive: fix rsm max
  * operations: ReplayArchive RSM support
  * backend_pubsub: notificationPush updates include sender & actor
  * router: detectUserType fixes
  * router: detectUserType fixes
  * logger: fix argument iteration
  * main, backend_pubsub: logging improvements
  * backend_pubsub: include user in notfound error
  * connection: loopback stanzas to ourselves
  * router: add missing util.inspect include
  * router.run: trace req
  * router: add missing rsm include
  * logger: typo
  * logger: fix level
  * logging clean-up
  * router, pubsub_{server,client}: @type in <actor/>
  * buddycloud-server 0.1.5
  * router: sync fixes
  * buddycloud-server 0.1.4
  * ManageNodeAffiliations: non-owner may not elect a new owner
  * sync: log upon completion
  * sync: transaction fix
  * move some sync logic into router, lock per node
  * operations: BrowseNodeInfo/RetrieveNodeConfiguration w/o access control
  * buddycloud-server 0.1.3
  * operations: deny Unsubscribe from own nodes
  * logger: ain2 syslog transport
  * logger: message always as string
  * main: fix --stdout kludge
  * logger: avoid log level < 0
  * config.js.example: syslog on by default
  * config.js.example: logging section
  * syslog support with ain2
  * support --stdout logging
  * replace cnlogger by common-logger
  * buddycloud-server 0.1.2
  * build_binary: npm install globally (into /opt/buddycloud-server/)
  * build_binary: dedup node & npm versions
  * build_binary: default to /opt/buddycloud-server, bin/ script
  * main: process.title fix
  * version: fix package.json path
  * version from package.json in process.title and for jabber:iq:version
  * xmpp/connection: do not subscribe in probePresence()
  * buddycloud-server 0.1.1
  * build_binary: bump node & npm versions
  * backend_pubsub: reply() must also copy 'replay' field on MaxStanzaSizeExceeded
  * connection: more stanza output when MaxStanzaSizeExceeded
  * don't send ReplayArchive notifications to all online resources
  * pubsub_client/connection: wrap error replies into StanzaError earlier
  * logging fixes
  * port to cnlogger
  * port to broken winston logging
  * xmpp connection: always tell node-xmpp to reconnect
  * async.filter iterator does not take error parameter
  * model_postgres: fix nodeExists warning
  * backend_pubsub: fix notification matching
  * sync: fix router.authorizeFor() usage
  * sync: writeItem does not need author anymore
  * operations: typo
  * model_postgres: fix getListenerAffiliations() query
  * sync: careful
  * xmpp/forms: oops, s/creationTime/creationDate/
  * xmpp/connection: fix name
  * router: check for anonymous user to be online
  * anonymous user offline tracking & clean-up
  * model_postgres: fix walkListenerArchive() node in results
  * router: fix method binding
  * model_postgres: walkListenerArchive() should include node in results
  * operations: RemoveUser & model_postgres.getUserRemoteSubscriptions() & clearUserSubscriptions()
  * BuddycloudDiscovery::detectAnonymousUser
  * backend_pubsub: gracefully handle MaxStanzaSizeExceeded for notifications
  * xmpp pubsub_server & connection: fix graceful MaxStanzaSizeExceeded handling
  * errors: MaxStanzaSizeExceeded extends Error
  * operations: s/geoloc/geo/
  * operations: /subscription items shall contain jid=owner
  * metadata buddycloud#channel_type
  * proper metadata field names
  * support for creationDate
  * operations: clarify logging
  * router: fix remote backend selection
  * operations: Unsubscribe refactor & fix
  * operations: fix Register
  * buddycloud-server 0.1.0
  * operation: print opName on commit, rm debug
  * bin/buddycloud-server: don't cd so config can be loaded relatively
  * Merge remote-tracking branch 'origin/cli'
  * operations: RetractItems should allow anyone to remove their own posts
  * operations: preserve affiliation if previously affiliated
  * operations: unify into isAffiliationAtLeast()
  * operations: rm leftover TODO note
  * operations: refactor Register; should check if authoritative for user's domain
  * router.run: return 404 for nodes not locally subscribed but discovered ourselves
  * rm explicit author handling in postgres schema, model, operations
  * main: check sender authorization for authorizationPrompt
  * operations: RetrieveItems shall not virtualize items for cache case of remote nodes
  * Revert "Made the ownership of tables really clear. Should help avoid the problem that DD had the other day."
  * s/channel-server/buddycloud-server/g
  * build_binary.sh: fix invokation hint
  * README: rm some outdated stuff
  * main: fix defaultConfig stuff
  * build_binary.sh
  * operations: RetrieveItems.retrieveSubscriptionsItems() result set sorting, affiliations
  * virtual handling of /user/.../subscriptions node items
  * MAM replays subscription authorization requests
  * more authorization stuff
  * fixes
  * small fixes
  * package.json: fix bin path
  * further authorizationPrompt work
  * backend_pubsub: missedSomething was missing
  * package.json: fix coffeescript path (./node_modules/...)
  * sending authorize notification forms
  * package.json: fix .coffee compilation stage
  * operations: PrivilegedOperation.fetchActorAffilliation fetches all listener affiliations for inbox sync
  * pubsub_notifications: fix MAM stanzas
  * operations: subscribe defaultAffiliation, fixes
  * model_postgres: many fixes
  * operations: publishModel 'subscribers'
  * operations: access control fixes
  * begin access control, affiliations checking
  * model_postgres: fixes
  * errors: fix error classes
  * xmpp/connection: fix
  * xmpp/connection: fix @missedServerTimeouts usage
  * model_postgres: safety checks
  * readability, notes
  * rsm_walk: fix serious errors
  * globally refactor operation from function to value
  * sync: fixes
  * add forgotten rsm_walk file
  * move syncQueue from main.coffee to fine-grained sync.syncNode
  * xmpp/connection: readability
  * xmpp/connection: track <you-missed-something/> timers with @missedServerTimeouts
  * syncServer support, wired up to <you-missed-something/> 'syncNeeded'
  * model_postgres: for an actor, getSubscriptions() shall return not only users but also listeners
  * MAM time specification
  * primitive MAM implementation
  * send <you-missed-something/>
  * operations: PushInbox TODO note
  * sync: rm request.rsm.max clamp
  * synchronization with state resetting and subscriptions/affiliations support
  * pubsub_*: fix user/jid conventions
  * ConfigSynchronization should use browse-node-info to get node config
  * synchronizing!
  * synchronization kinda works, but hits RSM loops
  * further synchronization progress
  * begin synchronization
  * main: require async
  * measure stanza size, gracefully retry with smaller result set
  * synchronization groundwork
  * don't let backend_pubsub call router.runLocally(), return errors.SeeLocal() instead
  * errors: clean up
  * normalize: add <link rel="self" href="xmpp:...?pubsub;action=retrieve;..."/>
  * operations: Publish shall allow new items with specified @id
  * nodes browsing, with RSM
  * backend_pubsub: run() should bail out early on invalid node form
  * PostgreSQL tuning
  * complete RSM implementation
  * begin RSM for all operations
  * generify RSM stuff
  * pubsub_client: RSM
  * fixes from CCCamp11
  * RSM for local items retrieving
  * begin new RSM implementation
  * pubsub_server: publish-node-items shall reply with item ids
  * model_postgres: fix getNodeListeners() SQL
  * model_postgres: nodeExists() shall check for NOT NULL
  * model_postgres: getNodeListener() replace filter by SQL
  * model_postgres: getNodeListener() filter for null
  * model_postgres: fix setSubscription() INSERT w/o listener
  * error printout
  * forms: fix
  * operations: PushInbox author fix
  * debug
  * xml child robustness
  * model_postgres: fix nodeExists()
  * fix subscription listener for local users
  * logging cleanup
  * initiate presence tracking of users
  * xmpp/connection: use send() instead of specifying from jid
  * some logging cleanup
  * operations: push-inbox does not set subscription listener
  * fixes & TODO notes
  * operations: Notify.transaction() must call cb()
  * retrieve-node-configuration
  * forms: configToResultForm -> configToForm
  * pubsub_client: RetrieveNodeConfiguration & ManageNodeConfiguration
  * operations: catch reply cb exceptions
  * create-node operation
  * package.json: scripts
  * fixes
  * fix outgoing notifications
  * generify pubsub_notifications
  * many fixes for subscription pushing
  * router: if request writes, always go remote
  * push incoming notifications to local model
  * more subclassing of EventEmitter, incoming notifications handling
  * pubsub_server: unify PubsubRequest & PubsubOwnerRequest
  * merge request.coffee into pubsub_server.coffee
  * begin remote subscription pushing to local inbox
  * backend_pubsub: PubsubBackend.notify(): readability
  * tune to use single cb() instead of req.{reply,replyError}()
  * revive normalization
  * model_postgres: setSubscription(): coearce isSet to boolean
  * model_postgres: catch lost transactions
  * pubsub_client: error reporting, fix
  * subscribe reply status
  * model_postgres: setAffiliation() should check nodeExists()
  * fix disco.authorizeFor() usage
  * pubsub_client: fix <actor/> placement
  * refactor notifications a bit
  * pubsub_client: <actor/> placement fix
  * pubsub_client: fix <actor/> placement
  * pubsub_notifications: subscriptions/affiliations/config
  * fix registration/model callback parameters
  * operations: ManageNodeAffiliations validates accessModel & publishModel
  * setting configuration
  * fixes, fixes, config
  * only RegisterSetRequest should induce presence subscription
  * FIXME note
  * model_postgres: do not use rowCount
  * operations: Register created default configuration
  * pubsub_server: pubsub/inbox identity
  * fixes, StanzaError
  * implement pubsub_client operations
  * pubsub_notifications: byOperation()
  * fixes
  * fixes
  * fixes & debugging
  * fixes
  * debugging & fixes
  * fixes
  * begin discovering locally
  * fixes
  * Router.run: fix
  * fixes
  * operations: rename channel node to "posts"
  * begin notifications
  * a bit o' twiddling w/ subscription listeners
  * refactor router for remote requests
  * operations: subscribe/unsubscribe toggle affiliation none/member
  * router: rename frontend to backend
  * rename backend_postgres to model_postgres, revive router
  * main: move iqHandler to pubsub_server
  * manage, not only retrieve, subscriptions & affiliations
  * use subscribe sender as notification listener
  * backend_pubsub: replace ternary operator
  * need to store listener in subscriptions...
  * backend_pubsub: implement RequestCache
  * new untested buddycloud discovery with backend_pubsub.coffee
  * retrieve <actor/> generalized, begin using authorizeFor
  * ns: add BUDDYCLOUD_V1 xmlns
  * postgres.sql schema: updated column for more tables, author column for items
  * retrieving node affiliations
  * retrieving node subscriptions, fixes
  * backend_postgres: syntax fixes
  * operation: Register should set affiliation & subscription
  * retrieving subscriptions & affiliations
  * retracting items
  * publishing & retrieving items works
  * begin item retrieving
  * subscribe & unsubscribe
  * fix backend_postgres (user is a Pg keyword, must be quoted as column name)
  * publishing works
  * lots of fixes
  * fix disco requests
  * fix, fix, fix
  * begin implementing register & publish implementation
  * mv src/operations.coffee src/local/operations.coffee
  * revive backend
  * primitive operations
  * mv controller.coffee operations.coffee
  * dead code TODO
  * fixes
  * rm old dead code
  * rename iqhandler to request
  * begin some refactoring
  * begin hooking up handlers with operations
  * xmpp/pubsub_server: indicate operation types
  * notes
  * pubsub_server: PubsubOwnerHandlers
  * pubsub_server: flesh out more pubsub handlers
  * add affiliations checking
  * begin interweaving with local operations
  * a tad of interconnecting
  * pubsub_server: DiscoInfoHandler.reply()
  * xmpp client 'n stuff
  * README: draw new design
  * begin router
  * xmpp: move NS_* to ns.coffee
  * xmpp: primitive disco info works
  * begin iqhandler
  * xmpp/connection: port presence tracking
  * rm main.js
  * move src files around
  * rm model_couchdb from config, add preliminary main.coffee
  * a bit new controller
  * rm old test_controller
  * some controller work
  * old controller translated to coffeescript
  * port peripheral stuff over to coffeescript
  * README: change ejabberd port to the config default one
  * model_couchdb: s/doc.subscribers/doc.subscriptions/
  * xmpp_pubsub.js: fix typo
  * model_postgres: check nodeExists before any data modification
  * preliminary RSM (XEP-0059) implementation for retrieve-items/retrieve
  * model_couchdb: stub getUpdatesByTime()
  * MAM should result in direct message, not broadcast notification to all resources
  * MAM w/ working model_postgres backend
  * begin implementing MAM
  * controller: register/register should create /user/<jid>/subscriptions node
  * normalize fixes + tests
  * normalize
  * only one child element per item
  * model_postgres: fix setConfig()
  * model_postgres: listNodesByUser()
  * model_couchdb: listNodesByUser(), simplify listNodes()
  * controller, xmpp_pubsub: browse-nodes/by-user
  * model_postgres setConfig(): fixes
  * configuration notification
  * model_postgres setConfig(): do not set fields unspecified/without defaultConfig
  * model_postgres nodeExists(): indentation
  * controller: subscribe should not require preexisting affiliation
  * xmpp_pubsub: fix manage-subscriptions/retrieve result usage
  * controller: allow retrieving subscriptions & affiliations for members
  * xmpp_pubsub: syntax fix
  * model_postgres: fix queue pushing
  * xmpp_pubsub: fix info discovery reply FORM_TYPE
  * model_postgres: config fixes
  * more on extended config
  * model_couchdb, model_postgres: more flexible config schema
  * config: description, type, creationDate; setConfig() on create-node/register
  * xmpp_pubsub: optimize presence tracking
  * controller: requiredAffiliation='member' for config-node/retrieve
  * README: OpenFire
  * controller: defaultConfig() + use in feature 'config-node'
  * xmpp_pubsub: replace isOnline() with getOnlineResources()
  * model_postgres: fix transaction dequeueing
  * model_postgres: move cb() past process.nextTick/dbIsAvailable for safety
  * model_postgres: work around empty responses
  * test_controller: retract
  * xmpp_pubsub: disco <identity/> according to discovered @node
  * test_controller: browse-nodes
  * model_couchdb: fix preload() etag extraction + error reporting
  * xmpp_pubsub: FeatureNotImplemented message
  * controller: simulate a stack for debug info
  * test_controller: retract skeleton
  * controller unsubscribe: do not fetch affiliation from database but check by node path
  * implement & test unsubscribe
  * test_controller: skeletons
  * test_controller: publishing tests
  * test_controller: more publish testing + controller fix
  * test_controller: begin test publishing
  * model_postgres: fix forgotten variable
  * model_postgres: reconnect to database upon error
  * model_postgres: oops, syntax error
  * config.js.example: postgres is actually the one with a poolSize
  * model_postgres: oops, syntax errors
  * begin test_controller
  * fixes
  * subscriptionModified <message/>
  * xmpp_pubsub: "message" & approve() fixes
  * controller: replace ownerNotification with afterTransaction
  * access_model authorize
  * package.json & README
  * errors: pull inherits() from util/utils/sys for moving node api
  * browse open nodes with service discovery items
  * controller: refactor affiliations checking
  * xmpp_pubsub: fix subscriptions format
  * controller: treat missing accessModel as 'open'
  * model_couchdb: preload() etag fix
  * .gitignore with config.js
  * xmpp_pubsub: node config on disco info
  * model_couchdb: encodeURIComponent() only for db.head() & .get()
  * main.js: #!
  * rename config.js to config.js.example
  * restore default config.js
  * main.js: on uncaughtException
  * postgres doc & config
  * model_postgres
  * model_couchdb: fix item deserialization
  * model_couchdb: rm implemented TODOs
  * README: CouchDB configuration
  * README: TODO++
  * LICENSE
  * README: markdown fix
  * README: mention buddycloud :)
  * model_couchdb: fix views initialization
  * README & config
  * jabber:iq:register
  * model_couchdb: fixes
  * errors fixing
  * rm model_persistence
  * model_couchdb: assertNodeName()
  * main: catch uncaughtException
  * controller: fix
  * bugs, readability
  * model_couchdb: fixing
  * controller: implement affiliations checking
  * xmpp_pubsub: getAffiliations() result is now Array
  * model_couchdb: setSubscription() & setAffiliation() 'none'
  * model_couchdb: consolidate subscriptions & affiliations model
  * xmpp_pubsub: send notifications with type='headline'
  * xmpp_pubsub: subscribeIfNeeded() on <create/> & <subscribe/>
  * model_couchdb: load() shortcut when already cached
  * model_couchdb: createNode() fix
  * model_couchdb: preload()
  * model_couchdb: commit read documents too for integrity
  * model_couchdb: abstract views
  * CouchDB Optimistic Concurrency Control layer
  * controller: improve error propagation
  * defined error conditions
  * untested configuration getting/setting
  * service discovery
  * modify-affiliations
  * model_couchdb: getAffiliation()
  * begin permission checking infrastructure
  * presence probes
  * xmpp_pubsub: presence tracking
  * refactoring controller complete
  * continue refactoring controller into features/operations
  * begin refactoring controller into features/operations
  * subscribers
  * getting subscriptions & affiliations
  * createNode improvements
  * controller createNode: check node
  * model_couchdb: affiliations view
  * items getting
  * much more progress
  * implement retraction, s/notifySubscriber/notify/, s/writeItems/writeItem/
  * publish notification works
  * more frontend hooking
  * begin notification hooks
  * fixes
  * begin model_couchdb transactions
  * split model
  * some progress
  * some progress
  * createNode creates owner affiliation
  * model: indexes
  [ Thomas Jost ]
  * Add @denisw to contributors
  * Upgrade required node version to 0.8
  * We actually need remote subscriptions nodes
  * Merge branch 'feature/anon-fixes' into develop
  * Merge branch 'feature/really-validate-post-times' into develop
  * Reject remote posts with invalid dates
  * Add tests for remote posts with invalid dates
  * Force anon subscriptions to be temporary
  * Set default affiliation to 'none' for anon users
  * Merge branch 'feature/anon-fixes' into develop
  * Cleanup: remove some dead code
  * Purge remote nodes with no local subscription left
  * Merge branch 'feature/recent-items' into develop
  * Merge branch 'feature/validate-remote-items' into develop
  * Sort recent items by update time
  * Merge branch 'feature/validate-remote-items' into feature/recent-items
  * Fix tests that push remote items
  * Validate remote items
  * Add (failing) tests for invalid remote items
  * Implement recent items query
  * Add (failing) test for recent items query
  * PubSub replies can include several elements
  * Merge branch 'feature/pusher' into develop
  * Workaround callback woes
  * Fix MAM for pusher component
  * Pusher: test MAM
  * test_server: move makePublishIq into TestServer
  * Pusher: test node configuration
  * Pusher: test unsubscriptions
  * Merge branch 'feature/affiliations-fixes' into develop
  * Merge branch 'feature/pubsub-disco-features' into develop
  * Cleanup
  * Expose all implemented PubSub features
  * Pusher: test affiliations
  * Merge branch 'feature/affiliations-fixes' into feature/pusher
  * Fix affiliation in /subscriptions notifications
  * Accept PubSub-compliant affiliations notifications
  * Pusher: test subscriptions
  * Merge branch 'feature/fix-98' into develop
  * Fix SQL for updating replies
  * Add failing test for issue #98
  * Fix offline user cleanup
  * DB: drop anonymous column
  * Yet another federation test
  * Check if the example config file is valid JS
  * Add tests for pusher code
  * Pusher can MAM everything
  * Pusher is a listener for all notifications
  * Add config for pusher component
  * Merge branch 'feature/mam-fixes' into develop
  * Increase the default number of items in a MAM response
  * Make MAM return an error if there are too many results
  * Use RSM in MAM
  * Test MAM RSM
  * MAM: filter bad dates out
  * Test if MAM validates dates correctly
  * Ensure the giant MAM test doesn't pollute the test environment
  * Make affiliations notifications PubSub-compliant
  * Affiliations have update timestamps too
  * Avoid temporary subscriptions in MAM results
  * Advertise support for MAM in disco#info
  * Add a giant MAM test
  * Update Travis URL in README.md
  * Merge branch 'feature/tests' into develop
  * Correctly tests that updated items don't change <in-reply-to/>
  * Move tests on updated items to a different function
  * Add tests for updates that change <in-reply-to/>
  * Use Travis to automate testing
  * Merge branch 'master' into develop
  * Add compatibility with PostgreSQL 9.1
  * Require at least one item to retract
  * Add Emacs folding marks
  * Add retrieve and retract tests
  * Fix retraction stanza sent to remote services
  * Tombstones: include Atom namespace in <updated/> element
  * Fix error when not allowed to retract an item
  * Tombstones can't be updated
  * When publishing an update, check if the actor is the original author
  * Check if original post exists before publishing a reply
  * Reject posts from non-users
  * Don't include type in <actor/>
  * Complete post/update/retract tests
  * TestServer: fix Atom in-reply-to element
  * Fail when some unwanted event happens
  * Add description for calls to "should.exist"
  * Retraction tests
  * Workaround CoffeeScript weird scoping rules
  * Add another batch of tests
  * Update test data
  * Change the way the test server emits IQ stanzas
  * Tests for posting to remote channels
  * Test server: emit event for IQs with unknown ID
  * Test server: disco info for "remote" servers
  * More post tests
  * Add helper to run tests that trigger several different stanzas
  * Test server: handle <message/> stanzas
  * Add post tests
  * Post tests: helper to check if post was successful
  * Throw an exception when getting an unexpected error IQ
  * Start adding post tests
  * Add helpers for pubsub get IQs and Atom handling
  * Helpers to add initial test data in the database
  * Add XMPP namespaces to test_server.coffee
  * Reply to presence probes
  * Don't parse Elements again
  * Use same user and server names as in sfc
  * Safe path handling in prepare-db.sh
  * Add codo-like doc to the TestServer class
  * Add helpers to build disco and pubsub IQs
  * Expose support for PubSub node creation
  * Skip a test
  * More channel creation tests
  * New tests and helpers for forms
  * Add a helper to parse disco#info replies
  * Move common disco replies to test_server.coffee
  * Start testing for channel creation
  * Test server: handle disco#items queries
  * Make tests runnable using "npm test"
  * Basic disco tests
  * Start a test suite
  * Use an existing component connection if provided in config
  * Make it possible to require() the server
  * Update config.js.example
  * Fix autosubscribeNewUsers
  * Increase the max number of items in each RSM page
  * Better shrinking of oversized stanzas
  * Include `-dirty' in version number from git
  * Remove glob from dependencies
  * Fix indentation in main.coffee
  * Prevent existing persistent subscription from being made temporary
  * Merge branch 'feature/version-number-from-git' into develop
  * Expose support for XEP-0092 (Software Version) in disco
  * Use `git describe' to get version numbers in dev branches
  * Merge branch 'master' into next
  * Restore compatibility with Node 0.6
  * Fix handling of offline users
  * Avoid race condition in disco cache
  * Shrink oversized stanzas more aggressively
  * Avoid nulls
  * Include new files in release tarball
  * Avoid race condition in disco cache
  * Merge remote-tracking branch 'upstream/tempsub' into next
  * Merge branch 'db-versioning' into next
  * buddycloud-server 0.3.5
  * Check if remote supports temporary subscription before sending a tempsub request
  * Client can check for server features before sending an IQ
  * Make server features discoverable
  * Log errors when processing incoming messages
  * Cleanup
  * Remove empty text nodes from items
  * Fix ActivityStreams verb for replies
  * Include operation name in debug message
  * Don't notify unsubscribe when it was a temporary subscription
  * Offline user cleanup: do real unsubscribe operations
  * I'm dumb
  * Don't delete temporary subscriptions during sync
  * Don't send any notification for temporary subscriptions
  * Client and server must speak the same language
  * Only send notifications about temporary subscriptions to remote listeners
  * Cleanup offline users
  * Claim we support subscription options
  * Temporary subscriptions
  * Fix updating items
  * Add help channels to default autosubscriptions
  * Merge branch 'log-fix'
  * Inspect objets in log messages
  * Fix broken log messages
  * Don't write subscription stanzas in items table
  * Merge remote-tracking branch 'lloyd/config'
  * Populate in_reply_to column when inserting new items
  * DB cleanup at startup
  * Add README for DB schema versioning
  * Upgrade DB schema
  * Check DB schema version on startup
  * Don't change <published/> when updating an existing post
  * Fix subscription to remote private channels
  * Don't fail when the default config file does not exist
  * Add Lloyd in contributors
  * Better logging for replies sent by 'proxy' components
  * Merge branch 'mam-result'
  * Include <result/> in MAM replies
  * Merge remote-tracking branch 'schnouki/atom-tombstones'
  * Fix typo
  * Merge pull request #61 from lloydwatkin/no-mod_disco
  * Also send tombstones in retract notifications
  * Use Atom tombstones for deleted items
  * xmpp: XEP-0313 compliance
  * Handle PubSub retract "notify" attribute
  * operations: fix PushInbox notification
  * Fix undefined variable when paging backwards in RSM
  [ Tuomas Koski ]
  * Merge pull request #59 from lloydwatkin/initialise-sync
  * Merge pull request #58 from lloydwatkin/master
  [ Steven Lloyd Watkin ]
  * Ensure we do not cause BC breaks
  * Make both defaults positive rather than one positive & the other negative Broke the config options down further
  * Fix build console output
  * "package" now a reserved word in node, caused failing in builds (v0.6.15+)
  [ Denis Washington ]
  * Use local CoffeeScript "cake" for "npm install"
  [ Jonas Smedegaard ]
  * Setup access rights and needed dirs when starting daemon
  * Speedup system shutdown by avoiding explicit sysV stop
  * xmpp_pubsub: check for commandEl prior usage
  [ Reginald dude ]
  * updates sent via email from vorner.cz
  * updates sent via email from vorner.cz
  [ Reginald Dude ]
  * Most confusing config file ever
  [ ▟ ▖▟ ▖ ]
  * Merge pull request #70 from lloydwatkin/fix-is-function
  * Merge pull request #63 from lloydwatkin/no-mod_disco
  * Merge pull request #62 from lloydwatkin/no-mod_disco
  * Merge pull request #57 from Schnouki/xep-0313
  * Merge pull request #54 from Schnouki/fix-notif
  * Merge pull request #52 from lloydwatkin/master
  * Merge pull request #51 from lloydwatkin/master
  [ James Tait ]
  * Ensure both the PID dir and log dir are created on startup if they do not already exist.
  [ imaginator ]
  * aligning with INSTALL instructions
  * moved instructions to wiki
  * Edited README.md via GitHub
  [ dodo ]
  * fix accessModel of geo nodes
  * always test in production
  * buddycloud-server 0.3.4
  * Merge branch 'packaging'
  * put the /etc/init.d script into tarball
  * not needed anymore
  * default options for new channels
  * bump tarballify version
  * add bin/buddycloud-server to the tarball
  * no build step in bin/buddycloud-server anymore
  * print additional info messages in gray
  * fix 'file is not defined'
  * fix 'modName is not defined'
  * colorful output for package.js
  * bump tarballify version
  * rm trailing spaces
  * no build_binary.sh needed
  * separate devDependencies
  * export name
  * use packaging script
  * buddycloud-server 0.3.3
  * pass prefix to npm to force npm to use that particular prefix
  * $PREFIX/bin/buddycloud-server can be nonexistant .. so ignore all errors when removing
  * bump node version in build script
  * merge issue #37
  * specify interal config file as defaults, not as main config
  * backports to node 0.4
  * concat cwd path to config path only when config path is relative
  * respect the cwd
  * move to the right dir before builing
  * wscript is not needed anymore
  * merged #31. symlink detection for bin/buddycloud-server thanks to @highfellow
  * fixed gitignore
  * forgot Cakefile
  * pin node version for over 0.5 to get the require json working
  * get version directly
  * new buildsystem
  * check if config.syslog has keys
  * dont load default config over opts and args
  * main: fix config loading
  * wscript fixes
  * load config via jsconfig
  * update wscript
  * upgrade build environment
  * update requirements in readme
  * cleanup files
  [ Simon Tennant ]
  * Update config.js.example
  * change to read config file from /opt/buddycloud
  * Update master
  * don't be so --quiet (will help a lot with debugging)
  * Update _etc_init.d_buddycloud-server
  * the orwell defeault was causing jdesenberg problems.
  * Fixed the permissions to run as.
  * Update _etc_init.d_buddycloud-server
  * init script
  * make it really clear what to change (and what "jid" refers to)
  * Made the ownership of tables really clear. Should help avoid the problem that DD had the other day.
  [ Lloyd Watkin ]
  * Fix for checking of child element
  * Catch error event
  * Fix for server reset
  * Updated variable names to better describe what config does.
  * Merge branch 'master' of git://github.com/buddycloud/buddycloud-server into no-mod_disco
  * Allow buddycloud server to advertise additional 'proxy' components
  * Wait to sync
  * Rename of parameter
  * Allow user to specify a port or not, changed argument name as it may not actually be remote debugging.
  * Tidy up
  * Allow node.js debugging
  [ Simon ]
  * /etc/init.d/buddycloud-server

 -- Abmar Barros (buddycloud Nightly Builds) <abmar@buddycloud.com>  Sat, 26 Jan 2013 15:18:50 -0300


buddycloud-server (0.1) unstable; urgency=medium

  [ Astro ]
  * operations: all nodes in defaultConfiguration accessModel=authorize
  * operations: posts & subscriptions accessModel=authorize in defaultConfiguration
  * buddycloud-server 0.3.2
  * Cakefile: version.js + 

  * operations: fix run notifications control flow
  * build_binary.sh: get bin/buddycloud-server out of the way before npm i
  * buddycloud-server 0.3.1
  * package.json: honor all contributors
  * Merge remote-tracking branch 'schnouki/patch-1'
  * .npmignore: exclude debian/* from npm pkgs
  * buddycloud-server 0.3.0
  * package.json: bump dep versions
  * operations: prevent unsubscribing/demoting the node owner
  * operations: fix PushInbox callback
  * operations: run notifies first, then syncs, then calls back
  * pubsub_server: lower logging
  * operations: fix PushInbox newNodes
  * operations: move PushInbox syncNode post transaction
  * operations: PushInbox should work even if syncNode had hickups
  * operations: syncNode when PushInbox created it
  * operations: fix PushInbox notification & newModerators
  * model_postgres: fix & simplify purgeNode()
  * sync: fixes
  * sync: purge node if no local subscribers
  * purge node when local unsubscription is pushed from remote
  * operations: fix generateSubscriptionsNotifications followee
  * operations: fix PushInbox newModerators nodes
  * xmpp connection: doc, serialize stanzas only once
  * operations: NewModeratorNotify needs listener, not user
  * operations: fix NewModeratorNotify listener
  * operations: log Operation name
  * model_postgres: must quote "user" column for Postgres
  * operations: NewModeratorNotify must cb()
  * operations: Notify notifies w/ node
  * operations: fix Notify otherListeners
  * pubsub_client: rm debug
  * operations: NewModeratorNotify notifies w/ node & listener
  * model_postgres: optional Transaction callbacks
  * operations: fix Notify filterSubscription & filterAffiliation invokation
  * operations: fix this binding
  * operations: no pending subscriptions in subscriptions node
  * operations: NewModeratorNotify
  * operations: doc, filter subscriptions and affiliations for non-moderators
  * operations: reorganize
  * clean up logging
  * operations: posts node defaultAffiliation='publisher'
  * sync: fix AffiliationsSynchronization typo
  * buddycloud-server 0.2.3
  * package.json: fix install script
  * build_binary.sh: bump node.js version
  * buddycloud-server 0.2.2
  * package.json: add preinstall cake build
  * operations: fix notifications
  * build_binary.sh: bump node.js version
  * buddycloud-server 0.2.1
  * operations: fix Notify subscriptios node items
  * operations: fix Notify callback result
  * operations: BrowseNodeItems for subscriptions node calls getSubscriptions not getSubscription
  * operations: syntax fixes
  * operations: Notify subscriptions fixes
  * operations: subscriptions node notifications
  * operations: BrowseNodeItems for subscriptions node
  * sync: require errors
  * sync: avoid error output when omitting local node
  * router, sync: improve logging
  * backend_pubsub: PubsubBackend.notify listener robustness
  * operations: fix Subscribe defaultAffiliation
  * operations: fix ManageNodeAffiliations control flow
  * pubsub_server: PubsubOwnerSetAffiliationsRequest syntax fix
  * operations: fix requiredAffiliation()
  * operations: requiredAffiliation can be function to allow moderators approving topic channel subscribers
  * operations: ManageNodeSubscriptions refactor for efficiency
  * operations: ManageNodeSubscriptions should set new affiliations to defaultAffiliation
  * operations: fix Notify jid/user
  * operations: Notify should notify all users pertained by a subscription
  * operations: 'unsubscribe-node' notifies unsubscribed user
  * operations, pubsub_client: there's no "unsubscribed" subscription, only "none"
  * pubsub_server: PubsubOwnerSetSubscriptionsRequest syntax fix
  * operations: Unsubscribe needs PrivilegedOperation methods
  * operations: Unsubscribed is not a PrivilegedOperation but a ModelOperation
  * operations: fix callback scope
  * pubsub_server: robustify PubsubItemsRequest
  * operations: syntax
  * pubsub_server, operations: support for RetrieveItems by itemIds
  * build_binary.sh: bump node.js version to 0.6.10
  * buddycloud-server 0.2.0
  * operations: CreateNode should not allow creation with empty nodeUser username
  * operations: fix CreateNode defaults & creationDate
  * operations: fix CreateNode isTopic switcheroo
  * router: fix autosubscribeNewUsers operation name
  * router: autosubscribeNewUsers
  * config.js.example: default checkCreateNode hook checks for a specific topic domain
  * operations: fix CreateNode node typo
  * operations: fix CreateNode config
  * pubsub_server, operations: CreateNode with optional config
  * operations: fix CreateNode setSubscription()
  * operations: CreateNode catches missing checkCreateNode hook
  * operations: CreateNode default config
  * checkCreateNode config hook
  * model_postgres: fix getOwnersByNodePrefix SQL
  * operations: fix CreateNode setAffiliation()
  * operations: fix CreateNode getOwnersByNodePrefix()
  * operations: fix ../util require, CreateNode safety check
  * implement createNode with getOwnersByNodePrefix check
  * operations: begin creating topic channels
  * model_postgres: syntax fix
  * package.json: maintainer update
  * build_binary.sh: update to node 0.6.9
  * buddycloud-server 0.1.11
  * rsm_walk: fix logging
  * operations: checkAccessModel() before checkRequiredAffiliation()!
  * operations: Unsubscribe condition syntax fix
  * package.json: muffin dependency glob seems be incompatible in v3.*
  * operations: checkRequiredAffiliation should ignore no @requiredAffiliation
  * operations: fix isAffiliationAtLeast w/ invalid affiliation
  * jsconfig 0.2.0 is out! w00t!!!
  * Cakefile: lib/version.js from package.json
  * logger: update to ain2 1.0.0
  * main: fix config loading
  * buddycloud-server 0.1.10
  * router: fix syncServer()
  * buddycloud-server 0.1.9
  * bin/buddycloud-server: fix param quoting
  * bin/buddycloud-server: fix $cwd
  * buddycloud-server 0.1.8
  * .npmignore to package up built lib/* instead of src/*
  * build_binary.sh: install devDependencies beforehand
  * build_binary.sh: bump node.js version to 0.6.7
  * util: move getNodeUser(), getUserDomain()
  * main: "server successfully started"
  * sync: fix logging
  * model_postgres: fix writeItem() SQL parameter binding
  * sync: fix PaginatedSynchronization error callback
  * sync: rm TODO note
  * model_postgres: writeItem updated_query
  * operations: logging fixes
  * writeItem: move updated extraction from operations to model_postgres
  * model_postgres: writeItem should also INSERT existing updated value
  * model_postgres: fix syntax
  * model_postgres: SQL fixes
  * operations: PushInbox copies item published date
  * postgres schema: CREATE VIEW open_nodes + usage in model_postgres
  * model_postgres: fix query result handling
  * fix getTopFollowedNodes & getTopPublishedNodes parameters
  * model_postgres: fix SQL INTERVAL syntax
  * operations: BrowseNodes.fetchNodes() needs transaction
  * operations: BrowseNodes.transaction should use @fetchNodes()
  * operations: fetchNodes() typo
  * pubsub_server: browse /top-followed-nodes & /top-published-nodes does not request a particular node
  * getTopFollowedNodes & getTopPublishedNodes w/ XMPP disco interface
  * build_binary.sh: bump to node 0.6.6
  * buddycloud-server 0.1.7
  * package.json: rm cradle dependency
  * logger: syslog only with hostname
  * replace common-logger by underscore.logger
  * update ain2 dependency for node v0.6 compatibility
  * model_postgres walkListenerArchive: replace DISTINCT with GROUP BY
  * model_postgres: fix config order/limig
  * operations: ReplayArchive sorts results before capping
  * ReplayArchive/walkListenerArchive: properly cap result set
  * operations: ReplayArchive default max=50
  * build_binary.sh: use $PREFIX from environment if present
  * package.json: req node-stringprep >=0.1.1
  * router: fix
  * buddycloud-server 0.1.6
  * update to new node-waf paths
  * build_binary.sh: switch to node 0.6.4
  * package.json: depend on 0.3.1
  * router: RSM usage fix
  * logger: open logFile for appending, fixes issue #25
  * package.json: depend on node-xmpp >= 0.3.0
  * operations ReplayArchive: fix rsm max
  * operations: ReplayArchive RSM support
  * backend_pubsub: notificationPush updates include sender & actor
  * router: detectUserType fixes
  * router: detectUserType fixes
  * logger: fix argument iteration
  * main, backend_pubsub: logging improvements
  * backend_pubsub: include user in notfound error
  * connection: loopback stanzas to ourselves
  * router: add missing util.inspect include
  * router.run: trace req
  * router: add missing rsm include
  * logger: typo
  * logger: fix level
  * logging clean-up
  * router, pubsub_{server,client}: @type in <actor/>
  * buddycloud-server 0.1.5
  * router: sync fixes
  * buddycloud-server 0.1.4
  * ManageNodeAffiliations: non-owner may not elect a new owner
  * sync: log upon completion
  * sync: transaction fix
  * move some sync logic into router, lock per node
  * operations: BrowseNodeInfo/RetrieveNodeConfiguration w/o access control
  * buddycloud-server 0.1.3
  * operations: deny Unsubscribe from own nodes
  * logger: ain2 syslog transport
  * logger: message always as string
  * main: fix --stdout kludge
  * logger: avoid log level < 0
  * config.js.example: syslog on by default
  * config.js.example: logging section
  * syslog support with ain2
  * support --stdout logging
  * replace cnlogger by common-logger
  * buddycloud-server 0.1.2
  * build_binary: npm install globally (into /opt/buddycloud-server/)
  * build_binary: dedup node & npm versions
  * build_binary: default to /opt/buddycloud-server, bin/ script
  * main: process.title fix
  * version: fix package.json path
  * version from package.json in process.title and for jabber:iq:version
  * xmpp/connection: do not subscribe in probePresence()
  * buddycloud-server 0.1.1
  * build_binary: bump node & npm versions
  * backend_pubsub: reply() must also copy 'replay' field on MaxStanzaSizeExceeded
  * connection: more stanza output when MaxStanzaSizeExceeded
  * don't send ReplayArchive notifications to all online resources
  * pubsub_client/connection: wrap error replies into StanzaError earlier
  * logging fixes
  * port to cnlogger
  * port to broken winston logging
  * xmpp connection: always tell node-xmpp to reconnect
  * async.filter iterator does not take error parameter
  * model_postgres: fix nodeExists warning
  * backend_pubsub: fix notification matching
  * sync: fix router.authorizeFor() usage
  * sync: writeItem does not need author anymore
  * operations: typo
  * model_postgres: fix getListenerAffiliations() query
  * sync: careful
  * xmpp/forms: oops, s/creationTime/creationDate/
  * xmpp/connection: fix name
  * router: check for anonymous user to be online
  * anonymous user offline tracking & clean-up
  * model_postgres: fix walkListenerArchive() node in results
  * router: fix method binding
  * model_postgres: walkListenerArchive() should include node in results
  * operations: RemoveUser & model_postgres.getUserRemoteSubscriptions() & clearUserSubscriptions()
  * BuddycloudDiscovery::detectAnonymousUser
  * backend_pubsub: gracefully handle MaxStanzaSizeExceeded for notifications
  * xmpp pubsub_server & connection: fix graceful MaxStanzaSizeExceeded handling
  * errors: MaxStanzaSizeExceeded extends Error
  * operations: s/geoloc/geo/
  * operations: /subscription items shall contain jid=owner
  * metadata buddycloud#channel_type
  * proper metadata field names
  * support for creationDate
  * operations: clarify logging
  * router: fix remote backend selection
  * operations: Unsubscribe refactor & fix
  * operations: fix Register
  * buddycloud-server 0.1.0
  * operation: print opName on commit, rm debug
  * bin/buddycloud-server: don't cd so config can be loaded relatively
  * Merge remote-tracking branch 'origin/cli'
  * operations: RetractItems should allow anyone to remove their own posts
  * operations: preserve affiliation if previously affiliated
  * operations: unify into isAffiliationAtLeast()
  * operations: rm leftover TODO note
  * operations: refactor Register; should check if authoritative for user's domain
  * router.run: return 404 for nodes not locally subscribed but discovered ourselves
  * rm explicit author handling in postgres schema, model, operations
  * main: check sender authorization for authorizationPrompt
  * operations: RetrieveItems shall not virtualize items for cache case of remote nodes
  * Revert "Made the ownership of tables really clear. Should help avoid the problem that DD had the other day."
  * s/channel-server/buddycloud-server/g
  * build_binary.sh: fix invokation hint
  * README: rm some outdated stuff
  * main: fix defaultConfig stuff
  * build_binary.sh
  * operations: RetrieveItems.retrieveSubscriptionsItems() result set sorting, affiliations
  * virtual handling of /user/.../subscriptions node items
  * MAM replays subscription authorization requests
  * more authorization stuff
  * fixes
  * small fixes
  * package.json: fix bin path
  * further authorizationPrompt work
  * backend_pubsub: missedSomething was missing
  * package.json: fix coffeescript path (./node_modules/...)
  * sending authorize notification forms
  * package.json: fix .coffee compilation stage
  * operations: PrivilegedOperation.fetchActorAffilliation fetches all listener affiliations for inbox sync
  * pubsub_notifications: fix MAM stanzas
  * operations: subscribe defaultAffiliation, fixes
  * model_postgres: many fixes
  * operations: publishModel 'subscribers'
  * operations: access control fixes
  * begin access control, affiliations checking
  * model_postgres: fixes
  * errors: fix error classes
  * xmpp/connection: fix
  * xmpp/connection: fix @missedServerTimeouts usage
  * model_postgres: safety checks
  * readability, notes
  * rsm_walk: fix serious errors
  * globally refactor operation from function to value
  * sync: fixes
  * add forgotten rsm_walk file
  * move syncQueue from main.coffee to fine-grained sync.syncNode
  * xmpp/connection: readability
  * xmpp/connection: track <you-missed-something/> timers with @missedServerTimeouts
  * syncServer support, wired up to <you-missed-something/> 'syncNeeded'
  * model_postgres: for an actor, getSubscriptions() shall return not only users but also listeners
  * MAM time specification
  * primitive MAM implementation
  * send <you-missed-something/>
  * operations: PushInbox TODO note
  * sync: rm request.rsm.max clamp
  * synchronization with state resetting and subscriptions/affiliations support
  * pubsub_*: fix user/jid conventions
  * ConfigSynchronization should use browse-node-info to get node config
  * synchronizing!
  * synchronization kinda works, but hits RSM loops
  * further synchronization progress
  * begin synchronization
  * main: require async
  * measure stanza size, gracefully retry with smaller result set
  * synchronization groundwork
  * don't let backend_pubsub call router.runLocally(), return errors.SeeLocal() instead
  * errors: clean up
  * normalize: add <link rel="self" href="xmpp:...?pubsub;action=retrieve;..."/>
  * operations: Publish shall allow new items with specified @id
  * nodes browsing, with RSM
  * backend_pubsub: run() should bail out early on invalid node form
  * PostgreSQL tuning
  * complete RSM implementation
  * begin RSM for all operations
  * generify RSM stuff
  * pubsub_client: RSM
  * fixes from CCCamp11
  * RSM for local items retrieving
  * begin new RSM implementation
  * pubsub_server: publish-node-items shall reply with item ids
  * model_postgres: fix getNodeListeners() SQL
  * model_postgres: nodeExists() shall check for NOT NULL
  * model_postgres: getNodeListener() replace filter by SQL
  * model_postgres: getNodeListener() filter for null
  * model_postgres: fix setSubscription() INSERT w/o listener
  * error printout
  * forms: fix
  * operations: PushInbox author fix
  * debug
  * xml child robustness
  * model_postgres: fix nodeExists()
  * fix subscription listener for local users
  * logging cleanup
  * initiate presence tracking of users
  * xmpp/connection: use send() instead of specifying from jid
  * some logging cleanup
  * operations: push-inbox does not set subscription listener
  * fixes & TODO notes
  * operations: Notify.transaction() must call cb()
  * retrieve-node-configuration
  * forms: configToResultForm -> configToForm
  * pubsub_client: RetrieveNodeConfiguration & ManageNodeConfiguration
  * operations: catch reply cb exceptions
  * create-node operation
  * package.json: scripts
  * fixes
  * fix outgoing notifications
  * generify pubsub_notifications
  * many fixes for subscription pushing
  * router: if request writes, always go remote
  * push incoming notifications to local model
  * more subclassing of EventEmitter, incoming notifications handling
  * pubsub_server: unify PubsubRequest & PubsubOwnerRequest
  * merge request.coffee into pubsub_server.coffee
  * begin remote subscription pushing to local inbox
  * backend_pubsub: PubsubBackend.notify(): readability
  * tune to use single cb() instead of req.{reply,replyError}()
  * revive normalization
  * model_postgres: setSubscription(): coearce isSet to boolean
  * model_postgres: catch lost transactions
  * pubsub_client: error reporting, fix
  * subscribe reply status
  * model_postgres: setAffiliation() should check nodeExists()
  * fix disco.authorizeFor() usage
  * pubsub_client: fix <actor/> placement
  * refactor notifications a bit
  * pubsub_client: <actor/> placement fix
  * pubsub_client: fix <actor/> placement
  * pubsub_notifications: subscriptions/affiliations/config
  * fix registration/model callback parameters
  * operations: ManageNodeAffiliations validates accessModel & publishModel
  * setting configuration
  * fixes, fixes, config
  * only RegisterSetRequest should induce presence subscription
  * FIXME note
  * model_postgres: do not use rowCount
  * operations: Register created default configuration
  * pubsub_server: pubsub/inbox identity
  * fixes, StanzaError
  * implement pubsub_client operations
  * pubsub_notifications: byOperation()
  * fixes
  * fixes
  * fixes & debugging
  * fixes
  * debugging & fixes
  * fixes
  * begin discovering locally
  * fixes
  * Router.run: fix
  * fixes
  * operations: rename channel node to "posts"
  * begin notifications
  * a bit o' twiddling w/ subscription listeners
  * refactor router for remote requests
  * operations: subscribe/unsubscribe toggle affiliation none/member
  * router: rename frontend to backend
  * rename backend_postgres to model_postgres, revive router
  * main: move iqHandler to pubsub_server
  * manage, not only retrieve, subscriptions & affiliations
  * use subscribe sender as notification listener
  * backend_pubsub: replace ternary operator
  * need to store listener in subscriptions...
  * backend_pubsub: implement RequestCache
  * new untested buddycloud discovery with backend_pubsub.coffee
  * retrieve <actor/> generalized, begin using authorizeFor
  * ns: add BUDDYCLOUD_V1 xmlns
  * postgres.sql schema: updated column for more tables, author column for items
  * retrieving node affiliations
  * retrieving node subscriptions, fixes
  * backend_postgres: syntax fixes
  * operation: Register should set affiliation & subscription
  * retrieving subscriptions & affiliations
  * retracting items
  * publishing & retrieving items works
  * begin item retrieving
  * subscribe & unsubscribe
  * fix backend_postgres (user is a Pg keyword, must be quoted as column name)
  * publishing works
  * lots of fixes
  * fix disco requests
  * fix, fix, fix
  * begin implementing register & publish implementation
  * mv src/operations.coffee src/local/operations.coffee
  * revive backend
  * primitive operations
  * mv controller.coffee operations.coffee
  * dead code TODO
  * fixes
  * rm old dead code
  * rename iqhandler to request
  * begin some refactoring
  * begin hooking up handlers with operations
  * xmpp/pubsub_server: indicate operation types
  * notes
  * pubsub_server: PubsubOwnerHandlers
  * pubsub_server: flesh out more pubsub handlers
  * add affiliations checking
  * begin interweaving with local operations
  * a tad of interconnecting
  * pubsub_server: DiscoInfoHandler.reply()
  * xmpp client 'n stuff
  * README: draw new design
  * begin router
  * xmpp: move NS_* to ns.coffee
  * xmpp: primitive disco info works
  * begin iqhandler
  * xmpp/connection: port presence tracking
  * rm main.js
  * move src files around
  * rm model_couchdb from config, add preliminary main.coffee
  * a bit new controller
  * rm old test_controller
  * some controller work
  * old controller translated to coffeescript
  * port peripheral stuff over to coffeescript
  * README: change ejabberd port to the config default one
  * model_couchdb: s/doc.subscribers/doc.subscriptions/
  * xmpp_pubsub.js: fix typo
  * model_postgres: check nodeExists before any data modification
  * preliminary RSM (XEP-0059) implementation for retrieve-items/retrieve
  * model_couchdb: stub getUpdatesByTime()
  * MAM should result in direct message, not broadcast notification to all resources
  * MAM w/ working model_postgres backend
  * begin implementing MAM
  * controller: register/register should create /user/<jid>/subscriptions node
  * normalize fixes + tests
  * normalize
  * only one child element per item
  * model_postgres: fix setConfig()
  * model_postgres: listNodesByUser()
  * model_couchdb: listNodesByUser(), simplify listNodes()
  * controller, xmpp_pubsub: browse-nodes/by-user
  * model_postgres setConfig(): fixes
  * configuration notification
  * model_postgres setConfig(): do not set fields unspecified/without defaultConfig
  * model_postgres nodeExists(): indentation
  * controller: subscribe should not require preexisting affiliation
  * xmpp_pubsub: fix manage-subscriptions/retrieve result usage
  * controller: allow retrieving subscriptions & affiliations for members
  * xmpp_pubsub: syntax fix
  * model_postgres: fix queue pushing
  * xmpp_pubsub: fix info discovery reply FORM_TYPE
  * model_postgres: config fixes
  * more on extended config
  * model_couchdb, model_postgres: more flexible config schema
  * config: description, type, creationDate; setConfig() on create-node/register
  * xmpp_pubsub: optimize presence tracking
  * controller: requiredAffiliation='member' for config-node/retrieve
  * README: OpenFire
  * controller: defaultConfig() + use in feature 'config-node'
  * xmpp_pubsub: replace isOnline() with getOnlineResources()
  * model_postgres: fix transaction dequeueing
  * model_postgres: move cb() past process.nextTick/dbIsAvailable for safety
  * model_postgres: work around empty responses
  * test_controller: retract
  * xmpp_pubsub: disco <identity/> according to discovered @node
  * test_controller: browse-nodes
  * model_couchdb: fix preload() etag extraction + error reporting
  * xmpp_pubsub: FeatureNotImplemented message
  * controller: simulate a stack for debug info
  * test_controller: retract skeleton
  * controller unsubscribe: do not fetch affiliation from database but check by node path
  * implement & test unsubscribe
  * test_controller: skeletons
  * test_controller: publishing tests
  * test_controller: more publish testing + controller fix
  * test_controller: begin test publishing
  * model_postgres: fix forgotten variable
  * model_postgres: reconnect to database upon error
  * model_postgres: oops, syntax error
  * config.js.example: postgres is actually the one with a poolSize
  * model_postgres: oops, syntax errors
  * begin test_controller
  * fixes
  * subscriptionModified <message/>
  * xmpp_pubsub: "message" & approve() fixes
  * controller: replace ownerNotification with afterTransaction
  * access_model authorize
  * package.json & README
  * errors: pull inherits() from util/utils/sys for moving node api
  * browse open nodes with service discovery items
  * controller: refactor affiliations checking
  * xmpp_pubsub: fix subscriptions format
  * controller: treat missing accessModel as 'open'
  * model_couchdb: preload() etag fix
  * .gitignore with config.js
  * xmpp_pubsub: node config on disco info
  * model_couchdb: encodeURIComponent() only for db.head() & .get()
  * main.js: #!
  * rename config.js to config.js.example
  * restore default config.js
  * main.js: on uncaughtException
  * postgres doc & config
  * model_postgres
  * model_couchdb: fix item deserialization
  * model_couchdb: rm implemented TODOs
  * README: CouchDB configuration
  * README: TODO++
  * LICENSE
  * README: markdown fix
  * README: mention buddycloud :)
  * model_couchdb: fix views initialization
  * README & config
  * jabber:iq:register
  * model_couchdb: fixes
  * errors fixing
  * rm model_persistence
  * model_couchdb: assertNodeName()
  * main: catch uncaughtException
  * controller: fix
  * bugs, readability
  * model_couchdb: fixing
  * controller: implement affiliations checking
  * xmpp_pubsub: getAffiliations() result is now Array
  * model_couchdb: setSubscription() & setAffiliation() 'none'
  * model_couchdb: consolidate subscriptions & affiliations model
  * xmpp_pubsub: send notifications with type='headline'
  * xmpp_pubsub: subscribeIfNeeded() on <create/> & <subscribe/>
  * model_couchdb: load() shortcut when already cached
  * model_couchdb: createNode() fix
  * model_couchdb: preload()
  * model_couchdb: commit read documents too for integrity
  * model_couchdb: abstract views
  * CouchDB Optimistic Concurrency Control layer
  * controller: improve error propagation
  * defined error conditions
  * untested configuration getting/setting
  * service discovery
  * modify-affiliations
  * model_couchdb: getAffiliation()
  * begin permission checking infrastructure
  * presence probes
  * xmpp_pubsub: presence tracking
  * refactoring controller complete
  * continue refactoring controller into features/operations
  * begin refactoring controller into features/operations
  * subscribers
  * getting subscriptions & affiliations
  * createNode improvements
  * controller createNode: check node
  * model_couchdb: affiliations view
  * items getting
  * much more progress
  * implement retraction, s/notifySubscriber/notify/, s/writeItems/writeItem/
  * publish notification works
  * more frontend hooking
  * begin notification hooks
  * fixes
  * begin model_couchdb transactions
  * split model
  * some progress
  * some progress
  * createNode creates owner affiliation
  * model: indexes
  [ Thomas Jost ]
  * Add @denisw to contributors
  * Upgrade required node version to 0.8
  * We actually need remote subscriptions nodes
  * Merge branch 'feature/anon-fixes' into develop
  * Merge branch 'feature/really-validate-post-times' into develop
  * Reject remote posts with invalid dates
  * Add tests for remote posts with invalid dates
  * Force anon subscriptions to be temporary
  * Set default affiliation to 'none' for anon users
  * Merge branch 'feature/anon-fixes' into develop
  * Cleanup: remove some dead code
  * Purge remote nodes with no local subscription left
  * Merge branch 'feature/recent-items' into develop
  * Merge branch 'feature/validate-remote-items' into develop
  * Sort recent items by update time
  * Merge branch 'feature/validate-remote-items' into feature/recent-items
  * Fix tests that push remote items
  * Validate remote items
  * Add (failing) tests for invalid remote items
  * Implement recent items query
  * Add (failing) test for recent items query
  * PubSub replies can include several elements
  * Merge branch 'feature/pusher' into develop
  * Workaround callback woes
  * Fix MAM for pusher component
  * Pusher: test MAM
  * test_server: move makePublishIq into TestServer
  * Pusher: test node configuration
  * Pusher: test unsubscriptions
  * Merge branch 'feature/affiliations-fixes' into develop
  * Merge branch 'feature/pubsub-disco-features' into develop
  * Cleanup
  * Expose all implemented PubSub features
  * Pusher: test affiliations
  * Merge branch 'feature/affiliations-fixes' into feature/pusher
  * Fix affiliation in /subscriptions notifications
  * Accept PubSub-compliant affiliations notifications
  * Pusher: test subscriptions
  * Merge branch 'feature/fix-98' into develop
  * Fix SQL for updating replies
  * Add failing test for issue #98
  * Fix offline user cleanup
  * DB: drop anonymous column
  * Yet another federation test
  * Check if the example config file is valid JS
  * Add tests for pusher code
  * Pusher can MAM everything
  * Pusher is a listener for all notifications
  * Add config for pusher component
  * Merge branch 'feature/mam-fixes' into develop
  * Increase the default number of items in a MAM response
  * Make MAM return an error if there are too many results
  * Use RSM in MAM
  * Test MAM RSM
  * MAM: filter bad dates out
  * Test if MAM validates dates correctly
  * Ensure the giant MAM test doesn't pollute the test environment
  * Make affiliations notifications PubSub-compliant
  * Affiliations have update timestamps too
  * Avoid temporary subscriptions in MAM results
  * Advertise support for MAM in disco#info
  * Add a giant MAM test
  * Update Travis URL in README.md
  * Merge branch 'feature/tests' into develop
  * Correctly tests that updated items don't change <in-reply-to/>
  * Move tests on updated items to a different function
  * Add tests for updates that change <in-reply-to/>
  * Use Travis to automate testing
  * Merge branch 'master' into develop
  * Add compatibility with PostgreSQL 9.1
  * Require at least one item to retract
  * Add Emacs folding marks
  * Add retrieve and retract tests
  * Fix retraction stanza sent to remote services
  * Tombstones: include Atom namespace in <updated/> element
  * Fix error when not allowed to retract an item
  * Tombstones can't be updated
  * When publishing an update, check if the actor is the original author
  * Check if original post exists before publishing a reply
  * Reject posts from non-users
  * Don't include type in <actor/>
  * Complete post/update/retract tests
  * TestServer: fix Atom in-reply-to element
  * Fail when some unwanted event happens
  * Add description for calls to "should.exist"
  * Retraction tests
  * Workaround CoffeeScript weird scoping rules
  * Add another batch of tests
  * Update test data
  * Change the way the test server emits IQ stanzas
  * Tests for posting to remote channels
  * Test server: emit event for IQs with unknown ID
  * Test server: disco info for "remote" servers
  * More post tests
  * Add helper to run tests that trigger several different stanzas
  * Test server: handle <message/> stanzas
  * Add post tests
  * Post tests: helper to check if post was successful
  * Throw an exception when getting an unexpected error IQ
  * Start adding post tests
  * Add helpers for pubsub get IQs and Atom handling
  * Helpers to add initial test data in the database
  * Add XMPP namespaces to test_server.coffee
  * Reply to presence probes
  * Don't parse Elements again
  * Use same user and server names as in sfc
  * Safe path handling in prepare-db.sh
  * Add codo-like doc to the TestServer class
  * Add helpers to build disco and pubsub IQs
  * Expose support for PubSub node creation
  * Skip a test
  * More channel creation tests
  * New tests and helpers for forms
  * Add a helper to parse disco#info replies
  * Move common disco replies to test_server.coffee
  * Start testing for channel creation
  * Test server: handle disco#items queries
  * Make tests runnable using "npm test"
  * Basic disco tests
  * Start a test suite
  * Use an existing component connection if provided in config
  * Make it possible to require() the server
  * Update config.js.example
  * Fix autosubscribeNewUsers
  * Increase the max number of items in each RSM page
  * Better shrinking of oversized stanzas
  * Include `-dirty' in version number from git
  * Remove glob from dependencies
  * Fix indentation in main.coffee
  * Prevent existing persistent subscription from being made temporary
  * Merge branch 'feature/version-number-from-git' into develop
  * Expose support for XEP-0092 (Software Version) in disco
  * Use `git describe' to get version numbers in dev branches
  * Merge branch 'master' into next
  * Restore compatibility with Node 0.6
  * Fix handling of offline users
  * Avoid race condition in disco cache
  * Shrink oversized stanzas more aggressively
  * Avoid nulls
  * Include new files in release tarball
  * Avoid race condition in disco cache
  * Merge remote-tracking branch 'upstream/tempsub' into next
  * Merge branch 'db-versioning' into next
  * buddycloud-server 0.3.5
  * Check if remote supports temporary subscription before sending a tempsub request
  * Client can check for server features before sending an IQ
  * Make server features discoverable
  * Log errors when processing incoming messages
  * Cleanup
  * Remove empty text nodes from items
  * Fix ActivityStreams verb for replies
  * Include operation name in debug message
  * Don't notify unsubscribe when it was a temporary subscription
  * Offline user cleanup: do real unsubscribe operations
  * I'm dumb
  * Don't delete temporary subscriptions during sync
  * Don't send any notification for temporary subscriptions
  * Client and server must speak the same language
  * Only send notifications about temporary subscriptions to remote listeners
  * Cleanup offline users
  * Claim we support subscription options
  * Temporary subscriptions
  * Fix updating items
  * Add help channels to default autosubscriptions
  * Merge branch 'log-fix'
  * Inspect objets in log messages
  * Fix broken log messages
  * Don't write subscription stanzas in items table
  * Merge remote-tracking branch 'lloyd/config'
  * Populate in_reply_to column when inserting new items
  * DB cleanup at startup
  * Add README for DB schema versioning
  * Upgrade DB schema
  * Check DB schema version on startup
  * Don't change <published/> when updating an existing post
  * Fix subscription to remote private channels
  * Don't fail when the default config file does not exist
  * Add Lloyd in contributors
  * Better logging for replies sent by 'proxy' components
  * Merge branch 'mam-result'
  * Include <result/> in MAM replies
  * Merge remote-tracking branch 'schnouki/atom-tombstones'
  * Fix typo
  * Merge pull request #61 from lloydwatkin/no-mod_disco
  * Also send tombstones in retract notifications
  * Use Atom tombstones for deleted items
  * xmpp: XEP-0313 compliance
  * Handle PubSub retract "notify" attribute
  * operations: fix PushInbox notification
  * Fix undefined variable when paging backwards in RSM
  [ Tuomas Koski ]
  * Merge pull request #59 from lloydwatkin/initialise-sync
  * Merge pull request #58 from lloydwatkin/master
  [ Steven Lloyd Watkin ]
  * Ensure we do not cause BC breaks
  * Make both defaults positive rather than one positive & the other negative Broke the config options down further
  * Fix build console output
  * "package" now a reserved word in node, caused failing in builds (v0.6.15+)
  [ Denis Washington ]
  * Use local CoffeeScript "cake" for "npm install"
  [ Jonas Smedegaard ]
  * Setup access rights and needed dirs when starting daemon
  * Speedup system shutdown by avoiding explicit sysV stop
  * xmpp_pubsub: check for commandEl prior usage
  [ Reginald dude ]
  * updates sent via email from vorner.cz
  * updates sent via email from vorner.cz
  [ Reginald Dude ]
  * Most confusing config file ever
  [ ▟ ▖▟ ▖ ]
  * Merge pull request #70 from lloydwatkin/fix-is-function
  * Merge pull request #63 from lloydwatkin/no-mod_disco
  * Merge pull request #62 from lloydwatkin/no-mod_disco
  * Merge pull request #57 from Schnouki/xep-0313
  * Merge pull request #54 from Schnouki/fix-notif
  * Merge pull request #52 from lloydwatkin/master
  * Merge pull request #51 from lloydwatkin/master
  [ James Tait ]
  * Ensure both the PID dir and log dir are created on startup if they do not already exist.
  [ imaginator ]
  * aligning with INSTALL instructions
  * moved instructions to wiki
  * Edited README.md via GitHub
  [ dodo ]
  * fix accessModel of geo nodes
  * always test in production
  * buddycloud-server 0.3.4
  * Merge branch 'packaging'
  * put the /etc/init.d script into tarball
  * not needed anymore
  * default options for new channels
  * bump tarballify version
  * add bin/buddycloud-server to the tarball
  * no build step in bin/buddycloud-server anymore
  * print additional info messages in gray
  * fix 'file is not defined'
  * fix 'modName is not defined'
  * colorful output for package.js
  * bump tarballify version
  * rm trailing spaces
  * no build_binary.sh needed
  * separate devDependencies
  * export name
  * use packaging script
  * buddycloud-server 0.3.3
  * pass prefix to npm to force npm to use that particular prefix
  * $PREFIX/bin/buddycloud-server can be nonexistant .. so ignore all errors when removing
  * bump node version in build script
  * merge issue #37
  * specify interal config file as defaults, not as main config
  * backports to node 0.4
  * concat cwd path to config path only when config path is relative
  * respect the cwd
  * move to the right dir before builing
  * wscript is not needed anymore
  * merged #31. symlink detection for bin/buddycloud-server thanks to @highfellow
  * fixed gitignore
  * forgot Cakefile
  * pin node version for over 0.5 to get the require json working
  * get version directly
  * new buildsystem
  * check if config.syslog has keys
  * dont load default config over opts and args
  * main: fix config loading
  * wscript fixes
  * load config via jsconfig
  * update wscript
  * upgrade build environment
  * update requirements in readme
  * cleanup files
  [ Simon Tennant ]
  * Update config.js.example
  * change to read config file from /opt/buddycloud
  * Update master
  * don't be so --quiet (will help a lot with debugging)
  * Update _etc_init.d_buddycloud-server
  * the orwell defeault was causing jdesenberg problems.
  * Fixed the permissions to run as.
  * Update _etc_init.d_buddycloud-server
  * init script
  * make it really clear what to change (and what "jid" refers to)
  * Made the ownership of tables really clear. Should help avoid the problem that DD had the other day.
  [ Lloyd Watkin ]
  * Fix for checking of child element
  * Catch error event
  * Fix for server reset
  * Updated variable names to better describe what config does.
  * Merge branch 'master' of git://github.com/buddycloud/buddycloud-server into no-mod_disco
  * Allow buddycloud server to advertise additional 'proxy' components
  * Wait to sync
  * Rename of parameter
  * Allow user to specify a port or not, changed argument name as it may not actually be remote debugging.
  * Tidy up
  * Allow node.js debugging
  [ Simon ]
  * /etc/init.d/buddycloud-server

 -- Abmar Barros (buddycloud Nightly Builds) <abmar@buddycloud.com>  Sat, 26 Jan 2013 15:19:21 -0300


buddycloud-server (0.1) unstable; urgency=medium

  [ Astro ]
  * operations: all nodes in defaultConfiguration accessModel=authorize
  * operations: posts & subscriptions accessModel=authorize in defaultConfiguration
  * buddycloud-server 0.3.2
  * Cakefile: version.js + 

  * operations: fix run notifications control flow
  * build_binary.sh: get bin/buddycloud-server out of the way before npm i
  * buddycloud-server 0.3.1
  * package.json: honor all contributors
  * Merge remote-tracking branch 'schnouki/patch-1'
  * .npmignore: exclude debian/* from npm pkgs
  * buddycloud-server 0.3.0
  * package.json: bump dep versions
  * operations: prevent unsubscribing/demoting the node owner
  * operations: fix PushInbox callback
  * operations: run notifies first, then syncs, then calls back
  * pubsub_server: lower logging
  * operations: fix PushInbox newNodes
  * operations: move PushInbox syncNode post transaction
  * operations: PushInbox should work even if syncNode had hickups
  * operations: syncNode when PushInbox created it
  * operations: fix PushInbox notification & newModerators
  * model_postgres: fix & simplify purgeNode()
  * sync: fixes
  * sync: purge node if no local subscribers
  * purge node when local unsubscription is pushed from remote
  * operations: fix generateSubscriptionsNotifications followee
  * operations: fix PushInbox newModerators nodes
  * xmpp connection: doc, serialize stanzas only once
  * operations: NewModeratorNotify needs listener, not user
  * operations: fix NewModeratorNotify listener
  * operations: log Operation name
  * model_postgres: must quote "user" column for Postgres
  * operations: NewModeratorNotify must cb()
  * operations: Notify notifies w/ node
  * operations: fix Notify otherListeners
  * pubsub_client: rm debug
  * operations: NewModeratorNotify notifies w/ node & listener
  * model_postgres: optional Transaction callbacks
  * operations: fix Notify filterSubscription & filterAffiliation invokation
  * operations: fix this binding
  * operations: no pending subscriptions in subscriptions node
  * operations: NewModeratorNotify
  * operations: doc, filter subscriptions and affiliations for non-moderators
  * operations: reorganize
  * clean up logging
  * operations: posts node defaultAffiliation='publisher'
  * sync: fix AffiliationsSynchronization typo
  * buddycloud-server 0.2.3
  * package.json: fix install script
  * build_binary.sh: bump node.js version
  * buddycloud-server 0.2.2
  * package.json: add preinstall cake build
  * operations: fix notifications
  * build_binary.sh: bump node.js version
  * buddycloud-server 0.2.1
  * operations: fix Notify subscriptios node items
  * operations: fix Notify callback result
  * operations: BrowseNodeItems for subscriptions node calls getSubscriptions not getSubscription
  * operations: syntax fixes
  * operations: Notify subscriptions fixes
  * operations: subscriptions node notifications
  * operations: BrowseNodeItems for subscriptions node
  * sync: require errors
  * sync: avoid error output when omitting local node
  * router, sync: improve logging
  * backend_pubsub: PubsubBackend.notify listener robustness
  * operations: fix Subscribe defaultAffiliation
  * operations: fix ManageNodeAffiliations control flow
  * pubsub_server: PubsubOwnerSetAffiliationsRequest syntax fix
  * operations: fix requiredAffiliation()
  * operations: requiredAffiliation can be function to allow moderators approving topic channel subscribers
  * operations: ManageNodeSubscriptions refactor for efficiency
  * operations: ManageNodeSubscriptions should set new affiliations to defaultAffiliation
  * operations: fix Notify jid/user
  * operations: Notify should notify all users pertained by a subscription
  * operations: 'unsubscribe-node' notifies unsubscribed user
  * operations, pubsub_client: there's no "unsubscribed" subscription, only "none"
  * pubsub_server: PubsubOwnerSetSubscriptionsRequest syntax fix
  * operations: Unsubscribe needs PrivilegedOperation methods
  * operations: Unsubscribed is not a PrivilegedOperation but a ModelOperation
  * operations: fix callback scope
  * pubsub_server: robustify PubsubItemsRequest
  * operations: syntax
  * pubsub_server, operations: support for RetrieveItems by itemIds
  * build_binary.sh: bump node.js version to 0.6.10
  * buddycloud-server 0.2.0
  * operations: CreateNode should not allow creation with empty nodeUser username
  * operations: fix CreateNode defaults & creationDate
  * operations: fix CreateNode isTopic switcheroo
  * router: fix autosubscribeNewUsers operation name
  * router: autosubscribeNewUsers
  * config.js.example: default checkCreateNode hook checks for a specific topic domain
  * operations: fix CreateNode node typo
  * operations: fix CreateNode config
  * pubsub_server, operations: CreateNode with optional config
  * operations: fix CreateNode setSubscription()
  * operations: CreateNode catches missing checkCreateNode hook
  * operations: CreateNode default config
  * checkCreateNode config hook
  * model_postgres: fix getOwnersByNodePrefix SQL
  * operations: fix CreateNode setAffiliation()
  * operations: fix CreateNode getOwnersByNodePrefix()
  * operations: fix ../util require, CreateNode safety check
  * implement createNode with getOwnersByNodePrefix check
  * operations: begin creating topic channels
  * model_postgres: syntax fix
  * package.json: maintainer update
  * build_binary.sh: update to node 0.6.9
  * buddycloud-server 0.1.11
  * rsm_walk: fix logging
  * operations: checkAccessModel() before checkRequiredAffiliation()!
  * operations: Unsubscribe condition syntax fix
  * package.json: muffin dependency glob seems be incompatible in v3.*
  * operations: checkRequiredAffiliation should ignore no @requiredAffiliation
  * operations: fix isAffiliationAtLeast w/ invalid affiliation
  * jsconfig 0.2.0 is out! w00t!!!
  * Cakefile: lib/version.js from package.json
  * logger: update to ain2 1.0.0
  * main: fix config loading
  * buddycloud-server 0.1.10
  * router: fix syncServer()
  * buddycloud-server 0.1.9
  * bin/buddycloud-server: fix param quoting
  * bin/buddycloud-server: fix $cwd
  * buddycloud-server 0.1.8
  * .npmignore to package up built lib/* instead of src/*
  * build_binary.sh: install devDependencies beforehand
  * build_binary.sh: bump node.js version to 0.6.7
  * util: move getNodeUser(), getUserDomain()
  * main: "server successfully started"
  * sync: fix logging
  * model_postgres: fix writeItem() SQL parameter binding
  * sync: fix PaginatedSynchronization error callback
  * sync: rm TODO note
  * model_postgres: writeItem updated_query
  * operations: logging fixes
  * writeItem: move updated extraction from operations to model_postgres
  * model_postgres: writeItem should also INSERT existing updated value
  * model_postgres: fix syntax
  * model_postgres: SQL fixes
  * operations: PushInbox copies item published date
  * postgres schema: CREATE VIEW open_nodes + usage in model_postgres
  * model_postgres: fix query result handling
  * fix getTopFollowedNodes & getTopPublishedNodes parameters
  * model_postgres: fix SQL INTERVAL syntax
  * operations: BrowseNodes.fetchNodes() needs transaction
  * operations: BrowseNodes.transaction should use @fetchNodes()
  * operations: fetchNodes() typo
  * pubsub_server: browse /top-followed-nodes & /top-published-nodes does not request a particular node
  * getTopFollowedNodes & getTopPublishedNodes w/ XMPP disco interface
  * build_binary.sh: bump to node 0.6.6
  * buddycloud-server 0.1.7
  * package.json: rm cradle dependency
  * logger: syslog only with hostname
  * replace common-logger by underscore.logger
  * update ain2 dependency for node v0.6 compatibility
  * model_postgres walkListenerArchive: replace DISTINCT with GROUP BY
  * model_postgres: fix config order/limig
  * operations: ReplayArchive sorts results before capping
  * ReplayArchive/walkListenerArchive: properly cap result set
  * operations: ReplayArchive default max=50
  * build_binary.sh: use $PREFIX from environment if present
  * package.json: req node-stringprep >=0.1.1
  * router: fix
  * buddycloud-server 0.1.6
  * update to new node-waf paths
  * build_binary.sh: switch to node 0.6.4
  * package.json: depend on 0.3.1
  * router: RSM usage fix
  * logger: open logFile for appending, fixes issue #25
  * package.json: depend on node-xmpp >= 0.3.0
  * operations ReplayArchive: fix rsm max
  * operations: ReplayArchive RSM support
  * backend_pubsub: notificationPush updates include sender & actor
  * router: detectUserType fixes
  * router: detectUserType fixes
  * logger: fix argument iteration
  * main, backend_pubsub: logging improvements
  * backend_pubsub: include user in notfound error
  * connection: loopback stanzas to ourselves
  * router: add missing util.inspect include
  * router.run: trace req
  * router: add missing rsm include
  * logger: typo
  * logger: fix level
  * logging clean-up
  * router, pubsub_{server,client}: @type in <actor/>
  * buddycloud-server 0.1.5
  * router: sync fixes
  * buddycloud-server 0.1.4
  * ManageNodeAffiliations: non-owner may not elect a new owner
  * sync: log upon completion
  * sync: transaction fix
  * move some sync logic into router, lock per node
  * operations: BrowseNodeInfo/RetrieveNodeConfiguration w/o access control
  * buddycloud-server 0.1.3
  * operations: deny Unsubscribe from own nodes
  * logger: ain2 syslog transport
  * logger: message always as string
  * main: fix --stdout kludge
  * logger: avoid log level < 0
  * config.js.example: syslog on by default
  * config.js.example: logging section
  * syslog support with ain2
  * support --stdout logging
  * replace cnlogger by common-logger
  * buddycloud-server 0.1.2
  * build_binary: npm install globally (into /opt/buddycloud-server/)
  * build_binary: dedup node & npm versions
  * build_binary: default to /opt/buddycloud-server, bin/ script
  * main: process.title fix
  * version: fix package.json path
  * version from package.json in process.title and for jabber:iq:version
  * xmpp/connection: do not subscribe in probePresence()
  * buddycloud-server 0.1.1
  * build_binary: bump node & npm versions
  * backend_pubsub: reply() must also copy 'replay' field on MaxStanzaSizeExceeded
  * connection: more stanza output when MaxStanzaSizeExceeded
  * don't send ReplayArchive notifications to all online resources
  * pubsub_client/connection: wrap error replies into StanzaError earlier
  * logging fixes
  * port to cnlogger
  * port to broken winston logging
  * xmpp connection: always tell node-xmpp to reconnect
  * async.filter iterator does not take error parameter
  * model_postgres: fix nodeExists warning
  * backend_pubsub: fix notification matching
  * sync: fix router.authorizeFor() usage
  * sync: writeItem does not need author anymore
  * operations: typo
  * model_postgres: fix getListenerAffiliations() query
  * sync: careful
  * xmpp/forms: oops, s/creationTime/creationDate/
  * xmpp/connection: fix name
  * router: check for anonymous user to be online
  * anonymous user offline tracking & clean-up
  * model_postgres: fix walkListenerArchive() node in results
  * router: fix method binding
  * model_postgres: walkListenerArchive() should include node in results
  * operations: RemoveUser & model_postgres.getUserRemoteSubscriptions() & clearUserSubscriptions()
  * BuddycloudDiscovery::detectAnonymousUser
  * backend_pubsub: gracefully handle MaxStanzaSizeExceeded for notifications
  * xmpp pubsub_server & connection: fix graceful MaxStanzaSizeExceeded handling
  * errors: MaxStanzaSizeExceeded extends Error
  * operations: s/geoloc/geo/
  * operations: /subscription items shall contain jid=owner
  * metadata buddycloud#channel_type
  * proper metadata field names
  * support for creationDate
  * operations: clarify logging
  * router: fix remote backend selection
  * operations: Unsubscribe refactor & fix
  * operations: fix Register
  * buddycloud-server 0.1.0
  * operation: print opName on commit, rm debug
  * bin/buddycloud-server: don't cd so config can be loaded relatively
  * Merge remote-tracking branch 'origin/cli'
  * operations: RetractItems should allow anyone to remove their own posts
  * operations: preserve affiliation if previously affiliated
  * operations: unify into isAffiliationAtLeast()
  * operations: rm leftover TODO note
  * operations: refactor Register; should check if authoritative for user's domain
  * router.run: return 404 for nodes not locally subscribed but discovered ourselves
  * rm explicit author handling in postgres schema, model, operations
  * main: check sender authorization for authorizationPrompt
  * operations: RetrieveItems shall not virtualize items for cache case of remote nodes
  * Revert "Made the ownership of tables really clear. Should help avoid the problem that DD had the other day."
  * s/channel-server/buddycloud-server/g
  * build_binary.sh: fix invokation hint
  * README: rm some outdated stuff
  * main: fix defaultConfig stuff
  * build_binary.sh
  * operations: RetrieveItems.retrieveSubscriptionsItems() result set sorting, affiliations
  * virtual handling of /user/.../subscriptions node items
  * MAM replays subscription authorization requests
  * more authorization stuff
  * fixes
  * small fixes
  * package.json: fix bin path
  * further authorizationPrompt work
  * backend_pubsub: missedSomething was missing
  * package.json: fix coffeescript path (./node_modules/...)
  * sending authorize notification forms
  * package.json: fix .coffee compilation stage
  * operations: PrivilegedOperation.fetchActorAffilliation fetches all listener affiliations for inbox sync
  * pubsub_notifications: fix MAM stanzas
  * operations: subscribe defaultAffiliation, fixes
  * model_postgres: many fixes
  * operations: publishModel 'subscribers'
  * operations: access control fixes
  * begin access control, affiliations checking
  * model_postgres: fixes
  * errors: fix error classes
  * xmpp/connection: fix
  * xmpp/connection: fix @missedServerTimeouts usage
  * model_postgres: safety checks
  * readability, notes
  * rsm_walk: fix serious errors
  * globally refactor operation from function to value
  * sync: fixes
  * add forgotten rsm_walk file
  * move syncQueue from main.coffee to fine-grained sync.syncNode
  * xmpp/connection: readability
  * xmpp/connection: track <you-missed-something/> timers with @missedServerTimeouts
  * syncServer support, wired up to <you-missed-something/> 'syncNeeded'
  * model_postgres: for an actor, getSubscriptions() shall return not only users but also listeners
  * MAM time specification
  * primitive MAM implementation
  * send <you-missed-something/>
  * operations: PushInbox TODO note
  * sync: rm request.rsm.max clamp
  * synchronization with state resetting and subscriptions/affiliations support
  * pubsub_*: fix user/jid conventions
  * ConfigSynchronization should use browse-node-info to get node config
  * synchronizing!
  * synchronization kinda works, but hits RSM loops
  * further synchronization progress
  * begin synchronization
  * main: require async
  * measure stanza size, gracefully retry with smaller result set
  * synchronization groundwork
  * don't let backend_pubsub call router.runLocally(), return errors.SeeLocal() instead
  * errors: clean up
  * normalize: add <link rel="self" href="xmpp:...?pubsub;action=retrieve;..."/>
  * operations: Publish shall allow new items with specified @id
  * nodes browsing, with RSM
  * backend_pubsub: run() should bail out early on invalid node form
  * PostgreSQL tuning
  * complete RSM implementation
  * begin RSM for all operations
  * generify RSM stuff
  * pubsub_client: RSM
  * fixes from CCCamp11
  * RSM for local items retrieving
  * begin new RSM implementation
  * pubsub_server: publish-node-items shall reply with item ids
  * model_postgres: fix getNodeListeners() SQL
  * model_postgres: nodeExists() shall check for NOT NULL
  * model_postgres: getNodeListener() replace filter by SQL
  * model_postgres: getNodeListener() filter for null
  * model_postgres: fix setSubscription() INSERT w/o listener
  * error printout
  * forms: fix
  * operations: PushInbox author fix
  * debug
  * xml child robustness
  * model_postgres: fix nodeExists()
  * fix subscription listener for local users
  * logging cleanup
  * initiate presence tracking of users
  * xmpp/connection: use send() instead of specifying from jid
  * some logging cleanup
  * operations: push-inbox does not set subscription listener
  * fixes & TODO notes
  * operations: Notify.transaction() must call cb()
  * retrieve-node-configuration
  * forms: configToResultForm -> configToForm
  * pubsub_client: RetrieveNodeConfiguration & ManageNodeConfiguration
  * operations: catch reply cb exceptions
  * create-node operation
  * package.json: scripts
  * fixes
  * fix outgoing notifications
  * generify pubsub_notifications
  * many fixes for subscription pushing
  * router: if request writes, always go remote
  * push incoming notifications to local model
  * more subclassing of EventEmitter, incoming notifications handling
  * pubsub_server: unify PubsubRequest & PubsubOwnerRequest
  * merge request.coffee into pubsub_server.coffee
  * begin remote subscription pushing to local inbox
  * backend_pubsub: PubsubBackend.notify(): readability
  * tune to use single cb() instead of req.{reply,replyError}()
  * revive normalization
  * model_postgres: setSubscription(): coearce isSet to boolean
  * model_postgres: catch lost transactions
  * pubsub_client: error reporting, fix
  * subscribe reply status
  * model_postgres: setAffiliation() should check nodeExists()
  * fix disco.authorizeFor() usage
  * pubsub_client: fix <actor/> placement
  * refactor notifications a bit
  * pubsub_client: <actor/> placement fix
  * pubsub_client: fix <actor/> placement
  * pubsub_notifications: subscriptions/affiliations/config
  * fix registration/model callback parameters
  * operations: ManageNodeAffiliations validates accessModel & publishModel
  * setting configuration
  * fixes, fixes, config
  * only RegisterSetRequest should induce presence subscription
  * FIXME note
  * model_postgres: do not use rowCount
  * operations: Register created default configuration
  * pubsub_server: pubsub/inbox identity
  * fixes, StanzaError
  * implement pubsub_client operations
  * pubsub_notifications: byOperation()
  * fixes
  * fixes
  * fixes & debugging
  * fixes
  * debugging & fixes
  * fixes
  * begin discovering locally
  * fixes
  * Router.run: fix
  * fixes
  * operations: rename channel node to "posts"
  * begin notifications
  * a bit o' twiddling w/ subscription listeners
  * refactor router for remote requests
  * operations: subscribe/unsubscribe toggle affiliation none/member
  * router: rename frontend to backend
  * rename backend_postgres to model_postgres, revive router
  * main: move iqHandler to pubsub_server
  * manage, not only retrieve, subscriptions & affiliations
  * use subscribe sender as notification listener
  * backend_pubsub: replace ternary operator
  * need to store listener in subscriptions...
  * backend_pubsub: implement RequestCache
  * new untested buddycloud discovery with backend_pubsub.coffee
  * retrieve <actor/> generalized, begin using authorizeFor
  * ns: add BUDDYCLOUD_V1 xmlns
  * postgres.sql schema: updated column for more tables, author column for items
  * retrieving node affiliations
  * retrieving node subscriptions, fixes
  * backend_postgres: syntax fixes
  * operation: Register should set affiliation & subscription
  * retrieving subscriptions & affiliations
  * retracting items
  * publishing & retrieving items works
  * begin item retrieving
  * subscribe & unsubscribe
  * fix backend_postgres (user is a Pg keyword, must be quoted as column name)
  * publishing works
  * lots of fixes
  * fix disco requests
  * fix, fix, fix
  * begin implementing register & publish implementation
  * mv src/operations.coffee src/local/operations.coffee
  * revive backend
  * primitive operations
  * mv controller.coffee operations.coffee
  * dead code TODO
  * fixes
  * rm old dead code
  * rename iqhandler to request
  * begin some refactoring
  * begin hooking up handlers with operations
  * xmpp/pubsub_server: indicate operation types
  * notes
  * pubsub_server: PubsubOwnerHandlers
  * pubsub_server: flesh out more pubsub handlers
  * add affiliations checking
  * begin interweaving with local operations
  * a tad of interconnecting
  * pubsub_server: DiscoInfoHandler.reply()
  * xmpp client 'n stuff
  * README: draw new design
  * begin router
  * xmpp: move NS_* to ns.coffee
  * xmpp: primitive disco info works
  * begin iqhandler
  * xmpp/connection: port presence tracking
  * rm main.js
  * move src files around
  * rm model_couchdb from config, add preliminary main.coffee
  * a bit new controller
  * rm old test_controller
  * some controller work
  * old controller translated to coffeescript
  * port peripheral stuff over to coffeescript
  * README: change ejabberd port to the config default one
  * model_couchdb: s/doc.subscribers/doc.subscriptions/
  * xmpp_pubsub.js: fix typo
  * model_postgres: check nodeExists before any data modification
  * preliminary RSM (XEP-0059) implementation for retrieve-items/retrieve
  * model_couchdb: stub getUpdatesByTime()
  * MAM should result in direct message, not broadcast notification to all resources
  * MAM w/ working model_postgres backend
  * begin implementing MAM
  * controller: register/register should create /user/<jid>/subscriptions node
  * normalize fixes + tests
  * normalize
  * only one child element per item
  * model_postgres: fix setConfig()
  * model_postgres: listNodesByUser()
  * model_couchdb: listNodesByUser(), simplify listNodes()
  * controller, xmpp_pubsub: browse-nodes/by-user
  * model_postgres setConfig(): fixes
  * configuration notification
  * model_postgres setConfig(): do not set fields unspecified/without defaultConfig
  * model_postgres nodeExists(): indentation
  * controller: subscribe should not require preexisting affiliation
  * xmpp_pubsub: fix manage-subscriptions/retrieve result usage
  * controller: allow retrieving subscriptions & affiliations for members
  * xmpp_pubsub: syntax fix
  * model_postgres: fix queue pushing
  * xmpp_pubsub: fix info discovery reply FORM_TYPE
  * model_postgres: config fixes
  * more on extended config
  * model_couchdb, model_postgres: more flexible config schema
  * config: description, type, creationDate; setConfig() on create-node/register
  * xmpp_pubsub: optimize presence tracking
  * controller: requiredAffiliation='member' for config-node/retrieve
  * README: OpenFire
  * controller: defaultConfig() + use in feature 'config-node'
  * xmpp_pubsub: replace isOnline() with getOnlineResources()
  * model_postgres: fix transaction dequeueing
  * model_postgres: move cb() past process.nextTick/dbIsAvailable for safety
  * model_postgres: work around empty responses
  * test_controller: retract
  * xmpp_pubsub: disco <identity/> according to discovered @node
  * test_controller: browse-nodes
  * model_couchdb: fix preload() etag extraction + error reporting
  * xmpp_pubsub: FeatureNotImplemented message
  * controller: simulate a stack for debug info
  * test_controller: retract skeleton
  * controller unsubscribe: do not fetch affiliation from database but check by node path
  * implement & test unsubscribe
  * test_controller: skeletons
  * test_controller: publishing tests
  * test_controller: more publish testing + controller fix
  * test_controller: begin test publishing
  * model_postgres: fix forgotten variable
  * model_postgres: reconnect to database upon error
  * model_postgres: oops, syntax error
  * config.js.example: postgres is actually the one with a poolSize
  * model_postgres: oops, syntax errors
  * begin test_controller
  * fixes
  * subscriptionModified <message/>
  * xmpp_pubsub: "message" & approve() fixes
  * controller: replace ownerNotification with afterTransaction
  * access_model authorize
  * package.json & README
  * errors: pull inherits() from util/utils/sys for moving node api
  * browse open nodes with service discovery items
  * controller: refactor affiliations checking
  * xmpp_pubsub: fix subscriptions format
  * controller: treat missing accessModel as 'open'
  * model_couchdb: preload() etag fix
  * .gitignore with config.js
  * xmpp_pubsub: node config on disco info
  * model_couchdb: encodeURIComponent() only for db.head() & .get()
  * main.js: #!
  * rename config.js to config.js.example
  * restore default config.js
  * main.js: on uncaughtException
  * postgres doc & config
  * model_postgres
  * model_couchdb: fix item deserialization
  * model_couchdb: rm implemented TODOs
  * README: CouchDB configuration
  * README: TODO++
  * LICENSE
  * README: markdown fix
  * README: mention buddycloud :)
  * model_couchdb: fix views initialization
  * README & config
  * jabber:iq:register
  * model_couchdb: fixes
  * errors fixing
  * rm model_persistence
  * model_couchdb: assertNodeName()
  * main: catch uncaughtException
  * controller: fix
  * bugs, readability
  * model_couchdb: fixing
  * controller: implement affiliations checking
  * xmpp_pubsub: getAffiliations() result is now Array
  * model_couchdb: setSubscription() & setAffiliation() 'none'
  * model_couchdb: consolidate subscriptions & affiliations model
  * xmpp_pubsub: send notifications with type='headline'
  * xmpp_pubsub: subscribeIfNeeded() on <create/> & <subscribe/>
  * model_couchdb: load() shortcut when already cached
  * model_couchdb: createNode() fix
  * model_couchdb: preload()
  * model_couchdb: commit read documents too for integrity
  * model_couchdb: abstract views
  * CouchDB Optimistic Concurrency Control layer
  * controller: improve error propagation
  * defined error conditions
  * untested configuration getting/setting
  * service discovery
  * modify-affiliations
  * model_couchdb: getAffiliation()
  * begin permission checking infrastructure
  * presence probes
  * xmpp_pubsub: presence tracking
  * refactoring controller complete
  * continue refactoring controller into features/operations
  * begin refactoring controller into features/operations
  * subscribers
  * getting subscriptions & affiliations
  * createNode improvements
  * controller createNode: check node
  * model_couchdb: affiliations view
  * items getting
  * much more progress
  * implement retraction, s/notifySubscriber/notify/, s/writeItems/writeItem/
  * publish notification works
  * more frontend hooking
  * begin notification hooks
  * fixes
  * begin model_couchdb transactions
  * split model
  * some progress
  * some progress
  * createNode creates owner affiliation
  * model: indexes
  [ Thomas Jost ]
  * Add @denisw to contributors
  * Upgrade required node version to 0.8
  * We actually need remote subscriptions nodes
  * Merge branch 'feature/anon-fixes' into develop
  * Merge branch 'feature/really-validate-post-times' into develop
  * Reject remote posts with invalid dates
  * Add tests for remote posts with invalid dates
  * Force anon subscriptions to be temporary
  * Set default affiliation to 'none' for anon users
  * Merge branch 'feature/anon-fixes' into develop
  * Cleanup: remove some dead code
  * Purge remote nodes with no local subscription left
  * Merge branch 'feature/recent-items' into develop
  * Merge branch 'feature/validate-remote-items' into develop
  * Sort recent items by update time
  * Merge branch 'feature/validate-remote-items' into feature/recent-items
  * Fix tests that push remote items
  * Validate remote items
  * Add (failing) tests for invalid remote items
  * Implement recent items query
  * Add (failing) test for recent items query
  * PubSub replies can include several elements
  * Merge branch 'feature/pusher' into develop
  * Workaround callback woes
  * Fix MAM for pusher component
  * Pusher: test MAM
  * test_server: move makePublishIq into TestServer
  * Pusher: test node configuration
  * Pusher: test unsubscriptions
  * Merge branch 'feature/affiliations-fixes' into develop
  * Merge branch 'feature/pubsub-disco-features' into develop
  * Cleanup
  * Expose all implemented PubSub features
  * Pusher: test affiliations
  * Merge branch 'feature/affiliations-fixes' into feature/pusher
  * Fix affiliation in /subscriptions notifications
  * Accept PubSub-compliant affiliations notifications
  * Pusher: test subscriptions
  * Merge branch 'feature/fix-98' into develop
  * Fix SQL for updating replies
  * Add failing test for issue #98
  * Fix offline user cleanup
  * DB: drop anonymous column
  * Yet another federation test
  * Check if the example config file is valid JS
  * Add tests for pusher code
  * Pusher can MAM everything
  * Pusher is a listener for all notifications
  * Add config for pusher component
  * Merge branch 'feature/mam-fixes' into develop
  * Increase the default number of items in a MAM response
  * Make MAM return an error if there are too many results
  * Use RSM in MAM
  * Test MAM RSM
  * MAM: filter bad dates out
  * Test if MAM validates dates correctly
  * Ensure the giant MAM test doesn't pollute the test environment
  * Make affiliations notifications PubSub-compliant
  * Affiliations have update timestamps too
  * Avoid temporary subscriptions in MAM results
  * Advertise support for MAM in disco#info
  * Add a giant MAM test
  * Update Travis URL in README.md
  * Merge branch 'feature/tests' into develop
  * Correctly tests that updated items don't change <in-reply-to/>
  * Move tests on updated items to a different function
  * Add tests for updates that change <in-reply-to/>
  * Use Travis to automate testing
  * Merge branch 'master' into develop
  * Add compatibility with PostgreSQL 9.1
  * Require at least one item to retract
  * Add Emacs folding marks
  * Add retrieve and retract tests
  * Fix retraction stanza sent to remote services
  * Tombstones: include Atom namespace in <updated/> element
  * Fix error when not allowed to retract an item
  * Tombstones can't be updated
  * When publishing an update, check if the actor is the original author
  * Check if original post exists before publishing a reply
  * Reject posts from non-users
  * Don't include type in <actor/>
  * Complete post/update/retract tests
  * TestServer: fix Atom in-reply-to element
  * Fail when some unwanted event happens
  * Add description for calls to "should.exist"
  * Retraction tests
  * Workaround CoffeeScript weird scoping rules
  * Add another batch of tests
  * Update test data
  * Change the way the test server emits IQ stanzas
  * Tests for posting to remote channels
  * Test server: emit event for IQs with unknown ID
  * Test server: disco info for "remote" servers
  * More post tests
  * Add helper to run tests that trigger several different stanzas
  * Test server: handle <message/> stanzas
  * Add post tests
  * Post tests: helper to check if post was successful
  * Throw an exception when getting an unexpected error IQ
  * Start adding post tests
  * Add helpers for pubsub get IQs and Atom handling
  * Helpers to add initial test data in the database
  * Add XMPP namespaces to test_server.coffee
  * Reply to presence probes
  * Don't parse Elements again
  * Use same user and server names as in sfc
  * Safe path handling in prepare-db.sh
  * Add codo-like doc to the TestServer class
  * Add helpers to build disco and pubsub IQs
  * Expose support for PubSub node creation
  * Skip a test
  * More channel creation tests
  * New tests and helpers for forms
  * Add a helper to parse disco#info replies
  * Move common disco replies to test_server.coffee
  * Start testing for channel creation
  * Test server: handle disco#items queries
  * Make tests runnable using "npm test"
  * Basic disco tests
  * Start a test suite
  * Use an existing component connection if provided in config
  * Make it possible to require() the server
  * Update config.js.example
  * Fix autosubscribeNewUsers
  * Increase the max number of items in each RSM page
  * Better shrinking of oversized stanzas
  * Include `-dirty' in version number from git
  * Remove glob from dependencies
  * Fix indentation in main.coffee
  * Prevent existing persistent subscription from being made temporary
  * Merge branch 'feature/version-number-from-git' into develop
  * Expose support for XEP-0092 (Software Version) in disco
  * Use `git describe' to get version numbers in dev branches
  * Merge branch 'master' into next
  * Restore compatibility with Node 0.6
  * Fix handling of offline users
  * Avoid race condition in disco cache
  * Shrink oversized stanzas more aggressively
  * Avoid nulls
  * Include new files in release tarball
  * Avoid race condition in disco cache
  * Merge remote-tracking branch 'upstream/tempsub' into next
  * Merge branch 'db-versioning' into next
  * buddycloud-server 0.3.5
  * Check if remote supports temporary subscription before sending a tempsub request
  * Client can check for server features before sending an IQ
  * Make server features discoverable
  * Log errors when processing incoming messages
  * Cleanup
  * Remove empty text nodes from items
  * Fix ActivityStreams verb for replies
  * Include operation name in debug message
  * Don't notify unsubscribe when it was a temporary subscription
  * Offline user cleanup: do real unsubscribe operations
  * I'm dumb
  * Don't delete temporary subscriptions during sync
  * Don't send any notification for temporary subscriptions
  * Client and server must speak the same language
  * Only send notifications about temporary subscriptions to remote listeners
  * Cleanup offline users
  * Claim we support subscription options
  * Temporary subscriptions
  * Fix updating items
  * Add help channels to default autosubscriptions
  * Merge branch 'log-fix'
  * Inspect objets in log messages
  * Fix broken log messages
  * Don't write subscription stanzas in items table
  * Merge remote-tracking branch 'lloyd/config'
  * Populate in_reply_to column when inserting new items
  * DB cleanup at startup
  * Add README for DB schema versioning
  * Upgrade DB schema
  * Check DB schema version on startup
  * Don't change <published/> when updating an existing post
  * Fix subscription to remote private channels
  * Don't fail when the default config file does not exist
  * Add Lloyd in contributors
  * Better logging for replies sent by 'proxy' components
  * Merge branch 'mam-result'
  * Include <result/> in MAM replies
  * Merge remote-tracking branch 'schnouki/atom-tombstones'
  * Fix typo
  * Merge pull request #61 from lloydwatkin/no-mod_disco
  * Also send tombstones in retract notifications
  * Use Atom tombstones for deleted items
  * xmpp: XEP-0313 compliance
  * Handle PubSub retract "notify" attribute
  * operations: fix PushInbox notification
  * Fix undefined variable when paging backwards in RSM
  [ Tuomas Koski ]
  * Merge pull request #59 from lloydwatkin/initialise-sync
  * Merge pull request #58 from lloydwatkin/master
  [ Steven Lloyd Watkin ]
  * Ensure we do not cause BC breaks
  * Make both defaults positive rather than one positive & the other negative Broke the config options down further
  * Fix build console output
  * "package" now a reserved word in node, caused failing in builds (v0.6.15+)
  [ Denis Washington ]
  * Use local CoffeeScript "cake" for "npm install"
  [ Jonas Smedegaard ]
  * Setup access rights and needed dirs when starting daemon
  * Speedup system shutdown by avoiding explicit sysV stop
  * xmpp_pubsub: check for commandEl prior usage
  [ Reginald dude ]
  * updates sent via email from vorner.cz
  * updates sent via email from vorner.cz
  [ Reginald Dude ]
  * Most confusing config file ever
  [ ▟ ▖▟ ▖ ]
  * Merge pull request #70 from lloydwatkin/fix-is-function
  * Merge pull request #63 from lloydwatkin/no-mod_disco
  * Merge pull request #62 from lloydwatkin/no-mod_disco
  * Merge pull request #57 from Schnouki/xep-0313
  * Merge pull request #54 from Schnouki/fix-notif
  * Merge pull request #52 from lloydwatkin/master
  * Merge pull request #51 from lloydwatkin/master
  [ James Tait ]
  * Ensure both the PID dir and log dir are created on startup if they do not already exist.
  [ imaginator ]
  * aligning with INSTALL instructions
  * moved instructions to wiki
  * Edited README.md via GitHub
  [ dodo ]
  * fix accessModel of geo nodes
  * always test in production
  * buddycloud-server 0.3.4
  * Merge branch 'packaging'
  * put the /etc/init.d script into tarball
  * not needed anymore
  * default options for new channels
  * bump tarballify version
  * add bin/buddycloud-server to the tarball
  * no build step in bin/buddycloud-server anymore
  * print additional info messages in gray
  * fix 'file is not defined'
  * fix 'modName is not defined'
  * colorful output for package.js
  * bump tarballify version
  * rm trailing spaces
  * no build_binary.sh needed
  * separate devDependencies
  * export name
  * use packaging script
  * buddycloud-server 0.3.3
  * pass prefix to npm to force npm to use that particular prefix
  * $PREFIX/bin/buddycloud-server can be nonexistant .. so ignore all errors when removing
  * bump node version in build script
  * merge issue #37
  * specify interal config file as defaults, not as main config
  * backports to node 0.4
  * concat cwd path to config path only when config path is relative
  * respect the cwd
  * move to the right dir before builing
  * wscript is not needed anymore
  * merged #31. symlink detection for bin/buddycloud-server thanks to @highfellow
  * fixed gitignore
  * forgot Cakefile
  * pin node version for over 0.5 to get the require json working
  * get version directly
  * new buildsystem
  * check if config.syslog has keys
  * dont load default config over opts and args
  * main: fix config loading
  * wscript fixes
  * load config via jsconfig
  * update wscript
  * upgrade build environment
  * update requirements in readme
  * cleanup files
  [ Simon Tennant ]
  * Update config.js.example
  * change to read config file from /opt/buddycloud
  * Update master
  * don't be so --quiet (will help a lot with debugging)
  * Update _etc_init.d_buddycloud-server
  * the orwell defeault was causing jdesenberg problems.
  * Fixed the permissions to run as.
  * Update _etc_init.d_buddycloud-server
  * init script
  * make it really clear what to change (and what "jid" refers to)
  * Made the ownership of tables really clear. Should help avoid the problem that DD had the other day.
  [ Lloyd Watkin ]
  * Fix for checking of child element
  * Catch error event
  * Fix for server reset
  * Updated variable names to better describe what config does.
  * Merge branch 'master' of git://github.com/buddycloud/buddycloud-server into no-mod_disco
  * Allow buddycloud server to advertise additional 'proxy' components
  * Wait to sync
  * Rename of parameter
  * Allow user to specify a port or not, changed argument name as it may not actually be remote debugging.
  * Tidy up
  * Allow node.js debugging
  [ Simon ]
  * /etc/init.d/buddycloud-server

 -- Abmar Barros (buddycloud Nightly Builds) <abmar@buddycloud.com>  Sat, 26 Jan 2013 15:19:38 -0300


buddycloud-server (0.1) unstable; urgency=medium

  [ Astro ]
  * operations: all nodes in defaultConfiguration accessModel=authorize
  * operations: posts & subscriptions accessModel=authorize in defaultConfiguration
  * buddycloud-server 0.3.2
  * Cakefile: version.js + 

  * operations: fix run notifications control flow
  * build_binary.sh: get bin/buddycloud-server out of the way before npm i
  * buddycloud-server 0.3.1
  * package.json: honor all contributors
  * Merge remote-tracking branch 'schnouki/patch-1'
  * .npmignore: exclude debian/* from npm pkgs
  * buddycloud-server 0.3.0
  * package.json: bump dep versions
  * operations: prevent unsubscribing/demoting the node owner
  * operations: fix PushInbox callback
  * operations: run notifies first, then syncs, then calls back
  * pubsub_server: lower logging
  * operations: fix PushInbox newNodes
  * operations: move PushInbox syncNode post transaction
  * operations: PushInbox should work even if syncNode had hickups
  * operations: syncNode when PushInbox created it
  * operations: fix PushInbox notification & newModerators
  * model_postgres: fix & simplify purgeNode()
  * sync: fixes
  * sync: purge node if no local subscribers
  * purge node when local unsubscription is pushed from remote
  * operations: fix generateSubscriptionsNotifications followee
  * operations: fix PushInbox newModerators nodes
  * xmpp connection: doc, serialize stanzas only once
  * operations: NewModeratorNotify needs listener, not user
  * operations: fix NewModeratorNotify listener
  * operations: log Operation name
  * model_postgres: must quote "user" column for Postgres
  * operations: NewModeratorNotify must cb()
  * operations: Notify notifies w/ node
  * operations: fix Notify otherListeners
  * pubsub_client: rm debug
  * operations: NewModeratorNotify notifies w/ node & listener
  * model_postgres: optional Transaction callbacks
  * operations: fix Notify filterSubscription & filterAffiliation invokation
  * operations: fix this binding
  * operations: no pending subscriptions in subscriptions node
  * operations: NewModeratorNotify
  * operations: doc, filter subscriptions and affiliations for non-moderators
  * operations: reorganize
  * clean up logging
  * operations: posts node defaultAffiliation='publisher'
  * sync: fix AffiliationsSynchronization typo
  * buddycloud-server 0.2.3
  * package.json: fix install script
  * build_binary.sh: bump node.js version
  * buddycloud-server 0.2.2
  * package.json: add preinstall cake build
  * operations: fix notifications
  * build_binary.sh: bump node.js version
  * buddycloud-server 0.2.1
  * operations: fix Notify subscriptios node items
  * operations: fix Notify callback result
  * operations: BrowseNodeItems for subscriptions node calls getSubscriptions not getSubscription
  * operations: syntax fixes
  * operations: Notify subscriptions fixes
  * operations: subscriptions node notifications
  * operations: BrowseNodeItems for subscriptions node
  * sync: require errors
  * sync: avoid error output when omitting local node
  * router, sync: improve logging
  * backend_pubsub: PubsubBackend.notify listener robustness
  * operations: fix Subscribe defaultAffiliation
  * operations: fix ManageNodeAffiliations control flow
  * pubsub_server: PubsubOwnerSetAffiliationsRequest syntax fix
  * operations: fix requiredAffiliation()
  * operations: requiredAffiliation can be function to allow moderators approving topic channel subscribers
  * operations: ManageNodeSubscriptions refactor for efficiency
  * operations: ManageNodeSubscriptions should set new affiliations to defaultAffiliation
  * operations: fix Notify jid/user
  * operations: Notify should notify all users pertained by a subscription
  * operations: 'unsubscribe-node' notifies unsubscribed user
  * operations, pubsub_client: there's no "unsubscribed" subscription, only "none"
  * pubsub_server: PubsubOwnerSetSubscriptionsRequest syntax fix
  * operations: Unsubscribe needs PrivilegedOperation methods
  * operations: Unsubscribed is not a PrivilegedOperation but a ModelOperation
  * operations: fix callback scope
  * pubsub_server: robustify PubsubItemsRequest
  * operations: syntax
  * pubsub_server, operations: support for RetrieveItems by itemIds
  * build_binary.sh: bump node.js version to 0.6.10
  * buddycloud-server 0.2.0
  * operations: CreateNode should not allow creation with empty nodeUser username
  * operations: fix CreateNode defaults & creationDate
  * operations: fix CreateNode isTopic switcheroo
  * router: fix autosubscribeNewUsers operation name
  * router: autosubscribeNewUsers
  * config.js.example: default checkCreateNode hook checks for a specific topic domain
  * operations: fix CreateNode node typo
  * operations: fix CreateNode config
  * pubsub_server, operations: CreateNode with optional config
  * operations: fix CreateNode setSubscription()
  * operations: CreateNode catches missing checkCreateNode hook
  * operations: CreateNode default config
  * checkCreateNode config hook
  * model_postgres: fix getOwnersByNodePrefix SQL
  * operations: fix CreateNode setAffiliation()
  * operations: fix CreateNode getOwnersByNodePrefix()
  * operations: fix ../util require, CreateNode safety check
  * implement createNode with getOwnersByNodePrefix check
  * operations: begin creating topic channels
  * model_postgres: syntax fix
  * package.json: maintainer update
  * build_binary.sh: update to node 0.6.9
  * buddycloud-server 0.1.11
  * rsm_walk: fix logging
  * operations: checkAccessModel() before checkRequiredAffiliation()!
  * operations: Unsubscribe condition syntax fix
  * package.json: muffin dependency glob seems be incompatible in v3.*
  * operations: checkRequiredAffiliation should ignore no @requiredAffiliation
  * operations: fix isAffiliationAtLeast w/ invalid affiliation
  * jsconfig 0.2.0 is out! w00t!!!
  * Cakefile: lib/version.js from package.json
  * logger: update to ain2 1.0.0
  * main: fix config loading
  * buddycloud-server 0.1.10
  * router: fix syncServer()
  * buddycloud-server 0.1.9
  * bin/buddycloud-server: fix param quoting
  * bin/buddycloud-server: fix $cwd
  * buddycloud-server 0.1.8
  * .npmignore to package up built lib/* instead of src/*
  * build_binary.sh: install devDependencies beforehand
  * build_binary.sh: bump node.js version to 0.6.7
  * util: move getNodeUser(), getUserDomain()
  * main: "server successfully started"
  * sync: fix logging
  * model_postgres: fix writeItem() SQL parameter binding
  * sync: fix PaginatedSynchronization error callback
  * sync: rm TODO note
  * model_postgres: writeItem updated_query
  * operations: logging fixes
  * writeItem: move updated extraction from operations to model_postgres
  * model_postgres: writeItem should also INSERT existing updated value
  * model_postgres: fix syntax
  * model_postgres: SQL fixes
  * operations: PushInbox copies item published date
  * postgres schema: CREATE VIEW open_nodes + usage in model_postgres
  * model_postgres: fix query result handling
  * fix getTopFollowedNodes & getTopPublishedNodes parameters
  * model_postgres: fix SQL INTERVAL syntax
  * operations: BrowseNodes.fetchNodes() needs transaction
  * operations: BrowseNodes.transaction should use @fetchNodes()
  * operations: fetchNodes() typo
  * pubsub_server: browse /top-followed-nodes & /top-published-nodes does not request a particular node
  * getTopFollowedNodes & getTopPublishedNodes w/ XMPP disco interface
  * build_binary.sh: bump to node 0.6.6
  * buddycloud-server 0.1.7
  * package.json: rm cradle dependency
  * logger: syslog only with hostname
  * replace common-logger by underscore.logger
  * update ain2 dependency for node v0.6 compatibility
  * model_postgres walkListenerArchive: replace DISTINCT with GROUP BY
  * model_postgres: fix config order/limig
  * operations: ReplayArchive sorts results before capping
  * ReplayArchive/walkListenerArchive: properly cap result set
  * operations: ReplayArchive default max=50
  * build_binary.sh: use $PREFIX from environment if present
  * package.json: req node-stringprep >=0.1.1
  * router: fix
  * buddycloud-server 0.1.6
  * update to new node-waf paths
  * build_binary.sh: switch to node 0.6.4
  * package.json: depend on 0.3.1
  * router: RSM usage fix
  * logger: open logFile for appending, fixes issue #25
  * package.json: depend on node-xmpp >= 0.3.0
  * operations ReplayArchive: fix rsm max
  * operations: ReplayArchive RSM support
  * backend_pubsub: notificationPush updates include sender & actor
  * router: detectUserType fixes
  * router: detectUserType fixes
  * logger: fix argument iteration
  * main, backend_pubsub: logging improvements
  * backend_pubsub: include user in notfound error
  * connection: loopback stanzas to ourselves
  * router: add missing util.inspect include
  * router.run: trace req
  * router: add missing rsm include
  * logger: typo
  * logger: fix level
  * logging clean-up
  * router, pubsub_{server,client}: @type in <actor/>
  * buddycloud-server 0.1.5
  * router: sync fixes
  * buddycloud-server 0.1.4
  * ManageNodeAffiliations: non-owner may not elect a new owner
  * sync: log upon completion
  * sync: transaction fix
  * move some sync logic into router, lock per node
  * operations: BrowseNodeInfo/RetrieveNodeConfiguration w/o access control
  * buddycloud-server 0.1.3
  * operations: deny Unsubscribe from own nodes
  * logger: ain2 syslog transport
  * logger: message always as string
  * main: fix --stdout kludge
  * logger: avoid log level < 0
  * config.js.example: syslog on by default
  * config.js.example: logging section
  * syslog support with ain2
  * support --stdout logging
  * replace cnlogger by common-logger
  * buddycloud-server 0.1.2
  * build_binary: npm install globally (into /opt/buddycloud-server/)
  * build_binary: dedup node & npm versions
  * build_binary: default to /opt/buddycloud-server, bin/ script
  * main: process.title fix
  * version: fix package.json path
  * version from package.json in process.title and for jabber:iq:version
  * xmpp/connection: do not subscribe in probePresence()
  * buddycloud-server 0.1.1
  * build_binary: bump node & npm versions
  * backend_pubsub: reply() must also copy 'replay' field on MaxStanzaSizeExceeded
  * connection: more stanza output when MaxStanzaSizeExceeded
  * don't send ReplayArchive notifications to all online resources
  * pubsub_client/connection: wrap error replies into StanzaError earlier
  * logging fixes
  * port to cnlogger
  * port to broken winston logging
  * xmpp connection: always tell node-xmpp to reconnect
  * async.filter iterator does not take error parameter
  * model_postgres: fix nodeExists warning
  * backend_pubsub: fix notification matching
  * sync: fix router.authorizeFor() usage
  * sync: writeItem does not need author anymore
  * operations: typo
  * model_postgres: fix getListenerAffiliations() query
  * sync: careful
  * xmpp/forms: oops, s/creationTime/creationDate/
  * xmpp/connection: fix name
  * router: check for anonymous user to be online
  * anonymous user offline tracking & clean-up
  * model_postgres: fix walkListenerArchive() node in results
  * router: fix method binding
  * model_postgres: walkListenerArchive() should include node in results
  * operations: RemoveUser & model_postgres.getUserRemoteSubscriptions() & clearUserSubscriptions()
  * BuddycloudDiscovery::detectAnonymousUser
  * backend_pubsub: gracefully handle MaxStanzaSizeExceeded for notifications
  * xmpp pubsub_server & connection: fix graceful MaxStanzaSizeExceeded handling
  * errors: MaxStanzaSizeExceeded extends Error
  * operations: s/geoloc/geo/
  * operations: /subscription items shall contain jid=owner
  * metadata buddycloud#channel_type
  * proper metadata field names
  * support for creationDate
  * operations: clarify logging
  * router: fix remote backend selection
  * operations: Unsubscribe refactor & fix
  * operations: fix Register
  * buddycloud-server 0.1.0
  * operation: print opName on commit, rm debug
  * bin/buddycloud-server: don't cd so config can be loaded relatively
  * Merge remote-tracking branch 'origin/cli'
  * operations: RetractItems should allow anyone to remove their own posts
  * operations: preserve affiliation if previously affiliated
  * operations: unify into isAffiliationAtLeast()
  * operations: rm leftover TODO note
  * operations: refactor Register; should check if authoritative for user's domain
  * router.run: return 404 for nodes not locally subscribed but discovered ourselves
  * rm explicit author handling in postgres schema, model, operations
  * main: check sender authorization for authorizationPrompt
  * operations: RetrieveItems shall not virtualize items for cache case of remote nodes
  * Revert "Made the ownership of tables really clear. Should help avoid the problem that DD had the other day."
  * s/channel-server/buddycloud-server/g
  * build_binary.sh: fix invokation hint
  * README: rm some outdated stuff
  * main: fix defaultConfig stuff
  * build_binary.sh
  * operations: RetrieveItems.retrieveSubscriptionsItems() result set sorting, affiliations
  * virtual handling of /user/.../subscriptions node items
  * MAM replays subscription authorization requests
  * more authorization stuff
  * fixes
  * small fixes
  * package.json: fix bin path
  * further authorizationPrompt work
  * backend_pubsub: missedSomething was missing
  * package.json: fix coffeescript path (./node_modules/...)
  * sending authorize notification forms
  * package.json: fix .coffee compilation stage
  * operations: PrivilegedOperation.fetchActorAffilliation fetches all listener affiliations for inbox sync
  * pubsub_notifications: fix MAM stanzas
  * operations: subscribe defaultAffiliation, fixes
  * model_postgres: many fixes
  * operations: publishModel 'subscribers'
  * operations: access control fixes
  * begin access control, affiliations checking
  * model_postgres: fixes
  * errors: fix error classes
  * xmpp/connection: fix
  * xmpp/connection: fix @missedServerTimeouts usage
  * model_postgres: safety checks
  * readability, notes
  * rsm_walk: fix serious errors
  * globally refactor operation from function to value
  * sync: fixes
  * add forgotten rsm_walk file
  * move syncQueue from main.coffee to fine-grained sync.syncNode
  * xmpp/connection: readability
  * xmpp/connection: track <you-missed-something/> timers with @missedServerTimeouts
  * syncServer support, wired up to <you-missed-something/> 'syncNeeded'
  * model_postgres: for an actor, getSubscriptions() shall return not only users but also listeners
  * MAM time specification
  * primitive MAM implementation
  * send <you-missed-something/>
  * operations: PushInbox TODO note
  * sync: rm request.rsm.max clamp
  * synchronization with state resetting and subscriptions/affiliations support
  * pubsub_*: fix user/jid conventions
  * ConfigSynchronization should use browse-node-info to get node config
  * synchronizing!
  * synchronization kinda works, but hits RSM loops
  * further synchronization progress
  * begin synchronization
  * main: require async
  * measure stanza size, gracefully retry with smaller result set
  * synchronization groundwork
  * don't let backend_pubsub call router.runLocally(), return errors.SeeLocal() instead
  * errors: clean up
  * normalize: add <link rel="self" href="xmpp:...?pubsub;action=retrieve;..."/>
  * operations: Publish shall allow new items with specified @id
  * nodes browsing, with RSM
  * backend_pubsub: run() should bail out early on invalid node form
  * PostgreSQL tuning
  * complete RSM implementation
  * begin RSM for all operations
  * generify RSM stuff
  * pubsub_client: RSM
  * fixes from CCCamp11
  * RSM for local items retrieving
  * begin new RSM implementation
  * pubsub_server: publish-node-items shall reply with item ids
  * model_postgres: fix getNodeListeners() SQL
  * model_postgres: nodeExists() shall check for NOT NULL
  * model_postgres: getNodeListener() replace filter by SQL
  * model_postgres: getNodeListener() filter for null
  * model_postgres: fix setSubscription() INSERT w/o listener
  * error printout
  * forms: fix
  * operations: PushInbox author fix
  * debug
  * xml child robustness
  * model_postgres: fix nodeExists()
  * fix subscription listener for local users
  * logging cleanup
  * initiate presence tracking of users
  * xmpp/connection: use send() instead of specifying from jid
  * some logging cleanup
  * operations: push-inbox does not set subscription listener
  * fixes & TODO notes
  * operations: Notify.transaction() must call cb()
  * retrieve-node-configuration
  * forms: configToResultForm -> configToForm
  * pubsub_client: RetrieveNodeConfiguration & ManageNodeConfiguration
  * operations: catch reply cb exceptions
  * create-node operation
  * package.json: scripts
  * fixes
  * fix outgoing notifications
  * generify pubsub_notifications
  * many fixes for subscription pushing
  * router: if request writes, always go remote
  * push incoming notifications to local model
  * more subclassing of EventEmitter, incoming notifications handling
  * pubsub_server: unify PubsubRequest & PubsubOwnerRequest
  * merge request.coffee into pubsub_server.coffee
  * begin remote subscription pushing to local inbox
  * backend_pubsub: PubsubBackend.notify(): readability
  * tune to use single cb() instead of req.{reply,replyError}()
  * revive normalization
  * model_postgres: setSubscription(): coearce isSet to boolean
  * model_postgres: catch lost transactions
  * pubsub_client: error reporting, fix
  * subscribe reply status
  * model_postgres: setAffiliation() should check nodeExists()
  * fix disco.authorizeFor() usage
  * pubsub_client: fix <actor/> placement
  * refactor notifications a bit
  * pubsub_client: <actor/> placement fix
  * pubsub_client: fix <actor/> placement
  * pubsub_notifications: subscriptions/affiliations/config
  * fix registration/model callback parameters
  * operations: ManageNodeAffiliations validates accessModel & publishModel
  * setting configuration
  * fixes, fixes, config
  * only RegisterSetRequest should induce presence subscription
  * FIXME note
  * model_postgres: do not use rowCount
  * operations: Register created default configuration
  * pubsub_server: pubsub/inbox identity
  * fixes, StanzaError
  * implement pubsub_client operations
  * pubsub_notifications: byOperation()
  * fixes
  * fixes
  * fixes & debugging
  * fixes
  * debugging & fixes
  * fixes
  * begin discovering locally
  * fixes
  * Router.run: fix
  * fixes
  * operations: rename channel node to "posts"
  * begin notifications
  * a bit o' twiddling w/ subscription listeners
  * refactor router for remote requests
  * operations: subscribe/unsubscribe toggle affiliation none/member
  * router: rename frontend to backend
  * rename backend_postgres to model_postgres, revive router
  * main: move iqHandler to pubsub_server
  * manage, not only retrieve, subscriptions & affiliations
  * use subscribe sender as notification listener
  * backend_pubsub: replace ternary operator
  * need to store listener in subscriptions...
  * backend_pubsub: implement RequestCache
  * new untested buddycloud discovery with backend_pubsub.coffee
  * retrieve <actor/> generalized, begin using authorizeFor
  * ns: add BUDDYCLOUD_V1 xmlns
  * postgres.sql schema: updated column for more tables, author column for items
  * retrieving node affiliations
  * retrieving node subscriptions, fixes
  * backend_postgres: syntax fixes
  * operation: Register should set affiliation & subscription
  * retrieving subscriptions & affiliations
  * retracting items
  * publishing & retrieving items works
  * begin item retrieving
  * subscribe & unsubscribe
  * fix backend_postgres (user is a Pg keyword, must be quoted as column name)
  * publishing works
  * lots of fixes
  * fix disco requests
  * fix, fix, fix
  * begin implementing register & publish implementation
  * mv src/operations.coffee src/local/operations.coffee
  * revive backend
  * primitive operations
  * mv controller.coffee operations.coffee
  * dead code TODO
  * fixes
  * rm old dead code
  * rename iqhandler to request
  * begin some refactoring
  * begin hooking up handlers with operations
  * xmpp/pubsub_server: indicate operation types
  * notes
  * pubsub_server: PubsubOwnerHandlers
  * pubsub_server: flesh out more pubsub handlers
  * add affiliations checking
  * begin interweaving with local operations
  * a tad of interconnecting
  * pubsub_server: DiscoInfoHandler.reply()
  * xmpp client 'n stuff
  * README: draw new design
  * begin router
  * xmpp: move NS_* to ns.coffee
  * xmpp: primitive disco info works
  * begin iqhandler
  * xmpp/connection: port presence tracking
  * rm main.js
  * move src files around
  * rm model_couchdb from config, add preliminary main.coffee
  * a bit new controller
  * rm old test_controller
  * some controller work
  * old controller translated to coffeescript
  * port peripheral stuff over to coffeescript
  * README: change ejabberd port to the config default one
  * model_couchdb: s/doc.subscribers/doc.subscriptions/
  * xmpp_pubsub.js: fix typo
  * model_postgres: check nodeExists before any data modification
  * preliminary RSM (XEP-0059) implementation for retrieve-items/retrieve
  * model_couchdb: stub getUpdatesByTime()
  * MAM should result in direct message, not broadcast notification to all resources
  * MAM w/ working model_postgres backend
  * begin implementing MAM
  * controller: register/register should create /user/<jid>/subscriptions node
  * normalize fixes + tests
  * normalize
  * only one child element per item
  * model_postgres: fix setConfig()
  * model_postgres: listNodesByUser()
  * model_couchdb: listNodesByUser(), simplify listNodes()
  * controller, xmpp_pubsub: browse-nodes/by-user
  * model_postgres setConfig(): fixes
  * configuration notification
  * model_postgres setConfig(): do not set fields unspecified/without defaultConfig
  * model_postgres nodeExists(): indentation
  * controller: subscribe should not require preexisting affiliation
  * xmpp_pubsub: fix manage-subscriptions/retrieve result usage
  * controller: allow retrieving subscriptions & affiliations for members
  * xmpp_pubsub: syntax fix
  * model_postgres: fix queue pushing
  * xmpp_pubsub: fix info discovery reply FORM_TYPE
  * model_postgres: config fixes
  * more on extended config
  * model_couchdb, model_postgres: more flexible config schema
  * config: description, type, creationDate; setConfig() on create-node/register
  * xmpp_pubsub: optimize presence tracking
  * controller: requiredAffiliation='member' for config-node/retrieve
  * README: OpenFire
  * controller: defaultConfig() + use in feature 'config-node'
  * xmpp_pubsub: replace isOnline() with getOnlineResources()
  * model_postgres: fix transaction dequeueing
  * model_postgres: move cb() past process.nextTick/dbIsAvailable for safety
  * model_postgres: work around empty responses
  * test_controller: retract
  * xmpp_pubsub: disco <identity/> according to discovered @node
  * test_controller: browse-nodes
  * model_couchdb: fix preload() etag extraction + error reporting
  * xmpp_pubsub: FeatureNotImplemented message
  * controller: simulate a stack for debug info
  * test_controller: retract skeleton
  * controller unsubscribe: do not fetch affiliation from database but check by node path
  * implement & test unsubscribe
  * test_controller: skeletons
  * test_controller: publishing tests
  * test_controller: more publish testing + controller fix
  * test_controller: begin test publishing
  * model_postgres: fix forgotten variable
  * model_postgres: reconnect to database upon error
  * model_postgres: oops, syntax error
  * config.js.example: postgres is actually the one with a poolSize
  * model_postgres: oops, syntax errors
  * begin test_controller
  * fixes
  * subscriptionModified <message/>
  * xmpp_pubsub: "message" & approve() fixes
  * controller: replace ownerNotification with afterTransaction
  * access_model authorize
  * package.json & README
  * errors: pull inherits() from util/utils/sys for moving node api
  * browse open nodes with service discovery items
  * controller: refactor affiliations checking
  * xmpp_pubsub: fix subscriptions format
  * controller: treat missing accessModel as 'open'
  * model_couchdb: preload() etag fix
  * .gitignore with config.js
  * xmpp_pubsub: node config on disco info
  * model_couchdb: encodeURIComponent() only for db.head() & .get()
  * main.js: #!
  * rename config.js to config.js.example
  * restore default config.js
  * main.js: on uncaughtException
  * postgres doc & config
  * model_postgres
  * model_couchdb: fix item deserialization
  * model_couchdb: rm implemented TODOs
  * README: CouchDB configuration
  * README: TODO++
  * LICENSE
  * README: markdown fix
  * README: mention buddycloud :)
  * model_couchdb: fix views initialization
  * README & config
  * jabber:iq:register
  * model_couchdb: fixes
  * errors fixing
  * rm model_persistence
  * model_couchdb: assertNodeName()
  * main: catch uncaughtException
  * controller: fix
  * bugs, readability
  * model_couchdb: fixing
  * controller: implement affiliations checking
  * xmpp_pubsub: getAffiliations() result is now Array
  * model_couchdb: setSubscription() & setAffiliation() 'none'
  * model_couchdb: consolidate subscriptions & affiliations model
  * xmpp_pubsub: send notifications with type='headline'
  * xmpp_pubsub: subscribeIfNeeded() on <create/> & <subscribe/>
  * model_couchdb: load() shortcut when already cached
  * model_couchdb: createNode() fix
  * model_couchdb: preload()
  * model_couchdb: commit read documents too for integrity
  * model_couchdb: abstract views
  * CouchDB Optimistic Concurrency Control layer
  * controller: improve error propagation
  * defined error conditions
  * untested configuration getting/setting
  * service discovery
  * modify-affiliations
  * model_couchdb: getAffiliation()
  * begin permission checking infrastructure
  * presence probes
  * xmpp_pubsub: presence tracking
  * refactoring controller complete
  * continue refactoring controller into features/operations
  * begin refactoring controller into features/operations
  * subscribers
  * getting subscriptions & affiliations
  * createNode improvements
  * controller createNode: check node
  * model_couchdb: affiliations view
  * items getting
  * much more progress
  * implement retraction, s/notifySubscriber/notify/, s/writeItems/writeItem/
  * publish notification works
  * more frontend hooking
  * begin notification hooks
  * fixes
  * begin model_couchdb transactions
  * split model
  * some progress
  * some progress
  * createNode creates owner affiliation
  * model: indexes
  [ Thomas Jost ]
  * Add @denisw to contributors
  * Upgrade required node version to 0.8
  * We actually need remote subscriptions nodes
  * Merge branch 'feature/anon-fixes' into develop
  * Merge branch 'feature/really-validate-post-times' into develop
  * Reject remote posts with invalid dates
  * Add tests for remote posts with invalid dates
  * Force anon subscriptions to be temporary
  * Set default affiliation to 'none' for anon users
  * Merge branch 'feature/anon-fixes' into develop
  * Cleanup: remove some dead code
  * Purge remote nodes with no local subscription left
  * Merge branch 'feature/recent-items' into develop
  * Merge branch 'feature/validate-remote-items' into develop
  * Sort recent items by update time
  * Merge branch 'feature/validate-remote-items' into feature/recent-items
  * Fix tests that push remote items
  * Validate remote items
  * Add (failing) tests for invalid remote items
  * Implement recent items query
  * Add (failing) test for recent items query
  * PubSub replies can include several elements
  * Merge branch 'feature/pusher' into develop
  * Workaround callback woes
  * Fix MAM for pusher component
  * Pusher: test MAM
  * test_server: move makePublishIq into TestServer
  * Pusher: test node configuration
  * Pusher: test unsubscriptions
  * Merge branch 'feature/affiliations-fixes' into develop
  * Merge branch 'feature/pubsub-disco-features' into develop
  * Cleanup
  * Expose all implemented PubSub features
  * Pusher: test affiliations
  * Merge branch 'feature/affiliations-fixes' into feature/pusher
  * Fix affiliation in /subscriptions notifications
  * Accept PubSub-compliant affiliations notifications
  * Pusher: test subscriptions
  * Merge branch 'feature/fix-98' into develop
  * Fix SQL for updating replies
  * Add failing test for issue #98
  * Fix offline user cleanup
  * DB: drop anonymous column
  * Yet another federation test
  * Check if the example config file is valid JS
  * Add tests for pusher code
  * Pusher can MAM everything
  * Pusher is a listener for all notifications
  * Add config for pusher component
  * Merge branch 'feature/mam-fixes' into develop
  * Increase the default number of items in a MAM response
  * Make MAM return an error if there are too many results
  * Use RSM in MAM
  * Test MAM RSM
  * MAM: filter bad dates out
  * Test if MAM validates dates correctly
  * Ensure the giant MAM test doesn't pollute the test environment
  * Make affiliations notifications PubSub-compliant
  * Affiliations have update timestamps too
  * Avoid temporary subscriptions in MAM results
  * Advertise support for MAM in disco#info
  * Add a giant MAM test
  * Update Travis URL in README.md
  * Merge branch 'feature/tests' into develop
  * Correctly tests that updated items don't change <in-reply-to/>
  * Move tests on updated items to a different function
  * Add tests for updates that change <in-reply-to/>
  * Use Travis to automate testing
  * Merge branch 'master' into develop
  * Add compatibility with PostgreSQL 9.1
  * Require at least one item to retract
  * Add Emacs folding marks
  * Add retrieve and retract tests
  * Fix retraction stanza sent to remote services
  * Tombstones: include Atom namespace in <updated/> element
  * Fix error when not allowed to retract an item
  * Tombstones can't be updated
  * When publishing an update, check if the actor is the original author
  * Check if original post exists before publishing a reply
  * Reject posts from non-users
  * Don't include type in <actor/>
  * Complete post/update/retract tests
  * TestServer: fix Atom in-reply-to element
  * Fail when some unwanted event happens
  * Add description for calls to "should.exist"
  * Retraction tests
  * Workaround CoffeeScript weird scoping rules
  * Add another batch of tests
  * Update test data
  * Change the way the test server emits IQ stanzas
  * Tests for posting to remote channels
  * Test server: emit event for IQs with unknown ID
  * Test server: disco info for "remote" servers
  * More post tests
  * Add helper to run tests that trigger several different stanzas
  * Test server: handle <message/> stanzas
  * Add post tests
  * Post tests: helper to check if post was successful
  * Throw an exception when getting an unexpected error IQ
  * Start adding post tests
  * Add helpers for pubsub get IQs and Atom handling
  * Helpers to add initial test data in the database
  * Add XMPP namespaces to test_server.coffee
  * Reply to presence probes
  * Don't parse Elements again
  * Use same user and server names as in sfc
  * Safe path handling in prepare-db.sh
  * Add codo-like doc to the TestServer class
  * Add helpers to build disco and pubsub IQs
  * Expose support for PubSub node creation
  * Skip a test
  * More channel creation tests
  * New tests and helpers for forms
  * Add a helper to parse disco#info replies
  * Move common disco replies to test_server.coffee
  * Start testing for channel creation
  * Test server: handle disco#items queries
  * Make tests runnable using "npm test"
  * Basic disco tests
  * Start a test suite
  * Use an existing component connection if provided in config
  * Make it possible to require() the server
  * Update config.js.example
  * Fix autosubscribeNewUsers
  * Increase the max number of items in each RSM page
  * Better shrinking of oversized stanzas
  * Include `-dirty' in version number from git
  * Remove glob from dependencies
  * Fix indentation in main.coffee
  * Prevent existing persistent subscription from being made temporary
  * Merge branch 'feature/version-number-from-git' into develop
  * Expose support for XEP-0092 (Software Version) in disco
  * Use `git describe' to get version numbers in dev branches
  * Merge branch 'master' into next
  * Restore compatibility with Node 0.6
  * Fix handling of offline users
  * Avoid race condition in disco cache
  * Shrink oversized stanzas more aggressively
  * Avoid nulls
  * Include new files in release tarball
  * Avoid race condition in disco cache
  * Merge remote-tracking branch 'upstream/tempsub' into next
  * Merge branch 'db-versioning' into next
  * buddycloud-server 0.3.5
  * Check if remote supports temporary subscription before sending a tempsub request
  * Client can check for server features before sending an IQ
  * Make server features discoverable
  * Log errors when processing incoming messages
  * Cleanup
  * Remove empty text nodes from items
  * Fix ActivityStreams verb for replies
  * Include operation name in debug message
  * Don't notify unsubscribe when it was a temporary subscription
  * Offline user cleanup: do real unsubscribe operations
  * I'm dumb
  * Don't delete temporary subscriptions during sync
  * Don't send any notification for temporary subscriptions
  * Client and server must speak the same language
  * Only send notifications about temporary subscriptions to remote listeners
  * Cleanup offline users
  * Claim we support subscription options
  * Temporary subscriptions
  * Fix updating items
  * Add help channels to default autosubscriptions
  * Merge branch 'log-fix'
  * Inspect objets in log messages
  * Fix broken log messages
  * Don't write subscription stanzas in items table
  * Merge remote-tracking branch 'lloyd/config'
  * Populate in_reply_to column when inserting new items
  * DB cleanup at startup
  * Add README for DB schema versioning
  * Upgrade DB schema
  * Check DB schema version on startup
  * Don't change <published/> when updating an existing post
  * Fix subscription to remote private channels
  * Don't fail when the default config file does not exist
  * Add Lloyd in contributors
  * Better logging for replies sent by 'proxy' components
  * Merge branch 'mam-result'
  * Include <result/> in MAM replies
  * Merge remote-tracking branch 'schnouki/atom-tombstones'
  * Fix typo
  * Merge pull request #61 from lloydwatkin/no-mod_disco
  * Also send tombstones in retract notifications
  * Use Atom tombstones for deleted items
  * xmpp: XEP-0313 compliance
  * Handle PubSub retract "notify" attribute
  * operations: fix PushInbox notification
  * Fix undefined variable when paging backwards in RSM
  [ Tuomas Koski ]
  * Merge pull request #59 from lloydwatkin/initialise-sync
  * Merge pull request #58 from lloydwatkin/master
  [ Steven Lloyd Watkin ]
  * Ensure we do not cause BC breaks
  * Make both defaults positive rather than one positive & the other negative Broke the config options down further
  * Fix build console output
  * "package" now a reserved word in node, caused failing in builds (v0.6.15+)
  [ Denis Washington ]
  * Use local CoffeeScript "cake" for "npm install"
  [ Jonas Smedegaard ]
  * Setup access rights and needed dirs when starting daemon
  * Speedup system shutdown by avoiding explicit sysV stop
  * xmpp_pubsub: check for commandEl prior usage
  [ Reginald dude ]
  * updates sent via email from vorner.cz
  * updates sent via email from vorner.cz
  [ Reginald Dude ]
  * Most confusing config file ever
  [ ▟ ▖▟ ▖ ]
  * Merge pull request #70 from lloydwatkin/fix-is-function
  * Merge pull request #63 from lloydwatkin/no-mod_disco
  * Merge pull request #62 from lloydwatkin/no-mod_disco
  * Merge pull request #57 from Schnouki/xep-0313
  * Merge pull request #54 from Schnouki/fix-notif
  * Merge pull request #52 from lloydwatkin/master
  * Merge pull request #51 from lloydwatkin/master
  [ James Tait ]
  * Ensure both the PID dir and log dir are created on startup if they do not already exist.
  [ imaginator ]
  * aligning with INSTALL instructions
  * moved instructions to wiki
  * Edited README.md via GitHub
  [ dodo ]
  * fix accessModel of geo nodes
  * always test in production
  * buddycloud-server 0.3.4
  * Merge branch 'packaging'
  * put the /etc/init.d script into tarball
  * not needed anymore
  * default options for new channels
  * bump tarballify version
  * add bin/buddycloud-server to the tarball
  * no build step in bin/buddycloud-server anymore
  * print additional info messages in gray
  * fix 'file is not defined'
  * fix 'modName is not defined'
  * colorful output for package.js
  * bump tarballify version
  * rm trailing spaces
  * no build_binary.sh needed
  * separate devDependencies
  * export name
  * use packaging script
  * buddycloud-server 0.3.3
  * pass prefix to npm to force npm to use that particular prefix
  * $PREFIX/bin/buddycloud-server can be nonexistant .. so ignore all errors when removing
  * bump node version in build script
  * merge issue #37
  * specify interal config file as defaults, not as main config
  * backports to node 0.4
  * concat cwd path to config path only when config path is relative
  * respect the cwd
  * move to the right dir before builing
  * wscript is not needed anymore
  * merged #31. symlink detection for bin/buddycloud-server thanks to @highfellow
  * fixed gitignore
  * forgot Cakefile
  * pin node version for over 0.5 to get the require json working
  * get version directly
  * new buildsystem
  * check if config.syslog has keys
  * dont load default config over opts and args
  * main: fix config loading
  * wscript fixes
  * load config via jsconfig
  * update wscript
  * upgrade build environment
  * update requirements in readme
  * cleanup files
  [ Simon Tennant ]
  * Update config.js.example
  * change to read config file from /opt/buddycloud
  * Update master
  * don't be so --quiet (will help a lot with debugging)
  * Update _etc_init.d_buddycloud-server
  * the orwell defeault was causing jdesenberg problems.
  * Fixed the permissions to run as.
  * Update _etc_init.d_buddycloud-server
  * init script
  * make it really clear what to change (and what "jid" refers to)
  * Made the ownership of tables really clear. Should help avoid the problem that DD had the other day.
  [ Lloyd Watkin ]
  * Fix for checking of child element
  * Catch error event
  * Fix for server reset
  * Updated variable names to better describe what config does.
  * Merge branch 'master' of git://github.com/buddycloud/buddycloud-server into no-mod_disco
  * Allow buddycloud server to advertise additional 'proxy' components
  * Wait to sync
  * Rename of parameter
  * Allow user to specify a port or not, changed argument name as it may not actually be remote debugging.
  * Tidy up
  * Allow node.js debugging
  [ Simon ]
  * /etc/init.d/buddycloud-server

 -- Abmar Barros (buddycloud Nightly Builds) <abmar@buddycloud.com>  Sat, 26 Jan 2013 15:20:16 -0300


buddycloud-server (0.1) unstable; urgency=medium

  [ Astro ]
  * operations: all nodes in defaultConfiguration accessModel=authorize
  * operations: posts & subscriptions accessModel=authorize in defaultConfiguration
  * buddycloud-server 0.3.2
  * Cakefile: version.js + 

  * operations: fix run notifications control flow
  * build_binary.sh: get bin/buddycloud-server out of the way before npm i
  * buddycloud-server 0.3.1
  * package.json: honor all contributors
  * Merge remote-tracking branch 'schnouki/patch-1'
  * .npmignore: exclude debian/* from npm pkgs
  * buddycloud-server 0.3.0
  * package.json: bump dep versions
  * operations: prevent unsubscribing/demoting the node owner
  * operations: fix PushInbox callback
  * operations: run notifies first, then syncs, then calls back
  * pubsub_server: lower logging
  * operations: fix PushInbox newNodes
  * operations: move PushInbox syncNode post transaction
  * operations: PushInbox should work even if syncNode had hickups
  * operations: syncNode when PushInbox created it
  * operations: fix PushInbox notification & newModerators
  * model_postgres: fix & simplify purgeNode()
  * sync: fixes
  * sync: purge node if no local subscribers
  * purge node when local unsubscription is pushed from remote
  * operations: fix generateSubscriptionsNotifications followee
  * operations: fix PushInbox newModerators nodes
  * xmpp connection: doc, serialize stanzas only once
  * operations: NewModeratorNotify needs listener, not user
  * operations: fix NewModeratorNotify listener
  * operations: log Operation name
  * model_postgres: must quote "user" column for Postgres
  * operations: NewModeratorNotify must cb()
  * operations: Notify notifies w/ node
  * operations: fix Notify otherListeners
  * pubsub_client: rm debug
  * operations: NewModeratorNotify notifies w/ node & listener
  * model_postgres: optional Transaction callbacks
  * operations: fix Notify filterSubscription & filterAffiliation invokation
  * operations: fix this binding
  * operations: no pending subscriptions in subscriptions node
  * operations: NewModeratorNotify
  * operations: doc, filter subscriptions and affiliations for non-moderators
  * operations: reorganize
  * clean up logging
  * operations: posts node defaultAffiliation='publisher'
  * sync: fix AffiliationsSynchronization typo
  * buddycloud-server 0.2.3
  * package.json: fix install script
  * build_binary.sh: bump node.js version
  * buddycloud-server 0.2.2
  * package.json: add preinstall cake build
  * operations: fix notifications
  * build_binary.sh: bump node.js version
  * buddycloud-server 0.2.1
  * operations: fix Notify subscriptios node items
  * operations: fix Notify callback result
  * operations: BrowseNodeItems for subscriptions node calls getSubscriptions not getSubscription
  * operations: syntax fixes
  * operations: Notify subscriptions fixes
  * operations: subscriptions node notifications
  * operations: BrowseNodeItems for subscriptions node
  * sync: require errors
  * sync: avoid error output when omitting local node
  * router, sync: improve logging
  * backend_pubsub: PubsubBackend.notify listener robustness
  * operations: fix Subscribe defaultAffiliation
  * operations: fix ManageNodeAffiliations control flow
  * pubsub_server: PubsubOwnerSetAffiliationsRequest syntax fix
  * operations: fix requiredAffiliation()
  * operations: requiredAffiliation can be function to allow moderators approving topic channel subscribers
  * operations: ManageNodeSubscriptions refactor for efficiency
  * operations: ManageNodeSubscriptions should set new affiliations to defaultAffiliation
  * operations: fix Notify jid/user
  * operations: Notify should notify all users pertained by a subscription
  * operations: 'unsubscribe-node' notifies unsubscribed user
  * operations, pubsub_client: there's no "unsubscribed" subscription, only "none"
  * pubsub_server: PubsubOwnerSetSubscriptionsRequest syntax fix
  * operations: Unsubscribe needs PrivilegedOperation methods
  * operations: Unsubscribed is not a PrivilegedOperation but a ModelOperation
  * operations: fix callback scope
  * pubsub_server: robustify PubsubItemsRequest
  * operations: syntax
  * pubsub_server, operations: support for RetrieveItems by itemIds
  * build_binary.sh: bump node.js version to 0.6.10
  * buddycloud-server 0.2.0
  * operations: CreateNode should not allow creation with empty nodeUser username
  * operations: fix CreateNode defaults & creationDate
  * operations: fix CreateNode isTopic switcheroo
  * router: fix autosubscribeNewUsers operation name
  * router: autosubscribeNewUsers
  * config.js.example: default checkCreateNode hook checks for a specific topic domain
  * operations: fix CreateNode node typo
  * operations: fix CreateNode config
  * pubsub_server, operations: CreateNode with optional config
  * operations: fix CreateNode setSubscription()
  * operations: CreateNode catches missing checkCreateNode hook
  * operations: CreateNode default config
  * checkCreateNode config hook
  * model_postgres: fix getOwnersByNodePrefix SQL
  * operations: fix CreateNode setAffiliation()
  * operations: fix CreateNode getOwnersByNodePrefix()
  * operations: fix ../util require, CreateNode safety check
  * implement createNode with getOwnersByNodePrefix check
  * operations: begin creating topic channels
  * model_postgres: syntax fix
  * package.json: maintainer update
  * build_binary.sh: update to node 0.6.9
  * buddycloud-server 0.1.11
  * rsm_walk: fix logging
  * operations: checkAccessModel() before checkRequiredAffiliation()!
  * operations: Unsubscribe condition syntax fix
  * package.json: muffin dependency glob seems be incompatible in v3.*
  * operations: checkRequiredAffiliation should ignore no @requiredAffiliation
  * operations: fix isAffiliationAtLeast w/ invalid affiliation
  * jsconfig 0.2.0 is out! w00t!!!
  * Cakefile: lib/version.js from package.json
  * logger: update to ain2 1.0.0
  * main: fix config loading
  * buddycloud-server 0.1.10
  * router: fix syncServer()
  * buddycloud-server 0.1.9
  * bin/buddycloud-server: fix param quoting
  * bin/buddycloud-server: fix $cwd
  * buddycloud-server 0.1.8
  * .npmignore to package up built lib/* instead of src/*
  * build_binary.sh: install devDependencies beforehand
  * build_binary.sh: bump node.js version to 0.6.7
  * util: move getNodeUser(), getUserDomain()
  * main: "server successfully started"
  * sync: fix logging
  * model_postgres: fix writeItem() SQL parameter binding
  * sync: fix PaginatedSynchronization error callback
  * sync: rm TODO note
  * model_postgres: writeItem updated_query
  * operations: logging fixes
  * writeItem: move updated extraction from operations to model_postgres
  * model_postgres: writeItem should also INSERT existing updated value
  * model_postgres: fix syntax
  * model_postgres: SQL fixes
  * operations: PushInbox copies item published date
  * postgres schema: CREATE VIEW open_nodes + usage in model_postgres
  * model_postgres: fix query result handling
  * fix getTopFollowedNodes & getTopPublishedNodes parameters
  * model_postgres: fix SQL INTERVAL syntax
  * operations: BrowseNodes.fetchNodes() needs transaction
  * operations: BrowseNodes.transaction should use @fetchNodes()
  * operations: fetchNodes() typo
  * pubsub_server: browse /top-followed-nodes & /top-published-nodes does not request a particular node
  * getTopFollowedNodes & getTopPublishedNodes w/ XMPP disco interface
  * build_binary.sh: bump to node 0.6.6
  * buddycloud-server 0.1.7
  * package.json: rm cradle dependency
  * logger: syslog only with hostname
  * replace common-logger by underscore.logger
  * update ain2 dependency for node v0.6 compatibility
  * model_postgres walkListenerArchive: replace DISTINCT with GROUP BY
  * model_postgres: fix config order/limig
  * operations: ReplayArchive sorts results before capping
  * ReplayArchive/walkListenerArchive: properly cap result set
  * operations: ReplayArchive default max=50
  * build_binary.sh: use $PREFIX from environment if present
  * package.json: req node-stringprep >=0.1.1
  * router: fix
  * buddycloud-server 0.1.6
  * update to new node-waf paths
  * build_binary.sh: switch to node 0.6.4
  * package.json: depend on 0.3.1
  * router: RSM usage fix
  * logger: open logFile for appending, fixes issue #25
  * package.json: depend on node-xmpp >= 0.3.0
  * operations ReplayArchive: fix rsm max
  * operations: ReplayArchive RSM support
  * backend_pubsub: notificationPush updates include sender & actor
  * router: detectUserType fixes
  * router: detectUserType fixes
  * logger: fix argument iteration
  * main, backend_pubsub: logging improvements
  * backend_pubsub: include user in notfound error
  * connection: loopback stanzas to ourselves
  * router: add missing util.inspect include
  * router.run: trace req
  * router: add missing rsm include
  * logger: typo
  * logger: fix level
  * logging clean-up
  * router, pubsub_{server,client}: @type in <actor/>
  * buddycloud-server 0.1.5
  * router: sync fixes
  * buddycloud-server 0.1.4
  * ManageNodeAffiliations: non-owner may not elect a new owner
  * sync: log upon completion
  * sync: transaction fix
  * move some sync logic into router, lock per node
  * operations: BrowseNodeInfo/RetrieveNodeConfiguration w/o access control
  * buddycloud-server 0.1.3
  * operations: deny Unsubscribe from own nodes
  * logger: ain2 syslog transport
  * logger: message always as string
  * main: fix --stdout kludge
  * logger: avoid log level < 0
  * config.js.example: syslog on by default
  * config.js.example: logging section
  * syslog support with ain2
  * support --stdout logging
  * replace cnlogger by common-logger
  * buddycloud-server 0.1.2
  * build_binary: npm install globally (into /opt/buddycloud-server/)
  * build_binary: dedup node & npm versions
  * build_binary: default to /opt/buddycloud-server, bin/ script
  * main: process.title fix
  * version: fix package.json path
  * version from package.json in process.title and for jabber:iq:version
  * xmpp/connection: do not subscribe in probePresence()
  * buddycloud-server 0.1.1
  * build_binary: bump node & npm versions
  * backend_pubsub: reply() must also copy 'replay' field on MaxStanzaSizeExceeded
  * connection: more stanza output when MaxStanzaSizeExceeded
  * don't send ReplayArchive notifications to all online resources
  * pubsub_client/connection: wrap error replies into StanzaError earlier
  * logging fixes
  * port to cnlogger
  * port to broken winston logging
  * xmpp connection: always tell node-xmpp to reconnect
  * async.filter iterator does not take error parameter
  * model_postgres: fix nodeExists warning
  * backend_pubsub: fix notification matching
  * sync: fix router.authorizeFor() usage
  * sync: writeItem does not need author anymore
  * operations: typo
  * model_postgres: fix getListenerAffiliations() query
  * sync: careful
  * xmpp/forms: oops, s/creationTime/creationDate/
  * xmpp/connection: fix name
  * router: check for anonymous user to be online
  * anonymous user offline tracking & clean-up
  * model_postgres: fix walkListenerArchive() node in results
  * router: fix method binding
  * model_postgres: walkListenerArchive() should include node in results
  * operations: RemoveUser & model_postgres.getUserRemoteSubscriptions() & clearUserSubscriptions()
  * BuddycloudDiscovery::detectAnonymousUser
  * backend_pubsub: gracefully handle MaxStanzaSizeExceeded for notifications
  * xmpp pubsub_server & connection: fix graceful MaxStanzaSizeExceeded handling
  * errors: MaxStanzaSizeExceeded extends Error
  * operations: s/geoloc/geo/
  * operations: /subscription items shall contain jid=owner
  * metadata buddycloud#channel_type
  * proper metadata field names
  * support for creationDate
  * operations: clarify logging
  * router: fix remote backend selection
  * operations: Unsubscribe refactor & fix
  * operations: fix Register
  * buddycloud-server 0.1.0
  * operation: print opName on commit, rm debug
  * bin/buddycloud-server: don't cd so config can be loaded relatively
  * Merge remote-tracking branch 'origin/cli'
  * operations: RetractItems should allow anyone to remove their own posts
  * operations: preserve affiliation if previously affiliated
  * operations: unify into isAffiliationAtLeast()
  * operations: rm leftover TODO note
  * operations: refactor Register; should check if authoritative for user's domain
  * router.run: return 404 for nodes not locally subscribed but discovered ourselves
  * rm explicit author handling in postgres schema, model, operations
  * main: check sender authorization for authorizationPrompt
  * operations: RetrieveItems shall not virtualize items for cache case of remote nodes
  * Revert "Made the ownership of tables really clear. Should help avoid the problem that DD had the other day."
  * s/channel-server/buddycloud-server/g
  * build_binary.sh: fix invokation hint
  * README: rm some outdated stuff
  * main: fix defaultConfig stuff
  * build_binary.sh
  * operations: RetrieveItems.retrieveSubscriptionsItems() result set sorting, affiliations
  * virtual handling of /user/.../subscriptions node items
  * MAM replays subscription authorization requests
  * more authorization stuff
  * fixes
  * small fixes
  * package.json: fix bin path
  * further authorizationPrompt work
  * backend_pubsub: missedSomething was missing
  * package.json: fix coffeescript path (./node_modules/...)
  * sending authorize notification forms
  * package.json: fix .coffee compilation stage
  * operations: PrivilegedOperation.fetchActorAffilliation fetches all listener affiliations for inbox sync
  * pubsub_notifications: fix MAM stanzas
  * operations: subscribe defaultAffiliation, fixes
  * model_postgres: many fixes
  * operations: publishModel 'subscribers'
  * operations: access control fixes
  * begin access control, affiliations checking
  * model_postgres: fixes
  * errors: fix error classes
  * xmpp/connection: fix
  * xmpp/connection: fix @missedServerTimeouts usage
  * model_postgres: safety checks
  * readability, notes
  * rsm_walk: fix serious errors
  * globally refactor operation from function to value
  * sync: fixes
  * add forgotten rsm_walk file
  * move syncQueue from main.coffee to fine-grained sync.syncNode
  * xmpp/connection: readability
  * xmpp/connection: track <you-missed-something/> timers with @missedServerTimeouts
  * syncServer support, wired up to <you-missed-something/> 'syncNeeded'
  * model_postgres: for an actor, getSubscriptions() shall return not only users but also listeners
  * MAM time specification
  * primitive MAM implementation
  * send <you-missed-something/>
  * operations: PushInbox TODO note
  * sync: rm request.rsm.max clamp
  * synchronization with state resetting and subscriptions/affiliations support
  * pubsub_*: fix user/jid conventions
  * ConfigSynchronization should use browse-node-info to get node config
  * synchronizing!
  * synchronization kinda works, but hits RSM loops
  * further synchronization progress
  * begin synchronization
  * main: require async
  * measure stanza size, gracefully retry with smaller result set
  * synchronization groundwork
  * don't let backend_pubsub call router.runLocally(), return errors.SeeLocal() instead
  * errors: clean up
  * normalize: add <link rel="self" href="xmpp:...?pubsub;action=retrieve;..."/>
  * operations: Publish shall allow new items with specified @id
  * nodes browsing, with RSM
  * backend_pubsub: run() should bail out early on invalid node form
  * PostgreSQL tuning
  * complete RSM implementation
  * begin RSM for all operations
  * generify RSM stuff
  * pubsub_client: RSM
  * fixes from CCCamp11
  * RSM for local items retrieving
  * begin new RSM implementation
  * pubsub_server: publish-node-items shall reply with item ids
  * model_postgres: fix getNodeListeners() SQL
  * model_postgres: nodeExists() shall check for NOT NULL
  * model_postgres: getNodeListener() replace filter by SQL
  * model_postgres: getNodeListener() filter for null
  * model_postgres: fix setSubscription() INSERT w/o listener
  * error printout
  * forms: fix
  * operations: PushInbox author fix
  * debug
  * xml child robustness
  * model_postgres: fix nodeExists()
  * fix subscription listener for local users
  * logging cleanup
  * initiate presence tracking of users
  * xmpp/connection: use send() instead of specifying from jid
  * some logging cleanup
  * operations: push-inbox does not set subscription listener
  * fixes & TODO notes
  * operations: Notify.transaction() must call cb()
  * retrieve-node-configuration
  * forms: configToResultForm -> configToForm
  * pubsub_client: RetrieveNodeConfiguration & ManageNodeConfiguration
  * operations: catch reply cb exceptions
  * create-node operation
  * package.json: scripts
  * fixes
  * fix outgoing notifications
  * generify pubsub_notifications
  * many fixes for subscription pushing
  * router: if request writes, always go remote
  * push incoming notifications to local model
  * more subclassing of EventEmitter, incoming notifications handling
  * pubsub_server: unify PubsubRequest & PubsubOwnerRequest
  * merge request.coffee into pubsub_server.coffee
  * begin remote subscription pushing to local inbox
  * backend_pubsub: PubsubBackend.notify(): readability
  * tune to use single cb() instead of req.{reply,replyError}()
  * revive normalization
  * model_postgres: setSubscription(): coearce isSet to boolean
  * model_postgres: catch lost transactions
  * pubsub_client: error reporting, fix
  * subscribe reply status
  * model_postgres: setAffiliation() should check nodeExists()
  * fix disco.authorizeFor() usage
  * pubsub_client: fix <actor/> placement
  * refactor notifications a bit
  * pubsub_client: <actor/> placement fix
  * pubsub_client: fix <actor/> placement
  * pubsub_notifications: subscriptions/affiliations/config
  * fix registration/model callback parameters
  * operations: ManageNodeAffiliations validates accessModel & publishModel
  * setting configuration
  * fixes, fixes, config
  * only RegisterSetRequest should induce presence subscription
  * FIXME note
  * model_postgres: do not use rowCount
  * operations: Register created default configuration
  * pubsub_server: pubsub/inbox identity
  * fixes, StanzaError
  * implement pubsub_client operations
  * pubsub_notifications: byOperation()
  * fixes
  * fixes
  * fixes & debugging
  * fixes
  * debugging & fixes
  * fixes
  * begin discovering locally
  * fixes
  * Router.run: fix
  * fixes
  * operations: rename channel node to "posts"
  * begin notifications
  * a bit o' twiddling w/ subscription listeners
  * refactor router for remote requests
  * operations: subscribe/unsubscribe toggle affiliation none/member
  * router: rename frontend to backend
  * rename backend_postgres to model_postgres, revive router
  * main: move iqHandler to pubsub_server
  * manage, not only retrieve, subscriptions & affiliations
  * use subscribe sender as notification listener
  * backend_pubsub: replace ternary operator
  * need to store listener in subscriptions...
  * backend_pubsub: implement RequestCache
  * new untested buddycloud discovery with backend_pubsub.coffee
  * retrieve <actor/> generalized, begin using authorizeFor
  * ns: add BUDDYCLOUD_V1 xmlns
  * postgres.sql schema: updated column for more tables, author column for items
  * retrieving node affiliations
  * retrieving node subscriptions, fixes
  * backend_postgres: syntax fixes
  * operation: Register should set affiliation & subscription
  * retrieving subscriptions & affiliations
  * retracting items
  * publishing & retrieving items works
  * begin item retrieving
  * subscribe & unsubscribe
  * fix backend_postgres (user is a Pg keyword, must be quoted as column name)
  * publishing works
  * lots of fixes
  * fix disco requests
  * fix, fix, fix
  * begin implementing register & publish implementation
  * mv src/operations.coffee src/local/operations.coffee
  * revive backend
  * primitive operations
  * mv controller.coffee operations.coffee
  * dead code TODO
  * fixes
  * rm old dead code
  * rename iqhandler to request
  * begin some refactoring
  * begin hooking up handlers with operations
  * xmpp/pubsub_server: indicate operation types
  * notes
  * pubsub_server: PubsubOwnerHandlers
  * pubsub_server: flesh out more pubsub handlers
  * add affiliations checking
  * begin interweaving with local operations
  * a tad of interconnecting
  * pubsub_server: DiscoInfoHandler.reply()
  * xmpp client 'n stuff
  * README: draw new design
  * begin router
  * xmpp: move NS_* to ns.coffee
  * xmpp: primitive disco info works
  * begin iqhandler
  * xmpp/connection: port presence tracking
  * rm main.js
  * move src files around
  * rm model_couchdb from config, add preliminary main.coffee
  * a bit new controller
  * rm old test_controller
  * some controller work
  * old controller translated to coffeescript
  * port peripheral stuff over to coffeescript
  * README: change ejabberd port to the config default one
  * model_couchdb: s/doc.subscribers/doc.subscriptions/
  * xmpp_pubsub.js: fix typo
  * model_postgres: check nodeExists before any data modification
  * preliminary RSM (XEP-0059) implementation for retrieve-items/retrieve
  * model_couchdb: stub getUpdatesByTime()
  * MAM should result in direct message, not broadcast notification to all resources
  * MAM w/ working model_postgres backend
  * begin implementing MAM
  * controller: register/register should create /user/<jid>/subscriptions node
  * normalize fixes + tests
  * normalize
  * only one child element per item
  * model_postgres: fix setConfig()
  * model_postgres: listNodesByUser()
  * model_couchdb: listNodesByUser(), simplify listNodes()
  * controller, xmpp_pubsub: browse-nodes/by-user
  * model_postgres setConfig(): fixes
  * configuration notification
  * model_postgres setConfig(): do not set fields unspecified/without defaultConfig
  * model_postgres nodeExists(): indentation
  * controller: subscribe should not require preexisting affiliation
  * xmpp_pubsub: fix manage-subscriptions/retrieve result usage
  * controller: allow retrieving subscriptions & affiliations for members
  * xmpp_pubsub: syntax fix
  * model_postgres: fix queue pushing
  * xmpp_pubsub: fix info discovery reply FORM_TYPE
  * model_postgres: config fixes
  * more on extended config
  * model_couchdb, model_postgres: more flexible config schema
  * config: description, type, creationDate; setConfig() on create-node/register
  * xmpp_pubsub: optimize presence tracking
  * controller: requiredAffiliation='member' for config-node/retrieve
  * README: OpenFire
  * controller: defaultConfig() + use in feature 'config-node'
  * xmpp_pubsub: replace isOnline() with getOnlineResources()
  * model_postgres: fix transaction dequeueing
  * model_postgres: move cb() past process.nextTick/dbIsAvailable for safety
  * model_postgres: work around empty responses
  * test_controller: retract
  * xmpp_pubsub: disco <identity/> according to discovered @node
  * test_controller: browse-nodes
  * model_couchdb: fix preload() etag extraction + error reporting
  * xmpp_pubsub: FeatureNotImplemented message
  * controller: simulate a stack for debug info
  * test_controller: retract skeleton
  * controller unsubscribe: do not fetch affiliation from database but check by node path
  * implement & test unsubscribe
  * test_controller: skeletons
  * test_controller: publishing tests
  * test_controller: more publish testing + controller fix
  * test_controller: begin test publishing
  * model_postgres: fix forgotten variable
  * model_postgres: reconnect to database upon error
  * model_postgres: oops, syntax error
  * config.js.example: postgres is actually the one with a poolSize
  * model_postgres: oops, syntax errors
  * begin test_controller
  * fixes
  * subscriptionModified <message/>
  * xmpp_pubsub: "message" & approve() fixes
  * controller: replace ownerNotification with afterTransaction
  * access_model authorize
  * package.json & README
  * errors: pull inherits() from util/utils/sys for moving node api
  * browse open nodes with service discovery items
  * controller: refactor affiliations checking
  * xmpp_pubsub: fix subscriptions format
  * controller: treat missing accessModel as 'open'
  * model_couchdb: preload() etag fix
  * .gitignore with config.js
  * xmpp_pubsub: node config on disco info
  * model_couchdb: encodeURIComponent() only for db.head() & .get()
  * main.js: #!
  * rename config.js to config.js.example
  * restore default config.js
  * main.js: on uncaughtException
  * postgres doc & config
  * model_postgres
  * model_couchdb: fix item deserialization
  * model_couchdb: rm implemented TODOs
  * README: CouchDB configuration
  * README: TODO++
  * LICENSE
  * README: markdown fix
  * README: mention buddycloud :)
  * model_couchdb: fix views initialization
  * README & config
  * jabber:iq:register
  * model_couchdb: fixes
  * errors fixing
  * rm model_persistence
  * model_couchdb: assertNodeName()
  * main: catch uncaughtException
  * controller: fix
  * bugs, readability
  * model_couchdb: fixing
  * controller: implement affiliations checking
  * xmpp_pubsub: getAffiliations() result is now Array
  * model_couchdb: setSubscription() & setAffiliation() 'none'
  * model_couchdb: consolidate subscriptions & affiliations model
  * xmpp_pubsub: send notifications with type='headline'
  * xmpp_pubsub: subscribeIfNeeded() on <create/> & <subscribe/>
  * model_couchdb: load() shortcut when already cached
  * model_couchdb: createNode() fix
  * model_couchdb: preload()
  * model_couchdb: commit read documents too for integrity
  * model_couchdb: abstract views
  * CouchDB Optimistic Concurrency Control layer
  * controller: improve error propagation
  * defined error conditions
  * untested configuration getting/setting
  * service discovery
  * modify-affiliations
  * model_couchdb: getAffiliation()
  * begin permission checking infrastructure
  * presence probes
  * xmpp_pubsub: presence tracking
  * refactoring controller complete
  * continue refactoring controller into features/operations
  * begin refactoring controller into features/operations
  * subscribers
  * getting subscriptions & affiliations
  * createNode improvements
  * controller createNode: check node
  * model_couchdb: affiliations view
  * items getting
  * much more progress
  * implement retraction, s/notifySubscriber/notify/, s/writeItems/writeItem/
  * publish notification works
  * more frontend hooking
  * begin notification hooks
  * fixes
  * begin model_couchdb transactions
  * split model
  * some progress
  * some progress
  * createNode creates owner affiliation
  * model: indexes
  [ Thomas Jost ]
  * Add @denisw to contributors
  * Upgrade required node version to 0.8
  * We actually need remote subscriptions nodes
  * Merge branch 'feature/anon-fixes' into develop
  * Merge branch 'feature/really-validate-post-times' into develop
  * Reject remote posts with invalid dates
  * Add tests for remote posts with invalid dates
  * Force anon subscriptions to be temporary
  * Set default affiliation to 'none' for anon users
  * Merge branch 'feature/anon-fixes' into develop
  * Cleanup: remove some dead code
  * Purge remote nodes with no local subscription left
  * Merge branch 'feature/recent-items' into develop
  * Merge branch 'feature/validate-remote-items' into develop
  * Sort recent items by update time
  * Merge branch 'feature/validate-remote-items' into feature/recent-items
  * Fix tests that push remote items
  * Validate remote items
  * Add (failing) tests for invalid remote items
  * Implement recent items query
  * Add (failing) test for recent items query
  * PubSub replies can include several elements
  * Merge branch 'feature/pusher' into develop
  * Workaround callback woes
  * Fix MAM for pusher component
  * Pusher: test MAM
  * test_server: move makePublishIq into TestServer
  * Pusher: test node configuration
  * Pusher: test unsubscriptions
  * Merge branch 'feature/affiliations-fixes' into develop
  * Merge branch 'feature/pubsub-disco-features' into develop
  * Cleanup
  * Expose all implemented PubSub features
  * Pusher: test affiliations
  * Merge branch 'feature/affiliations-fixes' into feature/pusher
  * Fix affiliation in /subscriptions notifications
  * Accept PubSub-compliant affiliations notifications
  * Pusher: test subscriptions
  * Merge branch 'feature/fix-98' into develop
  * Fix SQL for updating replies
  * Add failing test for issue #98
  * Fix offline user cleanup
  * DB: drop anonymous column
  * Yet another federation test
  * Check if the example config file is valid JS
  * Add tests for pusher code
  * Pusher can MAM everything
  * Pusher is a listener for all notifications
  * Add config for pusher component
  * Merge branch 'feature/mam-fixes' into develop
  * Increase the default number of items in a MAM response
  * Make MAM return an error if there are too many results
  * Use RSM in MAM
  * Test MAM RSM
  * MAM: filter bad dates out
  * Test if MAM validates dates correctly
  * Ensure the giant MAM test doesn't pollute the test environment
  * Make affiliations notifications PubSub-compliant
  * Affiliations have update timestamps too
  * Avoid temporary subscriptions in MAM results
  * Advertise support for MAM in disco#info
  * Add a giant MAM test
  * Update Travis URL in README.md
  * Merge branch 'feature/tests' into develop
  * Correctly tests that updated items don't change <in-reply-to/>
  * Move tests on updated items to a different function
  * Add tests for updates that change <in-reply-to/>
  * Use Travis to automate testing
  * Merge branch 'master' into develop
  * Add compatibility with PostgreSQL 9.1
  * Require at least one item to retract
  * Add Emacs folding marks
  * Add retrieve and retract tests
  * Fix retraction stanza sent to remote services
  * Tombstones: include Atom namespace in <updated/> element
  * Fix error when not allowed to retract an item
  * Tombstones can't be updated
  * When publishing an update, check if the actor is the original author
  * Check if original post exists before publishing a reply
  * Reject posts from non-users
  * Don't include type in <actor/>
  * Complete post/update/retract tests
  * TestServer: fix Atom in-reply-to element
  * Fail when some unwanted event happens
  * Add description for calls to "should.exist"
  * Retraction tests
  * Workaround CoffeeScript weird scoping rules
  * Add another batch of tests
  * Update test data
  * Change the way the test server emits IQ stanzas
  * Tests for posting to remote channels
  * Test server: emit event for IQs with unknown ID
  * Test server: disco info for "remote" servers
  * More post tests
  * Add helper to run tests that trigger several different stanzas
  * Test server: handle <message/> stanzas
  * Add post tests
  * Post tests: helper to check if post was successful
  * Throw an exception when getting an unexpected error IQ
  * Start adding post tests
  * Add helpers for pubsub get IQs and Atom handling
  * Helpers to add initial test data in the database
  * Add XMPP namespaces to test_server.coffee
  * Reply to presence probes
  * Don't parse Elements again
  * Use same user and server names as in sfc
  * Safe path handling in prepare-db.sh
  * Add codo-like doc to the TestServer class
  * Add helpers to build disco and pubsub IQs
  * Expose support for PubSub node creation
  * Skip a test
  * More channel creation tests
  * New tests and helpers for forms
  * Add a helper to parse disco#info replies
  * Move common disco replies to test_server.coffee
  * Start testing for channel creation
  * Test server: handle disco#items queries
  * Make tests runnable using "npm test"
  * Basic disco tests
  * Start a test suite
  * Use an existing component connection if provided in config
  * Make it possible to require() the server
  * Update config.js.example
  * Fix autosubscribeNewUsers
  * Increase the max number of items in each RSM page
  * Better shrinking of oversized stanzas
  * Include `-dirty' in version number from git
  * Remove glob from dependencies
  * Fix indentation in main.coffee
  * Prevent existing persistent subscription from being made temporary
  * Merge branch 'feature/version-number-from-git' into develop
  * Expose support for XEP-0092 (Software Version) in disco
  * Use `git describe' to get version numbers in dev branches
  * Merge branch 'master' into next
  * Restore compatibility with Node 0.6
  * Fix handling of offline users
  * Avoid race condition in disco cache
  * Shrink oversized stanzas more aggressively
  * Avoid nulls
  * Include new files in release tarball
  * Avoid race condition in disco cache
  * Merge remote-tracking branch 'upstream/tempsub' into next
  * Merge branch 'db-versioning' into next
  * buddycloud-server 0.3.5
  * Check if remote supports temporary subscription before sending a tempsub request
  * Client can check for server features before sending an IQ
  * Make server features discoverable
  * Log errors when processing incoming messages
  * Cleanup
  * Remove empty text nodes from items
  * Fix ActivityStreams verb for replies
  * Include operation name in debug message
  * Don't notify unsubscribe when it was a temporary subscription
  * Offline user cleanup: do real unsubscribe operations
  * I'm dumb
  * Don't delete temporary subscriptions during sync
  * Don't send any notification for temporary subscriptions
  * Client and server must speak the same language
  * Only send notifications about temporary subscriptions to remote listeners
  * Cleanup offline users
  * Claim we support subscription options
  * Temporary subscriptions
  * Fix updating items
  * Add help channels to default autosubscriptions
  * Merge branch 'log-fix'
  * Inspect objets in log messages
  * Fix broken log messages
  * Don't write subscription stanzas in items table
  * Merge remote-tracking branch 'lloyd/config'
  * Populate in_reply_to column when inserting new items
  * DB cleanup at startup
  * Add README for DB schema versioning
  * Upgrade DB schema
  * Check DB schema version on startup
  * Don't change <published/> when updating an existing post
  * Fix subscription to remote private channels
  * Don't fail when the default config file does not exist
  * Add Lloyd in contributors
  * Better logging for replies sent by 'proxy' components
  * Merge branch 'mam-result'
  * Include <result/> in MAM replies
  * Merge remote-tracking branch 'schnouki/atom-tombstones'
  * Fix typo
  * Merge pull request #61 from lloydwatkin/no-mod_disco
  * Also send tombstones in retract notifications
  * Use Atom tombstones for deleted items
  * xmpp: XEP-0313 compliance
  * Handle PubSub retract "notify" attribute
  * operations: fix PushInbox notification
  * Fix undefined variable when paging backwards in RSM
  [ Tuomas Koski ]
  * Merge pull request #59 from lloydwatkin/initialise-sync
  * Merge pull request #58 from lloydwatkin/master
  [ Steven Lloyd Watkin ]
  * Ensure we do not cause BC breaks
  * Make both defaults positive rather than one positive & the other negative Broke the config options down further
  * Fix build console output
  * "package" now a reserved word in node, caused failing in builds (v0.6.15+)
  [ Denis Washington ]
  * Use local CoffeeScript "cake" for "npm install"
  [ Jonas Smedegaard ]
  * Setup access rights and needed dirs when starting daemon
  * Speedup system shutdown by avoiding explicit sysV stop
  * xmpp_pubsub: check for commandEl prior usage
  [ Reginald dude ]
  * updates sent via email from vorner.cz
  * updates sent via email from vorner.cz
  [ Reginald Dude ]
  * Most confusing config file ever
  [ ▟ ▖▟ ▖ ]
  * Merge pull request #70 from lloydwatkin/fix-is-function
  * Merge pull request #63 from lloydwatkin/no-mod_disco
  * Merge pull request #62 from lloydwatkin/no-mod_disco
  * Merge pull request #57 from Schnouki/xep-0313
  * Merge pull request #54 from Schnouki/fix-notif
  * Merge pull request #52 from lloydwatkin/master
  * Merge pull request #51 from lloydwatkin/master
  [ James Tait ]
  * Ensure both the PID dir and log dir are created on startup if they do not already exist.
  [ imaginator ]
  * aligning with INSTALL instructions
  * moved instructions to wiki
  * Edited README.md via GitHub
  [ dodo ]
  * fix accessModel of geo nodes
  * always test in production
  * buddycloud-server 0.3.4
  * Merge branch 'packaging'
  * put the /etc/init.d script into tarball
  * not needed anymore
  * default options for new channels
  * bump tarballify version
  * add bin/buddycloud-server to the tarball
  * no build step in bin/buddycloud-server anymore
  * print additional info messages in gray
  * fix 'file is not defined'
  * fix 'modName is not defined'
  * colorful output for package.js
  * bump tarballify version
  * rm trailing spaces
  * no build_binary.sh needed
  * separate devDependencies
  * export name
  * use packaging script
  * buddycloud-server 0.3.3
  * pass prefix to npm to force npm to use that particular prefix
  * $PREFIX/bin/buddycloud-server can be nonexistant .. so ignore all errors when removing
  * bump node version in build script
  * merge issue #37
  * specify interal config file as defaults, not as main config
  * backports to node 0.4
  * concat cwd path to config path only when config path is relative
  * respect the cwd
  * move to the right dir before builing
  * wscript is not needed anymore
  * merged #31. symlink detection for bin/buddycloud-server thanks to @highfellow
  * fixed gitignore
  * forgot Cakefile
  * pin node version for over 0.5 to get the require json working
  * get version directly
  * new buildsystem
  * check if config.syslog has keys
  * dont load default config over opts and args
  * main: fix config loading
  * wscript fixes
  * load config via jsconfig
  * update wscript
  * upgrade build environment
  * update requirements in readme
  * cleanup files
  [ Simon Tennant ]
  * Update config.js.example
  * change to read config file from /opt/buddycloud
  * Update master
  * don't be so --quiet (will help a lot with debugging)
  * Update _etc_init.d_buddycloud-server
  * the orwell defeault was causing jdesenberg problems.
  * Fixed the permissions to run as.
  * Update _etc_init.d_buddycloud-server
  * init script
  * make it really clear what to change (and what "jid" refers to)
  * Made the ownership of tables really clear. Should help avoid the problem that DD had the other day.
  [ Lloyd Watkin ]
  * Fix for checking of child element
  * Catch error event
  * Fix for server reset
  * Updated variable names to better describe what config does.
  * Merge branch 'master' of git://github.com/buddycloud/buddycloud-server into no-mod_disco
  * Allow buddycloud server to advertise additional 'proxy' components
  * Wait to sync
  * Rename of parameter
  * Allow user to specify a port or not, changed argument name as it may not actually be remote debugging.
  * Tidy up
  * Allow node.js debugging
  [ Simon ]
  * /etc/init.d/buddycloud-server

 -- Abmar Barros (buddycloud Nightly Builds) <abmar@buddycloud.com>  Sat, 26 Jan 2013 15:20:52 -0300


buddycloud-server (0.1) unstable; urgency=medium

  [ Astro ]
  * operations: all nodes in defaultConfiguration accessModel=authorize
  * operations: posts & subscriptions accessModel=authorize in defaultConfiguration
  * buddycloud-server 0.3.2
  * Cakefile: version.js + 

  * operations: fix run notifications control flow
  * build_binary.sh: get bin/buddycloud-server out of the way before npm i
  * buddycloud-server 0.3.1
  * package.json: honor all contributors
  * Merge remote-tracking branch 'schnouki/patch-1'
  * .npmignore: exclude debian/* from npm pkgs
  * buddycloud-server 0.3.0
  * package.json: bump dep versions
  * operations: prevent unsubscribing/demoting the node owner
  * operations: fix PushInbox callback
  * operations: run notifies first, then syncs, then calls back
  * pubsub_server: lower logging
  * operations: fix PushInbox newNodes
  * operations: move PushInbox syncNode post transaction
  * operations: PushInbox should work even if syncNode had hickups
  * operations: syncNode when PushInbox created it
  * operations: fix PushInbox notification & newModerators
  * model_postgres: fix & simplify purgeNode()
  * sync: fixes
  * sync: purge node if no local subscribers
  * purge node when local unsubscription is pushed from remote
  * operations: fix generateSubscriptionsNotifications followee
  * operations: fix PushInbox newModerators nodes
  * xmpp connection: doc, serialize stanzas only once
  * operations: NewModeratorNotify needs listener, not user
  * operations: fix NewModeratorNotify listener
  * operations: log Operation name
  * model_postgres: must quote "user" column for Postgres
  * operations: NewModeratorNotify must cb()
  * operations: Notify notifies w/ node
  * operations: fix Notify otherListeners
  * pubsub_client: rm debug
  * operations: NewModeratorNotify notifies w/ node & listener
  * model_postgres: optional Transaction callbacks
  * operations: fix Notify filterSubscription & filterAffiliation invokation
  * operations: fix this binding
  * operations: no pending subscriptions in subscriptions node
  * operations: NewModeratorNotify
  * operations: doc, filter subscriptions and affiliations for non-moderators
  * operations: reorganize
  * clean up logging
  * operations: posts node defaultAffiliation='publisher'
  * sync: fix AffiliationsSynchronization typo
  * buddycloud-server 0.2.3
  * package.json: fix install script
  * build_binary.sh: bump node.js version
  * buddycloud-server 0.2.2
  * package.json: add preinstall cake build
  * operations: fix notifications
  * build_binary.sh: bump node.js version
  * buddycloud-server 0.2.1
  * operations: fix Notify subscriptios node items
  * operations: fix Notify callback result
  * operations: BrowseNodeItems for subscriptions node calls getSubscriptions not getSubscription
  * operations: syntax fixes
  * operations: Notify subscriptions fixes
  * operations: subscriptions node notifications
  * operations: BrowseNodeItems for subscriptions node
  * sync: require errors
  * sync: avoid error output when omitting local node
  * router, sync: improve logging
  * backend_pubsub: PubsubBackend.notify listener robustness
  * operations: fix Subscribe defaultAffiliation
  * operations: fix ManageNodeAffiliations control flow
  * pubsub_server: PubsubOwnerSetAffiliationsRequest syntax fix
  * operations: fix requiredAffiliation()
  * operations: requiredAffiliation can be function to allow moderators approving topic channel subscribers
  * operations: ManageNodeSubscriptions refactor for efficiency
  * operations: ManageNodeSubscriptions should set new affiliations to defaultAffiliation
  * operations: fix Notify jid/user
  * operations: Notify should notify all users pertained by a subscription
  * operations: 'unsubscribe-node' notifies unsubscribed user
  * operations, pubsub_client: there's no "unsubscribed" subscription, only "none"
  * pubsub_server: PubsubOwnerSetSubscriptionsRequest syntax fix
  * operations: Unsubscribe needs PrivilegedOperation methods
  * operations: Unsubscribed is not a PrivilegedOperation but a ModelOperation
  * operations: fix callback scope
  * pubsub_server: robustify PubsubItemsRequest
  * operations: syntax
  * pubsub_server, operations: support for RetrieveItems by itemIds
  * build_binary.sh: bump node.js version to 0.6.10
  * buddycloud-server 0.2.0
  * operations: CreateNode should not allow creation with empty nodeUser username
  * operations: fix CreateNode defaults & creationDate
  * operations: fix CreateNode isTopic switcheroo
  * router: fix autosubscribeNewUsers operation name
  * router: autosubscribeNewUsers
  * config.js.example: default checkCreateNode hook checks for a specific topic domain
  * operations: fix CreateNode node typo
  * operations: fix CreateNode config
  * pubsub_server, operations: CreateNode with optional config
  * operations: fix CreateNode setSubscription()
  * operations: CreateNode catches missing checkCreateNode hook
  * operations: CreateNode default config
  * checkCreateNode config hook
  * model_postgres: fix getOwnersByNodePrefix SQL
  * operations: fix CreateNode setAffiliation()
  * operations: fix CreateNode getOwnersByNodePrefix()
  * operations: fix ../util require, CreateNode safety check
  * implement createNode with getOwnersByNodePrefix check
  * operations: begin creating topic channels
  * model_postgres: syntax fix
  * package.json: maintainer update
  * build_binary.sh: update to node 0.6.9
  * buddycloud-server 0.1.11
  * rsm_walk: fix logging
  * operations: checkAccessModel() before checkRequiredAffiliation()!
  * operations: Unsubscribe condition syntax fix
  * package.json: muffin dependency glob seems be incompatible in v3.*
  * operations: checkRequiredAffiliation should ignore no @requiredAffiliation
  * operations: fix isAffiliationAtLeast w/ invalid affiliation
  * jsconfig 0.2.0 is out! w00t!!!
  * Cakefile: lib/version.js from package.json
  * logger: update to ain2 1.0.0
  * main: fix config loading
  * buddycloud-server 0.1.10
  * router: fix syncServer()
  * buddycloud-server 0.1.9
  * bin/buddycloud-server: fix param quoting
  * bin/buddycloud-server: fix $cwd
  * buddycloud-server 0.1.8
  * .npmignore to package up built lib/* instead of src/*
  * build_binary.sh: install devDependencies beforehand
  * build_binary.sh: bump node.js version to 0.6.7
  * util: move getNodeUser(), getUserDomain()
  * main: "server successfully started"
  * sync: fix logging
  * model_postgres: fix writeItem() SQL parameter binding
  * sync: fix PaginatedSynchronization error callback
  * sync: rm TODO note
  * model_postgres: writeItem updated_query
  * operations: logging fixes
  * writeItem: move updated extraction from operations to model_postgres
  * model_postgres: writeItem should also INSERT existing updated value
  * model_postgres: fix syntax
  * model_postgres: SQL fixes
  * operations: PushInbox copies item published date
  * postgres schema: CREATE VIEW open_nodes + usage in model_postgres
  * model_postgres: fix query result handling
  * fix getTopFollowedNodes & getTopPublishedNodes parameters
  * model_postgres: fix SQL INTERVAL syntax
  * operations: BrowseNodes.fetchNodes() needs transaction
  * operations: BrowseNodes.transaction should use @fetchNodes()
  * operations: fetchNodes() typo
  * pubsub_server: browse /top-followed-nodes & /top-published-nodes does not request a particular node
  * getTopFollowedNodes & getTopPublishedNodes w/ XMPP disco interface
  * build_binary.sh: bump to node 0.6.6
  * buddycloud-server 0.1.7
  * package.json: rm cradle dependency
  * logger: syslog only with hostname
  * replace common-logger by underscore.logger
  * update ain2 dependency for node v0.6 compatibility
  * model_postgres walkListenerArchive: replace DISTINCT with GROUP BY
  * model_postgres: fix config order/limig
  * operations: ReplayArchive sorts results before capping
  * ReplayArchive/walkListenerArchive: properly cap result set
  * operations: ReplayArchive default max=50
  * build_binary.sh: use $PREFIX from environment if present
  * package.json: req node-stringprep >=0.1.1
  * router: fix
  * buddycloud-server 0.1.6
  * update to new node-waf paths
  * build_binary.sh: switch to node 0.6.4
  * package.json: depend on 0.3.1
  * router: RSM usage fix
  * logger: open logFile for appending, fixes issue #25
  * package.json: depend on node-xmpp >= 0.3.0
  * operations ReplayArchive: fix rsm max
  * operations: ReplayArchive RSM support
  * backend_pubsub: notificationPush updates include sender & actor
  * router: detectUserType fixes
  * router: detectUserType fixes
  * logger: fix argument iteration
  * main, backend_pubsub: logging improvements
  * backend_pubsub: include user in notfound error
  * connection: loopback stanzas to ourselves
  * router: add missing util.inspect include
  * router.run: trace req
  * router: add missing rsm include
  * logger: typo
  * logger: fix level
  * logging clean-up
  * router, pubsub_{server,client}: @type in <actor/>
  * buddycloud-server 0.1.5
  * router: sync fixes
  * buddycloud-server 0.1.4
  * ManageNodeAffiliations: non-owner may not elect a new owner
  * sync: log upon completion
  * sync: transaction fix
  * move some sync logic into router, lock per node
  * operations: BrowseNodeInfo/RetrieveNodeConfiguration w/o access control
  * buddycloud-server 0.1.3
  * operations: deny Unsubscribe from own nodes
  * logger: ain2 syslog transport
  * logger: message always as string
  * main: fix --stdout kludge
  * logger: avoid log level < 0
  * config.js.example: syslog on by default
  * config.js.example: logging section
  * syslog support with ain2
  * support --stdout logging
  * replace cnlogger by common-logger
  * buddycloud-server 0.1.2
  * build_binary: npm install globally (into /opt/buddycloud-server/)
  * build_binary: dedup node & npm versions
  * build_binary: default to /opt/buddycloud-server, bin/ script
  * main: process.title fix
  * version: fix package.json path
  * version from package.json in process.title and for jabber:iq:version
  * xmpp/connection: do not subscribe in probePresence()
  * buddycloud-server 0.1.1
  * build_binary: bump node & npm versions
  * backend_pubsub: reply() must also copy 'replay' field on MaxStanzaSizeExceeded
  * connection: more stanza output when MaxStanzaSizeExceeded
  * don't send ReplayArchive notifications to all online resources
  * pubsub_client/connection: wrap error replies into StanzaError earlier
  * logging fixes
  * port to cnlogger
  * port to broken winston logging
  * xmpp connection: always tell node-xmpp to reconnect
  * async.filter iterator does not take error parameter
  * model_postgres: fix nodeExists warning
  * backend_pubsub: fix notification matching
  * sync: fix router.authorizeFor() usage
  * sync: writeItem does not need author anymore
  * operations: typo
  * model_postgres: fix getListenerAffiliations() query
  * sync: careful
  * xmpp/forms: oops, s/creationTime/creationDate/
  * xmpp/connection: fix name
  * router: check for anonymous user to be online
  * anonymous user offline tracking & clean-up
  * model_postgres: fix walkListenerArchive() node in results
  * router: fix method binding
  * model_postgres: walkListenerArchive() should include node in results
  * operations: RemoveUser & model_postgres.getUserRemoteSubscriptions() & clearUserSubscriptions()
  * BuddycloudDiscovery::detectAnonymousUser
  * backend_pubsub: gracefully handle MaxStanzaSizeExceeded for notifications
  * xmpp pubsub_server & connection: fix graceful MaxStanzaSizeExceeded handling
  * errors: MaxStanzaSizeExceeded extends Error
  * operations: s/geoloc/geo/
  * operations: /subscription items shall contain jid=owner
  * metadata buddycloud#channel_type
  * proper metadata field names
  * support for creationDate
  * operations: clarify logging
  * router: fix remote backend selection
  * operations: Unsubscribe refactor & fix
  * operations: fix Register
  * buddycloud-server 0.1.0
  * operation: print opName on commit, rm debug
  * bin/buddycloud-server: don't cd so config can be loaded relatively
  * Merge remote-tracking branch 'origin/cli'
  * operations: RetractItems should allow anyone to remove their own posts
  * operations: preserve affiliation if previously affiliated
  * operations: unify into isAffiliationAtLeast()
  * operations: rm leftover TODO note
  * operations: refactor Register; should check if authoritative for user's domain
  * router.run: return 404 for nodes not locally subscribed but discovered ourselves
  * rm explicit author handling in postgres schema, model, operations
  * main: check sender authorization for authorizationPrompt
  * operations: RetrieveItems shall not virtualize items for cache case of remote nodes
  * Revert "Made the ownership of tables really clear. Should help avoid the problem that DD had the other day."
  * s/channel-server/buddycloud-server/g
  * build_binary.sh: fix invokation hint
  * README: rm some outdated stuff
  * main: fix defaultConfig stuff
  * build_binary.sh
  * operations: RetrieveItems.retrieveSubscriptionsItems() result set sorting, affiliations
  * virtual handling of /user/.../subscriptions node items
  * MAM replays subscription authorization requests
  * more authorization stuff
  * fixes
  * small fixes
  * package.json: fix bin path
  * further authorizationPrompt work
  * backend_pubsub: missedSomething was missing
  * package.json: fix coffeescript path (./node_modules/...)
  * sending authorize notification forms
  * package.json: fix .coffee compilation stage
  * operations: PrivilegedOperation.fetchActorAffilliation fetches all listener affiliations for inbox sync
  * pubsub_notifications: fix MAM stanzas
  * operations: subscribe defaultAffiliation, fixes
  * model_postgres: many fixes
  * operations: publishModel 'subscribers'
  * operations: access control fixes
  * begin access control, affiliations checking
  * model_postgres: fixes
  * errors: fix error classes
  * xmpp/connection: fix
  * xmpp/connection: fix @missedServerTimeouts usage
  * model_postgres: safety checks
  * readability, notes
  * rsm_walk: fix serious errors
  * globally refactor operation from function to value
  * sync: fixes
  * add forgotten rsm_walk file
  * move syncQueue from main.coffee to fine-grained sync.syncNode
  * xmpp/connection: readability
  * xmpp/connection: track <you-missed-something/> timers with @missedServerTimeouts
  * syncServer support, wired up to <you-missed-something/> 'syncNeeded'
  * model_postgres: for an actor, getSubscriptions() shall return not only users but also listeners
  * MAM time specification
  * primitive MAM implementation
  * send <you-missed-something/>
  * operations: PushInbox TODO note
  * sync: rm request.rsm.max clamp
  * synchronization with state resetting and subscriptions/affiliations support
  * pubsub_*: fix user/jid conventions
  * ConfigSynchronization should use browse-node-info to get node config
  * synchronizing!
  * synchronization kinda works, but hits RSM loops
  * further synchronization progress
  * begin synchronization
  * main: require async
  * measure stanza size, gracefully retry with smaller result set
  * synchronization groundwork
  * don't let backend_pubsub call router.runLocally(), return errors.SeeLocal() instead
  * errors: clean up
  * normalize: add <link rel="self" href="xmpp:...?pubsub;action=retrieve;..."/>
  * operations: Publish shall allow new items with specified @id
  * nodes browsing, with RSM
  * backend_pubsub: run() should bail out early on invalid node form
  * PostgreSQL tuning
  * complete RSM implementation
  * begin RSM for all operations
  * generify RSM stuff
  * pubsub_client: RSM
  * fixes from CCCamp11
  * RSM for local items retrieving
  * begin new RSM implementation
  * pubsub_server: publish-node-items shall reply with item ids
  * model_postgres: fix getNodeListeners() SQL
  * model_postgres: nodeExists() shall check for NOT NULL
  * model_postgres: getNodeListener() replace filter by SQL
  * model_postgres: getNodeListener() filter for null
  * model_postgres: fix setSubscription() INSERT w/o listener
  * error printout
  * forms: fix
  * operations: PushInbox author fix
  * debug
  * xml child robustness
  * model_postgres: fix nodeExists()
  * fix subscription listener for local users
  * logging cleanup
  * initiate presence tracking of users
  * xmpp/connection: use send() instead of specifying from jid
  * some logging cleanup
  * operations: push-inbox does not set subscription listener
  * fixes & TODO notes
  * operations: Notify.transaction() must call cb()
  * retrieve-node-configuration
  * forms: configToResultForm -> configToForm
  * pubsub_client: RetrieveNodeConfiguration & ManageNodeConfiguration
  * operations: catch reply cb exceptions
  * create-node operation
  * package.json: scripts
  * fixes
  * fix outgoing notifications
  * generify pubsub_notifications
  * many fixes for subscription pushing
  * router: if request writes, always go remote
  * push incoming notifications to local model
  * more subclassing of EventEmitter, incoming notifications handling
  * pubsub_server: unify PubsubRequest & PubsubOwnerRequest
  * merge request.coffee into pubsub_server.coffee
  * begin remote subscription pushing to local inbox
  * backend_pubsub: PubsubBackend.notify(): readability
  * tune to use single cb() instead of req.{reply,replyError}()
  * revive normalization
  * model_postgres: setSubscription(): coearce isSet to boolean
  * model_postgres: catch lost transactions
  * pubsub_client: error reporting, fix
  * subscribe reply status
  * model_postgres: setAffiliation() should check nodeExists()
  * fix disco.authorizeFor() usage
  * pubsub_client: fix <actor/> placement
  * refactor notifications a bit
  * pubsub_client: <actor/> placement fix
  * pubsub_client: fix <actor/> placement
  * pubsub_notifications: subscriptions/affiliations/config
  * fix registration/model callback parameters
  * operations: ManageNodeAffiliations validates accessModel & publishModel
  * setting configuration
  * fixes, fixes, config
  * only RegisterSetRequest should induce presence subscription
  * FIXME note
  * model_postgres: do not use rowCount
  * operations: Register created default configuration
  * pubsub_server: pubsub/inbox identity
  * fixes, StanzaError
  * implement pubsub_client operations
  * pubsub_notifications: byOperation()
  * fixes
  * fixes
  * fixes & debugging
  * fixes
  * debugging & fixes
  * fixes
  * begin discovering locally
  * fixes
  * Router.run: fix
  * fixes
  * operations: rename channel node to "posts"
  * begin notifications
  * a bit o' twiddling w/ subscription listeners
  * refactor router for remote requests
  * operations: subscribe/unsubscribe toggle affiliation none/member
  * router: rename frontend to backend
  * rename backend_postgres to model_postgres, revive router
  * main: move iqHandler to pubsub_server
  * manage, not only retrieve, subscriptions & affiliations
  * use subscribe sender as notification listener
  * backend_pubsub: replace ternary operator
  * need to store listener in subscriptions...
  * backend_pubsub: implement RequestCache
  * new untested buddycloud discovery with backend_pubsub.coffee
  * retrieve <actor/> generalized, begin using authorizeFor
  * ns: add BUDDYCLOUD_V1 xmlns
  * postgres.sql schema: updated column for more tables, author column for items
  * retrieving node affiliations
  * retrieving node subscriptions, fixes
  * backend_postgres: syntax fixes
  * operation: Register should set affiliation & subscription
  * retrieving subscriptions & affiliations
  * retracting items
  * publishing & retrieving items works
  * begin item retrieving
  * subscribe & unsubscribe
  * fix backend_postgres (user is a Pg keyword, must be quoted as column name)
  * publishing works
  * lots of fixes
  * fix disco requests
  * fix, fix, fix
  * begin implementing register & publish implementation
  * mv src/operations.coffee src/local/operations.coffee
  * revive backend
  * primitive operations
  * mv controller.coffee operations.coffee
  * dead code TODO
  * fixes
  * rm old dead code
  * rename iqhandler to request
  * begin some refactoring
  * begin hooking up handlers with operations
  * xmpp/pubsub_server: indicate operation types
  * notes
  * pubsub_server: PubsubOwnerHandlers
  * pubsub_server: flesh out more pubsub handlers
  * add affiliations checking
  * begin interweaving with local operations
  * a tad of interconnecting
  * pubsub_server: DiscoInfoHandler.reply()
  * xmpp client 'n stuff
  * README: draw new design
  * begin router
  * xmpp: move NS_* to ns.coffee
  * xmpp: primitive disco info works
  * begin iqhandler
  * xmpp/connection: port presence tracking
  * rm main.js
  * move src files around
  * rm model_couchdb from config, add preliminary main.coffee
  * a bit new controller
  * rm old test_controller
  * some controller work
  * old controller translated to coffeescript
  * port peripheral stuff over to coffeescript
  * README: change ejabberd port to the config default one
  * model_couchdb: s/doc.subscribers/doc.subscriptions/
  * xmpp_pubsub.js: fix typo
  * model_postgres: check nodeExists before any data modification
  * preliminary RSM (XEP-0059) implementation for retrieve-items/retrieve
  * model_couchdb: stub getUpdatesByTime()
  * MAM should result in direct message, not broadcast notification to all resources
  * MAM w/ working model_postgres backend
  * begin implementing MAM
  * controller: register/register should create /user/<jid>/subscriptions node
  * normalize fixes + tests
  * normalize
  * only one child element per item
  * model_postgres: fix setConfig()
  * model_postgres: listNodesByUser()
  * model_couchdb: listNodesByUser(), simplify listNodes()
  * controller, xmpp_pubsub: browse-nodes/by-user
  * model_postgres setConfig(): fixes
  * configuration notification
  * model_postgres setConfig(): do not set fields unspecified/without defaultConfig
  * model_postgres nodeExists(): indentation
  * controller: subscribe should not require preexisting affiliation
  * xmpp_pubsub: fix manage-subscriptions/retrieve result usage
  * controller: allow retrieving subscriptions & affiliations for members
  * xmpp_pubsub: syntax fix
  * model_postgres: fix queue pushing
  * xmpp_pubsub: fix info discovery reply FORM_TYPE
  * model_postgres: config fixes
  * more on extended config
  * model_couchdb, model_postgres: more flexible config schema
  * config: description, type, creationDate; setConfig() on create-node/register
  * xmpp_pubsub: optimize presence tracking
  * controller: requiredAffiliation='member' for config-node/retrieve
  * README: OpenFire
  * controller: defaultConfig() + use in feature 'config-node'
  * xmpp_pubsub: replace isOnline() with getOnlineResources()
  * model_postgres: fix transaction dequeueing
  * model_postgres: move cb() past process.nextTick/dbIsAvailable for safety
  * model_postgres: work around empty responses
  * test_controller: retract
  * xmpp_pubsub: disco <identity/> according to discovered @node
  * test_controller: browse-nodes
  * model_couchdb: fix preload() etag extraction + error reporting
  * xmpp_pubsub: FeatureNotImplemented message
  * controller: simulate a stack for debug info
  * test_controller: retract skeleton
  * controller unsubscribe: do not fetch affiliation from database but check by node path
  * implement & test unsubscribe
  * test_controller: skeletons
  * test_controller: publishing tests
  * test_controller: more publish testing + controller fix
  * test_controller: begin test publishing
  * model_postgres: fix forgotten variable
  * model_postgres: reconnect to database upon error
  * model_postgres: oops, syntax error
  * config.js.example: postgres is actually the one with a poolSize
  * model_postgres: oops, syntax errors
  * begin test_controller
  * fixes
  * subscriptionModified <message/>
  * xmpp_pubsub: "message" & approve() fixes
  * controller: replace ownerNotification with afterTransaction
  * access_model authorize
  * package.json & README
  * errors: pull inherits() from util/utils/sys for moving node api
  * browse open nodes with service discovery items
  * controller: refactor affiliations checking
  * xmpp_pubsub: fix subscriptions format
  * controller: treat missing accessModel as 'open'
  * model_couchdb: preload() etag fix
  * .gitignore with config.js
  * xmpp_pubsub: node config on disco info
  * model_couchdb: encodeURIComponent() only for db.head() & .get()
  * main.js: #!
  * rename config.js to config.js.example
  * restore default config.js
  * main.js: on uncaughtException
  * postgres doc & config
  * model_postgres
  * model_couchdb: fix item deserialization
  * model_couchdb: rm implemented TODOs
  * README: CouchDB configuration
  * README: TODO++
  * LICENSE
  * README: markdown fix
  * README: mention buddycloud :)
  * model_couchdb: fix views initialization
  * README & config
  * jabber:iq:register
  * model_couchdb: fixes
  * errors fixing
  * rm model_persistence
  * model_couchdb: assertNodeName()
  * main: catch uncaughtException
  * controller: fix
  * bugs, readability
  * model_couchdb: fixing
  * controller: implement affiliations checking
  * xmpp_pubsub: getAffiliations() result is now Array
  * model_couchdb: setSubscription() & setAffiliation() 'none'
  * model_couchdb: consolidate subscriptions & affiliations model
  * xmpp_pubsub: send notifications with type='headline'
  * xmpp_pubsub: subscribeIfNeeded() on <create/> & <subscribe/>
  * model_couchdb: load() shortcut when already cached
  * model_couchdb: createNode() fix
  * model_couchdb: preload()
  * model_couchdb: commit read documents too for integrity
  * model_couchdb: abstract views
  * CouchDB Optimistic Concurrency Control layer
  * controller: improve error propagation
  * defined error conditions
  * untested configuration getting/setting
  * service discovery
  * modify-affiliations
  * model_couchdb: getAffiliation()
  * begin permission checking infrastructure
  * presence probes
  * xmpp_pubsub: presence tracking
  * refactoring controller complete
  * continue refactoring controller into features/operations
  * begin refactoring controller into features/operations
  * subscribers
  * getting subscriptions & affiliations
  * createNode improvements
  * controller createNode: check node
  * model_couchdb: affiliations view
  * items getting
  * much more progress
  * implement retraction, s/notifySubscriber/notify/, s/writeItems/writeItem/
  * publish notification works
  * more frontend hooking
  * begin notification hooks
  * fixes
  * begin model_couchdb transactions
  * split model
  * some progress
  * some progress
  * createNode creates owner affiliation
  * model: indexes
  [ Thomas Jost ]
  * Add @denisw to contributors
  * Upgrade required node version to 0.8
  * We actually need remote subscriptions nodes
  * Merge branch 'feature/anon-fixes' into develop
  * Merge branch 'feature/really-validate-post-times' into develop
  * Reject remote posts with invalid dates
  * Add tests for remote posts with invalid dates
  * Force anon subscriptions to be temporary
  * Set default affiliation to 'none' for anon users
  * Merge branch 'feature/anon-fixes' into develop
  * Cleanup: remove some dead code
  * Purge remote nodes with no local subscription left
  * Merge branch 'feature/recent-items' into develop
  * Merge branch 'feature/validate-remote-items' into develop
  * Sort recent items by update time
  * Merge branch 'feature/validate-remote-items' into feature/recent-items
  * Fix tests that push remote items
  * Validate remote items
  * Add (failing) tests for invalid remote items
  * Implement recent items query
  * Add (failing) test for recent items query
  * PubSub replies can include several elements
  * Merge branch 'feature/pusher' into develop
  * Workaround callback woes
  * Fix MAM for pusher component
  * Pusher: test MAM
  * test_server: move makePublishIq into TestServer
  * Pusher: test node configuration
  * Pusher: test unsubscriptions
  * Merge branch 'feature/affiliations-fixes' into develop
  * Merge branch 'feature/pubsub-disco-features' into develop
  * Cleanup
  * Expose all implemented PubSub features
  * Pusher: test affiliations
  * Merge branch 'feature/affiliations-fixes' into feature/pusher
  * Fix affiliation in /subscriptions notifications
  * Accept PubSub-compliant affiliations notifications
  * Pusher: test subscriptions
  * Merge branch 'feature/fix-98' into develop
  * Fix SQL for updating replies
  * Add failing test for issue #98
  * Fix offline user cleanup
  * DB: drop anonymous column
  * Yet another federation test
  * Check if the example config file is valid JS
  * Add tests for pusher code
  * Pusher can MAM everything
  * Pusher is a listener for all notifications
  * Add config for pusher component
  * Merge branch 'feature/mam-fixes' into develop
  * Increase the default number of items in a MAM response
  * Make MAM return an error if there are too many results
  * Use RSM in MAM
  * Test MAM RSM
  * MAM: filter bad dates out
  * Test if MAM validates dates correctly
  * Ensure the giant MAM test doesn't pollute the test environment
  * Make affiliations notifications PubSub-compliant
  * Affiliations have update timestamps too
  * Avoid temporary subscriptions in MAM results
  * Advertise support for MAM in disco#info
  * Add a giant MAM test
  * Update Travis URL in README.md
  * Merge branch 'feature/tests' into develop
  * Correctly tests that updated items don't change <in-reply-to/>
  * Move tests on updated items to a different function
  * Add tests for updates that change <in-reply-to/>
  * Use Travis to automate testing
  * Merge branch 'master' into develop
  * Add compatibility with PostgreSQL 9.1
  * Require at least one item to retract
  * Add Emacs folding marks
  * Add retrieve and retract tests
  * Fix retraction stanza sent to remote services
  * Tombstones: include Atom namespace in <updated/> element
  * Fix error when not allowed to retract an item
  * Tombstones can't be updated
  * When publishing an update, check if the actor is the original author
  * Check if original post exists before publishing a reply
  * Reject posts from non-users
  * Don't include type in <actor/>
  * Complete post/update/retract tests
  * TestServer: fix Atom in-reply-to element
  * Fail when some unwanted event happens
  * Add description for calls to "should.exist"
  * Retraction tests
  * Workaround CoffeeScript weird scoping rules
  * Add another batch of tests
  * Update test data
  * Change the way the test server emits IQ stanzas
  * Tests for posting to remote channels
  * Test server: emit event for IQs with unknown ID
  * Test server: disco info for "remote" servers
  * More post tests
  * Add helper to run tests that trigger several different stanzas
  * Test server: handle <message/> stanzas
  * Add post tests
  * Post tests: helper to check if post was successful
  * Throw an exception when getting an unexpected error IQ
  * Start adding post tests
  * Add helpers for pubsub get IQs and Atom handling
  * Helpers to add initial test data in the database
  * Add XMPP namespaces to test_server.coffee
  * Reply to presence probes
  * Don't parse Elements again
  * Use same user and server names as in sfc
  * Safe path handling in prepare-db.sh
  * Add codo-like doc to the TestServer class
  * Add helpers to build disco and pubsub IQs
  * Expose support for PubSub node creation
  * Skip a test
  * More channel creation tests
  * New tests and helpers for forms
  * Add a helper to parse disco#info replies
  * Move common disco replies to test_server.coffee
  * Start testing for channel creation
  * Test server: handle disco#items queries
  * Make tests runnable using "npm test"
  * Basic disco tests
  * Start a test suite
  * Use an existing component connection if provided in config
  * Make it possible to require() the server
  * Update config.js.example
  * Fix autosubscribeNewUsers
  * Increase the max number of items in each RSM page
  * Better shrinking of oversized stanzas
  * Include `-dirty' in version number from git
  * Remove glob from dependencies
  * Fix indentation in main.coffee
  * Prevent existing persistent subscription from being made temporary
  * Merge branch 'feature/version-number-from-git' into develop
  * Expose support for XEP-0092 (Software Version) in disco
  * Use `git describe' to get version numbers in dev branches
  * Merge branch 'master' into next
  * Restore compatibility with Node 0.6
  * Fix handling of offline users
  * Avoid race condition in disco cache
  * Shrink oversized stanzas more aggressively
  * Avoid nulls
  * Include new files in release tarball
  * Avoid race condition in disco cache
  * Merge remote-tracking branch 'upstream/tempsub' into next
  * Merge branch 'db-versioning' into next
  * buddycloud-server 0.3.5
  * Check if remote supports temporary subscription before sending a tempsub request
  * Client can check for server features before sending an IQ
  * Make server features discoverable
  * Log errors when processing incoming messages
  * Cleanup
  * Remove empty text nodes from items
  * Fix ActivityStreams verb for replies
  * Include operation name in debug message
  * Don't notify unsubscribe when it was a temporary subscription
  * Offline user cleanup: do real unsubscribe operations
  * I'm dumb
  * Don't delete temporary subscriptions during sync
  * Don't send any notification for temporary subscriptions
  * Client and server must speak the same language
  * Only send notifications about temporary subscriptions to remote listeners
  * Cleanup offline users
  * Claim we support subscription options
  * Temporary subscriptions
  * Fix updating items
  * Add help channels to default autosubscriptions
  * Merge branch 'log-fix'
  * Inspect objets in log messages
  * Fix broken log messages
  * Don't write subscription stanzas in items table
  * Merge remote-tracking branch 'lloyd/config'
  * Populate in_reply_to column when inserting new items
  * DB cleanup at startup
  * Add README for DB schema versioning
  * Upgrade DB schema
  * Check DB schema version on startup
  * Don't change <published/> when updating an existing post
  * Fix subscription to remote private channels
  * Don't fail when the default config file does not exist
  * Add Lloyd in contributors
  * Better logging for replies sent by 'proxy' components
  * Merge branch 'mam-result'
  * Include <result/> in MAM replies
  * Merge remote-tracking branch 'schnouki/atom-tombstones'
  * Fix typo
  * Merge pull request #61 from lloydwatkin/no-mod_disco
  * Also send tombstones in retract notifications
  * Use Atom tombstones for deleted items
  * xmpp: XEP-0313 compliance
  * Handle PubSub retract "notify" attribute
  * operations: fix PushInbox notification
  * Fix undefined variable when paging backwards in RSM
  [ Tuomas Koski ]
  * Merge pull request #59 from lloydwatkin/initialise-sync
  * Merge pull request #58 from lloydwatkin/master
  [ Steven Lloyd Watkin ]
  * Ensure we do not cause BC breaks
  * Make both defaults positive rather than one positive & the other negative Broke the config options down further
  * Fix build console output
  * "package" now a reserved word in node, caused failing in builds (v0.6.15+)
  [ Denis Washington ]
  * Use local CoffeeScript "cake" for "npm install"
  [ Jonas Smedegaard ]
  * Setup access rights and needed dirs when starting daemon
  * Speedup system shutdown by avoiding explicit sysV stop
  * xmpp_pubsub: check for commandEl prior usage
  [ Reginald dude ]
  * updates sent via email from vorner.cz
  * updates sent via email from vorner.cz
  [ Reginald Dude ]
  * Most confusing config file ever
  [ ▟ ▖▟ ▖ ]
  * Merge pull request #70 from lloydwatkin/fix-is-function
  * Merge pull request #63 from lloydwatkin/no-mod_disco
  * Merge pull request #62 from lloydwatkin/no-mod_disco
  * Merge pull request #57 from Schnouki/xep-0313
  * Merge pull request #54 from Schnouki/fix-notif
  * Merge pull request #52 from lloydwatkin/master
  * Merge pull request #51 from lloydwatkin/master
  [ James Tait ]
  * Ensure both the PID dir and log dir are created on startup if they do not already exist.
  [ imaginator ]
  * aligning with INSTALL instructions
  * moved instructions to wiki
  * Edited README.md via GitHub
  [ dodo ]
  * fix accessModel of geo nodes
  * always test in production
  * buddycloud-server 0.3.4
  * Merge branch 'packaging'
  * put the /etc/init.d script into tarball
  * not needed anymore
  * default options for new channels
  * bump tarballify version
  * add bin/buddycloud-server to the tarball
  * no build step in bin/buddycloud-server anymore
  * print additional info messages in gray
  * fix 'file is not defined'
  * fix 'modName is not defined'
  * colorful output for package.js
  * bump tarballify version
  * rm trailing spaces
  * no build_binary.sh needed
  * separate devDependencies
  * export name
  * use packaging script
  * buddycloud-server 0.3.3
  * pass prefix to npm to force npm to use that particular prefix
  * $PREFIX/bin/buddycloud-server can be nonexistant .. so ignore all errors when removing
  * bump node version in build script
  * merge issue #37
  * specify interal config file as defaults, not as main config
  * backports to node 0.4
  * concat cwd path to config path only when config path is relative
  * respect the cwd
  * move to the right dir before builing
  * wscript is not needed anymore
  * merged #31. symlink detection for bin/buddycloud-server thanks to @highfellow
  * fixed gitignore
  * forgot Cakefile
  * pin node version for over 0.5 to get the require json working
  * get version directly
  * new buildsystem
  * check if config.syslog has keys
  * dont load default config over opts and args
  * main: fix config loading
  * wscript fixes
  * load config via jsconfig
  * update wscript
  * upgrade build environment
  * update requirements in readme
  * cleanup files
  [ Simon Tennant ]
  * Update config.js.example
  * change to read config file from /opt/buddycloud
  * Update master
  * don't be so --quiet (will help a lot with debugging)
  * Update _etc_init.d_buddycloud-server
  * the orwell defeault was causing jdesenberg problems.
  * Fixed the permissions to run as.
  * Update _etc_init.d_buddycloud-server
  * init script
  * make it really clear what to change (and what "jid" refers to)
  * Made the ownership of tables really clear. Should help avoid the problem that DD had the other day.
  [ Lloyd Watkin ]
  * Fix for checking of child element
  * Catch error event
  * Fix for server reset
  * Updated variable names to better describe what config does.
  * Merge branch 'master' of git://github.com/buddycloud/buddycloud-server into no-mod_disco
  * Allow buddycloud server to advertise additional 'proxy' components
  * Wait to sync
  * Rename of parameter
  * Allow user to specify a port or not, changed argument name as it may not actually be remote debugging.
  * Tidy up
  * Allow node.js debugging
  [ Simon ]
  * /etc/init.d/buddycloud-server

 -- Abmar Barros (buddycloud Nightly Builds) <abmar@buddycloud.com>  Sat, 26 Jan 2013 15:21:05 -0300


buddycloud-server (0.1) unstable; urgency=medium

  [ Astro ]
  * operations: all nodes in defaultConfiguration accessModel=authorize
  * operations: posts & subscriptions accessModel=authorize in defaultConfiguration
  * buddycloud-server 0.3.2
  * Cakefile: version.js + 

  * operations: fix run notifications control flow
  * build_binary.sh: get bin/buddycloud-server out of the way before npm i
  * buddycloud-server 0.3.1
  * package.json: honor all contributors
  * Merge remote-tracking branch 'schnouki/patch-1'
  * .npmignore: exclude debian/* from npm pkgs
  * buddycloud-server 0.3.0
  * package.json: bump dep versions
  * operations: prevent unsubscribing/demoting the node owner
  * operations: fix PushInbox callback
  * operations: run notifies first, then syncs, then calls back
  * pubsub_server: lower logging
  * operations: fix PushInbox newNodes
  * operations: move PushInbox syncNode post transaction
  * operations: PushInbox should work even if syncNode had hickups
  * operations: syncNode when PushInbox created it
  * operations: fix PushInbox notification & newModerators
  * model_postgres: fix & simplify purgeNode()
  * sync: fixes
  * sync: purge node if no local subscribers
  * purge node when local unsubscription is pushed from remote
  * operations: fix generateSubscriptionsNotifications followee
  * operations: fix PushInbox newModerators nodes
  * xmpp connection: doc, serialize stanzas only once
  * operations: NewModeratorNotify needs listener, not user
  * operations: fix NewModeratorNotify listener
  * operations: log Operation name
  * model_postgres: must quote "user" column for Postgres
  * operations: NewModeratorNotify must cb()
  * operations: Notify notifies w/ node
  * operations: fix Notify otherListeners
  * pubsub_client: rm debug
  * operations: NewModeratorNotify notifies w/ node & listener
  * model_postgres: optional Transaction callbacks
  * operations: fix Notify filterSubscription & filterAffiliation invokation
  * operations: fix this binding
  * operations: no pending subscriptions in subscriptions node
  * operations: NewModeratorNotify
  * operations: doc, filter subscriptions and affiliations for non-moderators
  * operations: reorganize
  * clean up logging
  * operations: posts node defaultAffiliation='publisher'
  * sync: fix AffiliationsSynchronization typo
  * buddycloud-server 0.2.3
  * package.json: fix install script
  * build_binary.sh: bump node.js version
  * buddycloud-server 0.2.2
  * package.json: add preinstall cake build
  * operations: fix notifications
  * build_binary.sh: bump node.js version
  * buddycloud-server 0.2.1
  * operations: fix Notify subscriptios node items
  * operations: fix Notify callback result
  * operations: BrowseNodeItems for subscriptions node calls getSubscriptions not getSubscription
  * operations: syntax fixes
  * operations: Notify subscriptions fixes
  * operations: subscriptions node notifications
  * operations: BrowseNodeItems for subscriptions node
  * sync: require errors
  * sync: avoid error output when omitting local node
  * router, sync: improve logging
  * backend_pubsub: PubsubBackend.notify listener robustness
  * operations: fix Subscribe defaultAffiliation
  * operations: fix ManageNodeAffiliations control flow
  * pubsub_server: PubsubOwnerSetAffiliationsRequest syntax fix
  * operations: fix requiredAffiliation()
  * operations: requiredAffiliation can be function to allow moderators approving topic channel subscribers
  * operations: ManageNodeSubscriptions refactor for efficiency
  * operations: ManageNodeSubscriptions should set new affiliations to defaultAffiliation
  * operations: fix Notify jid/user
  * operations: Notify should notify all users pertained by a subscription
  * operations: 'unsubscribe-node' notifies unsubscribed user
  * operations, pubsub_client: there's no "unsubscribed" subscription, only "none"
  * pubsub_server: PubsubOwnerSetSubscriptionsRequest syntax fix
  * operations: Unsubscribe needs PrivilegedOperation methods
  * operations: Unsubscribed is not a PrivilegedOperation but a ModelOperation
  * operations: fix callback scope
  * pubsub_server: robustify PubsubItemsRequest
  * operations: syntax
  * pubsub_server, operations: support for RetrieveItems by itemIds
  * build_binary.sh: bump node.js version to 0.6.10
  * buddycloud-server 0.2.0
  * operations: CreateNode should not allow creation with empty nodeUser username
  * operations: fix CreateNode defaults & creationDate
  * operations: fix CreateNode isTopic switcheroo
  * router: fix autosubscribeNewUsers operation name
  * router: autosubscribeNewUsers
  * config.js.example: default checkCreateNode hook checks for a specific topic domain
  * operations: fix CreateNode node typo
  * operations: fix CreateNode config
  * pubsub_server, operations: CreateNode with optional config
  * operations: fix CreateNode setSubscription()
  * operations: CreateNode catches missing checkCreateNode hook
  * operations: CreateNode default config
  * checkCreateNode config hook
  * model_postgres: fix getOwnersByNodePrefix SQL
  * operations: fix CreateNode setAffiliation()
  * operations: fix CreateNode getOwnersByNodePrefix()
  * operations: fix ../util require, CreateNode safety check
  * implement createNode with getOwnersByNodePrefix check
  * operations: begin creating topic channels
  * model_postgres: syntax fix
  * package.json: maintainer update
  * build_binary.sh: update to node 0.6.9
  * buddycloud-server 0.1.11
  * rsm_walk: fix logging
  * operations: checkAccessModel() before checkRequiredAffiliation()!
  * operations: Unsubscribe condition syntax fix
  * package.json: muffin dependency glob seems be incompatible in v3.*
  * operations: checkRequiredAffiliation should ignore no @requiredAffiliation
  * operations: fix isAffiliationAtLeast w/ invalid affiliation
  * jsconfig 0.2.0 is out! w00t!!!
  * Cakefile: lib/version.js from package.json
  * logger: update to ain2 1.0.0
  * main: fix config loading
  * buddycloud-server 0.1.10
  * router: fix syncServer()
  * buddycloud-server 0.1.9
  * bin/buddycloud-server: fix param quoting
  * bin/buddycloud-server: fix $cwd
  * buddycloud-server 0.1.8
  * .npmignore to package up built lib/* instead of src/*
  * build_binary.sh: install devDependencies beforehand
  * build_binary.sh: bump node.js version to 0.6.7
  * util: move getNodeUser(), getUserDomain()
  * main: "server successfully started"
  * sync: fix logging
  * model_postgres: fix writeItem() SQL parameter binding
  * sync: fix PaginatedSynchronization error callback
  * sync: rm TODO note
  * model_postgres: writeItem updated_query
  * operations: logging fixes
  * writeItem: move updated extraction from operations to model_postgres
  * model_postgres: writeItem should also INSERT existing updated value
  * model_postgres: fix syntax
  * model_postgres: SQL fixes
  * operations: PushInbox copies item published date
  * postgres schema: CREATE VIEW open_nodes + usage in model_postgres
  * model_postgres: fix query result handling
  * fix getTopFollowedNodes & getTopPublishedNodes parameters
  * model_postgres: fix SQL INTERVAL syntax
  * operations: BrowseNodes.fetchNodes() needs transaction
  * operations: BrowseNodes.transaction should use @fetchNodes()
  * operations: fetchNodes() typo
  * pubsub_server: browse /top-followed-nodes & /top-published-nodes does not request a particular node
  * getTopFollowedNodes & getTopPublishedNodes w/ XMPP disco interface
  * build_binary.sh: bump to node 0.6.6
  * buddycloud-server 0.1.7
  * package.json: rm cradle dependency
  * logger: syslog only with hostname
  * replace common-logger by underscore.logger
  * update ain2 dependency for node v0.6 compatibility
  * model_postgres walkListenerArchive: replace DISTINCT with GROUP BY
  * model_postgres: fix config order/limig
  * operations: ReplayArchive sorts results before capping
  * ReplayArchive/walkListenerArchive: properly cap result set
  * operations: ReplayArchive default max=50
  * build_binary.sh: use $PREFIX from environment if present
  * package.json: req node-stringprep >=0.1.1
  * router: fix
  * buddycloud-server 0.1.6
  * update to new node-waf paths
  * build_binary.sh: switch to node 0.6.4
  * package.json: depend on 0.3.1
  * router: RSM usage fix
  * logger: open logFile for appending, fixes issue #25
  * package.json: depend on node-xmpp >= 0.3.0
  * operations ReplayArchive: fix rsm max
  * operations: ReplayArchive RSM support
  * backend_pubsub: notificationPush updates include sender & actor
  * router: detectUserType fixes
  * router: detectUserType fixes
  * logger: fix argument iteration
  * main, backend_pubsub: logging improvements
  * backend_pubsub: include user in notfound error
  * connection: loopback stanzas to ourselves
  * router: add missing util.inspect include
  * router.run: trace req
  * router: add missing rsm include
  * logger: typo
  * logger: fix level
  * logging clean-up
  * router, pubsub_{server,client}: @type in <actor/>
  * buddycloud-server 0.1.5
  * router: sync fixes
  * buddycloud-server 0.1.4
  * ManageNodeAffiliations: non-owner may not elect a new owner
  * sync: log upon completion
  * sync: transaction fix
  * move some sync logic into router, lock per node
  * operations: BrowseNodeInfo/RetrieveNodeConfiguration w/o access control
  * buddycloud-server 0.1.3
  * operations: deny Unsubscribe from own nodes
  * logger: ain2 syslog transport
  * logger: message always as string
  * main: fix --stdout kludge
  * logger: avoid log level < 0
  * config.js.example: syslog on by default
  * config.js.example: logging section
  * syslog support with ain2
  * support --stdout logging
  * replace cnlogger by common-logger
  * buddycloud-server 0.1.2
  * build_binary: npm install globally (into /opt/buddycloud-server/)
  * build_binary: dedup node & npm versions
  * build_binary: default to /opt/buddycloud-server, bin/ script
  * main: process.title fix
  * version: fix package.json path
  * version from package.json in process.title and for jabber:iq:version
  * xmpp/connection: do not subscribe in probePresence()
  * buddycloud-server 0.1.1
  * build_binary: bump node & npm versions
  * backend_pubsub: reply() must also copy 'replay' field on MaxStanzaSizeExceeded
  * connection: more stanza output when MaxStanzaSizeExceeded
  * don't send ReplayArchive notifications to all online resources
  * pubsub_client/connection: wrap error replies into StanzaError earlier
  * logging fixes
  * port to cnlogger
  * port to broken winston logging
  * xmpp connection: always tell node-xmpp to reconnect
  * async.filter iterator does not take error parameter
  * model_postgres: fix nodeExists warning
  * backend_pubsub: fix notification matching
  * sync: fix router.authorizeFor() usage
  * sync: writeItem does not need author anymore
  * operations: typo
  * model_postgres: fix getListenerAffiliations() query
  * sync: careful
  * xmpp/forms: oops, s/creationTime/creationDate/
  * xmpp/connection: fix name
  * router: check for anonymous user to be online
  * anonymous user offline tracking & clean-up
  * model_postgres: fix walkListenerArchive() node in results
  * router: fix method binding
  * model_postgres: walkListenerArchive() should include node in results
  * operations: RemoveUser & model_postgres.getUserRemoteSubscriptions() & clearUserSubscriptions()
  * BuddycloudDiscovery::detectAnonymousUser
  * backend_pubsub: gracefully handle MaxStanzaSizeExceeded for notifications
  * xmpp pubsub_server & connection: fix graceful MaxStanzaSizeExceeded handling
  * errors: MaxStanzaSizeExceeded extends Error
  * operations: s/geoloc/geo/
  * operations: /subscription items shall contain jid=owner
  * metadata buddycloud#channel_type
  * proper metadata field names
  * support for creationDate
  * operations: clarify logging
  * router: fix remote backend selection
  * operations: Unsubscribe refactor & fix
  * operations: fix Register
  * buddycloud-server 0.1.0
  * operation: print opName on commit, rm debug
  * bin/buddycloud-server: don't cd so config can be loaded relatively
  * Merge remote-tracking branch 'origin/cli'
  * operations: RetractItems should allow anyone to remove their own posts
  * operations: preserve affiliation if previously affiliated
  * operations: unify into isAffiliationAtLeast()
  * operations: rm leftover TODO note
  * operations: refactor Register; should check if authoritative for user's domain
  * router.run: return 404 for nodes not locally subscribed but discovered ourselves
  * rm explicit author handling in postgres schema, model, operations
  * main: check sender authorization for authorizationPrompt
  * operations: RetrieveItems shall not virtualize items for cache case of remote nodes
  * Revert "Made the ownership of tables really clear. Should help avoid the problem that DD had the other day."
  * s/channel-server/buddycloud-server/g
  * build_binary.sh: fix invokation hint
  * README: rm some outdated stuff
  * main: fix defaultConfig stuff
  * build_binary.sh
  * operations: RetrieveItems.retrieveSubscriptionsItems() result set sorting, affiliations
  * virtual handling of /user/.../subscriptions node items
  * MAM replays subscription authorization requests
  * more authorization stuff
  * fixes
  * small fixes
  * package.json: fix bin path
  * further authorizationPrompt work
  * backend_pubsub: missedSomething was missing
  * package.json: fix coffeescript path (./node_modules/...)
  * sending authorize notification forms
  * package.json: fix .coffee compilation stage
  * operations: PrivilegedOperation.fetchActorAffilliation fetches all listener affiliations for inbox sync
  * pubsub_notifications: fix MAM stanzas
  * operations: subscribe defaultAffiliation, fixes
  * model_postgres: many fixes
  * operations: publishModel 'subscribers'
  * operations: access control fixes
  * begin access control, affiliations checking
  * model_postgres: fixes
  * errors: fix error classes
  * xmpp/connection: fix
  * xmpp/connection: fix @missedServerTimeouts usage
  * model_postgres: safety checks
  * readability, notes
  * rsm_walk: fix serious errors
  * globally refactor operation from function to value
  * sync: fixes
  * add forgotten rsm_walk file
  * move syncQueue from main.coffee to fine-grained sync.syncNode
  * xmpp/connection: readability
  * xmpp/connection: track <you-missed-something/> timers with @missedServerTimeouts
  * syncServer support, wired up to <you-missed-something/> 'syncNeeded'
  * model_postgres: for an actor, getSubscriptions() shall return not only users but also listeners
  * MAM time specification
  * primitive MAM implementation
  * send <you-missed-something/>
  * operations: PushInbox TODO note
  * sync: rm request.rsm.max clamp
  * synchronization with state resetting and subscriptions/affiliations support
  * pubsub_*: fix user/jid conventions
  * ConfigSynchronization should use browse-node-info to get node config
  * synchronizing!
  * synchronization kinda works, but hits RSM loops
  * further synchronization progress
  * begin synchronization
  * main: require async
  * measure stanza size, gracefully retry with smaller result set
  * synchronization groundwork
  * don't let backend_pubsub call router.runLocally(), return errors.SeeLocal() instead
  * errors: clean up
  * normalize: add <link rel="self" href="xmpp:...?pubsub;action=retrieve;..."/>
  * operations: Publish shall allow new items with specified @id
  * nodes browsing, with RSM
  * backend_pubsub: run() should bail out early on invalid node form
  * PostgreSQL tuning
  * complete RSM implementation
  * begin RSM for all operations
  * generify RSM stuff
  * pubsub_client: RSM
  * fixes from CCCamp11
  * RSM for local items retrieving
  * begin new RSM implementation
  * pubsub_server: publish-node-items shall reply with item ids
  * model_postgres: fix getNodeListeners() SQL
  * model_postgres: nodeExists() shall check for NOT NULL
  * model_postgres: getNodeListener() replace filter by SQL
  * model_postgres: getNodeListener() filter for null
  * model_postgres: fix setSubscription() INSERT w/o listener
  * error printout
  * forms: fix
  * operations: PushInbox author fix
  * debug
  * xml child robustness
  * model_postgres: fix nodeExists()
  * fix subscription listener for local users
  * logging cleanup
  * initiate presence tracking of users
  * xmpp/connection: use send() instead of specifying from jid
  * some logging cleanup
  * operations: push-inbox does not set subscription listener
  * fixes & TODO notes
  * operations: Notify.transaction() must call cb()
  * retrieve-node-configuration
  * forms: configToResultForm -> configToForm
  * pubsub_client: RetrieveNodeConfiguration & ManageNodeConfiguration
  * operations: catch reply cb exceptions
  * create-node operation
  * package.json: scripts
  * fixes
  * fix outgoing notifications
  * generify pubsub_notifications
  * many fixes for subscription pushing
  * router: if request writes, always go remote
  * push incoming notifications to local model
  * more subclassing of EventEmitter, incoming notifications handling
  * pubsub_server: unify PubsubRequest & PubsubOwnerRequest
  * merge request.coffee into pubsub_server.coffee
  * begin remote subscription pushing to local inbox
  * backend_pubsub: PubsubBackend.notify(): readability
  * tune to use single cb() instead of req.{reply,replyError}()
  * revive normalization
  * model_postgres: setSubscription(): coearce isSet to boolean
  * model_postgres: catch lost transactions
  * pubsub_client: error reporting, fix
  * subscribe reply status
  * model_postgres: setAffiliation() should check nodeExists()
  * fix disco.authorizeFor() usage
  * pubsub_client: fix <actor/> placement
  * refactor notifications a bit
  * pubsub_client: <actor/> placement fix
  * pubsub_client: fix <actor/> placement
  * pubsub_notifications: subscriptions/affiliations/config
  * fix registration/model callback parameters
  * operations: ManageNodeAffiliations validates accessModel & publishModel
  * setting configuration
  * fixes, fixes, config
  * only RegisterSetRequest should induce presence subscription
  * FIXME note
  * model_postgres: do not use rowCount
  * operations: Register created default configuration
  * pubsub_server: pubsub/inbox identity
  * fixes, StanzaError
  * implement pubsub_client operations
  * pubsub_notifications: byOperation()
  * fixes
  * fixes
  * fixes & debugging
  * fixes
  * debugging & fixes
  * fixes
  * begin discovering locally
  * fixes
  * Router.run: fix
  * fixes
  * operations: rename channel node to "posts"
  * begin notifications
  * a bit o' twiddling w/ subscription listeners
  * refactor router for remote requests
  * operations: subscribe/unsubscribe toggle affiliation none/member
  * router: rename frontend to backend
  * rename backend_postgres to model_postgres, revive router
  * main: move iqHandler to pubsub_server
  * manage, not only retrieve, subscriptions & affiliations
  * use subscribe sender as notification listener
  * backend_pubsub: replace ternary operator
  * need to store listener in subscriptions...
  * backend_pubsub: implement RequestCache
  * new untested buddycloud discovery with backend_pubsub.coffee
  * retrieve <actor/> generalized, begin using authorizeFor
  * ns: add BUDDYCLOUD_V1 xmlns
  * postgres.sql schema: updated column for more tables, author column for items
  * retrieving node affiliations
  * retrieving node subscriptions, fixes
  * backend_postgres: syntax fixes
  * operation: Register should set affiliation & subscription
  * retrieving subscriptions & affiliations
  * retracting items
  * publishing & retrieving items works
  * begin item retrieving
  * subscribe & unsubscribe
  * fix backend_postgres (user is a Pg keyword, must be quoted as column name)
  * publishing works
  * lots of fixes
  * fix disco requests
  * fix, fix, fix
  * begin implementing register & publish implementation
  * mv src/operations.coffee src/local/operations.coffee
  * revive backend
  * primitive operations
  * mv controller.coffee operations.coffee
  * dead code TODO
  * fixes
  * rm old dead code
  * rename iqhandler to request
  * begin some refactoring
  * begin hooking up handlers with operations
  * xmpp/pubsub_server: indicate operation types
  * notes
  * pubsub_server: PubsubOwnerHandlers
  * pubsub_server: flesh out more pubsub handlers
  * add affiliations checking
  * begin interweaving with local operations
  * a tad of interconnecting
  * pubsub_server: DiscoInfoHandler.reply()
  * xmpp client 'n stuff
  * README: draw new design
  * begin router
  * xmpp: move NS_* to ns.coffee
  * xmpp: primitive disco info works
  * begin iqhandler
  * xmpp/connection: port presence tracking
  * rm main.js
  * move src files around
  * rm model_couchdb from config, add preliminary main.coffee
  * a bit new controller
  * rm old test_controller
  * some controller work
  * old controller translated to coffeescript
  * port peripheral stuff over to coffeescript
  * README: change ejabberd port to the config default one
  * model_couchdb: s/doc.subscribers/doc.subscriptions/
  * xmpp_pubsub.js: fix typo
  * model_postgres: check nodeExists before any data modification
  * preliminary RSM (XEP-0059) implementation for retrieve-items/retrieve
  * model_couchdb: stub getUpdatesByTime()
  * MAM should result in direct message, not broadcast notification to all resources
  * MAM w/ working model_postgres backend
  * begin implementing MAM
  * controller: register/register should create /user/<jid>/subscriptions node
  * normalize fixes + tests
  * normalize
  * only one child element per item
  * model_postgres: fix setConfig()
  * model_postgres: listNodesByUser()
  * model_couchdb: listNodesByUser(), simplify listNodes()
  * controller, xmpp_pubsub: browse-nodes/by-user
  * model_postgres setConfig(): fixes
  * configuration notification
  * model_postgres setConfig(): do not set fields unspecified/without defaultConfig
  * model_postgres nodeExists(): indentation
  * controller: subscribe should not require preexisting affiliation
  * xmpp_pubsub: fix manage-subscriptions/retrieve result usage
  * controller: allow retrieving subscriptions & affiliations for members
  * xmpp_pubsub: syntax fix
  * model_postgres: fix queue pushing
  * xmpp_pubsub: fix info discovery reply FORM_TYPE
  * model_postgres: config fixes
  * more on extended config
  * model_couchdb, model_postgres: more flexible config schema
  * config: description, type, creationDate; setConfig() on create-node/register
  * xmpp_pubsub: optimize presence tracking
  * controller: requiredAffiliation='member' for config-node/retrieve
  * README: OpenFire
  * controller: defaultConfig() + use in feature 'config-node'
  * xmpp_pubsub: replace isOnline() with getOnlineResources()
  * model_postgres: fix transaction dequeueing
  * model_postgres: move cb() past process.nextTick/dbIsAvailable for safety
  * model_postgres: work around empty responses
  * test_controller: retract
  * xmpp_pubsub: disco <identity/> according to discovered @node
  * test_controller: browse-nodes
  * model_couchdb: fix preload() etag extraction + error reporting
  * xmpp_pubsub: FeatureNotImplemented message
  * controller: simulate a stack for debug info
  * test_controller: retract skeleton
  * controller unsubscribe: do not fetch affiliation from database but check by node path
  * implement & test unsubscribe
  * test_controller: skeletons
  * test_controller: publishing tests
  * test_controller: more publish testing + controller fix
  * test_controller: begin test publishing
  * model_postgres: fix forgotten variable
  * model_postgres: reconnect to database upon error
  * model_postgres: oops, syntax error
  * config.js.example: postgres is actually the one with a poolSize
  * model_postgres: oops, syntax errors
  * begin test_controller
  * fixes
  * subscriptionModified <message/>
  * xmpp_pubsub: "message" & approve() fixes
  * controller: replace ownerNotification with afterTransaction
  * access_model authorize
  * package.json & README
  * errors: pull inherits() from util/utils/sys for moving node api
  * browse open nodes with service discovery items
  * controller: refactor affiliations checking
  * xmpp_pubsub: fix subscriptions format
  * controller: treat missing accessModel as 'open'
  * model_couchdb: preload() etag fix
  * .gitignore with config.js
  * xmpp_pubsub: node config on disco info
  * model_couchdb: encodeURIComponent() only for db.head() & .get()
  * main.js: #!
  * rename config.js to config.js.example
  * restore default config.js
  * main.js: on uncaughtException
  * postgres doc & config
  * model_postgres
  * model_couchdb: fix item deserialization
  * model_couchdb: rm implemented TODOs
  * README: CouchDB configuration
  * README: TODO++
  * LICENSE
  * README: markdown fix
  * README: mention buddycloud :)
  * model_couchdb: fix views initialization
  * README & config
  * jabber:iq:register
  * model_couchdb: fixes
  * errors fixing
  * rm model_persistence
  * model_couchdb: assertNodeName()
  * main: catch uncaughtException
  * controller: fix
  * bugs, readability
  * model_couchdb: fixing
  * controller: implement affiliations checking
  * xmpp_pubsub: getAffiliations() result is now Array
  * model_couchdb: setSubscription() & setAffiliation() 'none'
  * model_couchdb: consolidate subscriptions & affiliations model
  * xmpp_pubsub: send notifications with type='headline'
  * xmpp_pubsub: subscribeIfNeeded() on <create/> & <subscribe/>
  * model_couchdb: load() shortcut when already cached
  * model_couchdb: createNode() fix
  * model_couchdb: preload()
  * model_couchdb: commit read documents too for integrity
  * model_couchdb: abstract views
  * CouchDB Optimistic Concurrency Control layer
  * controller: improve error propagation
  * defined error conditions
  * untested configuration getting/setting
  * service discovery
  * modify-affiliations
  * model_couchdb: getAffiliation()
  * begin permission checking infrastructure
  * presence probes
  * xmpp_pubsub: presence tracking
  * refactoring controller complete
  * continue refactoring controller into features/operations
  * begin refactoring controller into features/operations
  * subscribers
  * getting subscriptions & affiliations
  * createNode improvements
  * controller createNode: check node
  * model_couchdb: affiliations view
  * items getting
  * much more progress
  * implement retraction, s/notifySubscriber/notify/, s/writeItems/writeItem/
  * publish notification works
  * more frontend hooking
  * begin notification hooks
  * fixes
  * begin model_couchdb transactions
  * split model
  * some progress
  * some progress
  * createNode creates owner affiliation
  * model: indexes
  [ Thomas Jost ]
  * Add @denisw to contributors
  * Upgrade required node version to 0.8
  * We actually need remote subscriptions nodes
  * Merge branch 'feature/anon-fixes' into develop
  * Merge branch 'feature/really-validate-post-times' into develop
  * Reject remote posts with invalid dates
  * Add tests for remote posts with invalid dates
  * Force anon subscriptions to be temporary
  * Set default affiliation to 'none' for anon users
  * Merge branch 'feature/anon-fixes' into develop
  * Cleanup: remove some dead code
  * Purge remote nodes with no local subscription left
  * Merge branch 'feature/recent-items' into develop
  * Merge branch 'feature/validate-remote-items' into develop
  * Sort recent items by update time
  * Merge branch 'feature/validate-remote-items' into feature/recent-items
  * Fix tests that push remote items
  * Validate remote items
  * Add (failing) tests for invalid remote items
  * Implement recent items query
  * Add (failing) test for recent items query
  * PubSub replies can include several elements
  * Merge branch 'feature/pusher' into develop
  * Workaround callback woes
  * Fix MAM for pusher component
  * Pusher: test MAM
  * test_server: move makePublishIq into TestServer
  * Pusher: test node configuration
  * Pusher: test unsubscriptions
  * Merge branch 'feature/affiliations-fixes' into develop
  * Merge branch 'feature/pubsub-disco-features' into develop
  * Cleanup
  * Expose all implemented PubSub features
  * Pusher: test affiliations
  * Merge branch 'feature/affiliations-fixes' into feature/pusher
  * Fix affiliation in /subscriptions notifications
  * Accept PubSub-compliant affiliations notifications
  * Pusher: test subscriptions
  * Merge branch 'feature/fix-98' into develop
  * Fix SQL for updating replies
  * Add failing test for issue #98
  * Fix offline user cleanup
  * DB: drop anonymous column
  * Yet another federation test
  * Check if the example config file is valid JS
  * Add tests for pusher code
  * Pusher can MAM everything
  * Pusher is a listener for all notifications
  * Add config for pusher component
  * Merge branch 'feature/mam-fixes' into develop
  * Increase the default number of items in a MAM response
  * Make MAM return an error if there are too many results
  * Use RSM in MAM
  * Test MAM RSM
  * MAM: filter bad dates out
  * Test if MAM validates dates correctly
  * Ensure the giant MAM test doesn't pollute the test environment
  * Make affiliations notifications PubSub-compliant
  * Affiliations have update timestamps too
  * Avoid temporary subscriptions in MAM results
  * Advertise support for MAM in disco#info
  * Add a giant MAM test
  * Update Travis URL in README.md
  * Merge branch 'feature/tests' into develop
  * Correctly tests that updated items don't change <in-reply-to/>
  * Move tests on updated items to a different function
  * Add tests for updates that change <in-reply-to/>
  * Use Travis to automate testing
  * Merge branch 'master' into develop
  * Add compatibility with PostgreSQL 9.1
  * Require at least one item to retract
  * Add Emacs folding marks
  * Add retrieve and retract tests
  * Fix retraction stanza sent to remote services
  * Tombstones: include Atom namespace in <updated/> element
  * Fix error when not allowed to retract an item
  * Tombstones can't be updated
  * When publishing an update, check if the actor is the original author
  * Check if original post exists before publishing a reply
  * Reject posts from non-users
  * Don't include type in <actor/>
  * Complete post/update/retract tests
  * TestServer: fix Atom in-reply-to element
  * Fail when some unwanted event happens
  * Add description for calls to "should.exist"
  * Retraction tests
  * Workaround CoffeeScript weird scoping rules
  * Add another batch of tests
  * Update test data
  * Change the way the test server emits IQ stanzas
  * Tests for posting to remote channels
  * Test server: emit event for IQs with unknown ID
  * Test server: disco info for "remote" servers
  * More post tests
  * Add helper to run tests that trigger several different stanzas
  * Test server: handle <message/> stanzas
  * Add post tests
  * Post tests: helper to check if post was successful
  * Throw an exception when getting an unexpected error IQ
  * Start adding post tests
  * Add helpers for pubsub get IQs and Atom handling
  * Helpers to add initial test data in the database
  * Add XMPP namespaces to test_server.coffee
  * Reply to presence probes
  * Don't parse Elements again
  * Use same user and server names as in sfc
  * Safe path handling in prepare-db.sh
  * Add codo-like doc to the TestServer class
  * Add helpers to build disco and pubsub IQs
  * Expose support for PubSub node creation
  * Skip a test
  * More channel creation tests
  * New tests and helpers for forms
  * Add a helper to parse disco#info replies
  * Move common disco replies to test_server.coffee
  * Start testing for channel creation
  * Test server: handle disco#items queries
  * Make tests runnable using "npm test"
  * Basic disco tests
  * Start a test suite
  * Use an existing component connection if provided in config
  * Make it possible to require() the server
  * Update config.js.example
  * Fix autosubscribeNewUsers
  * Increase the max number of items in each RSM page
  * Better shrinking of oversized stanzas
  * Include `-dirty' in version number from git
  * Remove glob from dependencies
  * Fix indentation in main.coffee
  * Prevent existing persistent subscription from being made temporary
  * Merge branch 'feature/version-number-from-git' into develop
  * Expose support for XEP-0092 (Software Version) in disco
  * Use `git describe' to get version numbers in dev branches
  * Merge branch 'master' into next
  * Restore compatibility with Node 0.6
  * Fix handling of offline users
  * Avoid race condition in disco cache
  * Shrink oversized stanzas more aggressively
  * Avoid nulls
  * Include new files in release tarball
  * Avoid race condition in disco cache
  * Merge remote-tracking branch 'upstream/tempsub' into next
  * Merge branch 'db-versioning' into next
  * buddycloud-server 0.3.5
  * Check if remote supports temporary subscription before sending a tempsub request
  * Client can check for server features before sending an IQ
  * Make server features discoverable
  * Log errors when processing incoming messages
  * Cleanup
  * Remove empty text nodes from items
  * Fix ActivityStreams verb for replies
  * Include operation name in debug message
  * Don't notify unsubscribe when it was a temporary subscription
  * Offline user cleanup: do real unsubscribe operations
  * I'm dumb
  * Don't delete temporary subscriptions during sync
  * Don't send any notification for temporary subscriptions
  * Client and server must speak the same language
  * Only send notifications about temporary subscriptions to remote listeners
  * Cleanup offline users
  * Claim we support subscription options
  * Temporary subscriptions
  * Fix updating items
  * Add help channels to default autosubscriptions
  * Merge branch 'log-fix'
  * Inspect objets in log messages
  * Fix broken log messages
  * Don't write subscription stanzas in items table
  * Merge remote-tracking branch 'lloyd/config'
  * Populate in_reply_to column when inserting new items
  * DB cleanup at startup
  * Add README for DB schema versioning
  * Upgrade DB schema
  * Check DB schema version on startup
  * Don't change <published/> when updating an existing post
  * Fix subscription to remote private channels
  * Don't fail when the default config file does not exist
  * Add Lloyd in contributors
  * Better logging for replies sent by 'proxy' components
  * Merge branch 'mam-result'
  * Include <result/> in MAM replies
  * Merge remote-tracking branch 'schnouki/atom-tombstones'
  * Fix typo
  * Merge pull request #61 from lloydwatkin/no-mod_disco
  * Also send tombstones in retract notifications
  * Use Atom tombstones for deleted items
  * xmpp: XEP-0313 compliance
  * Handle PubSub retract "notify" attribute
  * operations: fix PushInbox notification
  * Fix undefined variable when paging backwards in RSM
  [ Tuomas Koski ]
  * Merge pull request #59 from lloydwatkin/initialise-sync
  * Merge pull request #58 from lloydwatkin/master
  [ Steven Lloyd Watkin ]
  * Ensure we do not cause BC breaks
  * Make both defaults positive rather than one positive & the other negative Broke the config options down further
  * Fix build console output
  * "package" now a reserved word in node, caused failing in builds (v0.6.15+)
  [ Denis Washington ]
  * Use local CoffeeScript "cake" for "npm install"
  [ Jonas Smedegaard ]
  * Setup access rights and needed dirs when starting daemon
  * Speedup system shutdown by avoiding explicit sysV stop
  * xmpp_pubsub: check for commandEl prior usage
  [ Reginald dude ]
  * updates sent via email from vorner.cz
  * updates sent via email from vorner.cz
  [ Reginald Dude ]
  * Most confusing config file ever
  [ ▟ ▖▟ ▖ ]
  * Merge pull request #70 from lloydwatkin/fix-is-function
  * Merge pull request #63 from lloydwatkin/no-mod_disco
  * Merge pull request #62 from lloydwatkin/no-mod_disco
  * Merge pull request #57 from Schnouki/xep-0313
  * Merge pull request #54 from Schnouki/fix-notif
  * Merge pull request #52 from lloydwatkin/master
  * Merge pull request #51 from lloydwatkin/master
  [ James Tait ]
  * Ensure both the PID dir and log dir are created on startup if they do not already exist.
  [ imaginator ]
  * aligning with INSTALL instructions
  * moved instructions to wiki
  * Edited README.md via GitHub
  [ dodo ]
  * fix accessModel of geo nodes
  * always test in production
  * buddycloud-server 0.3.4
  * Merge branch 'packaging'
  * put the /etc/init.d script into tarball
  * not needed anymore
  * default options for new channels
  * bump tarballify version
  * add bin/buddycloud-server to the tarball
  * no build step in bin/buddycloud-server anymore
  * print additional info messages in gray
  * fix 'file is not defined'
  * fix 'modName is not defined'
  * colorful output for package.js
  * bump tarballify version
  * rm trailing spaces
  * no build_binary.sh needed
  * separate devDependencies
  * export name
  * use packaging script
  * buddycloud-server 0.3.3
  * pass prefix to npm to force npm to use that particular prefix
  * $PREFIX/bin/buddycloud-server can be nonexistant .. so ignore all errors when removing
  * bump node version in build script
  * merge issue #37
  * specify interal config file as defaults, not as main config
  * backports to node 0.4
  * concat cwd path to config path only when config path is relative
  * respect the cwd
  * move to the right dir before builing
  * wscript is not needed anymore
  * merged #31. symlink detection for bin/buddycloud-server thanks to @highfellow
  * fixed gitignore
  * forgot Cakefile
  * pin node version for over 0.5 to get the require json working
  * get version directly
  * new buildsystem
  * check if config.syslog has keys
  * dont load default config over opts and args
  * main: fix config loading
  * wscript fixes
  * load config via jsconfig
  * update wscript
  * upgrade build environment
  * update requirements in readme
  * cleanup files
  [ Simon Tennant ]
  * Update config.js.example
  * change to read config file from /opt/buddycloud
  * Update master
  * don't be so --quiet (will help a lot with debugging)
  * Update _etc_init.d_buddycloud-server
  * the orwell defeault was causing jdesenberg problems.
  * Fixed the permissions to run as.
  * Update _etc_init.d_buddycloud-server
  * init script
  * make it really clear what to change (and what "jid" refers to)
  * Made the ownership of tables really clear. Should help avoid the problem that DD had the other day.
  [ Lloyd Watkin ]
  * Fix for checking of child element
  * Catch error event
  * Fix for server reset
  * Updated variable names to better describe what config does.
  * Merge branch 'master' of git://github.com/buddycloud/buddycloud-server into no-mod_disco
  * Allow buddycloud server to advertise additional 'proxy' components
  * Wait to sync
  * Rename of parameter
  * Allow user to specify a port or not, changed argument name as it may not actually be remote debugging.
  * Tidy up
  * Allow node.js debugging
  [ Simon ]
  * /etc/init.d/buddycloud-server

 -- Abmar Barros (buddycloud Nightly Builds) <abmar@buddycloud.com>  Sat, 26 Jan 2013 15:21:12 -0300


buddycloud-server (0.1) unstable; urgency=medium

  [ Astro ]
  * operations: all nodes in defaultConfiguration accessModel=authorize
  * operations: posts & subscriptions accessModel=authorize in defaultConfiguration
  * buddycloud-server 0.3.2
  * Cakefile: version.js + 

  * operations: fix run notifications control flow
  * build_binary.sh: get bin/buddycloud-server out of the way before npm i
  * buddycloud-server 0.3.1
  * package.json: honor all contributors
  * Merge remote-tracking branch 'schnouki/patch-1'
  * .npmignore: exclude debian/* from npm pkgs
  * buddycloud-server 0.3.0
  * package.json: bump dep versions
  * operations: prevent unsubscribing/demoting the node owner
  * operations: fix PushInbox callback
  * operations: run notifies first, then syncs, then calls back
  * pubsub_server: lower logging
  * operations: fix PushInbox newNodes
  * operations: move PushInbox syncNode post transaction
  * operations: PushInbox should work even if syncNode had hickups
  * operations: syncNode when PushInbox created it
  * operations: fix PushInbox notification & newModerators
  * model_postgres: fix & simplify purgeNode()
  * sync: fixes
  * sync: purge node if no local subscribers
  * purge node when local unsubscription is pushed from remote
  * operations: fix generateSubscriptionsNotifications followee
  * operations: fix PushInbox newModerators nodes
  * xmpp connection: doc, serialize stanzas only once
  * operations: NewModeratorNotify needs listener, not user
  * operations: fix NewModeratorNotify listener
  * operations: log Operation name
  * model_postgres: must quote "user" column for Postgres
  * operations: NewModeratorNotify must cb()
  * operations: Notify notifies w/ node
  * operations: fix Notify otherListeners
  * pubsub_client: rm debug
  * operations: NewModeratorNotify notifies w/ node & listener
  * model_postgres: optional Transaction callbacks
  * operations: fix Notify filterSubscription & filterAffiliation invokation
  * operations: fix this binding
  * operations: no pending subscriptions in subscriptions node
  * operations: NewModeratorNotify
  * operations: doc, filter subscriptions and affiliations for non-moderators
  * operations: reorganize
  * clean up logging
  * operations: posts node defaultAffiliation='publisher'
  * sync: fix AffiliationsSynchronization typo
  * buddycloud-server 0.2.3
  * package.json: fix install script
  * build_binary.sh: bump node.js version
  * buddycloud-server 0.2.2
  * package.json: add preinstall cake build
  * operations: fix notifications
  * build_binary.sh: bump node.js version
  * buddycloud-server 0.2.1
  * operations: fix Notify subscriptios node items
  * operations: fix Notify callback result
  * operations: BrowseNodeItems for subscriptions node calls getSubscriptions not getSubscription
  * operations: syntax fixes
  * operations: Notify subscriptions fixes
  * operations: subscriptions node notifications
  * operations: BrowseNodeItems for subscriptions node
  * sync: require errors
  * sync: avoid error output when omitting local node
  * router, sync: improve logging
  * backend_pubsub: PubsubBackend.notify listener robustness
  * operations: fix Subscribe defaultAffiliation
  * operations: fix ManageNodeAffiliations control flow
  * pubsub_server: PubsubOwnerSetAffiliationsRequest syntax fix
  * operations: fix requiredAffiliation()
  * operations: requiredAffiliation can be function to allow moderators approving topic channel subscribers
  * operations: ManageNodeSubscriptions refactor for efficiency
  * operations: ManageNodeSubscriptions should set new affiliations to defaultAffiliation
  * operations: fix Notify jid/user
  * operations: Notify should notify all users pertained by a subscription
  * operations: 'unsubscribe-node' notifies unsubscribed user
  * operations, pubsub_client: there's no "unsubscribed" subscription, only "none"
  * pubsub_server: PubsubOwnerSetSubscriptionsRequest syntax fix
  * operations: Unsubscribe needs PrivilegedOperation methods
  * operations: Unsubscribed is not a PrivilegedOperation but a ModelOperation
  * operations: fix callback scope
  * pubsub_server: robustify PubsubItemsRequest
  * operations: syntax
  * pubsub_server, operations: support for RetrieveItems by itemIds
  * build_binary.sh: bump node.js version to 0.6.10
  * buddycloud-server 0.2.0
  * operations: CreateNode should not allow creation with empty nodeUser username
  * operations: fix CreateNode defaults & creationDate
  * operations: fix CreateNode isTopic switcheroo
  * router: fix autosubscribeNewUsers operation name
  * router: autosubscribeNewUsers
  * config.js.example: default checkCreateNode hook checks for a specific topic domain
  * operations: fix CreateNode node typo
  * operations: fix CreateNode config
  * pubsub_server, operations: CreateNode with optional config
  * operations: fix CreateNode setSubscription()
  * operations: CreateNode catches missing checkCreateNode hook
  * operations: CreateNode default config
  * checkCreateNode config hook
  * model_postgres: fix getOwnersByNodePrefix SQL
  * operations: fix CreateNode setAffiliation()
  * operations: fix CreateNode getOwnersByNodePrefix()
  * operations: fix ../util require, CreateNode safety check
  * implement createNode with getOwnersByNodePrefix check
  * operations: begin creating topic channels
  * model_postgres: syntax fix
  * package.json: maintainer update
  * build_binary.sh: update to node 0.6.9
  * buddycloud-server 0.1.11
  * rsm_walk: fix logging
  * operations: checkAccessModel() before checkRequiredAffiliation()!
  * operations: Unsubscribe condition syntax fix
  * package.json: muffin dependency glob seems be incompatible in v3.*
  * operations: checkRequiredAffiliation should ignore no @requiredAffiliation
  * operations: fix isAffiliationAtLeast w/ invalid affiliation
  * jsconfig 0.2.0 is out! w00t!!!
  * Cakefile: lib/version.js from package.json
  * logger: update to ain2 1.0.0
  * main: fix config loading
  * buddycloud-server 0.1.10
  * router: fix syncServer()
  * buddycloud-server 0.1.9
  * bin/buddycloud-server: fix param quoting
  * bin/buddycloud-server: fix $cwd
  * buddycloud-server 0.1.8
  * .npmignore to package up built lib/* instead of src/*
  * build_binary.sh: install devDependencies beforehand
  * build_binary.sh: bump node.js version to 0.6.7
  * util: move getNodeUser(), getUserDomain()
  * main: "server successfully started"
  * sync: fix logging
  * model_postgres: fix writeItem() SQL parameter binding
  * sync: fix PaginatedSynchronization error callback
  * sync: rm TODO note
  * model_postgres: writeItem updated_query
  * operations: logging fixes
  * writeItem: move updated extraction from operations to model_postgres
  * model_postgres: writeItem should also INSERT existing updated value
  * model_postgres: fix syntax
  * model_postgres: SQL fixes
  * operations: PushInbox copies item published date
  * postgres schema: CREATE VIEW open_nodes + usage in model_postgres
  * model_postgres: fix query result handling
  * fix getTopFollowedNodes & getTopPublishedNodes parameters
  * model_postgres: fix SQL INTERVAL syntax
  * operations: BrowseNodes.fetchNodes() needs transaction
  * operations: BrowseNodes.transaction should use @fetchNodes()
  * operations: fetchNodes() typo
  * pubsub_server: browse /top-followed-nodes & /top-published-nodes does not request a particular node
  * getTopFollowedNodes & getTopPublishedNodes w/ XMPP disco interface
  * build_binary.sh: bump to node 0.6.6
  * buddycloud-server 0.1.7
  * package.json: rm cradle dependency
  * logger: syslog only with hostname
  * replace common-logger by underscore.logger
  * update ain2 dependency for node v0.6 compatibility
  * model_postgres walkListenerArchive: replace DISTINCT with GROUP BY
  * model_postgres: fix config order/limig
  * operations: ReplayArchive sorts results before capping
  * ReplayArchive/walkListenerArchive: properly cap result set
  * operations: ReplayArchive default max=50
  * build_binary.sh: use $PREFIX from environment if present
  * package.json: req node-stringprep >=0.1.1
  * router: fix
  * buddycloud-server 0.1.6
  * update to new node-waf paths
  * build_binary.sh: switch to node 0.6.4
  * package.json: depend on 0.3.1
  * router: RSM usage fix
  * logger: open logFile for appending, fixes issue #25
  * package.json: depend on node-xmpp >= 0.3.0
  * operations ReplayArchive: fix rsm max
  * operations: ReplayArchive RSM support
  * backend_pubsub: notificationPush updates include sender & actor
  * router: detectUserType fixes
  * router: detectUserType fixes
  * logger: fix argument iteration
  * main, backend_pubsub: logging improvements
  * backend_pubsub: include user in notfound error
  * connection: loopback stanzas to ourselves
  * router: add missing util.inspect include
  * router.run: trace req
  * router: add missing rsm include
  * logger: typo
  * logger: fix level
  * logging clean-up
  * router, pubsub_{server,client}: @type in <actor/>
  * buddycloud-server 0.1.5
  * router: sync fixes
  * buddycloud-server 0.1.4
  * ManageNodeAffiliations: non-owner may not elect a new owner
  * sync: log upon completion
  * sync: transaction fix
  * move some sync logic into router, lock per node
  * operations: BrowseNodeInfo/RetrieveNodeConfiguration w/o access control
  * buddycloud-server 0.1.3
  * operations: deny Unsubscribe from own nodes
  * logger: ain2 syslog transport
  * logger: message always as string
  * main: fix --stdout kludge
  * logger: avoid log level < 0
  * config.js.example: syslog on by default
  * config.js.example: logging section
  * syslog support with ain2
  * support --stdout logging
  * replace cnlogger by common-logger
  * buddycloud-server 0.1.2
  * build_binary: npm install globally (into /opt/buddycloud-server/)
  * build_binary: dedup node & npm versions
  * build_binary: default to /opt/buddycloud-server, bin/ script
  * main: process.title fix
  * version: fix package.json path
  * version from package.json in process.title and for jabber:iq:version
  * xmpp/connection: do not subscribe in probePresence()
  * buddycloud-server 0.1.1
  * build_binary: bump node & npm versions
  * backend_pubsub: reply() must also copy 'replay' field on MaxStanzaSizeExceeded
  * connection: more stanza output when MaxStanzaSizeExceeded
  * don't send ReplayArchive notifications to all online resources
  * pubsub_client/connection: wrap error replies into StanzaError earlier
  * logging fixes
  * port to cnlogger
  * port to broken winston logging
  * xmpp connection: always tell node-xmpp to reconnect
  * async.filter iterator does not take error parameter
  * model_postgres: fix nodeExists warning
  * backend_pubsub: fix notification matching
  * sync: fix router.authorizeFor() usage
  * sync: writeItem does not need author anymore
  * operations: typo
  * model_postgres: fix getListenerAffiliations() query
  * sync: careful
  * xmpp/forms: oops, s/creationTime/creationDate/
  * xmpp/connection: fix name
  * router: check for anonymous user to be online
  * anonymous user offline tracking & clean-up
  * model_postgres: fix walkListenerArchive() node in results
  * router: fix method binding
  * model_postgres: walkListenerArchive() should include node in results
  * operations: RemoveUser & model_postgres.getUserRemoteSubscriptions() & clearUserSubscriptions()
  * BuddycloudDiscovery::detectAnonymousUser
  * backend_pubsub: gracefully handle MaxStanzaSizeExceeded for notifications
  * xmpp pubsub_server & connection: fix graceful MaxStanzaSizeExceeded handling
  * errors: MaxStanzaSizeExceeded extends Error
  * operations: s/geoloc/geo/
  * operations: /subscription items shall contain jid=owner
  * metadata buddycloud#channel_type
  * proper metadata field names
  * support for creationDate
  * operations: clarify logging
  * router: fix remote backend selection
  * operations: Unsubscribe refactor & fix
  * operations: fix Register
  * buddycloud-server 0.1.0
  * operation: print opName on commit, rm debug
  * bin/buddycloud-server: don't cd so config can be loaded relatively
  * Merge remote-tracking branch 'origin/cli'
  * operations: RetractItems should allow anyone to remove their own posts
  * operations: preserve affiliation if previously affiliated
  * operations: unify into isAffiliationAtLeast()
  * operations: rm leftover TODO note
  * operations: refactor Register; should check if authoritative for user's domain
  * router.run: return 404 for nodes not locally subscribed but discovered ourselves
  * rm explicit author handling in postgres schema, model, operations
  * main: check sender authorization for authorizationPrompt
  * operations: RetrieveItems shall not virtualize items for cache case of remote nodes
  * Revert "Made the ownership of tables really clear. Should help avoid the problem that DD had the other day."
  * s/channel-server/buddycloud-server/g
  * build_binary.sh: fix invokation hint
  * README: rm some outdated stuff
  * main: fix defaultConfig stuff
  * build_binary.sh
  * operations: RetrieveItems.retrieveSubscriptionsItems() result set sorting, affiliations
  * virtual handling of /user/.../subscriptions node items
  * MAM replays subscription authorization requests
  * more authorization stuff
  * fixes
  * small fixes
  * package.json: fix bin path
  * further authorizationPrompt work
  * backend_pubsub: missedSomething was missing
  * package.json: fix coffeescript path (./node_modules/...)
  * sending authorize notification forms
  * package.json: fix .coffee compilation stage
  * operations: PrivilegedOperation.fetchActorAffilliation fetches all listener affiliations for inbox sync
  * pubsub_notifications: fix MAM stanzas
  * operations: subscribe defaultAffiliation, fixes
  * model_postgres: many fixes
  * operations: publishModel 'subscribers'
  * operations: access control fixes
  * begin access control, affiliations checking
  * model_postgres: fixes
  * errors: fix error classes
  * xmpp/connection: fix
  * xmpp/connection: fix @missedServerTimeouts usage
  * model_postgres: safety checks
  * readability, notes
  * rsm_walk: fix serious errors
  * globally refactor operation from function to value
  * sync: fixes
  * add forgotten rsm_walk file
  * move syncQueue from main.coffee to fine-grained sync.syncNode
  * xmpp/connection: readability
  * xmpp/connection: track <you-missed-something/> timers with @missedServerTimeouts
  * syncServer support, wired up to <you-missed-something/> 'syncNeeded'
  * model_postgres: for an actor, getSubscriptions() shall return not only users but also listeners
  * MAM time specification
  * primitive MAM implementation
  * send <you-missed-something/>
  * operations: PushInbox TODO note
  * sync: rm request.rsm.max clamp
  * synchronization with state resetting and subscriptions/affiliations support
  * pubsub_*: fix user/jid conventions
  * ConfigSynchronization should use browse-node-info to get node config
  * synchronizing!
  * synchronization kinda works, but hits RSM loops
  * further synchronization progress
  * begin synchronization
  * main: require async
  * measure stanza size, gracefully retry with smaller result set
  * synchronization groundwork
  * don't let backend_pubsub call router.runLocally(), return errors.SeeLocal() instead
  * errors: clean up
  * normalize: add <link rel="self" href="xmpp:...?pubsub;action=retrieve;..."/>
  * operations: Publish shall allow new items with specified @id
  * nodes browsing, with RSM
  * backend_pubsub: run() should bail out early on invalid node form
  * PostgreSQL tuning
  * complete RSM implementation
  * begin RSM for all operations
  * generify RSM stuff
  * pubsub_client: RSM
  * fixes from CCCamp11
  * RSM for local items retrieving
  * begin new RSM implementation
  * pubsub_server: publish-node-items shall reply with item ids
  * model_postgres: fix getNodeListeners() SQL
  * model_postgres: nodeExists() shall check for NOT NULL
  * model_postgres: getNodeListener() replace filter by SQL
  * model_postgres: getNodeListener() filter for null
  * model_postgres: fix setSubscription() INSERT w/o listener
  * error printout
  * forms: fix
  * operations: PushInbox author fix
  * debug
  * xml child robustness
  * model_postgres: fix nodeExists()
  * fix subscription listener for local users
  * logging cleanup
  * initiate presence tracking of users
  * xmpp/connection: use send() instead of specifying from jid
  * some logging cleanup
  * operations: push-inbox does not set subscription listener
  * fixes & TODO notes
  * operations: Notify.transaction() must call cb()
  * retrieve-node-configuration
  * forms: configToResultForm -> configToForm
  * pubsub_client: RetrieveNodeConfiguration & ManageNodeConfiguration
  * operations: catch reply cb exceptions
  * create-node operation
  * package.json: scripts
  * fixes
  * fix outgoing notifications
  * generify pubsub_notifications
  * many fixes for subscription pushing
  * router: if request writes, always go remote
  * push incoming notifications to local model
  * more subclassing of EventEmitter, incoming notifications handling
  * pubsub_server: unify PubsubRequest & PubsubOwnerRequest
  * merge request.coffee into pubsub_server.coffee
  * begin remote subscription pushing to local inbox
  * backend_pubsub: PubsubBackend.notify(): readability
  * tune to use single cb() instead of req.{reply,replyError}()
  * revive normalization
  * model_postgres: setSubscription(): coearce isSet to boolean
  * model_postgres: catch lost transactions
  * pubsub_client: error reporting, fix
  * subscribe reply status
  * model_postgres: setAffiliation() should check nodeExists()
  * fix disco.authorizeFor() usage
  * pubsub_client: fix <actor/> placement
  * refactor notifications a bit
  * pubsub_client: <actor/> placement fix
  * pubsub_client: fix <actor/> placement
  * pubsub_notifications: subscriptions/affiliations/config
  * fix registration/model callback parameters
  * operations: ManageNodeAffiliations validates accessModel & publishModel
  * setting configuration
  * fixes, fixes, config
  * only RegisterSetRequest should induce presence subscription
  * FIXME note
  * model_postgres: do not use rowCount
  * operations: Register created default configuration
  * pubsub_server: pubsub/inbox identity
  * fixes, StanzaError
  * implement pubsub_client operations
  * pubsub_notifications: byOperation()
  * fixes
  * fixes
  * fixes & debugging
  * fixes
  * debugging & fixes
  * fixes
  * begin discovering locally
  * fixes
  * Router.run: fix
  * fixes
  * operations: rename channel node to "posts"
  * begin notifications
  * a bit o' twiddling w/ subscription listeners
  * refactor router for remote requests
  * operations: subscribe/unsubscribe toggle affiliation none/member
  * router: rename frontend to backend
  * rename backend_postgres to model_postgres, revive router
  * main: move iqHandler to pubsub_server
  * manage, not only retrieve, subscriptions & affiliations
  * use subscribe sender as notification listener
  * backend_pubsub: replace ternary operator
  * need to store listener in subscriptions...
  * backend_pubsub: implement RequestCache
  * new untested buddycloud discovery with backend_pubsub.coffee
  * retrieve <actor/> generalized, begin using authorizeFor
  * ns: add BUDDYCLOUD_V1 xmlns
  * postgres.sql schema: updated column for more tables, author column for items
  * retrieving node affiliations
  * retrieving node subscriptions, fixes
  * backend_postgres: syntax fixes
  * operation: Register should set affiliation & subscription
  * retrieving subscriptions & affiliations
  * retracting items
  * publishing & retrieving items works
  * begin item retrieving
  * subscribe & unsubscribe
  * fix backend_postgres (user is a Pg keyword, must be quoted as column name)
  * publishing works
  * lots of fixes
  * fix disco requests
  * fix, fix, fix
  * begin implementing register & publish implementation
  * mv src/operations.coffee src/local/operations.coffee
  * revive backend
  * primitive operations
  * mv controller.coffee operations.coffee
  * dead code TODO
  * fixes
  * rm old dead code
  * rename iqhandler to request
  * begin some refactoring
  * begin hooking up handlers with operations
  * xmpp/pubsub_server: indicate operation types
  * notes
  * pubsub_server: PubsubOwnerHandlers
  * pubsub_server: flesh out more pubsub handlers
  * add affiliations checking
  * begin interweaving with local operations
  * a tad of interconnecting
  * pubsub_server: DiscoInfoHandler.reply()
  * xmpp client 'n stuff
  * README: draw new design
  * begin router
  * xmpp: move NS_* to ns.coffee
  * xmpp: primitive disco info works
  * begin iqhandler
  * xmpp/connection: port presence tracking
  * rm main.js
  * move src files around
  * rm model_couchdb from config, add preliminary main.coffee
  * a bit new controller
  * rm old test_controller
  * some controller work
  * old controller translated to coffeescript
  * port peripheral stuff over to coffeescript
  * README: change ejabberd port to the config default one
  * model_couchdb: s/doc.subscribers/doc.subscriptions/
  * xmpp_pubsub.js: fix typo
  * model_postgres: check nodeExists before any data modification
  * preliminary RSM (XEP-0059) implementation for retrieve-items/retrieve
  * model_couchdb: stub getUpdatesByTime()
  * MAM should result in direct message, not broadcast notification to all resources
  * MAM w/ working model_postgres backend
  * begin implementing MAM
  * controller: register/register should create /user/<jid>/subscriptions node
  * normalize fixes + tests
  * normalize
  * only one child element per item
  * model_postgres: fix setConfig()
  * model_postgres: listNodesByUser()
  * model_couchdb: listNodesByUser(), simplify listNodes()
  * controller, xmpp_pubsub: browse-nodes/by-user
  * model_postgres setConfig(): fixes
  * configuration notification
  * model_postgres setConfig(): do not set fields unspecified/without defaultConfig
  * model_postgres nodeExists(): indentation
  * controller: subscribe should not require preexisting affiliation
  * xmpp_pubsub: fix manage-subscriptions/retrieve result usage
  * controller: allow retrieving subscriptions & affiliations for members
  * xmpp_pubsub: syntax fix
  * model_postgres: fix queue pushing
  * xmpp_pubsub: fix info discovery reply FORM_TYPE
  * model_postgres: config fixes
  * more on extended config
  * model_couchdb, model_postgres: more flexible config schema
  * config: description, type, creationDate; setConfig() on create-node/register
  * xmpp_pubsub: optimize presence tracking
  * controller: requiredAffiliation='member' for config-node/retrieve
  * README: OpenFire
  * controller: defaultConfig() + use in feature 'config-node'
  * xmpp_pubsub: replace isOnline() with getOnlineResources()
  * model_postgres: fix transaction dequeueing
  * model_postgres: move cb() past process.nextTick/dbIsAvailable for safety
  * model_postgres: work around empty responses
  * test_controller: retract
  * xmpp_pubsub: disco <identity/> according to discovered @node
  * test_controller: browse-nodes
  * model_couchdb: fix preload() etag extraction + error reporting
  * xmpp_pubsub: FeatureNotImplemented message
  * controller: simulate a stack for debug info
  * test_controller: retract skeleton
  * controller unsubscribe: do not fetch affiliation from database but check by node path
  * implement & test unsubscribe
  * test_controller: skeletons
  * test_controller: publishing tests
  * test_controller: more publish testing + controller fix
  * test_controller: begin test publishing
  * model_postgres: fix forgotten variable
  * model_postgres: reconnect to database upon error
  * model_postgres: oops, syntax error
  * config.js.example: postgres is actually the one with a poolSize
  * model_postgres: oops, syntax errors
  * begin test_controller
  * fixes
  * subscriptionModified <message/>
  * xmpp_pubsub: "message" & approve() fixes
  * controller: replace ownerNotification with afterTransaction
  * access_model authorize
  * package.json & README
  * errors: pull inherits() from util/utils/sys for moving node api
  * browse open nodes with service discovery items
  * controller: refactor affiliations checking
  * xmpp_pubsub: fix subscriptions format
  * controller: treat missing accessModel as 'open'
  * model_couchdb: preload() etag fix
  * .gitignore with config.js
  * xmpp_pubsub: node config on disco info
  * model_couchdb: encodeURIComponent() only for db.head() & .get()
  * main.js: #!
  * rename config.js to config.js.example
  * restore default config.js
  * main.js: on uncaughtException
  * postgres doc & config
  * model_postgres
  * model_couchdb: fix item deserialization
  * model_couchdb: rm implemented TODOs
  * README: CouchDB configuration
  * README: TODO++
  * LICENSE
  * README: markdown fix
  * README: mention buddycloud :)
  * model_couchdb: fix views initialization
  * README & config
  * jabber:iq:register
  * model_couchdb: fixes
  * errors fixing
  * rm model_persistence
  * model_couchdb: assertNodeName()
  * main: catch uncaughtException
  * controller: fix
  * bugs, readability
  * model_couchdb: fixing
  * controller: implement affiliations checking
  * xmpp_pubsub: getAffiliations() result is now Array
  * model_couchdb: setSubscription() & setAffiliation() 'none'
  * model_couchdb: consolidate subscriptions & affiliations model
  * xmpp_pubsub: send notifications with type='headline'
  * xmpp_pubsub: subscribeIfNeeded() on <create/> & <subscribe/>
  * model_couchdb: load() shortcut when already cached
  * model_couchdb: createNode() fix
  * model_couchdb: preload()
  * model_couchdb: commit read documents too for integrity
  * model_couchdb: abstract views
  * CouchDB Optimistic Concurrency Control layer
  * controller: improve error propagation
  * defined error conditions
  * untested configuration getting/setting
  * service discovery
  * modify-affiliations
  * model_couchdb: getAffiliation()
  * begin permission checking infrastructure
  * presence probes
  * xmpp_pubsub: presence tracking
  * refactoring controller complete
  * continue refactoring controller into features/operations
  * begin refactoring controller into features/operations
  * subscribers
  * getting subscriptions & affiliations
  * createNode improvements
  * controller createNode: check node
  * model_couchdb: affiliations view
  * items getting
  * much more progress
  * implement retraction, s/notifySubscriber/notify/, s/writeItems/writeItem/
  * publish notification works
  * more frontend hooking
  * begin notification hooks
  * fixes
  * begin model_couchdb transactions
  * split model
  * some progress
  * some progress
  * createNode creates owner affiliation
  * model: indexes
  [ Thomas Jost ]
  * Add @denisw to contributors
  * Upgrade required node version to 0.8
  * We actually need remote subscriptions nodes
  * Merge branch 'feature/anon-fixes' into develop
  * Merge branch 'feature/really-validate-post-times' into develop
  * Reject remote posts with invalid dates
  * Add tests for remote posts with invalid dates
  * Force anon subscriptions to be temporary
  * Set default affiliation to 'none' for anon users
  * Merge branch 'feature/anon-fixes' into develop
  * Cleanup: remove some dead code
  * Purge remote nodes with no local subscription left
  * Merge branch 'feature/recent-items' into develop
  * Merge branch 'feature/validate-remote-items' into develop
  * Sort recent items by update time
  * Merge branch 'feature/validate-remote-items' into feature/recent-items
  * Fix tests that push remote items
  * Validate remote items
  * Add (failing) tests for invalid remote items
  * Implement recent items query
  * Add (failing) test for recent items query
  * PubSub replies can include several elements
  * Merge branch 'feature/pusher' into develop
  * Workaround callback woes
  * Fix MAM for pusher component
  * Pusher: test MAM
  * test_server: move makePublishIq into TestServer
  * Pusher: test node configuration
  * Pusher: test unsubscriptions
  * Merge branch 'feature/affiliations-fixes' into develop
  * Merge branch 'feature/pubsub-disco-features' into develop
  * Cleanup
  * Expose all implemented PubSub features
  * Pusher: test affiliations
  * Merge branch 'feature/affiliations-fixes' into feature/pusher
  * Fix affiliation in /subscriptions notifications
  * Accept PubSub-compliant affiliations notifications
  * Pusher: test subscriptions
  * Merge branch 'feature/fix-98' into develop
  * Fix SQL for updating replies
  * Add failing test for issue #98
  * Fix offline user cleanup
  * DB: drop anonymous column
  * Yet another federation test
  * Check if the example config file is valid JS
  * Add tests for pusher code
  * Pusher can MAM everything
  * Pusher is a listener for all notifications
  * Add config for pusher component
  * Merge branch 'feature/mam-fixes' into develop
  * Increase the default number of items in a MAM response
  * Make MAM return an error if there are too many results
  * Use RSM in MAM
  * Test MAM RSM
  * MAM: filter bad dates out
  * Test if MAM validates dates correctly
  * Ensure the giant MAM test doesn't pollute the test environment
  * Make affiliations notifications PubSub-compliant
  * Affiliations have update timestamps too
  * Avoid temporary subscriptions in MAM results
  * Advertise support for MAM in disco#info
  * Add a giant MAM test
  * Update Travis URL in README.md
  * Merge branch 'feature/tests' into develop
  * Correctly tests that updated items don't change <in-reply-to/>
  * Move tests on updated items to a different function
  * Add tests for updates that change <in-reply-to/>
  * Use Travis to automate testing
  * Merge branch 'master' into develop
  * Add compatibility with PostgreSQL 9.1
  * Require at least one item to retract
  * Add Emacs folding marks
  * Add retrieve and retract tests
  * Fix retraction stanza sent to remote services
  * Tombstones: include Atom namespace in <updated/> element
  * Fix error when not allowed to retract an item
  * Tombstones can't be updated
  * When publishing an update, check if the actor is the original author
  * Check if original post exists before publishing a reply
  * Reject posts from non-users
  * Don't include type in <actor/>
  * Complete post/update/retract tests
  * TestServer: fix Atom in-reply-to element
  * Fail when some unwanted event happens
  * Add description for calls to "should.exist"
  * Retraction tests
  * Workaround CoffeeScript weird scoping rules
  * Add another batch of tests
  * Update test data
  * Change the way the test server emits IQ stanzas
  * Tests for posting to remote channels
  * Test server: emit event for IQs with unknown ID
  * Test server: disco info for "remote" servers
  * More post tests
  * Add helper to run tests that trigger several different stanzas
  * Test server: handle <message/> stanzas
  * Add post tests
  * Post tests: helper to check if post was successful
  * Throw an exception when getting an unexpected error IQ
  * Start adding post tests
  * Add helpers for pubsub get IQs and Atom handling
  * Helpers to add initial test data in the database
  * Add XMPP namespaces to test_server.coffee
  * Reply to presence probes
  * Don't parse Elements again
  * Use same user and server names as in sfc
  * Safe path handling in prepare-db.sh
  * Add codo-like doc to the TestServer class
  * Add helpers to build disco and pubsub IQs
  * Expose support for PubSub node creation
  * Skip a test
  * More channel creation tests
  * New tests and helpers for forms
  * Add a helper to parse disco#info replies
  * Move common disco replies to test_server.coffee
  * Start testing for channel creation
  * Test server: handle disco#items queries
  * Make tests runnable using "npm test"
  * Basic disco tests
  * Start a test suite
  * Use an existing component connection if provided in config
  * Make it possible to require() the server
  * Update config.js.example
  * Fix autosubscribeNewUsers
  * Increase the max number of items in each RSM page
  * Better shrinking of oversized stanzas
  * Include `-dirty' in version number from git
  * Remove glob from dependencies
  * Fix indentation in main.coffee
  * Prevent existing persistent subscription from being made temporary
  * Merge branch 'feature/version-number-from-git' into develop
  * Expose support for XEP-0092 (Software Version) in disco
  * Use `git describe' to get version numbers in dev branches
  * Merge branch 'master' into next
  * Restore compatibility with Node 0.6
  * Fix handling of offline users
  * Avoid race condition in disco cache
  * Shrink oversized stanzas more aggressively
  * Avoid nulls
  * Include new files in release tarball
  * Avoid race condition in disco cache
  * Merge remote-tracking branch 'upstream/tempsub' into next
  * Merge branch 'db-versioning' into next
  * buddycloud-server 0.3.5
  * Check if remote supports temporary subscription before sending a tempsub request
  * Client can check for server features before sending an IQ
  * Make server features discoverable
  * Log errors when processing incoming messages
  * Cleanup
  * Remove empty text nodes from items
  * Fix ActivityStreams verb for replies
  * Include operation name in debug message
  * Don't notify unsubscribe when it was a temporary subscription
  * Offline user cleanup: do real unsubscribe operations
  * I'm dumb
  * Don't delete temporary subscriptions during sync
  * Don't send any notification for temporary subscriptions
  * Client and server must speak the same language
  * Only send notifications about temporary subscriptions to remote listeners
  * Cleanup offline users
  * Claim we support subscription options
  * Temporary subscriptions
  * Fix updating items
  * Add help channels to default autosubscriptions
  * Merge branch 'log-fix'
  * Inspect objets in log messages
  * Fix broken log messages
  * Don't write subscription stanzas in items table
  * Merge remote-tracking branch 'lloyd/config'
  * Populate in_reply_to column when inserting new items
  * DB cleanup at startup
  * Add README for DB schema versioning
  * Upgrade DB schema
  * Check DB schema version on startup
  * Don't change <published/> when updating an existing post
  * Fix subscription to remote private channels
  * Don't fail when the default config file does not exist
  * Add Lloyd in contributors
  * Better logging for replies sent by 'proxy' components
  * Merge branch 'mam-result'
  * Include <result/> in MAM replies
  * Merge remote-tracking branch 'schnouki/atom-tombstones'
  * Fix typo
  * Merge pull request #61 from lloydwatkin/no-mod_disco
  * Also send tombstones in retract notifications
  * Use Atom tombstones for deleted items
  * xmpp: XEP-0313 compliance
  * Handle PubSub retract "notify" attribute
  * operations: fix PushInbox notification
  * Fix undefined variable when paging backwards in RSM
  [ Tuomas Koski ]
  * Merge pull request #59 from lloydwatkin/initialise-sync
  * Merge pull request #58 from lloydwatkin/master
  [ Steven Lloyd Watkin ]
  * Ensure we do not cause BC breaks
  * Make both defaults positive rather than one positive & the other negative Broke the config options down further
  * Fix build console output
  * "package" now a reserved word in node, caused failing in builds (v0.6.15+)
  [ Denis Washington ]
  * Use local CoffeeScript "cake" for "npm install"
  [ Jonas Smedegaard ]
  * Setup access rights and needed dirs when starting daemon
  * Speedup system shutdown by avoiding explicit sysV stop
  * xmpp_pubsub: check for commandEl prior usage
  [ Reginald dude ]
  * updates sent via email from vorner.cz
  * updates sent via email from vorner.cz
  [ Reginald Dude ]
  * Most confusing config file ever
  [ ▟ ▖▟ ▖ ]
  * Merge pull request #70 from lloydwatkin/fix-is-function
  * Merge pull request #63 from lloydwatkin/no-mod_disco
  * Merge pull request #62 from lloydwatkin/no-mod_disco
  * Merge pull request #57 from Schnouki/xep-0313
  * Merge pull request #54 from Schnouki/fix-notif
  * Merge pull request #52 from lloydwatkin/master
  * Merge pull request #51 from lloydwatkin/master
  [ James Tait ]
  * Ensure both the PID dir and log dir are created on startup if they do not already exist.
  [ imaginator ]
  * aligning with INSTALL instructions
  * moved instructions to wiki
  * Edited README.md via GitHub
  [ dodo ]
  * fix accessModel of geo nodes
  * always test in production
  * buddycloud-server 0.3.4
  * Merge branch 'packaging'
  * put the /etc/init.d script into tarball
  * not needed anymore
  * default options for new channels
  * bump tarballify version
  * add bin/buddycloud-server to the tarball
  * no build step in bin/buddycloud-server anymore
  * print additional info messages in gray
  * fix 'file is not defined'
  * fix 'modName is not defined'
  * colorful output for package.js
  * bump tarballify version
  * rm trailing spaces
  * no build_binary.sh needed
  * separate devDependencies
  * export name
  * use packaging script
  * buddycloud-server 0.3.3
  * pass prefix to npm to force npm to use that particular prefix
  * $PREFIX/bin/buddycloud-server can be nonexistant .. so ignore all errors when removing
  * bump node version in build script
  * merge issue #37
  * specify interal config file as defaults, not as main config
  * backports to node 0.4
  * concat cwd path to config path only when config path is relative
  * respect the cwd
  * move to the right dir before builing
  * wscript is not needed anymore
  * merged #31. symlink detection for bin/buddycloud-server thanks to @highfellow
  * fixed gitignore
  * forgot Cakefile
  * pin node version for over 0.5 to get the require json working
  * get version directly
  * new buildsystem
  * check if config.syslog has keys
  * dont load default config over opts and args
  * main: fix config loading
  * wscript fixes
  * load config via jsconfig
  * update wscript
  * upgrade build environment
  * update requirements in readme
  * cleanup files
  [ Simon Tennant ]
  * Update config.js.example
  * change to read config file from /opt/buddycloud
  * Update master
  * don't be so --quiet (will help a lot with debugging)
  * Update _etc_init.d_buddycloud-server
  * the orwell defeault was causing jdesenberg problems.
  * Fixed the permissions to run as.
  * Update _etc_init.d_buddycloud-server
  * init script
  * make it really clear what to change (and what "jid" refers to)
  * Made the ownership of tables really clear. Should help avoid the problem that DD had the other day.
  [ Lloyd Watkin ]
  * Fix for checking of child element
  * Catch error event
  * Fix for server reset
  * Updated variable names to better describe what config does.
  * Merge branch 'master' of git://github.com/buddycloud/buddycloud-server into no-mod_disco
  * Allow buddycloud server to advertise additional 'proxy' components
  * Wait to sync
  * Rename of parameter
  * Allow user to specify a port or not, changed argument name as it may not actually be remote debugging.
  * Tidy up
  * Allow node.js debugging
  [ Simon ]
  * /etc/init.d/buddycloud-server

 -- Abmar Barros (buddycloud Nightly Builds) <abmar@buddycloud.com>  Sat, 26 Jan 2013 15:21:41 -0300


buddycloud-server (0.1) unstable; urgency=medium

  [ Astro ]
  * operations: all nodes in defaultConfiguration accessModel=authorize
  * operations: posts & subscriptions accessModel=authorize in defaultConfiguration
  * buddycloud-server 0.3.2
  * Cakefile: version.js + 

  * operations: fix run notifications control flow
  * build_binary.sh: get bin/buddycloud-server out of the way before npm i
  * buddycloud-server 0.3.1
  * package.json: honor all contributors
  * Merge remote-tracking branch 'schnouki/patch-1'
  * .npmignore: exclude debian/* from npm pkgs
  * buddycloud-server 0.3.0
  * package.json: bump dep versions
  * operations: prevent unsubscribing/demoting the node owner
  * operations: fix PushInbox callback
  * operations: run notifies first, then syncs, then calls back
  * pubsub_server: lower logging
  * operations: fix PushInbox newNodes
  * operations: move PushInbox syncNode post transaction
  * operations: PushInbox should work even if syncNode had hickups
  * operations: syncNode when PushInbox created it
  * operations: fix PushInbox notification & newModerators
  * model_postgres: fix & simplify purgeNode()
  * sync: fixes
  * sync: purge node if no local subscribers
  * purge node when local unsubscription is pushed from remote
  * operations: fix generateSubscriptionsNotifications followee
  * operations: fix PushInbox newModerators nodes
  * xmpp connection: doc, serialize stanzas only once
  * operations: NewModeratorNotify needs listener, not user
  * operations: fix NewModeratorNotify listener
  * operations: log Operation name
  * model_postgres: must quote "user" column for Postgres
  * operations: NewModeratorNotify must cb()
  * operations: Notify notifies w/ node
  * operations: fix Notify otherListeners
  * pubsub_client: rm debug
  * operations: NewModeratorNotify notifies w/ node & listener
  * model_postgres: optional Transaction callbacks
  * operations: fix Notify filterSubscription & filterAffiliation invokation
  * operations: fix this binding
  * operations: no pending subscriptions in subscriptions node
  * operations: NewModeratorNotify
  * operations: doc, filter subscriptions and affiliations for non-moderators
  * operations: reorganize
  * clean up logging
  * operations: posts node defaultAffiliation='publisher'
  * sync: fix AffiliationsSynchronization typo
  * buddycloud-server 0.2.3
  * package.json: fix install script
  * build_binary.sh: bump node.js version
  * buddycloud-server 0.2.2
  * package.json: add preinstall cake build
  * operations: fix notifications
  * build_binary.sh: bump node.js version
  * buddycloud-server 0.2.1
  * operations: fix Notify subscriptios node items
  * operations: fix Notify callback result
  * operations: BrowseNodeItems for subscriptions node calls getSubscriptions not getSubscription
  * operations: syntax fixes
  * operations: Notify subscriptions fixes
  * operations: subscriptions node notifications
  * operations: BrowseNodeItems for subscriptions node
  * sync: require errors
  * sync: avoid error output when omitting local node
  * router, sync: improve logging
  * backend_pubsub: PubsubBackend.notify listener robustness
  * operations: fix Subscribe defaultAffiliation
  * operations: fix ManageNodeAffiliations control flow
  * pubsub_server: PubsubOwnerSetAffiliationsRequest syntax fix
  * operations: fix requiredAffiliation()
  * operations: requiredAffiliation can be function to allow moderators approving topic channel subscribers
  * operations: ManageNodeSubscriptions refactor for efficiency
  * operations: ManageNodeSubscriptions should set new affiliations to defaultAffiliation
  * operations: fix Notify jid/user
  * operations: Notify should notify all users pertained by a subscription
  * operations: 'unsubscribe-node' notifies unsubscribed user
  * operations, pubsub_client: there's no "unsubscribed" subscription, only "none"
  * pubsub_server: PubsubOwnerSetSubscriptionsRequest syntax fix
  * operations: Unsubscribe needs PrivilegedOperation methods
  * operations: Unsubscribed is not a PrivilegedOperation but a ModelOperation
  * operations: fix callback scope
  * pubsub_server: robustify PubsubItemsRequest
  * operations: syntax
  * pubsub_server, operations: support for RetrieveItems by itemIds
  * build_binary.sh: bump node.js version to 0.6.10
  * buddycloud-server 0.2.0
  * operations: CreateNode should not allow creation with empty nodeUser username
  * operations: fix CreateNode defaults & creationDate
  * operations: fix CreateNode isTopic switcheroo
  * router: fix autosubscribeNewUsers operation name
  * router: autosubscribeNewUsers
  * config.js.example: default checkCreateNode hook checks for a specific topic domain
  * operations: fix CreateNode node typo
  * operations: fix CreateNode config
  * pubsub_server, operations: CreateNode with optional config
  * operations: fix CreateNode setSubscription()
  * operations: CreateNode catches missing checkCreateNode hook
  * operations: CreateNode default config
  * checkCreateNode config hook
  * model_postgres: fix getOwnersByNodePrefix SQL
  * operations: fix CreateNode setAffiliation()
  * operations: fix CreateNode getOwnersByNodePrefix()
  * operations: fix ../util require, CreateNode safety check
  * implement createNode with getOwnersByNodePrefix check
  * operations: begin creating topic channels
  * model_postgres: syntax fix
  * package.json: maintainer update
  * build_binary.sh: update to node 0.6.9
  * buddycloud-server 0.1.11
  * rsm_walk: fix logging
  * operations: checkAccessModel() before checkRequiredAffiliation()!
  * operations: Unsubscribe condition syntax fix
  * package.json: muffin dependency glob seems be incompatible in v3.*
  * operations: checkRequiredAffiliation should ignore no @requiredAffiliation
  * operations: fix isAffiliationAtLeast w/ invalid affiliation
  * jsconfig 0.2.0 is out! w00t!!!
  * Cakefile: lib/version.js from package.json
  * logger: update to ain2 1.0.0
  * main: fix config loading
  * buddycloud-server 0.1.10
  * router: fix syncServer()
  * buddycloud-server 0.1.9
  * bin/buddycloud-server: fix param quoting
  * bin/buddycloud-server: fix $cwd
  * buddycloud-server 0.1.8
  * .npmignore to package up built lib/* instead of src/*
  * build_binary.sh: install devDependencies beforehand
  * build_binary.sh: bump node.js version to 0.6.7
  * util: move getNodeUser(), getUserDomain()
  * main: "server successfully started"
  * sync: fix logging
  * model_postgres: fix writeItem() SQL parameter binding
  * sync: fix PaginatedSynchronization error callback
  * sync: rm TODO note
  * model_postgres: writeItem updated_query
  * operations: logging fixes
  * writeItem: move updated extraction from operations to model_postgres
  * model_postgres: writeItem should also INSERT existing updated value
  * model_postgres: fix syntax
  * model_postgres: SQL fixes
  * operations: PushInbox copies item published date
  * postgres schema: CREATE VIEW open_nodes + usage in model_postgres
  * model_postgres: fix query result handling
  * fix getTopFollowedNodes & getTopPublishedNodes parameters
  * model_postgres: fix SQL INTERVAL syntax
  * operations: BrowseNodes.fetchNodes() needs transaction
  * operations: BrowseNodes.transaction should use @fetchNodes()
  * operations: fetchNodes() typo
  * pubsub_server: browse /top-followed-nodes & /top-published-nodes does not request a particular node
  * getTopFollowedNodes & getTopPublishedNodes w/ XMPP disco interface
  * build_binary.sh: bump to node 0.6.6
  * buddycloud-server 0.1.7
  * package.json: rm cradle dependency
  * logger: syslog only with hostname
  * replace common-logger by underscore.logger
  * update ain2 dependency for node v0.6 compatibility
  * model_postgres walkListenerArchive: replace DISTINCT with GROUP BY
  * model_postgres: fix config order/limig
  * operations: ReplayArchive sorts results before capping
  * ReplayArchive/walkListenerArchive: properly cap result set
  * operations: ReplayArchive default max=50
  * build_binary.sh: use $PREFIX from environment if present
  * package.json: req node-stringprep >=0.1.1
  * router: fix
  * buddycloud-server 0.1.6
  * update to new node-waf paths
  * build_binary.sh: switch to node 0.6.4
  * package.json: depend on 0.3.1
  * router: RSM usage fix
  * logger: open logFile for appending, fixes issue #25
  * package.json: depend on node-xmpp >= 0.3.0
  * operations ReplayArchive: fix rsm max
  * operations: ReplayArchive RSM support
  * backend_pubsub: notificationPush updates include sender & actor
  * router: detectUserType fixes
  * router: detectUserType fixes
  * logger: fix argument iteration
  * main, backend_pubsub: logging improvements
  * backend_pubsub: include user in notfound error
  * connection: loopback stanzas to ourselves
  * router: add missing util.inspect include
  * router.run: trace req
  * router: add missing rsm include
  * logger: typo
  * logger: fix level
  * logging clean-up
  * router, pubsub_{server,client}: @type in <actor/>
  * buddycloud-server 0.1.5
  * router: sync fixes
  * buddycloud-server 0.1.4
  * ManageNodeAffiliations: non-owner may not elect a new owner
  * sync: log upon completion
  * sync: transaction fix
  * move some sync logic into router, lock per node
  * operations: BrowseNodeInfo/RetrieveNodeConfiguration w/o access control
  * buddycloud-server 0.1.3
  * operations: deny Unsubscribe from own nodes
  * logger: ain2 syslog transport
  * logger: message always as string
  * main: fix --stdout kludge
  * logger: avoid log level < 0
  * config.js.example: syslog on by default
  * config.js.example: logging section
  * syslog support with ain2
  * support --stdout logging
  * replace cnlogger by common-logger
  * buddycloud-server 0.1.2
  * build_binary: npm install globally (into /opt/buddycloud-server/)
  * build_binary: dedup node & npm versions
  * build_binary: default to /opt/buddycloud-server, bin/ script
  * main: process.title fix
  * version: fix package.json path
  * version from package.json in process.title and for jabber:iq:version
  * xmpp/connection: do not subscribe in probePresence()
  * buddycloud-server 0.1.1
  * build_binary: bump node & npm versions
  * backend_pubsub: reply() must also copy 'replay' field on MaxStanzaSizeExceeded
  * connection: more stanza output when MaxStanzaSizeExceeded
  * don't send ReplayArchive notifications to all online resources
  * pubsub_client/connection: wrap error replies into StanzaError earlier
  * logging fixes
  * port to cnlogger
  * port to broken winston logging
  * xmpp connection: always tell node-xmpp to reconnect
  * async.filter iterator does not take error parameter
  * model_postgres: fix nodeExists warning
  * backend_pubsub: fix notification matching
  * sync: fix router.authorizeFor() usage
  * sync: writeItem does not need author anymore
  * operations: typo
  * model_postgres: fix getListenerAffiliations() query
  * sync: careful
  * xmpp/forms: oops, s/creationTime/creationDate/
  * xmpp/connection: fix name
  * router: check for anonymous user to be online
  * anonymous user offline tracking & clean-up
  * model_postgres: fix walkListenerArchive() node in results
  * router: fix method binding
  * model_postgres: walkListenerArchive() should include node in results
  * operations: RemoveUser & model_postgres.getUserRemoteSubscriptions() & clearUserSubscriptions()
  * BuddycloudDiscovery::detectAnonymousUser
  * backend_pubsub: gracefully handle MaxStanzaSizeExceeded for notifications
  * xmpp pubsub_server & connection: fix graceful MaxStanzaSizeExceeded handling
  * errors: MaxStanzaSizeExceeded extends Error
  * operations: s/geoloc/geo/
  * operations: /subscription items shall contain jid=owner
  * metadata buddycloud#channel_type
  * proper metadata field names
  * support for creationDate
  * operations: clarify logging
  * router: fix remote backend selection
  * operations: Unsubscribe refactor & fix
  * operations: fix Register
  * buddycloud-server 0.1.0
  * operation: print opName on commit, rm debug
  * bin/buddycloud-server: don't cd so config can be loaded relatively
  * Merge remote-tracking branch 'origin/cli'
  * operations: RetractItems should allow anyone to remove their own posts
  * operations: preserve affiliation if previously affiliated
  * operations: unify into isAffiliationAtLeast()
  * operations: rm leftover TODO note
  * operations: refactor Register; should check if authoritative for user's domain
  * router.run: return 404 for nodes not locally subscribed but discovered ourselves
  * rm explicit author handling in postgres schema, model, operations
  * main: check sender authorization for authorizationPrompt
  * operations: RetrieveItems shall not virtualize items for cache case of remote nodes
  * Revert "Made the ownership of tables really clear. Should help avoid the problem that DD had the other day."
  * s/channel-server/buddycloud-server/g
  * build_binary.sh: fix invokation hint
  * README: rm some outdated stuff
  * main: fix defaultConfig stuff
  * build_binary.sh
  * operations: RetrieveItems.retrieveSubscriptionsItems() result set sorting, affiliations
  * virtual handling of /user/.../subscriptions node items
  * MAM replays subscription authorization requests
  * more authorization stuff
  * fixes
  * small fixes
  * package.json: fix bin path
  * further authorizationPrompt work
  * backend_pubsub: missedSomething was missing
  * package.json: fix coffeescript path (./node_modules/...)
  * sending authorize notification forms
  * package.json: fix .coffee compilation stage
  * operations: PrivilegedOperation.fetchActorAffilliation fetches all listener affiliations for inbox sync
  * pubsub_notifications: fix MAM stanzas
  * operations: subscribe defaultAffiliation, fixes
  * model_postgres: many fixes
  * operations: publishModel 'subscribers'
  * operations: access control fixes
  * begin access control, affiliations checking
  * model_postgres: fixes
  * errors: fix error classes
  * xmpp/connection: fix
  * xmpp/connection: fix @missedServerTimeouts usage
  * model_postgres: safety checks
  * readability, notes
  * rsm_walk: fix serious errors
  * globally refactor operation from function to value
  * sync: fixes
  * add forgotten rsm_walk file
  * move syncQueue from main.coffee to fine-grained sync.syncNode
  * xmpp/connection: readability
  * xmpp/connection: track <you-missed-something/> timers with @missedServerTimeouts
  * syncServer support, wired up to <you-missed-something/> 'syncNeeded'
  * model_postgres: for an actor, getSubscriptions() shall return not only users but also listeners
  * MAM time specification
  * primitive MAM implementation
  * send <you-missed-something/>
  * operations: PushInbox TODO note
  * sync: rm request.rsm.max clamp
  * synchronization with state resetting and subscriptions/affiliations support
  * pubsub_*: fix user/jid conventions
  * ConfigSynchronization should use browse-node-info to get node config
  * synchronizing!
  * synchronization kinda works, but hits RSM loops
  * further synchronization progress
  * begin synchronization
  * main: require async
  * measure stanza size, gracefully retry with smaller result set
  * synchronization groundwork
  * don't let backend_pubsub call router.runLocally(), return errors.SeeLocal() instead
  * errors: clean up
  * normalize: add <link rel="self" href="xmpp:...?pubsub;action=retrieve;..."/>
  * operations: Publish shall allow new items with specified @id
  * nodes browsing, with RSM
  * backend_pubsub: run() should bail out early on invalid node form
  * PostgreSQL tuning
  * complete RSM implementation
  * begin RSM for all operations
  * generify RSM stuff
  * pubsub_client: RSM
  * fixes from CCCamp11
  * RSM for local items retrieving
  * begin new RSM implementation
  * pubsub_server: publish-node-items shall reply with item ids
  * model_postgres: fix getNodeListeners() SQL
  * model_postgres: nodeExists() shall check for NOT NULL
  * model_postgres: getNodeListener() replace filter by SQL
  * model_postgres: getNodeListener() filter for null
  * model_postgres: fix setSubscription() INSERT w/o listener
  * error printout
  * forms: fix
  * operations: PushInbox author fix
  * debug
  * xml child robustness
  * model_postgres: fix nodeExists()
  * fix subscription listener for local users
  * logging cleanup
  * initiate presence tracking of users
  * xmpp/connection: use send() instead of specifying from jid
  * some logging cleanup
  * operations: push-inbox does not set subscription listener
  * fixes & TODO notes
  * operations: Notify.transaction() must call cb()
  * retrieve-node-configuration
  * forms: configToResultForm -> configToForm
  * pubsub_client: RetrieveNodeConfiguration & ManageNodeConfiguration
  * operations: catch reply cb exceptions
  * create-node operation
  * package.json: scripts
  * fixes
  * fix outgoing notifications
  * generify pubsub_notifications
  * many fixes for subscription pushing
  * router: if request writes, always go remote
  * push incoming notifications to local model
  * more subclassing of EventEmitter, incoming notifications handling
  * pubsub_server: unify PubsubRequest & PubsubOwnerRequest
  * merge request.coffee into pubsub_server.coffee
  * begin remote subscription pushing to local inbox
  * backend_pubsub: PubsubBackend.notify(): readability
  * tune to use single cb() instead of req.{reply,replyError}()
  * revive normalization
  * model_postgres: setSubscription(): coearce isSet to boolean
  * model_postgres: catch lost transactions
  * pubsub_client: error reporting, fix
  * subscribe reply status
  * model_postgres: setAffiliation() should check nodeExists()
  * fix disco.authorizeFor() usage
  * pubsub_client: fix <actor/> placement
  * refactor notifications a bit
  * pubsub_client: <actor/> placement fix
  * pubsub_client: fix <actor/> placement
  * pubsub_notifications: subscriptions/affiliations/config
  * fix registration/model callback parameters
  * operations: ManageNodeAffiliations validates accessModel & publishModel
  * setting configuration
  * fixes, fixes, config
  * only RegisterSetRequest should induce presence subscription
  * FIXME note
  * model_postgres: do not use rowCount
  * operations: Register created default configuration
  * pubsub_server: pubsub/inbox identity
  * fixes, StanzaError
  * implement pubsub_client operations
  * pubsub_notifications: byOperation()
  * fixes
  * fixes
  * fixes & debugging
  * fixes
  * debugging & fixes
  * fixes
  * begin discovering locally
  * fixes
  * Router.run: fix
  * fixes
  * operations: rename channel node to "posts"
  * begin notifications
  * a bit o' twiddling w/ subscription listeners
  * refactor router for remote requests
  * operations: subscribe/unsubscribe toggle affiliation none/member
  * router: rename frontend to backend
  * rename backend_postgres to model_postgres, revive router
  * main: move iqHandler to pubsub_server
  * manage, not only retrieve, subscriptions & affiliations
  * use subscribe sender as notification listener
  * backend_pubsub: replace ternary operator
  * need to store listener in subscriptions...
  * backend_pubsub: implement RequestCache
  * new untested buddycloud discovery with backend_pubsub.coffee
  * retrieve <actor/> generalized, begin using authorizeFor
  * ns: add BUDDYCLOUD_V1 xmlns
  * postgres.sql schema: updated column for more tables, author column for items
  * retrieving node affiliations
  * retrieving node subscriptions, fixes
  * backend_postgres: syntax fixes
  * operation: Register should set affiliation & subscription
  * retrieving subscriptions & affiliations
  * retracting items
  * publishing & retrieving items works
  * begin item retrieving
  * subscribe & unsubscribe
  * fix backend_postgres (user is a Pg keyword, must be quoted as column name)
  * publishing works
  * lots of fixes
  * fix disco requests
  * fix, fix, fix
  * begin implementing register & publish implementation
  * mv src/operations.coffee src/local/operations.coffee
  * revive backend
  * primitive operations
  * mv controller.coffee operations.coffee
  * dead code TODO
  * fixes
  * rm old dead code
  * rename iqhandler to request
  * begin some refactoring
  * begin hooking up handlers with operations
  * xmpp/pubsub_server: indicate operation types
  * notes
  * pubsub_server: PubsubOwnerHandlers
  * pubsub_server: flesh out more pubsub handlers
  * add affiliations checking
  * begin interweaving with local operations
  * a tad of interconnecting
  * pubsub_server: DiscoInfoHandler.reply()
  * xmpp client 'n stuff
  * README: draw new design
  * begin router
  * xmpp: move NS_* to ns.coffee
  * xmpp: primitive disco info works
  * begin iqhandler
  * xmpp/connection: port presence tracking
  * rm main.js
  * move src files around
  * rm model_couchdb from config, add preliminary main.coffee
  * a bit new controller
  * rm old test_controller
  * some controller work
  * old controller translated to coffeescript
  * port peripheral stuff over to coffeescript
  * README: change ejabberd port to the config default one
  * model_couchdb: s/doc.subscribers/doc.subscriptions/
  * xmpp_pubsub.js: fix typo
  * model_postgres: check nodeExists before any data modification
  * preliminary RSM (XEP-0059) implementation for retrieve-items/retrieve
  * model_couchdb: stub getUpdatesByTime()
  * MAM should result in direct message, not broadcast notification to all resources
  * MAM w/ working model_postgres backend
  * begin implementing MAM
  * controller: register/register should create /user/<jid>/subscriptions node
  * normalize fixes + tests
  * normalize
  * only one child element per item
  * model_postgres: fix setConfig()
  * model_postgres: listNodesByUser()
  * model_couchdb: listNodesByUser(), simplify listNodes()
  * controller, xmpp_pubsub: browse-nodes/by-user
  * model_postgres setConfig(): fixes
  * configuration notification
  * model_postgres setConfig(): do not set fields unspecified/without defaultConfig
  * model_postgres nodeExists(): indentation
  * controller: subscribe should not require preexisting affiliation
  * xmpp_pubsub: fix manage-subscriptions/retrieve result usage
  * controller: allow retrieving subscriptions & affiliations for members
  * xmpp_pubsub: syntax fix
  * model_postgres: fix queue pushing
  * xmpp_pubsub: fix info discovery reply FORM_TYPE
  * model_postgres: config fixes
  * more on extended config
  * model_couchdb, model_postgres: more flexible config schema
  * config: description, type, creationDate; setConfig() on create-node/register
  * xmpp_pubsub: optimize presence tracking
  * controller: requiredAffiliation='member' for config-node/retrieve
  * README: OpenFire
  * controller: defaultConfig() + use in feature 'config-node'
  * xmpp_pubsub: replace isOnline() with getOnlineResources()
  * model_postgres: fix transaction dequeueing
  * model_postgres: move cb() past process.nextTick/dbIsAvailable for safety
  * model_postgres: work around empty responses
  * test_controller: retract
  * xmpp_pubsub: disco <identity/> according to discovered @node
  * test_controller: browse-nodes
  * model_couchdb: fix preload() etag extraction + error reporting
  * xmpp_pubsub: FeatureNotImplemented message
  * controller: simulate a stack for debug info
  * test_controller: retract skeleton
  * controller unsubscribe: do not fetch affiliation from database but check by node path
  * implement & test unsubscribe
  * test_controller: skeletons
  * test_controller: publishing tests
  * test_controller: more publish testing + controller fix
  * test_controller: begin test publishing
  * model_postgres: fix forgotten variable
  * model_postgres: reconnect to database upon error
  * model_postgres: oops, syntax error
  * config.js.example: postgres is actually the one with a poolSize
  * model_postgres: oops, syntax errors
  * begin test_controller
  * fixes
  * subscriptionModified <message/>
  * xmpp_pubsub: "message" & approve() fixes
  * controller: replace ownerNotification with afterTransaction
  * access_model authorize
  * package.json & README
  * errors: pull inherits() from util/utils/sys for moving node api
  * browse open nodes with service discovery items
  * controller: refactor affiliations checking
  * xmpp_pubsub: fix subscriptions format
  * controller: treat missing accessModel as 'open'
  * model_couchdb: preload() etag fix
  * .gitignore with config.js
  * xmpp_pubsub: node config on disco info
  * model_couchdb: encodeURIComponent() only for db.head() & .get()
  * main.js: #!
  * rename config.js to config.js.example
  * restore default config.js
  * main.js: on uncaughtException
  * postgres doc & config
  * model_postgres
  * model_couchdb: fix item deserialization
  * model_couchdb: rm implemented TODOs
  * README: CouchDB configuration
  * README: TODO++
  * LICENSE
  * README: markdown fix
  * README: mention buddycloud :)
  * model_couchdb: fix views initialization
  * README & config
  * jabber:iq:register
  * model_couchdb: fixes
  * errors fixing
  * rm model_persistence
  * model_couchdb: assertNodeName()
  * main: catch uncaughtException
  * controller: fix
  * bugs, readability
  * model_couchdb: fixing
  * controller: implement affiliations checking
  * xmpp_pubsub: getAffiliations() result is now Array
  * model_couchdb: setSubscription() & setAffiliation() 'none'
  * model_couchdb: consolidate subscriptions & affiliations model
  * xmpp_pubsub: send notifications with type='headline'
  * xmpp_pubsub: subscribeIfNeeded() on <create/> & <subscribe/>
  * model_couchdb: load() shortcut when already cached
  * model_couchdb: createNode() fix
  * model_couchdb: preload()
  * model_couchdb: commit read documents too for integrity
  * model_couchdb: abstract views
  * CouchDB Optimistic Concurrency Control layer
  * controller: improve error propagation
  * defined error conditions
  * untested configuration getting/setting
  * service discovery
  * modify-affiliations
  * model_couchdb: getAffiliation()
  * begin permission checking infrastructure
  * presence probes
  * xmpp_pubsub: presence tracking
  * refactoring controller complete
  * continue refactoring controller into features/operations
  * begin refactoring controller into features/operations
  * subscribers
  * getting subscriptions & affiliations
  * createNode improvements
  * controller createNode: check node
  * model_couchdb: affiliations view
  * items getting
  * much more progress
  * implement retraction, s/notifySubscriber/notify/, s/writeItems/writeItem/
  * publish notification works
  * more frontend hooking
  * begin notification hooks
  * fixes
  * begin model_couchdb transactions
  * split model
  * some progress
  * some progress
  * createNode creates owner affiliation
  * model: indexes
  [ Thomas Jost ]
  * Add @denisw to contributors
  * Upgrade required node version to 0.8
  * We actually need remote subscriptions nodes
  * Merge branch 'feature/anon-fixes' into develop
  * Merge branch 'feature/really-validate-post-times' into develop
  * Reject remote posts with invalid dates
  * Add tests for remote posts with invalid dates
  * Force anon subscriptions to be temporary
  * Set default affiliation to 'none' for anon users
  * Merge branch 'feature/anon-fixes' into develop
  * Cleanup: remove some dead code
  * Purge remote nodes with no local subscription left
  * Merge branch 'feature/recent-items' into develop
  * Merge branch 'feature/validate-remote-items' into develop
  * Sort recent items by update time
  * Merge branch 'feature/validate-remote-items' into feature/recent-items
  * Fix tests that push remote items
  * Validate remote items
  * Add (failing) tests for invalid remote items
  * Implement recent items query
  * Add (failing) test for recent items query
  * PubSub replies can include several elements
  * Merge branch 'feature/pusher' into develop
  * Workaround callback woes
  * Fix MAM for pusher component
  * Pusher: test MAM
  * test_server: move makePublishIq into TestServer
  * Pusher: test node configuration
  * Pusher: test unsubscriptions
  * Merge branch 'feature/affiliations-fixes' into develop
  * Merge branch 'feature/pubsub-disco-features' into develop
  * Cleanup
  * Expose all implemented PubSub features
  * Pusher: test affiliations
  * Merge branch 'feature/affiliations-fixes' into feature/pusher
  * Fix affiliation in /subscriptions notifications
  * Accept PubSub-compliant affiliations notifications
  * Pusher: test subscriptions
  * Merge branch 'feature/fix-98' into develop
  * Fix SQL for updating replies
  * Add failing test for issue #98
  * Fix offline user cleanup
  * DB: drop anonymous column
  * Yet another federation test
  * Check if the example config file is valid JS
  * Add tests for pusher code
  * Pusher can MAM everything
  * Pusher is a listener for all notifications
  * Add config for pusher component
  * Merge branch 'feature/mam-fixes' into develop
  * Increase the default number of items in a MAM response
  * Make MAM return an error if there are too many results
  * Use RSM in MAM
  * Test MAM RSM
  * MAM: filter bad dates out
  * Test if MAM validates dates correctly
  * Ensure the giant MAM test doesn't pollute the test environment
  * Make affiliations notifications PubSub-compliant
  * Affiliations have update timestamps too
  * Avoid temporary subscriptions in MAM results
  * Advertise support for MAM in disco#info
  * Add a giant MAM test
  * Update Travis URL in README.md
  * Merge branch 'feature/tests' into develop
  * Correctly tests that updated items don't change <in-reply-to/>
  * Move tests on updated items to a different function
  * Add tests for updates that change <in-reply-to/>
  * Use Travis to automate testing
  * Merge branch 'master' into develop
  * Add compatibility with PostgreSQL 9.1
  * Require at least one item to retract
  * Add Emacs folding marks
  * Add retrieve and retract tests
  * Fix retraction stanza sent to remote services
  * Tombstones: include Atom namespace in <updated/> element
  * Fix error when not allowed to retract an item
  * Tombstones can't be updated
  * When publishing an update, check if the actor is the original author
  * Check if original post exists before publishing a reply
  * Reject posts from non-users
  * Don't include type in <actor/>
  * Complete post/update/retract tests
  * TestServer: fix Atom in-reply-to element
  * Fail when some unwanted event happens
  * Add description for calls to "should.exist"
  * Retraction tests
  * Workaround CoffeeScript weird scoping rules
  * Add another batch of tests
  * Update test data
  * Change the way the test server emits IQ stanzas
  * Tests for posting to remote channels
  * Test server: emit event for IQs with unknown ID
  * Test server: disco info for "remote" servers
  * More post tests
  * Add helper to run tests that trigger several different stanzas
  * Test server: handle <message/> stanzas
  * Add post tests
  * Post tests: helper to check if post was successful
  * Throw an exception when getting an unexpected error IQ
  * Start adding post tests
  * Add helpers for pubsub get IQs and Atom handling
  * Helpers to add initial test data in the database
  * Add XMPP namespaces to test_server.coffee
  * Reply to presence probes
  * Don't parse Elements again
  * Use same user and server names as in sfc
  * Safe path handling in prepare-db.sh
  * Add codo-like doc to the TestServer class
  * Add helpers to build disco and pubsub IQs
  * Expose support for PubSub node creation
  * Skip a test
  * More channel creation tests
  * New tests and helpers for forms
  * Add a helper to parse disco#info replies
  * Move common disco replies to test_server.coffee
  * Start testing for channel creation
  * Test server: handle disco#items queries
  * Make tests runnable using "npm test"
  * Basic disco tests
  * Start a test suite
  * Use an existing component connection if provided in config
  * Make it possible to require() the server
  * Update config.js.example
  * Fix autosubscribeNewUsers
  * Increase the max number of items in each RSM page
  * Better shrinking of oversized stanzas
  * Include `-dirty' in version number from git
  * Remove glob from dependencies
  * Fix indentation in main.coffee
  * Prevent existing persistent subscription from being made temporary
  * Merge branch 'feature/version-number-from-git' into develop
  * Expose support for XEP-0092 (Software Version) in disco
  * Use `git describe' to get version numbers in dev branches
  * Merge branch 'master' into next
  * Restore compatibility with Node 0.6
  * Fix handling of offline users
  * Avoid race condition in disco cache
  * Shrink oversized stanzas more aggressively
  * Avoid nulls
  * Include new files in release tarball
  * Avoid race condition in disco cache
  * Merge remote-tracking branch 'upstream/tempsub' into next
  * Merge branch 'db-versioning' into next
  * buddycloud-server 0.3.5
  * Check if remote supports temporary subscription before sending a tempsub request
  * Client can check for server features before sending an IQ
  * Make server features discoverable
  * Log errors when processing incoming messages
  * Cleanup
  * Remove empty text nodes from items
  * Fix ActivityStreams verb for replies
  * Include operation name in debug message
  * Don't notify unsubscribe when it was a temporary subscription
  * Offline user cleanup: do real unsubscribe operations
  * I'm dumb
  * Don't delete temporary subscriptions during sync
  * Don't send any notification for temporary subscriptions
  * Client and server must speak the same language
  * Only send notifications about temporary subscriptions to remote listeners
  * Cleanup offline users
  * Claim we support subscription options
  * Temporary subscriptions
  * Fix updating items
  * Add help channels to default autosubscriptions
  * Merge branch 'log-fix'
  * Inspect objets in log messages
  * Fix broken log messages
  * Don't write subscription stanzas in items table
  * Merge remote-tracking branch 'lloyd/config'
  * Populate in_reply_to column when inserting new items
  * DB cleanup at startup
  * Add README for DB schema versioning
  * Upgrade DB schema
  * Check DB schema version on startup
  * Don't change <published/> when updating an existing post
  * Fix subscription to remote private channels
  * Don't fail when the default config file does not exist
  * Add Lloyd in contributors
  * Better logging for replies sent by 'proxy' components
  * Merge branch 'mam-result'
  * Include <result/> in MAM replies
  * Merge remote-tracking branch 'schnouki/atom-tombstones'
  * Fix typo
  * Merge pull request #61 from lloydwatkin/no-mod_disco
  * Also send tombstones in retract notifications
  * Use Atom tombstones for deleted items
  * xmpp: XEP-0313 compliance
  * Handle PubSub retract "notify" attribute
  * operations: fix PushInbox notification
  * Fix undefined variable when paging backwards in RSM
  [ Tuomas Koski ]
  * Merge pull request #59 from lloydwatkin/initialise-sync
  * Merge pull request #58 from lloydwatkin/master
  [ Steven Lloyd Watkin ]
  * Ensure we do not cause BC breaks
  * Make both defaults positive rather than one positive & the other negative Broke the config options down further
  * Fix build console output
  * "package" now a reserved word in node, caused failing in builds (v0.6.15+)
  [ Denis Washington ]
  * Use local CoffeeScript "cake" for "npm install"
  [ Jonas Smedegaard ]
  * Setup access rights and needed dirs when starting daemon
  * Speedup system shutdown by avoiding explicit sysV stop
  * xmpp_pubsub: check for commandEl prior usage
  [ Reginald dude ]
  * updates sent via email from vorner.cz
  * updates sent via email from vorner.cz
  [ Reginald Dude ]
  * Most confusing config file ever
  [ ▟ ▖▟ ▖ ]
  * Merge pull request #70 from lloydwatkin/fix-is-function
  * Merge pull request #63 from lloydwatkin/no-mod_disco
  * Merge pull request #62 from lloydwatkin/no-mod_disco
  * Merge pull request #57 from Schnouki/xep-0313
  * Merge pull request #54 from Schnouki/fix-notif
  * Merge pull request #52 from lloydwatkin/master
  * Merge pull request #51 from lloydwatkin/master
  [ James Tait ]
  * Ensure both the PID dir and log dir are created on startup if they do not already exist.
  [ imaginator ]
  * aligning with INSTALL instructions
  * moved instructions to wiki
  * Edited README.md via GitHub
  [ dodo ]
  * fix accessModel of geo nodes
  * always test in production
  * buddycloud-server 0.3.4
  * Merge branch 'packaging'
  * put the /etc/init.d script into tarball
  * not needed anymore
  * default options for new channels
  * bump tarballify version
  * add bin/buddycloud-server to the tarball
  * no build step in bin/buddycloud-server anymore
  * print additional info messages in gray
  * fix 'file is not defined'
  * fix 'modName is not defined'
  * colorful output for package.js
  * bump tarballify version
  * rm trailing spaces
  * no build_binary.sh needed
  * separate devDependencies
  * export name
  * use packaging script
  * buddycloud-server 0.3.3
  * pass prefix to npm to force npm to use that particular prefix
  * $PREFIX/bin/buddycloud-server can be nonexistant .. so ignore all errors when removing
  * bump node version in build script
  * merge issue #37
  * specify interal config file as defaults, not as main config
  * backports to node 0.4
  * concat cwd path to config path only when config path is relative
  * respect the cwd
  * move to the right dir before builing
  * wscript is not needed anymore
  * merged #31. symlink detection for bin/buddycloud-server thanks to @highfellow
  * fixed gitignore
  * forgot Cakefile
  * pin node version for over 0.5 to get the require json working
  * get version directly
  * new buildsystem
  * check if config.syslog has keys
  * dont load default config over opts and args
  * main: fix config loading
  * wscript fixes
  * load config via jsconfig
  * update wscript
  * upgrade build environment
  * update requirements in readme
  * cleanup files
  [ Simon Tennant ]
  * Update config.js.example
  * change to read config file from /opt/buddycloud
  * Update master
  * don't be so --quiet (will help a lot with debugging)
  * Update _etc_init.d_buddycloud-server
  * the orwell defeault was causing jdesenberg problems.
  * Fixed the permissions to run as.
  * Update _etc_init.d_buddycloud-server
  * init script
  * make it really clear what to change (and what "jid" refers to)
  * Made the ownership of tables really clear. Should help avoid the problem that DD had the other day.
  [ Lloyd Watkin ]
  * Fix for checking of child element
  * Catch error event
  * Fix for server reset
  * Updated variable names to better describe what config does.
  * Merge branch 'master' of git://github.com/buddycloud/buddycloud-server into no-mod_disco
  * Allow buddycloud server to advertise additional 'proxy' components
  * Wait to sync
  * Rename of parameter
  * Allow user to specify a port or not, changed argument name as it may not actually be remote debugging.
  * Tidy up
  * Allow node.js debugging
  [ Simon ]
  * /etc/init.d/buddycloud-server

 -- Abmar Barros (buddycloud Nightly Builds) <abmar@buddycloud.com>  Sat, 26 Jan 2013 15:22:47 -0300


buddycloud-server (0.1) unstable; urgency=medium

  [ Astro ]
  * operations: all nodes in defaultConfiguration accessModel=authorize
  * operations: posts & subscriptions accessModel=authorize in defaultConfiguration
  * buddycloud-server 0.3.2
  * Cakefile: version.js + 

  * operations: fix run notifications control flow
  * build_binary.sh: get bin/buddycloud-server out of the way before npm i
  * buddycloud-server 0.3.1
  * package.json: honor all contributors
  * Merge remote-tracking branch 'schnouki/patch-1'
  * .npmignore: exclude debian/* from npm pkgs
  * buddycloud-server 0.3.0
  * package.json: bump dep versions
  * operations: prevent unsubscribing/demoting the node owner
  * operations: fix PushInbox callback
  * operations: run notifies first, then syncs, then calls back
  * pubsub_server: lower logging
  * operations: fix PushInbox newNodes
  * operations: move PushInbox syncNode post transaction
  * operations: PushInbox should work even if syncNode had hickups
  * operations: syncNode when PushInbox created it
  * operations: fix PushInbox notification & newModerators
  * model_postgres: fix & simplify purgeNode()
  * sync: fixes
  * sync: purge node if no local subscribers
  * purge node when local unsubscription is pushed from remote
  * operations: fix generateSubscriptionsNotifications followee
  * operations: fix PushInbox newModerators nodes
  * xmpp connection: doc, serialize stanzas only once
  * operations: NewModeratorNotify needs listener, not user
  * operations: fix NewModeratorNotify listener
  * operations: log Operation name
  * model_postgres: must quote "user" column for Postgres
  * operations: NewModeratorNotify must cb()
  * operations: Notify notifies w/ node
  * operations: fix Notify otherListeners
  * pubsub_client: rm debug
  * operations: NewModeratorNotify notifies w/ node & listener
  * model_postgres: optional Transaction callbacks
  * operations: fix Notify filterSubscription & filterAffiliation invokation
  * operations: fix this binding
  * operations: no pending subscriptions in subscriptions node
  * operations: NewModeratorNotify
  * operations: doc, filter subscriptions and affiliations for non-moderators
  * operations: reorganize
  * clean up logging
  * operations: posts node defaultAffiliation='publisher'
  * sync: fix AffiliationsSynchronization typo
  * buddycloud-server 0.2.3
  * package.json: fix install script
  * build_binary.sh: bump node.js version
  * buddycloud-server 0.2.2
  * package.json: add preinstall cake build
  * operations: fix notifications
  * build_binary.sh: bump node.js version
  * buddycloud-server 0.2.1
  * operations: fix Notify subscriptios node items
  * operations: fix Notify callback result
  * operations: BrowseNodeItems for subscriptions node calls getSubscriptions not getSubscription
  * operations: syntax fixes
  * operations: Notify subscriptions fixes
  * operations: subscriptions node notifications
  * operations: BrowseNodeItems for subscriptions node
  * sync: require errors
  * sync: avoid error output when omitting local node
  * router, sync: improve logging
  * backend_pubsub: PubsubBackend.notify listener robustness
  * operations: fix Subscribe defaultAffiliation
  * operations: fix ManageNodeAffiliations control flow
  * pubsub_server: PubsubOwnerSetAffiliationsRequest syntax fix
  * operations: fix requiredAffiliation()
  * operations: requiredAffiliation can be function to allow moderators approving topic channel subscribers
  * operations: ManageNodeSubscriptions refactor for efficiency
  * operations: ManageNodeSubscriptions should set new affiliations to defaultAffiliation
  * operations: fix Notify jid/user
  * operations: Notify should notify all users pertained by a subscription
  * operations: 'unsubscribe-node' notifies unsubscribed user
  * operations, pubsub_client: there's no "unsubscribed" subscription, only "none"
  * pubsub_server: PubsubOwnerSetSubscriptionsRequest syntax fix
  * operations: Unsubscribe needs PrivilegedOperation methods
  * operations: Unsubscribed is not a PrivilegedOperation but a ModelOperation
  * operations: fix callback scope
  * pubsub_server: robustify PubsubItemsRequest
  * operations: syntax
  * pubsub_server, operations: support for RetrieveItems by itemIds
  * build_binary.sh: bump node.js version to 0.6.10
  * buddycloud-server 0.2.0
  * operations: CreateNode should not allow creation with empty nodeUser username
  * operations: fix CreateNode defaults & creationDate
  * operations: fix CreateNode isTopic switcheroo
  * router: fix autosubscribeNewUsers operation name
  * router: autosubscribeNewUsers
  * config.js.example: default checkCreateNode hook checks for a specific topic domain
  * operations: fix CreateNode node typo
  * operations: fix CreateNode config
  * pubsub_server, operations: CreateNode with optional config
  * operations: fix CreateNode setSubscription()
  * operations: CreateNode catches missing checkCreateNode hook
  * operations: CreateNode default config
  * checkCreateNode config hook
  * model_postgres: fix getOwnersByNodePrefix SQL
  * operations: fix CreateNode setAffiliation()
  * operations: fix CreateNode getOwnersByNodePrefix()
  * operations: fix ../util require, CreateNode safety check
  * implement createNode with getOwnersByNodePrefix check
  * operations: begin creating topic channels
  * model_postgres: syntax fix
  * package.json: maintainer update
  * build_binary.sh: update to node 0.6.9
  * buddycloud-server 0.1.11
  * rsm_walk: fix logging
  * operations: checkAccessModel() before checkRequiredAffiliation()!
  * operations: Unsubscribe condition syntax fix
  * package.json: muffin dependency glob seems be incompatible in v3.*
  * operations: checkRequiredAffiliation should ignore no @requiredAffiliation
  * operations: fix isAffiliationAtLeast w/ invalid affiliation
  * jsconfig 0.2.0 is out! w00t!!!
  * Cakefile: lib/version.js from package.json
  * logger: update to ain2 1.0.0
  * main: fix config loading
  * buddycloud-server 0.1.10
  * router: fix syncServer()
  * buddycloud-server 0.1.9
  * bin/buddycloud-server: fix param quoting
  * bin/buddycloud-server: fix $cwd
  * buddycloud-server 0.1.8
  * .npmignore to package up built lib/* instead of src/*
  * build_binary.sh: install devDependencies beforehand
  * build_binary.sh: bump node.js version to 0.6.7
  * util: move getNodeUser(), getUserDomain()
  * main: "server successfully started"
  * sync: fix logging
  * model_postgres: fix writeItem() SQL parameter binding
  * sync: fix PaginatedSynchronization error callback
  * sync: rm TODO note
  * model_postgres: writeItem updated_query
  * operations: logging fixes
  * writeItem: move updated extraction from operations to model_postgres
  * model_postgres: writeItem should also INSERT existing updated value
  * model_postgres: fix syntax
  * model_postgres: SQL fixes
  * operations: PushInbox copies item published date
  * postgres schema: CREATE VIEW open_nodes + usage in model_postgres
  * model_postgres: fix query result handling
  * fix getTopFollowedNodes & getTopPublishedNodes parameters
  * model_postgres: fix SQL INTERVAL syntax
  * operations: BrowseNodes.fetchNodes() needs transaction
  * operations: BrowseNodes.transaction should use @fetchNodes()
  * operations: fetchNodes() typo
  * pubsub_server: browse /top-followed-nodes & /top-published-nodes does not request a particular node
  * getTopFollowedNodes & getTopPublishedNodes w/ XMPP disco interface
  * build_binary.sh: bump to node 0.6.6
  * buddycloud-server 0.1.7
  * package.json: rm cradle dependency
  * logger: syslog only with hostname
  * replace common-logger by underscore.logger
  * update ain2 dependency for node v0.6 compatibility
  * model_postgres walkListenerArchive: replace DISTINCT with GROUP BY
  * model_postgres: fix config order/limig
  * operations: ReplayArchive sorts results before capping
  * ReplayArchive/walkListenerArchive: properly cap result set
  * operations: ReplayArchive default max=50
  * build_binary.sh: use $PREFIX from environment if present
  * package.json: req node-stringprep >=0.1.1
  * router: fix
  * buddycloud-server 0.1.6
  * update to new node-waf paths
  * build_binary.sh: switch to node 0.6.4
  * package.json: depend on 0.3.1
  * router: RSM usage fix
  * logger: open logFile for appending, fixes issue #25
  * package.json: depend on node-xmpp >= 0.3.0
  * operations ReplayArchive: fix rsm max
  * operations: ReplayArchive RSM support
  * backend_pubsub: notificationPush updates include sender & actor
  * router: detectUserType fixes
  * router: detectUserType fixes
  * logger: fix argument iteration
  * main, backend_pubsub: logging improvements
  * backend_pubsub: include user in notfound error
  * connection: loopback stanzas to ourselves
  * router: add missing util.inspect include
  * router.run: trace req
  * router: add missing rsm include
  * logger: typo
  * logger: fix level
  * logging clean-up
  * router, pubsub_{server,client}: @type in <actor/>
  * buddycloud-server 0.1.5
  * router: sync fixes
  * buddycloud-server 0.1.4
  * ManageNodeAffiliations: non-owner may not elect a new owner
  * sync: log upon completion
  * sync: transaction fix
  * move some sync logic into router, lock per node
  * operations: BrowseNodeInfo/RetrieveNodeConfiguration w/o access control
  * buddycloud-server 0.1.3
  * operations: deny Unsubscribe from own nodes
  * logger: ain2 syslog transport
  * logger: message always as string
  * main: fix --stdout kludge
  * logger: avoid log level < 0
  * config.js.example: syslog on by default
  * config.js.example: logging section
  * syslog support with ain2
  * support --stdout logging
  * replace cnlogger by common-logger
  * buddycloud-server 0.1.2
  * build_binary: npm install globally (into /opt/buddycloud-server/)
  * build_binary: dedup node & npm versions
  * build_binary: default to /opt/buddycloud-server, bin/ script
  * main: process.title fix
  * version: fix package.json path
  * version from package.json in process.title and for jabber:iq:version
  * xmpp/connection: do not subscribe in probePresence()
  * buddycloud-server 0.1.1
  * build_binary: bump node & npm versions
  * backend_pubsub: reply() must also copy 'replay' field on MaxStanzaSizeExceeded
  * connection: more stanza output when MaxStanzaSizeExceeded
  * don't send ReplayArchive notifications to all online resources
  * pubsub_client/connection: wrap error replies into StanzaError earlier
  * logging fixes
  * port to cnlogger
  * port to broken winston logging
  * xmpp connection: always tell node-xmpp to reconnect
  * async.filter iterator does not take error parameter
  * model_postgres: fix nodeExists warning
  * backend_pubsub: fix notification matching
  * sync: fix router.authorizeFor() usage
  * sync: writeItem does not need author anymore
  * operations: typo
  * model_postgres: fix getListenerAffiliations() query
  * sync: careful
  * xmpp/forms: oops, s/creationTime/creationDate/
  * xmpp/connection: fix name
  * router: check for anonymous user to be online
  * anonymous user offline tracking & clean-up
  * model_postgres: fix walkListenerArchive() node in results
  * router: fix method binding
  * model_postgres: walkListenerArchive() should include node in results
  * operations: RemoveUser & model_postgres.getUserRemoteSubscriptions() & clearUserSubscriptions()
  * BuddycloudDiscovery::detectAnonymousUser
  * backend_pubsub: gracefully handle MaxStanzaSizeExceeded for notifications
  * xmpp pubsub_server & connection: fix graceful MaxStanzaSizeExceeded handling
  * errors: MaxStanzaSizeExceeded extends Error
  * operations: s/geoloc/geo/
  * operations: /subscription items shall contain jid=owner
  * metadata buddycloud#channel_type
  * proper metadata field names
  * support for creationDate
  * operations: clarify logging
  * router: fix remote backend selection
  * operations: Unsubscribe refactor & fix
  * operations: fix Register
  * buddycloud-server 0.1.0
  * operation: print opName on commit, rm debug
  * bin/buddycloud-server: don't cd so config can be loaded relatively
  * Merge remote-tracking branch 'origin/cli'
  * operations: RetractItems should allow anyone to remove their own posts
  * operations: preserve affiliation if previously affiliated
  * operations: unify into isAffiliationAtLeast()
  * operations: rm leftover TODO note
  * operations: refactor Register; should check if authoritative for user's domain
  * router.run: return 404 for nodes not locally subscribed but discovered ourselves
  * rm explicit author handling in postgres schema, model, operations
  * main: check sender authorization for authorizationPrompt
  * operations: RetrieveItems shall not virtualize items for cache case of remote nodes
  * Revert "Made the ownership of tables really clear. Should help avoid the problem that DD had the other day."
  * s/channel-server/buddycloud-server/g
  * build_binary.sh: fix invokation hint
  * README: rm some outdated stuff
  * main: fix defaultConfig stuff
  * build_binary.sh
  * operations: RetrieveItems.retrieveSubscriptionsItems() result set sorting, affiliations
  * virtual handling of /user/.../subscriptions node items
  * MAM replays subscription authorization requests
  * more authorization stuff
  * fixes
  * small fixes
  * package.json: fix bin path
  * further authorizationPrompt work
  * backend_pubsub: missedSomething was missing
  * package.json: fix coffeescript path (./node_modules/...)
  * sending authorize notification forms
  * package.json: fix .coffee compilation stage
  * operations: PrivilegedOperation.fetchActorAffilliation fetches all listener affiliations for inbox sync
  * pubsub_notifications: fix MAM stanzas
  * operations: subscribe defaultAffiliation, fixes
  * model_postgres: many fixes
  * operations: publishModel 'subscribers'
  * operations: access control fixes
  * begin access control, affiliations checking
  * model_postgres: fixes
  * errors: fix error classes
  * xmpp/connection: fix
  * xmpp/connection: fix @missedServerTimeouts usage
  * model_postgres: safety checks
  * readability, notes
  * rsm_walk: fix serious errors
  * globally refactor operation from function to value
  * sync: fixes
  * add forgotten rsm_walk file
  * move syncQueue from main.coffee to fine-grained sync.syncNode
  * xmpp/connection: readability
  * xmpp/connection: track <you-missed-something/> timers with @missedServerTimeouts
  * syncServer support, wired up to <you-missed-something/> 'syncNeeded'
  * model_postgres: for an actor, getSubscriptions() shall return not only users but also listeners
  * MAM time specification
  * primitive MAM implementation
  * send <you-missed-something/>
  * operations: PushInbox TODO note
  * sync: rm request.rsm.max clamp
  * synchronization with state resetting and subscriptions/affiliations support
  * pubsub_*: fix user/jid conventions
  * ConfigSynchronization should use browse-node-info to get node config
  * synchronizing!
  * synchronization kinda works, but hits RSM loops
  * further synchronization progress
  * begin synchronization
  * main: require async
  * measure stanza size, gracefully retry with smaller result set
  * synchronization groundwork
  * don't let backend_pubsub call router.runLocally(), return errors.SeeLocal() instead
  * errors: clean up
  * normalize: add <link rel="self" href="xmpp:...?pubsub;action=retrieve;..."/>
  * operations: Publish shall allow new items with specified @id
  * nodes browsing, with RSM
  * backend_pubsub: run() should bail out early on invalid node form
  * PostgreSQL tuning
  * complete RSM implementation
  * begin RSM for all operations
  * generify RSM stuff
  * pubsub_client: RSM
  * fixes from CCCamp11
  * RSM for local items retrieving
  * begin new RSM implementation
  * pubsub_server: publish-node-items shall reply with item ids
  * model_postgres: fix getNodeListeners() SQL
  * model_postgres: nodeExists() shall check for NOT NULL
  * model_postgres: getNodeListener() replace filter by SQL
  * model_postgres: getNodeListener() filter for null
  * model_postgres: fix setSubscription() INSERT w/o listener
  * error printout
  * forms: fix
  * operations: PushInbox author fix
  * debug
  * xml child robustness
  * model_postgres: fix nodeExists()
  * fix subscription listener for local users
  * logging cleanup
  * initiate presence tracking of users
  * xmpp/connection: use send() instead of specifying from jid
  * some logging cleanup
  * operations: push-inbox does not set subscription listener
  * fixes & TODO notes
  * operations: Notify.transaction() must call cb()
  * retrieve-node-configuration
  * forms: configToResultForm -> configToForm
  * pubsub_client: RetrieveNodeConfiguration & ManageNodeConfiguration
  * operations: catch reply cb exceptions
  * create-node operation
  * package.json: scripts
  * fixes
  * fix outgoing notifications
  * generify pubsub_notifications
  * many fixes for subscription pushing
  * router: if request writes, always go remote
  * push incoming notifications to local model
  * more subclassing of EventEmitter, incoming notifications handling
  * pubsub_server: unify PubsubRequest & PubsubOwnerRequest
  * merge request.coffee into pubsub_server.coffee
  * begin remote subscription pushing to local inbox
  * backend_pubsub: PubsubBackend.notify(): readability
  * tune to use single cb() instead of req.{reply,replyError}()
  * revive normalization
  * model_postgres: setSubscription(): coearce isSet to boolean
  * model_postgres: catch lost transactions
  * pubsub_client: error reporting, fix
  * subscribe reply status
  * model_postgres: setAffiliation() should check nodeExists()
  * fix disco.authorizeFor() usage
  * pubsub_client: fix <actor/> placement
  * refactor notifications a bit
  * pubsub_client: <actor/> placement fix
  * pubsub_client: fix <actor/> placement
  * pubsub_notifications: subscriptions/affiliations/config
  * fix registration/model callback parameters
  * operations: ManageNodeAffiliations validates accessModel & publishModel
  * setting configuration
  * fixes, fixes, config
  * only RegisterSetRequest should induce presence subscription
  * FIXME note
  * model_postgres: do not use rowCount
  * operations: Register created default configuration
  * pubsub_server: pubsub/inbox identity
  * fixes, StanzaError
  * implement pubsub_client operations
  * pubsub_notifications: byOperation()
  * fixes
  * fixes
  * fixes & debugging
  * fixes
  * debugging & fixes
  * fixes
  * begin discovering locally
  * fixes
  * Router.run: fix
  * fixes
  * operations: rename channel node to "posts"
  * begin notifications
  * a bit o' twiddling w/ subscription listeners
  * refactor router for remote requests
  * operations: subscribe/unsubscribe toggle affiliation none/member
  * router: rename frontend to backend
  * rename backend_postgres to model_postgres, revive router
  * main: move iqHandler to pubsub_server
  * manage, not only retrieve, subscriptions & affiliations
  * use subscribe sender as notification listener
  * backend_pubsub: replace ternary operator
  * need to store listener in subscriptions...
  * backend_pubsub: implement RequestCache
  * new untested buddycloud discovery with backend_pubsub.coffee
  * retrieve <actor/> generalized, begin using authorizeFor
  * ns: add BUDDYCLOUD_V1 xmlns
  * postgres.sql schema: updated column for more tables, author column for items
  * retrieving node affiliations
  * retrieving node subscriptions, fixes
  * backend_postgres: syntax fixes
  * operation: Register should set affiliation & subscription
  * retrieving subscriptions & affiliations
  * retracting items
  * publishing & retrieving items works
  * begin item retrieving
  * subscribe & unsubscribe
  * fix backend_postgres (user is a Pg keyword, must be quoted as column name)
  * publishing works
  * lots of fixes
  * fix disco requests
  * fix, fix, fix
  * begin implementing register & publish implementation
  * mv src/operations.coffee src/local/operations.coffee
  * revive backend
  * primitive operations
  * mv controller.coffee operations.coffee
  * dead code TODO
  * fixes
  * rm old dead code
  * rename iqhandler to request
  * begin some refactoring
  * begin hooking up handlers with operations
  * xmpp/pubsub_server: indicate operation types
  * notes
  * pubsub_server: PubsubOwnerHandlers
  * pubsub_server: flesh out more pubsub handlers
  * add affiliations checking
  * begin interweaving with local operations
  * a tad of interconnecting
  * pubsub_server: DiscoInfoHandler.reply()
  * xmpp client 'n stuff
  * README: draw new design
  * begin router
  * xmpp: move NS_* to ns.coffee
  * xmpp: primitive disco info works
  * begin iqhandler
  * xmpp/connection: port presence tracking
  * rm main.js
  * move src files around
  * rm model_couchdb from config, add preliminary main.coffee
  * a bit new controller
  * rm old test_controller
  * some controller work
  * old controller translated to coffeescript
  * port peripheral stuff over to coffeescript
  * README: change ejabberd port to the config default one
  * model_couchdb: s/doc.subscribers/doc.subscriptions/
  * xmpp_pubsub.js: fix typo
  * model_postgres: check nodeExists before any data modification
  * preliminary RSM (XEP-0059) implementation for retrieve-items/retrieve
  * model_couchdb: stub getUpdatesByTime()
  * MAM should result in direct message, not broadcast notification to all resources
  * MAM w/ working model_postgres backend
  * begin implementing MAM
  * controller: register/register should create /user/<jid>/subscriptions node
  * normalize fixes + tests
  * normalize
  * only one child element per item
  * model_postgres: fix setConfig()
  * model_postgres: listNodesByUser()
  * model_couchdb: listNodesByUser(), simplify listNodes()
  * controller, xmpp_pubsub: browse-nodes/by-user
  * model_postgres setConfig(): fixes
  * configuration notification
  * model_postgres setConfig(): do not set fields unspecified/without defaultConfig
  * model_postgres nodeExists(): indentation
  * controller: subscribe should not require preexisting affiliation
  * xmpp_pubsub: fix manage-subscriptions/retrieve result usage
  * controller: allow retrieving subscriptions & affiliations for members
  * xmpp_pubsub: syntax fix
  * model_postgres: fix queue pushing
  * xmpp_pubsub: fix info discovery reply FORM_TYPE
  * model_postgres: config fixes
  * more on extended config
  * model_couchdb, model_postgres: more flexible config schema
  * config: description, type, creationDate; setConfig() on create-node/register
  * xmpp_pubsub: optimize presence tracking
  * controller: requiredAffiliation='member' for config-node/retrieve
  * README: OpenFire
  * controller: defaultConfig() + use in feature 'config-node'
  * xmpp_pubsub: replace isOnline() with getOnlineResources()
  * model_postgres: fix transaction dequeueing
  * model_postgres: move cb() past process.nextTick/dbIsAvailable for safety
  * model_postgres: work around empty responses
  * test_controller: retract
  * xmpp_pubsub: disco <identity/> according to discovered @node
  * test_controller: browse-nodes
  * model_couchdb: fix preload() etag extraction + error reporting
  * xmpp_pubsub: FeatureNotImplemented message
  * controller: simulate a stack for debug info
  * test_controller: retract skeleton
  * controller unsubscribe: do not fetch affiliation from database but check by node path
  * implement & test unsubscribe
  * test_controller: skeletons
  * test_controller: publishing tests
  * test_controller: more publish testing + controller fix
  * test_controller: begin test publishing
  * model_postgres: fix forgotten variable
  * model_postgres: reconnect to database upon error
  * model_postgres: oops, syntax error
  * config.js.example: postgres is actually the one with a poolSize
  * model_postgres: oops, syntax errors
  * begin test_controller
  * fixes
  * subscriptionModified <message/>
  * xmpp_pubsub: "message" & approve() fixes
  * controller: replace ownerNotification with afterTransaction
  * access_model authorize
  * package.json & README
  * errors: pull inherits() from util/utils/sys for moving node api
  * browse open nodes with service discovery items
  * controller: refactor affiliations checking
  * xmpp_pubsub: fix subscriptions format
  * controller: treat missing accessModel as 'open'
  * model_couchdb: preload() etag fix
  * .gitignore with config.js
  * xmpp_pubsub: node config on disco info
  * model_couchdb: encodeURIComponent() only for db.head() & .get()
  * main.js: #!
  * rename config.js to config.js.example
  * restore default config.js
  * main.js: on uncaughtException
  * postgres doc & config
  * model_postgres
  * model_couchdb: fix item deserialization
  * model_couchdb: rm implemented TODOs
  * README: CouchDB configuration
  * README: TODO++
  * LICENSE
  * README: markdown fix
  * README: mention buddycloud :)
  * model_couchdb: fix views initialization
  * README & config
  * jabber:iq:register
  * model_couchdb: fixes
  * errors fixing
  * rm model_persistence
  * model_couchdb: assertNodeName()
  * main: catch uncaughtException
  * controller: fix
  * bugs, readability
  * model_couchdb: fixing
  * controller: implement affiliations checking
  * xmpp_pubsub: getAffiliations() result is now Array
  * model_couchdb: setSubscription() & setAffiliation() 'none'
  * model_couchdb: consolidate subscriptions & affiliations model
  * xmpp_pubsub: send notifications with type='headline'
  * xmpp_pubsub: subscribeIfNeeded() on <create/> & <subscribe/>
  * model_couchdb: load() shortcut when already cached
  * model_couchdb: createNode() fix
  * model_couchdb: preload()
  * model_couchdb: commit read documents too for integrity
  * model_couchdb: abstract views
  * CouchDB Optimistic Concurrency Control layer
  * controller: improve error propagation
  * defined error conditions
  * untested configuration getting/setting
  * service discovery
  * modify-affiliations
  * model_couchdb: getAffiliation()
  * begin permission checking infrastructure
  * presence probes
  * xmpp_pubsub: presence tracking
  * refactoring controller complete
  * continue refactoring controller into features/operations
  * begin refactoring controller into features/operations
  * subscribers
  * getting subscriptions & affiliations
  * createNode improvements
  * controller createNode: check node
  * model_couchdb: affiliations view
  * items getting
  * much more progress
  * implement retraction, s/notifySubscriber/notify/, s/writeItems/writeItem/
  * publish notification works
  * more frontend hooking
  * begin notification hooks
  * fixes
  * begin model_couchdb transactions
  * split model
  * some progress
  * some progress
  * createNode creates owner affiliation
  * model: indexes
  [ Thomas Jost ]
  * Add @denisw to contributors
  * Upgrade required node version to 0.8
  * We actually need remote subscriptions nodes
  * Merge branch 'feature/anon-fixes' into develop
  * Merge branch 'feature/really-validate-post-times' into develop
  * Reject remote posts with invalid dates
  * Add tests for remote posts with invalid dates
  * Force anon subscriptions to be temporary
  * Set default affiliation to 'none' for anon users
  * Merge branch 'feature/anon-fixes' into develop
  * Cleanup: remove some dead code
  * Purge remote nodes with no local subscription left
  * Merge branch 'feature/recent-items' into develop
  * Merge branch 'feature/validate-remote-items' into develop
  * Sort recent items by update time
  * Merge branch 'feature/validate-remote-items' into feature/recent-items
  * Fix tests that push remote items
  * Validate remote items
  * Add (failing) tests for invalid remote items
  * Implement recent items query
  * Add (failing) test for recent items query
  * PubSub replies can include several elements
  * Merge branch 'feature/pusher' into develop
  * Workaround callback woes
  * Fix MAM for pusher component
  * Pusher: test MAM
  * test_server: move makePublishIq into TestServer
  * Pusher: test node configuration
  * Pusher: test unsubscriptions
  * Merge branch 'feature/affiliations-fixes' into develop
  * Merge branch 'feature/pubsub-disco-features' into develop
  * Cleanup
  * Expose all implemented PubSub features
  * Pusher: test affiliations
  * Merge branch 'feature/affiliations-fixes' into feature/pusher
  * Fix affiliation in /subscriptions notifications
  * Accept PubSub-compliant affiliations notifications
  * Pusher: test subscriptions
  * Merge branch 'feature/fix-98' into develop
  * Fix SQL for updating replies
  * Add failing test for issue #98
  * Fix offline user cleanup
  * DB: drop anonymous column
  * Yet another federation test
  * Check if the example config file is valid JS
  * Add tests for pusher code
  * Pusher can MAM everything
  * Pusher is a listener for all notifications
  * Add config for pusher component
  * Merge branch 'feature/mam-fixes' into develop
  * Increase the default number of items in a MAM response
  * Make MAM return an error if there are too many results
  * Use RSM in MAM
  * Test MAM RSM
  * MAM: filter bad dates out
  * Test if MAM validates dates correctly
  * Ensure the giant MAM test doesn't pollute the test environment
  * Make affiliations notifications PubSub-compliant
  * Affiliations have update timestamps too
  * Avoid temporary subscriptions in MAM results
  * Advertise support for MAM in disco#info
  * Add a giant MAM test
  * Update Travis URL in README.md
  * Merge branch 'feature/tests' into develop
  * Correctly tests that updated items don't change <in-reply-to/>
  * Move tests on updated items to a different function
  * Add tests for updates that change <in-reply-to/>
  * Use Travis to automate testing
  * Merge branch 'master' into develop
  * Add compatibility with PostgreSQL 9.1
  * Require at least one item to retract
  * Add Emacs folding marks
  * Add retrieve and retract tests
  * Fix retraction stanza sent to remote services
  * Tombstones: include Atom namespace in <updated/> element
  * Fix error when not allowed to retract an item
  * Tombstones can't be updated
  * When publishing an update, check if the actor is the original author
  * Check if original post exists before publishing a reply
  * Reject posts from non-users
  * Don't include type in <actor/>
  * Complete post/update/retract tests
  * TestServer: fix Atom in-reply-to element
  * Fail when some unwanted event happens
  * Add description for calls to "should.exist"
  * Retraction tests
  * Workaround CoffeeScript weird scoping rules
  * Add another batch of tests
  * Update test data
  * Change the way the test server emits IQ stanzas
  * Tests for posting to remote channels
  * Test server: emit event for IQs with unknown ID
  * Test server: disco info for "remote" servers
  * More post tests
  * Add helper to run tests that trigger several different stanzas
  * Test server: handle <message/> stanzas
  * Add post tests
  * Post tests: helper to check if post was successful
  * Throw an exception when getting an unexpected error IQ
  * Start adding post tests
  * Add helpers for pubsub get IQs and Atom handling
  * Helpers to add initial test data in the database
  * Add XMPP namespaces to test_server.coffee
  * Reply to presence probes
  * Don't parse Elements again
  * Use same user and server names as in sfc
  * Safe path handling in prepare-db.sh
  * Add codo-like doc to the TestServer class
  * Add helpers to build disco and pubsub IQs
  * Expose support for PubSub node creation
  * Skip a test
  * More channel creation tests
  * New tests and helpers for forms
  * Add a helper to parse disco#info replies
  * Move common disco replies to test_server.coffee
  * Start testing for channel creation
  * Test server: handle disco#items queries
  * Make tests runnable using "npm test"
  * Basic disco tests
  * Start a test suite
  * Use an existing component connection if provided in config
  * Make it possible to require() the server
  * Update config.js.example
  * Fix autosubscribeNewUsers
  * Increase the max number of items in each RSM page
  * Better shrinking of oversized stanzas
  * Include `-dirty' in version number from git
  * Remove glob from dependencies
  * Fix indentation in main.coffee
  * Prevent existing persistent subscription from being made temporary
  * Merge branch 'feature/version-number-from-git' into develop
  * Expose support for XEP-0092 (Software Version) in disco
  * Use `git describe' to get version numbers in dev branches
  * Merge branch 'master' into next
  * Restore compatibility with Node 0.6
  * Fix handling of offline users
  * Avoid race condition in disco cache
  * Shrink oversized stanzas more aggressively
  * Avoid nulls
  * Include new files in release tarball
  * Avoid race condition in disco cache
  * Merge remote-tracking branch 'upstream/tempsub' into next
  * Merge branch 'db-versioning' into next
  * buddycloud-server 0.3.5
  * Check if remote supports temporary subscription before sending a tempsub request
  * Client can check for server features before sending an IQ
  * Make server features discoverable
  * Log errors when processing incoming messages
  * Cleanup
  * Remove empty text nodes from items
  * Fix ActivityStreams verb for replies
  * Include operation name in debug message
  * Don't notify unsubscribe when it was a temporary subscription
  * Offline user cleanup: do real unsubscribe operations
  * I'm dumb
  * Don't delete temporary subscriptions during sync
  * Don't send any notification for temporary subscriptions
  * Client and server must speak the same language
  * Only send notifications about temporary subscriptions to remote listeners
  * Cleanup offline users
  * Claim we support subscription options
  * Temporary subscriptions
  * Fix updating items
  * Add help channels to default autosubscriptions
  * Merge branch 'log-fix'
  * Inspect objets in log messages
  * Fix broken log messages
  * Don't write subscription stanzas in items table
  * Merge remote-tracking branch 'lloyd/config'
  * Populate in_reply_to column when inserting new items
  * DB cleanup at startup
  * Add README for DB schema versioning
  * Upgrade DB schema
  * Check DB schema version on startup
  * Don't change <published/> when updating an existing post
  * Fix subscription to remote private channels
  * Don't fail when the default config file does not exist
  * Add Lloyd in contributors
  * Better logging for replies sent by 'proxy' components
  * Merge branch 'mam-result'
  * Include <result/> in MAM replies
  * Merge remote-tracking branch 'schnouki/atom-tombstones'
  * Fix typo
  * Merge pull request #61 from lloydwatkin/no-mod_disco
  * Also send tombstones in retract notifications
  * Use Atom tombstones for deleted items
  * xmpp: XEP-0313 compliance
  * Handle PubSub retract "notify" attribute
  * operations: fix PushInbox notification
  * Fix undefined variable when paging backwards in RSM
  [ Tuomas Koski ]
  * Merge pull request #59 from lloydwatkin/initialise-sync
  * Merge pull request #58 from lloydwatkin/master
  [ Steven Lloyd Watkin ]
  * Ensure we do not cause BC breaks
  * Make both defaults positive rather than one positive & the other negative Broke the config options down further
  * Fix build console output
  * "package" now a reserved word in node, caused failing in builds (v0.6.15+)
  [ Denis Washington ]
  * Use local CoffeeScript "cake" for "npm install"
  [ Jonas Smedegaard ]
  * Setup access rights and needed dirs when starting daemon
  * Speedup system shutdown by avoiding explicit sysV stop
  * xmpp_pubsub: check for commandEl prior usage
  [ Reginald dude ]
  * updates sent via email from vorner.cz
  * updates sent via email from vorner.cz
  [ Reginald Dude ]
  * Most confusing config file ever
  [ ▟ ▖▟ ▖ ]
  * Merge pull request #70 from lloydwatkin/fix-is-function
  * Merge pull request #63 from lloydwatkin/no-mod_disco
  * Merge pull request #62 from lloydwatkin/no-mod_disco
  * Merge pull request #57 from Schnouki/xep-0313
  * Merge pull request #54 from Schnouki/fix-notif
  * Merge pull request #52 from lloydwatkin/master
  * Merge pull request #51 from lloydwatkin/master
  [ James Tait ]
  * Ensure both the PID dir and log dir are created on startup if they do not already exist.
  [ imaginator ]
  * aligning with INSTALL instructions
  * moved instructions to wiki
  * Edited README.md via GitHub
  [ dodo ]
  * fix accessModel of geo nodes
  * always test in production
  * buddycloud-server 0.3.4
  * Merge branch 'packaging'
  * put the /etc/init.d script into tarball
  * not needed anymore
  * default options for new channels
  * bump tarballify version
  * add bin/buddycloud-server to the tarball
  * no build step in bin/buddycloud-server anymore
  * print additional info messages in gray
  * fix 'file is not defined'
  * fix 'modName is not defined'
  * colorful output for package.js
  * bump tarballify version
  * rm trailing spaces
  * no build_binary.sh needed
  * separate devDependencies
  * export name
  * use packaging script
  * buddycloud-server 0.3.3
  * pass prefix to npm to force npm to use that particular prefix
  * $PREFIX/bin/buddycloud-server can be nonexistant .. so ignore all errors when removing
  * bump node version in build script
  * merge issue #37
  * specify interal config file as defaults, not as main config
  * backports to node 0.4
  * concat cwd path to config path only when config path is relative
  * respect the cwd
  * move to the right dir before builing
  * wscript is not needed anymore
  * merged #31. symlink detection for bin/buddycloud-server thanks to @highfellow
  * fixed gitignore
  * forgot Cakefile
  * pin node version for over 0.5 to get the require json working
  * get version directly
  * new buildsystem
  * check if config.syslog has keys
  * dont load default config over opts and args
  * main: fix config loading
  * wscript fixes
  * load config via jsconfig
  * update wscript
  * upgrade build environment
  * update requirements in readme
  * cleanup files
  [ Simon Tennant ]
  * Update config.js.example
  * change to read config file from /opt/buddycloud
  * Update master
  * don't be so --quiet (will help a lot with debugging)
  * Update _etc_init.d_buddycloud-server
  * the orwell defeault was causing jdesenberg problems.
  * Fixed the permissions to run as.
  * Update _etc_init.d_buddycloud-server
  * init script
  * make it really clear what to change (and what "jid" refers to)
  * Made the ownership of tables really clear. Should help avoid the problem that DD had the other day.
  [ Lloyd Watkin ]
  * Fix for checking of child element
  * Catch error event
  * Fix for server reset
  * Updated variable names to better describe what config does.
  * Merge branch 'master' of git://github.com/buddycloud/buddycloud-server into no-mod_disco
  * Allow buddycloud server to advertise additional 'proxy' components
  * Wait to sync
  * Rename of parameter
  * Allow user to specify a port or not, changed argument name as it may not actually be remote debugging.
  * Tidy up
  * Allow node.js debugging
  [ Simon ]
  * /etc/init.d/buddycloud-server

 -- Abmar Barros (buddycloud Nightly Builds) <abmar@buddycloud.com>  Sat, 26 Jan 2013 15:23:09 -0300


buddycloud-server (0.1) unstable; urgency=medium

  [ Astro ]
  * operations: all nodes in defaultConfiguration accessModel=authorize
  * operations: posts & subscriptions accessModel=authorize in defaultConfiguration
  * buddycloud-server 0.3.2
  * Cakefile: version.js + 

  * operations: fix run notifications control flow
  * build_binary.sh: get bin/buddycloud-server out of the way before npm i
  * buddycloud-server 0.3.1
  * package.json: honor all contributors
  * Merge remote-tracking branch 'schnouki/patch-1'
  * .npmignore: exclude debian/* from npm pkgs
  * buddycloud-server 0.3.0
  * package.json: bump dep versions
  * operations: prevent unsubscribing/demoting the node owner
  * operations: fix PushInbox callback
  * operations: run notifies first, then syncs, then calls back
  * pubsub_server: lower logging
  * operations: fix PushInbox newNodes
  * operations: move PushInbox syncNode post transaction
  * operations: PushInbox should work even if syncNode had hickups
  * operations: syncNode when PushInbox created it
  * operations: fix PushInbox notification & newModerators
  * model_postgres: fix & simplify purgeNode()
  * sync: fixes
  * sync: purge node if no local subscribers
  * purge node when local unsubscription is pushed from remote
  * operations: fix generateSubscriptionsNotifications followee
  * operations: fix PushInbox newModerators nodes
  * xmpp connection: doc, serialize stanzas only once
  * operations: NewModeratorNotify needs listener, not user
  * operations: fix NewModeratorNotify listener
  * operations: log Operation name
  * model_postgres: must quote "user" column for Postgres
  * operations: NewModeratorNotify must cb()
  * operations: Notify notifies w/ node
  * operations: fix Notify otherListeners
  * pubsub_client: rm debug
  * operations: NewModeratorNotify notifies w/ node & listener
  * model_postgres: optional Transaction callbacks
  * operations: fix Notify filterSubscription & filterAffiliation invokation
  * operations: fix this binding
  * operations: no pending subscriptions in subscriptions node
  * operations: NewModeratorNotify
  * operations: doc, filter subscriptions and affiliations for non-moderators
  * operations: reorganize
  * clean up logging
  * operations: posts node defaultAffiliation='publisher'
  * sync: fix AffiliationsSynchronization typo
  * buddycloud-server 0.2.3
  * package.json: fix install script
  * build_binary.sh: bump node.js version
  * buddycloud-server 0.2.2
  * package.json: add preinstall cake build
  * operations: fix notifications
  * build_binary.sh: bump node.js version
  * buddycloud-server 0.2.1
  * operations: fix Notify subscriptios node items
  * operations: fix Notify callback result
  * operations: BrowseNodeItems for subscriptions node calls getSubscriptions not getSubscription
  * operations: syntax fixes
  * operations: Notify subscriptions fixes
  * operations: subscriptions node notifications
  * operations: BrowseNodeItems for subscriptions node
  * sync: require errors
  * sync: avoid error output when omitting local node
  * router, sync: improve logging
  * backend_pubsub: PubsubBackend.notify listener robustness
  * operations: fix Subscribe defaultAffiliation
  * operations: fix ManageNodeAffiliations control flow
  * pubsub_server: PubsubOwnerSetAffiliationsRequest syntax fix
  * operations: fix requiredAffiliation()
  * operations: requiredAffiliation can be function to allow moderators approving topic channel subscribers
  * operations: ManageNodeSubscriptions refactor for efficiency
  * operations: ManageNodeSubscriptions should set new affiliations to defaultAffiliation
  * operations: fix Notify jid/user
  * operations: Notify should notify all users pertained by a subscription
  * operations: 'unsubscribe-node' notifies unsubscribed user
  * operations, pubsub_client: there's no "unsubscribed" subscription, only "none"
  * pubsub_server: PubsubOwnerSetSubscriptionsRequest syntax fix
  * operations: Unsubscribe needs PrivilegedOperation methods
  * operations: Unsubscribed is not a PrivilegedOperation but a ModelOperation
  * operations: fix callback scope
  * pubsub_server: robustify PubsubItemsRequest
  * operations: syntax
  * pubsub_server, operations: support for RetrieveItems by itemIds
  * build_binary.sh: bump node.js version to 0.6.10
  * buddycloud-server 0.2.0
  * operations: CreateNode should not allow creation with empty nodeUser username
  * operations: fix CreateNode defaults & creationDate
  * operations: fix CreateNode isTopic switcheroo
  * router: fix autosubscribeNewUsers operation name
  * router: autosubscribeNewUsers
  * config.js.example: default checkCreateNode hook checks for a specific topic domain
  * operations: fix CreateNode node typo
  * operations: fix CreateNode config
  * pubsub_server, operations: CreateNode with optional config
  * operations: fix CreateNode setSubscription()
  * operations: CreateNode catches missing checkCreateNode hook
  * operations: CreateNode default config
  * checkCreateNode config hook
  * model_postgres: fix getOwnersByNodePrefix SQL
  * operations: fix CreateNode setAffiliation()
  * operations: fix CreateNode getOwnersByNodePrefix()
  * operations: fix ../util require, CreateNode safety check
  * implement createNode with getOwnersByNodePrefix check
  * operations: begin creating topic channels
  * model_postgres: syntax fix
  * package.json: maintainer update
  * build_binary.sh: update to node 0.6.9
  * buddycloud-server 0.1.11
  * rsm_walk: fix logging
  * operations: checkAccessModel() before checkRequiredAffiliation()!
  * operations: Unsubscribe condition syntax fix
  * package.json: muffin dependency glob seems be incompatible in v3.*
  * operations: checkRequiredAffiliation should ignore no @requiredAffiliation
  * operations: fix isAffiliationAtLeast w/ invalid affiliation
  * jsconfig 0.2.0 is out! w00t!!!
  * Cakefile: lib/version.js from package.json
  * logger: update to ain2 1.0.0
  * main: fix config loading
  * buddycloud-server 0.1.10
  * router: fix syncServer()
  * buddycloud-server 0.1.9
  * bin/buddycloud-server: fix param quoting
  * bin/buddycloud-server: fix $cwd
  * buddycloud-server 0.1.8
  * .npmignore to package up built lib/* instead of src/*
  * build_binary.sh: install devDependencies beforehand
  * build_binary.sh: bump node.js version to 0.6.7
  * util: move getNodeUser(), getUserDomain()
  * main: "server successfully started"
  * sync: fix logging
  * model_postgres: fix writeItem() SQL parameter binding
  * sync: fix PaginatedSynchronization error callback
  * sync: rm TODO note
  * model_postgres: writeItem updated_query
  * operations: logging fixes
  * writeItem: move updated extraction from operations to model_postgres
  * model_postgres: writeItem should also INSERT existing updated value
  * model_postgres: fix syntax
  * model_postgres: SQL fixes
  * operations: PushInbox copies item published date
  * postgres schema: CREATE VIEW open_nodes + usage in model_postgres
  * model_postgres: fix query result handling
  * fix getTopFollowedNodes & getTopPublishedNodes parameters
  * model_postgres: fix SQL INTERVAL syntax
  * operations: BrowseNodes.fetchNodes() needs transaction
  * operations: BrowseNodes.transaction should use @fetchNodes()
  * operations: fetchNodes() typo
  * pubsub_server: browse /top-followed-nodes & /top-published-nodes does not request a particular node
  * getTopFollowedNodes & getTopPublishedNodes w/ XMPP disco interface
  * build_binary.sh: bump to node 0.6.6
  * buddycloud-server 0.1.7
  * package.json: rm cradle dependency
  * logger: syslog only with hostname
  * replace common-logger by underscore.logger
  * update ain2 dependency for node v0.6 compatibility
  * model_postgres walkListenerArchive: replace DISTINCT with GROUP BY
  * model_postgres: fix config order/limig
  * operations: ReplayArchive sorts results before capping
  * ReplayArchive/walkListenerArchive: properly cap result set
  * operations: ReplayArchive default max=50
  * build_binary.sh: use $PREFIX from environment if present
  * package.json: req node-stringprep >=0.1.1
  * router: fix
  * buddycloud-server 0.1.6
  * update to new node-waf paths
  * build_binary.sh: switch to node 0.6.4
  * package.json: depend on 0.3.1
  * router: RSM usage fix
  * logger: open logFile for appending, fixes issue #25
  * package.json: depend on node-xmpp >= 0.3.0
  * operations ReplayArchive: fix rsm max
  * operations: ReplayArchive RSM support
  * backend_pubsub: notificationPush updates include sender & actor
  * router: detectUserType fixes
  * router: detectUserType fixes
  * logger: fix argument iteration
  * main, backend_pubsub: logging improvements
  * backend_pubsub: include user in notfound error
  * connection: loopback stanzas to ourselves
  * router: add missing util.inspect include
  * router.run: trace req
  * router: add missing rsm include
  * logger: typo
  * logger: fix level
  * logging clean-up
  * router, pubsub_{server,client}: @type in <actor/>
  * buddycloud-server 0.1.5
  * router: sync fixes
  * buddycloud-server 0.1.4
  * ManageNodeAffiliations: non-owner may not elect a new owner
  * sync: log upon completion
  * sync: transaction fix
  * move some sync logic into router, lock per node
  * operations: BrowseNodeInfo/RetrieveNodeConfiguration w/o access control
  * buddycloud-server 0.1.3
  * operations: deny Unsubscribe from own nodes
  * logger: ain2 syslog transport
  * logger: message always as string
  * main: fix --stdout kludge
  * logger: avoid log level < 0
  * config.js.example: syslog on by default
  * config.js.example: logging section
  * syslog support with ain2
  * support --stdout logging
  * replace cnlogger by common-logger
  * buddycloud-server 0.1.2
  * build_binary: npm install globally (into /opt/buddycloud-server/)
  * build_binary: dedup node & npm versions
  * build_binary: default to /opt/buddycloud-server, bin/ script
  * main: process.title fix
  * version: fix package.json path
  * version from package.json in process.title and for jabber:iq:version
  * xmpp/connection: do not subscribe in probePresence()
  * buddycloud-server 0.1.1
  * build_binary: bump node & npm versions
  * backend_pubsub: reply() must also copy 'replay' field on MaxStanzaSizeExceeded
  * connection: more stanza output when MaxStanzaSizeExceeded
  * don't send ReplayArchive notifications to all online resources
  * pubsub_client/connection: wrap error replies into StanzaError earlier
  * logging fixes
  * port to cnlogger
  * port to broken winston logging
  * xmpp connection: always tell node-xmpp to reconnect
  * async.filter iterator does not take error parameter
  * model_postgres: fix nodeExists warning
  * backend_pubsub: fix notification matching
  * sync: fix router.authorizeFor() usage
  * sync: writeItem does not need author anymore
  * operations: typo
  * model_postgres: fix getListenerAffiliations() query
  * sync: careful
  * xmpp/forms: oops, s/creationTime/creationDate/
  * xmpp/connection: fix name
  * router: check for anonymous user to be online
  * anonymous user offline tracking & clean-up
  * model_postgres: fix walkListenerArchive() node in results
  * router: fix method binding
  * model_postgres: walkListenerArchive() should include node in results
  * operations: RemoveUser & model_postgres.getUserRemoteSubscriptions() & clearUserSubscriptions()
  * BuddycloudDiscovery::detectAnonymousUser
  * backend_pubsub: gracefully handle MaxStanzaSizeExceeded for notifications
  * xmpp pubsub_server & connection: fix graceful MaxStanzaSizeExceeded handling
  * errors: MaxStanzaSizeExceeded extends Error
  * operations: s/geoloc/geo/
  * operations: /subscription items shall contain jid=owner
  * metadata buddycloud#channel_type
  * proper metadata field names
  * support for creationDate
  * operations: clarify logging
  * router: fix remote backend selection
  * operations: Unsubscribe refactor & fix
  * operations: fix Register
  * buddycloud-server 0.1.0
  * operation: print opName on commit, rm debug
  * bin/buddycloud-server: don't cd so config can be loaded relatively
  * Merge remote-tracking branch 'origin/cli'
  * operations: RetractItems should allow anyone to remove their own posts
  * operations: preserve affiliation if previously affiliated
  * operations: unify into isAffiliationAtLeast()
  * operations: rm leftover TODO note
  * operations: refactor Register; should check if authoritative for user's domain
  * router.run: return 404 for nodes not locally subscribed but discovered ourselves
  * rm explicit author handling in postgres schema, model, operations
  * main: check sender authorization for authorizationPrompt
  * operations: RetrieveItems shall not virtualize items for cache case of remote nodes
  * Revert "Made the ownership of tables really clear. Should help avoid the problem that DD had the other day."
  * s/channel-server/buddycloud-server/g
  * build_binary.sh: fix invokation hint
  * README: rm some outdated stuff
  * main: fix defaultConfig stuff
  * build_binary.sh
  * operations: RetrieveItems.retrieveSubscriptionsItems() result set sorting, affiliations
  * virtual handling of /user/.../subscriptions node items
  * MAM replays subscription authorization requests
  * more authorization stuff
  * fixes
  * small fixes
  * package.json: fix bin path
  * further authorizationPrompt work
  * backend_pubsub: missedSomething was missing
  * package.json: fix coffeescript path (./node_modules/...)
  * sending authorize notification forms
  * package.json: fix .coffee compilation stage
  * operations: PrivilegedOperation.fetchActorAffilliation fetches all listener affiliations for inbox sync
  * pubsub_notifications: fix MAM stanzas
  * operations: subscribe defaultAffiliation, fixes
  * model_postgres: many fixes
  * operations: publishModel 'subscribers'
  * operations: access control fixes
  * begin access control, affiliations checking
  * model_postgres: fixes
  * errors: fix error classes
  * xmpp/connection: fix
  * xmpp/connection: fix @missedServerTimeouts usage
  * model_postgres: safety checks
  * readability, notes
  * rsm_walk: fix serious errors
  * globally refactor operation from function to value
  * sync: fixes
  * add forgotten rsm_walk file
  * move syncQueue from main.coffee to fine-grained sync.syncNode
  * xmpp/connection: readability
  * xmpp/connection: track <you-missed-something/> timers with @missedServerTimeouts
  * syncServer support, wired up to <you-missed-something/> 'syncNeeded'
  * model_postgres: for an actor, getSubscriptions() shall return not only users but also listeners
  * MAM time specification
  * primitive MAM implementation
  * send <you-missed-something/>
  * operations: PushInbox TODO note
  * sync: rm request.rsm.max clamp
  * synchronization with state resetting and subscriptions/affiliations support
  * pubsub_*: fix user/jid conventions
  * ConfigSynchronization should use browse-node-info to get node config
  * synchronizing!
  * synchronization kinda works, but hits RSM loops
  * further synchronization progress
  * begin synchronization
  * main: require async
  * measure stanza size, gracefully retry with smaller result set
  * synchronization groundwork
  * don't let backend_pubsub call router.runLocally(), return errors.SeeLocal() instead
  * errors: clean up
  * normalize: add <link rel="self" href="xmpp:...?pubsub;action=retrieve;..."/>
  * operations: Publish shall allow new items with specified @id
  * nodes browsing, with RSM
  * backend_pubsub: run() should bail out early on invalid node form
  * PostgreSQL tuning
  * complete RSM implementation
  * begin RSM for all operations
  * generify RSM stuff
  * pubsub_client: RSM
  * fixes from CCCamp11
  * RSM for local items retrieving
  * begin new RSM implementation
  * pubsub_server: publish-node-items shall reply with item ids
  * model_postgres: fix getNodeListeners() SQL
  * model_postgres: nodeExists() shall check for NOT NULL
  * model_postgres: getNodeListener() replace filter by SQL
  * model_postgres: getNodeListener() filter for null
  * model_postgres: fix setSubscription() INSERT w/o listener
  * error printout
  * forms: fix
  * operations: PushInbox author fix
  * debug
  * xml child robustness
  * model_postgres: fix nodeExists()
  * fix subscription listener for local users
  * logging cleanup
  * initiate presence tracking of users
  * xmpp/connection: use send() instead of specifying from jid
  * some logging cleanup
  * operations: push-inbox does not set subscription listener
  * fixes & TODO notes
  * operations: Notify.transaction() must call cb()
  * retrieve-node-configuration
  * forms: configToResultForm -> configToForm
  * pubsub_client: RetrieveNodeConfiguration & ManageNodeConfiguration
  * operations: catch reply cb exceptions
  * create-node operation
  * package.json: scripts
  * fixes
  * fix outgoing notifications
  * generify pubsub_notifications
  * many fixes for subscription pushing
  * router: if request writes, always go remote
  * push incoming notifications to local model
  * more subclassing of EventEmitter, incoming notifications handling
  * pubsub_server: unify PubsubRequest & PubsubOwnerRequest
  * merge request.coffee into pubsub_server.coffee
  * begin remote subscription pushing to local inbox
  * backend_pubsub: PubsubBackend.notify(): readability
  * tune to use single cb() instead of req.{reply,replyError}()
  * revive normalization
  * model_postgres: setSubscription(): coearce isSet to boolean
  * model_postgres: catch lost transactions
  * pubsub_client: error reporting, fix
  * subscribe reply status
  * model_postgres: setAffiliation() should check nodeExists()
  * fix disco.authorizeFor() usage
  * pubsub_client: fix <actor/> placement
  * refactor notifications a bit
  * pubsub_client: <actor/> placement fix
  * pubsub_client: fix <actor/> placement
  * pubsub_notifications: subscriptions/affiliations/config
  * fix registration/model callback parameters
  * operations: ManageNodeAffiliations validates accessModel & publishModel
  * setting configuration
  * fixes, fixes, config
  * only RegisterSetRequest should induce presence subscription
  * FIXME note
  * model_postgres: do not use rowCount
  * operations: Register created default configuration
  * pubsub_server: pubsub/inbox identity
  * fixes, StanzaError
  * implement pubsub_client operations
  * pubsub_notifications: byOperation()
  * fixes
  * fixes
  * fixes & debugging
  * fixes
  * debugging & fixes
  * fixes
  * begin discovering locally
  * fixes
  * Router.run: fix
  * fixes
  * operations: rename channel node to "posts"
  * begin notifications
  * a bit o' twiddling w/ subscription listeners
  * refactor router for remote requests
  * operations: subscribe/unsubscribe toggle affiliation none/member
  * router: rename frontend to backend
  * rename backend_postgres to model_postgres, revive router
  * main: move iqHandler to pubsub_server
  * manage, not only retrieve, subscriptions & affiliations
  * use subscribe sender as notification listener
  * backend_pubsub: replace ternary operator
  * need to store listener in subscriptions...
  * backend_pubsub: implement RequestCache
  * new untested buddycloud discovery with backend_pubsub.coffee
  * retrieve <actor/> generalized, begin using authorizeFor
  * ns: add BUDDYCLOUD_V1 xmlns
  * postgres.sql schema: updated column for more tables, author column for items
  * retrieving node affiliations
  * retrieving node subscriptions, fixes
  * backend_postgres: syntax fixes
  * operation: Register should set affiliation & subscription
  * retrieving subscriptions & affiliations
  * retracting items
  * publishing & retrieving items works
  * begin item retrieving
  * subscribe & unsubscribe
  * fix backend_postgres (user is a Pg keyword, must be quoted as column name)
  * publishing works
  * lots of fixes
  * fix disco requests
  * fix, fix, fix
  * begin implementing register & publish implementation
  * mv src/operations.coffee src/local/operations.coffee
  * revive backend
  * primitive operations
  * mv controller.coffee operations.coffee
  * dead code TODO
  * fixes
  * rm old dead code
  * rename iqhandler to request
  * begin some refactoring
  * begin hooking up handlers with operations
  * xmpp/pubsub_server: indicate operation types
  * notes
  * pubsub_server: PubsubOwnerHandlers
  * pubsub_server: flesh out more pubsub handlers
  * add affiliations checking
  * begin interweaving with local operations
  * a tad of interconnecting
  * pubsub_server: DiscoInfoHandler.reply()
  * xmpp client 'n stuff
  * README: draw new design
  * begin router
  * xmpp: move NS_* to ns.coffee
  * xmpp: primitive disco info works
  * begin iqhandler
  * xmpp/connection: port presence tracking
  * rm main.js
  * move src files around
  * rm model_couchdb from config, add preliminary main.coffee
  * a bit new controller
  * rm old test_controller
  * some controller work
  * old controller translated to coffeescript
  * port peripheral stuff over to coffeescript
  * README: change ejabberd port to the config default one
  * model_couchdb: s/doc.subscribers/doc.subscriptions/
  * xmpp_pubsub.js: fix typo
  * model_postgres: check nodeExists before any data modification
  * preliminary RSM (XEP-0059) implementation for retrieve-items/retrieve
  * model_couchdb: stub getUpdatesByTime()
  * MAM should result in direct message, not broadcast notification to all resources
  * MAM w/ working model_postgres backend
  * begin implementing MAM
  * controller: register/register should create /user/<jid>/subscriptions node
  * normalize fixes + tests
  * normalize
  * only one child element per item
  * model_postgres: fix setConfig()
  * model_postgres: listNodesByUser()
  * model_couchdb: listNodesByUser(), simplify listNodes()
  * controller, xmpp_pubsub: browse-nodes/by-user
  * model_postgres setConfig(): fixes
  * configuration notification
  * model_postgres setConfig(): do not set fields unspecified/without defaultConfig
  * model_postgres nodeExists(): indentation
  * controller: subscribe should not require preexisting affiliation
  * xmpp_pubsub: fix manage-subscriptions/retrieve result usage
  * controller: allow retrieving subscriptions & affiliations for members
  * xmpp_pubsub: syntax fix
  * model_postgres: fix queue pushing
  * xmpp_pubsub: fix info discovery reply FORM_TYPE
  * model_postgres: config fixes
  * more on extended config
  * model_couchdb, model_postgres: more flexible config schema
  * config: description, type, creationDate; setConfig() on create-node/register
  * xmpp_pubsub: optimize presence tracking
  * controller: requiredAffiliation='member' for config-node/retrieve
  * README: OpenFire
  * controller: defaultConfig() + use in feature 'config-node'
  * xmpp_pubsub: replace isOnline() with getOnlineResources()
  * model_postgres: fix transaction dequeueing
  * model_postgres: move cb() past process.nextTick/dbIsAvailable for safety
  * model_postgres: work around empty responses
  * test_controller: retract
  * xmpp_pubsub: disco <identity/> according to discovered @node
  * test_controller: browse-nodes
  * model_couchdb: fix preload() etag extraction + error reporting
  * xmpp_pubsub: FeatureNotImplemented message
  * controller: simulate a stack for debug info
  * test_controller: retract skeleton
  * controller unsubscribe: do not fetch affiliation from database but check by node path
  * implement & test unsubscribe
  * test_controller: skeletons
  * test_controller: publishing tests
  * test_controller: more publish testing + controller fix
  * test_controller: begin test publishing
  * model_postgres: fix forgotten variable
  * model_postgres: reconnect to database upon error
  * model_postgres: oops, syntax error
  * config.js.example: postgres is actually the one with a poolSize
  * model_postgres: oops, syntax errors
  * begin test_controller
  * fixes
  * subscriptionModified <message/>
  * xmpp_pubsub: "message" & approve() fixes
  * controller: replace ownerNotification with afterTransaction
  * access_model authorize
  * package.json & README
  * errors: pull inherits() from util/utils/sys for moving node api
  * browse open nodes with service discovery items
  * controller: refactor affiliations checking
  * xmpp_pubsub: fix subscriptions format
  * controller: treat missing accessModel as 'open'
  * model_couchdb: preload() etag fix
  * .gitignore with config.js
  * xmpp_pubsub: node config on disco info
  * model_couchdb: encodeURIComponent() only for db.head() & .get()
  * main.js: #!
  * rename config.js to config.js.example
  * restore default config.js
  * main.js: on uncaughtException
  * postgres doc & config
  * model_postgres
  * model_couchdb: fix item deserialization
  * model_couchdb: rm implemented TODOs
  * README: CouchDB configuration
  * README: TODO++
  * LICENSE
  * README: markdown fix
  * README: mention buddycloud :)
  * model_couchdb: fix views initialization
  * README & config
  * jabber:iq:register
  * model_couchdb: fixes
  * errors fixing
  * rm model_persistence
  * model_couchdb: assertNodeName()
  * main: catch uncaughtException
  * controller: fix
  * bugs, readability
  * model_couchdb: fixing
  * controller: implement affiliations checking
  * xmpp_pubsub: getAffiliations() result is now Array
  * model_couchdb: setSubscription() & setAffiliation() 'none'
  * model_couchdb: consolidate subscriptions & affiliations model
  * xmpp_pubsub: send notifications with type='headline'
  * xmpp_pubsub: subscribeIfNeeded() on <create/> & <subscribe/>
  * model_couchdb: load() shortcut when already cached
  * model_couchdb: createNode() fix
  * model_couchdb: preload()
  * model_couchdb: commit read documents too for integrity
  * model_couchdb: abstract views
  * CouchDB Optimistic Concurrency Control layer
  * controller: improve error propagation
  * defined error conditions
  * untested configuration getting/setting
  * service discovery
  * modify-affiliations
  * model_couchdb: getAffiliation()
  * begin permission checking infrastructure
  * presence probes
  * xmpp_pubsub: presence tracking
  * refactoring controller complete
  * continue refactoring controller into features/operations
  * begin refactoring controller into features/operations
  * subscribers
  * getting subscriptions & affiliations
  * createNode improvements
  * controller createNode: check node
  * model_couchdb: affiliations view
  * items getting
  * much more progress
  * implement retraction, s/notifySubscriber/notify/, s/writeItems/writeItem/
  * publish notification works
  * more frontend hooking
  * begin notification hooks
  * fixes
  * begin model_couchdb transactions
  * split model
  * some progress
  * some progress
  * createNode creates owner affiliation
  * model: indexes
  [ Thomas Jost ]
  * Add @denisw to contributors
  * Upgrade required node version to 0.8
  * We actually need remote subscriptions nodes
  * Merge branch 'feature/anon-fixes' into develop
  * Merge branch 'feature/really-validate-post-times' into develop
  * Reject remote posts with invalid dates
  * Add tests for remote posts with invalid dates
  * Force anon subscriptions to be temporary
  * Set default affiliation to 'none' for anon users
  * Merge branch 'feature/anon-fixes' into develop
  * Cleanup: remove some dead code
  * Purge remote nodes with no local subscription left
  * Merge branch 'feature/recent-items' into develop
  * Merge branch 'feature/validate-remote-items' into develop
  * Sort recent items by update time
  * Merge branch 'feature/validate-remote-items' into feature/recent-items
  * Fix tests that push remote items
  * Validate remote items
  * Add (failing) tests for invalid remote items
  * Implement recent items query
  * Add (failing) test for recent items query
  * PubSub replies can include several elements
  * Merge branch 'feature/pusher' into develop
  * Workaround callback woes
  * Fix MAM for pusher component
  * Pusher: test MAM
  * test_server: move makePublishIq into TestServer
  * Pusher: test node configuration
  * Pusher: test unsubscriptions
  * Merge branch 'feature/affiliations-fixes' into develop
  * Merge branch 'feature/pubsub-disco-features' into develop
  * Cleanup
  * Expose all implemented PubSub features
  * Pusher: test affiliations
  * Merge branch 'feature/affiliations-fixes' into feature/pusher
  * Fix affiliation in /subscriptions notifications
  * Accept PubSub-compliant affiliations notifications
  * Pusher: test subscriptions
  * Merge branch 'feature/fix-98' into develop
  * Fix SQL for updating replies
  * Add failing test for issue #98
  * Fix offline user cleanup
  * DB: drop anonymous column
  * Yet another federation test
  * Check if the example config file is valid JS
  * Add tests for pusher code
  * Pusher can MAM everything
  * Pusher is a listener for all notifications
  * Add config for pusher component
  * Merge branch 'feature/mam-fixes' into develop
  * Increase the default number of items in a MAM response
  * Make MAM return an error if there are too many results
  * Use RSM in MAM
  * Test MAM RSM
  * MAM: filter bad dates out
  * Test if MAM validates dates correctly
  * Ensure the giant MAM test doesn't pollute the test environment
  * Make affiliations notifications PubSub-compliant
  * Affiliations have update timestamps too
  * Avoid temporary subscriptions in MAM results
  * Advertise support for MAM in disco#info
  * Add a giant MAM test
  * Update Travis URL in README.md
  * Merge branch 'feature/tests' into develop
  * Correctly tests that updated items don't change <in-reply-to/>
  * Move tests on updated items to a different function
  * Add tests for updates that change <in-reply-to/>
  * Use Travis to automate testing
  * Merge branch 'master' into develop
  * Add compatibility with PostgreSQL 9.1
  * Require at least one item to retract
  * Add Emacs folding marks
  * Add retrieve and retract tests
  * Fix retraction stanza sent to remote services
  * Tombstones: include Atom namespace in <updated/> element
  * Fix error when not allowed to retract an item
  * Tombstones can't be updated
  * When publishing an update, check if the actor is the original author
  * Check if original post exists before publishing a reply
  * Reject posts from non-users
  * Don't include type in <actor/>
  * Complete post/update/retract tests
  * TestServer: fix Atom in-reply-to element
  * Fail when some unwanted event happens
  * Add description for calls to "should.exist"
  * Retraction tests
  * Workaround CoffeeScript weird scoping rules
  * Add another batch of tests
  * Update test data
  * Change the way the test server emits IQ stanzas
  * Tests for posting to remote channels
  * Test server: emit event for IQs with unknown ID
  * Test server: disco info for "remote" servers
  * More post tests
  * Add helper to run tests that trigger several different stanzas
  * Test server: handle <message/> stanzas
  * Add post tests
  * Post tests: helper to check if post was successful
  * Throw an exception when getting an unexpected error IQ
  * Start adding post tests
  * Add helpers for pubsub get IQs and Atom handling
  * Helpers to add initial test data in the database
  * Add XMPP namespaces to test_server.coffee
  * Reply to presence probes
  * Don't parse Elements again
  * Use same user and server names as in sfc
  * Safe path handling in prepare-db.sh
  * Add codo-like doc to the TestServer class
  * Add helpers to build disco and pubsub IQs
  * Expose support for PubSub node creation
  * Skip a test
  * More channel creation tests
  * New tests and helpers for forms
  * Add a helper to parse disco#info replies
  * Move common disco replies to test_server.coffee
  * Start testing for channel creation
  * Test server: handle disco#items queries
  * Make tests runnable using "npm test"
  * Basic disco tests
  * Start a test suite
  * Use an existing component connection if provided in config
  * Make it possible to require() the server
  * Update config.js.example
  * Fix autosubscribeNewUsers
  * Increase the max number of items in each RSM page
  * Better shrinking of oversized stanzas
  * Include `-dirty' in version number from git
  * Remove glob from dependencies
  * Fix indentation in main.coffee
  * Prevent existing persistent subscription from being made temporary
  * Merge branch 'feature/version-number-from-git' into develop
  * Expose support for XEP-0092 (Software Version) in disco
  * Use `git describe' to get version numbers in dev branches
  * Merge branch 'master' into next
  * Restore compatibility with Node 0.6
  * Fix handling of offline users
  * Avoid race condition in disco cache
  * Shrink oversized stanzas more aggressively
  * Avoid nulls
  * Include new files in release tarball
  * Avoid race condition in disco cache
  * Merge remote-tracking branch 'upstream/tempsub' into next
  * Merge branch 'db-versioning' into next
  * buddycloud-server 0.3.5
  * Check if remote supports temporary subscription before sending a tempsub request
  * Client can check for server features before sending an IQ
  * Make server features discoverable
  * Log errors when processing incoming messages
  * Cleanup
  * Remove empty text nodes from items
  * Fix ActivityStreams verb for replies
  * Include operation name in debug message
  * Don't notify unsubscribe when it was a temporary subscription
  * Offline user cleanup: do real unsubscribe operations
  * I'm dumb
  * Don't delete temporary subscriptions during sync
  * Don't send any notification for temporary subscriptions
  * Client and server must speak the same language
  * Only send notifications about temporary subscriptions to remote listeners
  * Cleanup offline users
  * Claim we support subscription options
  * Temporary subscriptions
  * Fix updating items
  * Add help channels to default autosubscriptions
  * Merge branch 'log-fix'
  * Inspect objets in log messages
  * Fix broken log messages
  * Don't write subscription stanzas in items table
  * Merge remote-tracking branch 'lloyd/config'
  * Populate in_reply_to column when inserting new items
  * DB cleanup at startup
  * Add README for DB schema versioning
  * Upgrade DB schema
  * Check DB schema version on startup
  * Don't change <published/> when updating an existing post
  * Fix subscription to remote private channels
  * Don't fail when the default config file does not exist
  * Add Lloyd in contributors
  * Better logging for replies sent by 'proxy' components
  * Merge branch 'mam-result'
  * Include <result/> in MAM replies
  * Merge remote-tracking branch 'schnouki/atom-tombstones'
  * Fix typo
  * Merge pull request #61 from lloydwatkin/no-mod_disco
  * Also send tombstones in retract notifications
  * Use Atom tombstones for deleted items
  * xmpp: XEP-0313 compliance
  * Handle PubSub retract "notify" attribute
  * operations: fix PushInbox notification
  * Fix undefined variable when paging backwards in RSM
  [ Tuomas Koski ]
  * Merge pull request #59 from lloydwatkin/initialise-sync
  * Merge pull request #58 from lloydwatkin/master
  [ Steven Lloyd Watkin ]
  * Ensure we do not cause BC breaks
  * Make both defaults positive rather than one positive & the other negative Broke the config options down further
  * Fix build console output
  * "package" now a reserved word in node, caused failing in builds (v0.6.15+)
  [ Denis Washington ]
  * Use local CoffeeScript "cake" for "npm install"
  [ Jonas Smedegaard ]
  * Setup access rights and needed dirs when starting daemon
  * Speedup system shutdown by avoiding explicit sysV stop
  * xmpp_pubsub: check for commandEl prior usage
  [ Reginald dude ]
  * updates sent via email from vorner.cz
  * updates sent via email from vorner.cz
  [ Reginald Dude ]
  * Most confusing config file ever
  [ ▟ ▖▟ ▖ ]
  * Merge pull request #70 from lloydwatkin/fix-is-function
  * Merge pull request #63 from lloydwatkin/no-mod_disco
  * Merge pull request #62 from lloydwatkin/no-mod_disco
  * Merge pull request #57 from Schnouki/xep-0313
  * Merge pull request #54 from Schnouki/fix-notif
  * Merge pull request #52 from lloydwatkin/master
  * Merge pull request #51 from lloydwatkin/master
  [ James Tait ]
  * Ensure both the PID dir and log dir are created on startup if they do not already exist.
  [ imaginator ]
  * aligning with INSTALL instructions
  * moved instructions to wiki
  * Edited README.md via GitHub
  [ dodo ]
  * fix accessModel of geo nodes
  * always test in production
  * buddycloud-server 0.3.4
  * Merge branch 'packaging'
  * put the /etc/init.d script into tarball
  * not needed anymore
  * default options for new channels
  * bump tarballify version
  * add bin/buddycloud-server to the tarball
  * no build step in bin/buddycloud-server anymore
  * print additional info messages in gray
  * fix 'file is not defined'
  * fix 'modName is not defined'
  * colorful output for package.js
  * bump tarballify version
  * rm trailing spaces
  * no build_binary.sh needed
  * separate devDependencies
  * export name
  * use packaging script
  * buddycloud-server 0.3.3
  * pass prefix to npm to force npm to use that particular prefix
  * $PREFIX/bin/buddycloud-server can be nonexistant .. so ignore all errors when removing
  * bump node version in build script
  * merge issue #37
  * specify interal config file as defaults, not as main config
  * backports to node 0.4
  * concat cwd path to config path only when config path is relative
  * respect the cwd
  * move to the right dir before builing
  * wscript is not needed anymore
  * merged #31. symlink detection for bin/buddycloud-server thanks to @highfellow
  * fixed gitignore
  * forgot Cakefile
  * pin node version for over 0.5 to get the require json working
  * get version directly
  * new buildsystem
  * check if config.syslog has keys
  * dont load default config over opts and args
  * main: fix config loading
  * wscript fixes
  * load config via jsconfig
  * update wscript
  * upgrade build environment
  * update requirements in readme
  * cleanup files
  [ Simon Tennant ]
  * Update config.js.example
  * change to read config file from /opt/buddycloud
  * Update master
  * don't be so --quiet (will help a lot with debugging)
  * Update _etc_init.d_buddycloud-server
  * the orwell defeault was causing jdesenberg problems.
  * Fixed the permissions to run as.
  * Update _etc_init.d_buddycloud-server
  * init script
  * make it really clear what to change (and what "jid" refers to)
  * Made the ownership of tables really clear. Should help avoid the problem that DD had the other day.
  [ Lloyd Watkin ]
  * Fix for checking of child element
  * Catch error event
  * Fix for server reset
  * Updated variable names to better describe what config does.
  * Merge branch 'master' of git://github.com/buddycloud/buddycloud-server into no-mod_disco
  * Allow buddycloud server to advertise additional 'proxy' components
  * Wait to sync
  * Rename of parameter
  * Allow user to specify a port or not, changed argument name as it may not actually be remote debugging.
  * Tidy up
  * Allow node.js debugging
  [ Simon ]
  * /etc/init.d/buddycloud-server

 -- Abmar Barros (buddycloud Nightly Builds) <abmar@buddycloud.com>  Sat, 26 Jan 2013 15:23:24 -0300


buddycloud-server (0.1) unstable; urgency=medium

  [ Astro ]
  * operations: all nodes in defaultConfiguration accessModel=authorize
  * operations: posts & subscriptions accessModel=authorize in defaultConfiguration
  * buddycloud-server 0.3.2
  * Cakefile: version.js + 

  * operations: fix run notifications control flow
  * build_binary.sh: get bin/buddycloud-server out of the way before npm i
  * buddycloud-server 0.3.1
  * package.json: honor all contributors
  * Merge remote-tracking branch 'schnouki/patch-1'
  * .npmignore: exclude debian/* from npm pkgs
  * buddycloud-server 0.3.0
  * package.json: bump dep versions
  * operations: prevent unsubscribing/demoting the node owner
  * operations: fix PushInbox callback
  * operations: run notifies first, then syncs, then calls back
  * pubsub_server: lower logging
  * operations: fix PushInbox newNodes
  * operations: move PushInbox syncNode post transaction
  * operations: PushInbox should work even if syncNode had hickups
  * operations: syncNode when PushInbox created it
  * operations: fix PushInbox notification & newModerators
  * model_postgres: fix & simplify purgeNode()
  * sync: fixes
  * sync: purge node if no local subscribers
  * purge node when local unsubscription is pushed from remote
  * operations: fix generateSubscriptionsNotifications followee
  * operations: fix PushInbox newModerators nodes
  * xmpp connection: doc, serialize stanzas only once
  * operations: NewModeratorNotify needs listener, not user
  * operations: fix NewModeratorNotify listener
  * operations: log Operation name
  * model_postgres: must quote "user" column for Postgres
  * operations: NewModeratorNotify must cb()
  * operations: Notify notifies w/ node
  * operations: fix Notify otherListeners
  * pubsub_client: rm debug
  * operations: NewModeratorNotify notifies w/ node & listener
  * model_postgres: optional Transaction callbacks
  * operations: fix Notify filterSubscription & filterAffiliation invokation
  * operations: fix this binding
  * operations: no pending subscriptions in subscriptions node
  * operations: NewModeratorNotify
  * operations: doc, filter subscriptions and affiliations for non-moderators
  * operations: reorganize
  * clean up logging
  * operations: posts node defaultAffiliation='publisher'
  * sync: fix AffiliationsSynchronization typo
  * buddycloud-server 0.2.3
  * package.json: fix install script
  * build_binary.sh: bump node.js version
  * buddycloud-server 0.2.2
  * package.json: add preinstall cake build
  * operations: fix notifications
  * build_binary.sh: bump node.js version
  * buddycloud-server 0.2.1
  * operations: fix Notify subscriptios node items
  * operations: fix Notify callback result
  * operations: BrowseNodeItems for subscriptions node calls getSubscriptions not getSubscription
  * operations: syntax fixes
  * operations: Notify subscriptions fixes
  * operations: subscriptions node notifications
  * operations: BrowseNodeItems for subscriptions node
  * sync: require errors
  * sync: avoid error output when omitting local node
  * router, sync: improve logging
  * backend_pubsub: PubsubBackend.notify listener robustness
  * operations: fix Subscribe defaultAffiliation
  * operations: fix ManageNodeAffiliations control flow
  * pubsub_server: PubsubOwnerSetAffiliationsRequest syntax fix
  * operations: fix requiredAffiliation()
  * operations: requiredAffiliation can be function to allow moderators approving topic channel subscribers
  * operations: ManageNodeSubscriptions refactor for efficiency
  * operations: ManageNodeSubscriptions should set new affiliations to defaultAffiliation
  * operations: fix Notify jid/user
  * operations: Notify should notify all users pertained by a subscription
  * operations: 'unsubscribe-node' notifies unsubscribed user
  * operations, pubsub_client: there's no "unsubscribed" subscription, only "none"
  * pubsub_server: PubsubOwnerSetSubscriptionsRequest syntax fix
  * operations: Unsubscribe needs PrivilegedOperation methods
  * operations: Unsubscribed is not a PrivilegedOperation but a ModelOperation
  * operations: fix callback scope
  * pubsub_server: robustify PubsubItemsRequest
  * operations: syntax
  * pubsub_server, operations: support for RetrieveItems by itemIds
  * build_binary.sh: bump node.js version to 0.6.10
  * buddycloud-server 0.2.0
  * operations: CreateNode should not allow creation with empty nodeUser username
  * operations: fix CreateNode defaults & creationDate
  * operations: fix CreateNode isTopic switcheroo
  * router: fix autosubscribeNewUsers operation name
  * router: autosubscribeNewUsers
  * config.js.example: default checkCreateNode hook checks for a specific topic domain
  * operations: fix CreateNode node typo
  * operations: fix CreateNode config
  * pubsub_server, operations: CreateNode with optional config
  * operations: fix CreateNode setSubscription()
  * operations: CreateNode catches missing checkCreateNode hook
  * operations: CreateNode default config
  * checkCreateNode config hook
  * model_postgres: fix getOwnersByNodePrefix SQL
  * operations: fix CreateNode setAffiliation()
  * operations: fix CreateNode getOwnersByNodePrefix()
  * operations: fix ../util require, CreateNode safety check
  * implement createNode with getOwnersByNodePrefix check
  * operations: begin creating topic channels
  * model_postgres: syntax fix
  * package.json: maintainer update
  * build_binary.sh: update to node 0.6.9
  * buddycloud-server 0.1.11
  * rsm_walk: fix logging
  * operations: checkAccessModel() before checkRequiredAffiliation()!
  * operations: Unsubscribe condition syntax fix
  * package.json: muffin dependency glob seems be incompatible in v3.*
  * operations: checkRequiredAffiliation should ignore no @requiredAffiliation
  * operations: fix isAffiliationAtLeast w/ invalid affiliation
  * jsconfig 0.2.0 is out! w00t!!!
  * Cakefile: lib/version.js from package.json
  * logger: update to ain2 1.0.0
  * main: fix config loading
  * buddycloud-server 0.1.10
  * router: fix syncServer()
  * buddycloud-server 0.1.9
  * bin/buddycloud-server: fix param quoting
  * bin/buddycloud-server: fix $cwd
  * buddycloud-server 0.1.8
  * .npmignore to package up built lib/* instead of src/*
  * build_binary.sh: install devDependencies beforehand
  * build_binary.sh: bump node.js version to 0.6.7
  * util: move getNodeUser(), getUserDomain()
  * main: "server successfully started"
  * sync: fix logging
  * model_postgres: fix writeItem() SQL parameter binding
  * sync: fix PaginatedSynchronization error callback
  * sync: rm TODO note
  * model_postgres: writeItem updated_query
  * operations: logging fixes
  * writeItem: move updated extraction from operations to model_postgres
  * model_postgres: writeItem should also INSERT existing updated value
  * model_postgres: fix syntax
  * model_postgres: SQL fixes
  * operations: PushInbox copies item published date
  * postgres schema: CREATE VIEW open_nodes + usage in model_postgres
  * model_postgres: fix query result handling
  * fix getTopFollowedNodes & getTopPublishedNodes parameters
  * model_postgres: fix SQL INTERVAL syntax
  * operations: BrowseNodes.fetchNodes() needs transaction
  * operations: BrowseNodes.transaction should use @fetchNodes()
  * operations: fetchNodes() typo
  * pubsub_server: browse /top-followed-nodes & /top-published-nodes does not request a particular node
  * getTopFollowedNodes & getTopPublishedNodes w/ XMPP disco interface
  * build_binary.sh: bump to node 0.6.6
  * buddycloud-server 0.1.7
  * package.json: rm cradle dependency
  * logger: syslog only with hostname
  * replace common-logger by underscore.logger
  * update ain2 dependency for node v0.6 compatibility
  * model_postgres walkListenerArchive: replace DISTINCT with GROUP BY
  * model_postgres: fix config order/limig
  * operations: ReplayArchive sorts results before capping
  * ReplayArchive/walkListenerArchive: properly cap result set
  * operations: ReplayArchive default max=50
  * build_binary.sh: use $PREFIX from environment if present
  * package.json: req node-stringprep >=0.1.1
  * router: fix
  * buddycloud-server 0.1.6
  * update to new node-waf paths
  * build_binary.sh: switch to node 0.6.4
  * package.json: depend on 0.3.1
  * router: RSM usage fix
  * logger: open logFile for appending, fixes issue #25
  * package.json: depend on node-xmpp >= 0.3.0
  * operations ReplayArchive: fix rsm max
  * operations: ReplayArchive RSM support
  * backend_pubsub: notificationPush updates include sender & actor
  * router: detectUserType fixes
  * router: detectUserType fixes
  * logger: fix argument iteration
  * main, backend_pubsub: logging improvements
  * backend_pubsub: include user in notfound error
  * connection: loopback stanzas to ourselves
  * router: add missing util.inspect include
  * router.run: trace req
  * router: add missing rsm include
  * logger: typo
  * logger: fix level
  * logging clean-up
  * router, pubsub_{server,client}: @type in <actor/>
  * buddycloud-server 0.1.5
  * router: sync fixes
  * buddycloud-server 0.1.4
  * ManageNodeAffiliations: non-owner may not elect a new owner
  * sync: log upon completion
  * sync: transaction fix
  * move some sync logic into router, lock per node
  * operations: BrowseNodeInfo/RetrieveNodeConfiguration w/o access control
  * buddycloud-server 0.1.3
  * operations: deny Unsubscribe from own nodes
  * logger: ain2 syslog transport
  * logger: message always as string
  * main: fix --stdout kludge
  * logger: avoid log level < 0
  * config.js.example: syslog on by default
  * config.js.example: logging section
  * syslog support with ain2
  * support --stdout logging
  * replace cnlogger by common-logger
  * buddycloud-server 0.1.2
  * build_binary: npm install globally (into /opt/buddycloud-server/)
  * build_binary: dedup node & npm versions
  * build_binary: default to /opt/buddycloud-server, bin/ script
  * main: process.title fix
  * version: fix package.json path
  * version from package.json in process.title and for jabber:iq:version
  * xmpp/connection: do not subscribe in probePresence()
  * buddycloud-server 0.1.1
  * build_binary: bump node & npm versions
  * backend_pubsub: reply() must also copy 'replay' field on MaxStanzaSizeExceeded
  * connection: more stanza output when MaxStanzaSizeExceeded
  * don't send ReplayArchive notifications to all online resources
  * pubsub_client/connection: wrap error replies into StanzaError earlier
  * logging fixes
  * port to cnlogger
  * port to broken winston logging
  * xmpp connection: always tell node-xmpp to reconnect
  * async.filter iterator does not take error parameter
  * model_postgres: fix nodeExists warning
  * backend_pubsub: fix notification matching
  * sync: fix router.authorizeFor() usage
  * sync: writeItem does not need author anymore
  * operations: typo
  * model_postgres: fix getListenerAffiliations() query
  * sync: careful
  * xmpp/forms: oops, s/creationTime/creationDate/
  * xmpp/connection: fix name
  * router: check for anonymous user to be online
  * anonymous user offline tracking & clean-up
  * model_postgres: fix walkListenerArchive() node in results
  * router: fix method binding
  * model_postgres: walkListenerArchive() should include node in results
  * operations: RemoveUser & model_postgres.getUserRemoteSubscriptions() & clearUserSubscriptions()
  * BuddycloudDiscovery::detectAnonymousUser
  * backend_pubsub: gracefully handle MaxStanzaSizeExceeded for notifications
  * xmpp pubsub_server & connection: fix graceful MaxStanzaSizeExceeded handling
  * errors: MaxStanzaSizeExceeded extends Error
  * operations: s/geoloc/geo/
  * operations: /subscription items shall contain jid=owner
  * metadata buddycloud#channel_type
  * proper metadata field names
  * support for creationDate
  * operations: clarify logging
  * router: fix remote backend selection
  * operations: Unsubscribe refactor & fix
  * operations: fix Register
  * buddycloud-server 0.1.0
  * operation: print opName on commit, rm debug
  * bin/buddycloud-server: don't cd so config can be loaded relatively
  * Merge remote-tracking branch 'origin/cli'
  * operations: RetractItems should allow anyone to remove their own posts
  * operations: preserve affiliation if previously affiliated
  * operations: unify into isAffiliationAtLeast()
  * operations: rm leftover TODO note
  * operations: refactor Register; should check if authoritative for user's domain
  * router.run: return 404 for nodes not locally subscribed but discovered ourselves
  * rm explicit author handling in postgres schema, model, operations
  * main: check sender authorization for authorizationPrompt
  * operations: RetrieveItems shall not virtualize items for cache case of remote nodes
  * Revert "Made the ownership of tables really clear. Should help avoid the problem that DD had the other day."
  * s/channel-server/buddycloud-server/g
  * build_binary.sh: fix invokation hint
  * README: rm some outdated stuff
  * main: fix defaultConfig stuff
  * build_binary.sh
  * operations: RetrieveItems.retrieveSubscriptionsItems() result set sorting, affiliations
  * virtual handling of /user/.../subscriptions node items
  * MAM replays subscription authorization requests
  * more authorization stuff
  * fixes
  * small fixes
  * package.json: fix bin path
  * further authorizationPrompt work
  * backend_pubsub: missedSomething was missing
  * package.json: fix coffeescript path (./node_modules/...)
  * sending authorize notification forms
  * package.json: fix .coffee compilation stage
  * operations: PrivilegedOperation.fetchActorAffilliation fetches all listener affiliations for inbox sync
  * pubsub_notifications: fix MAM stanzas
  * operations: subscribe defaultAffiliation, fixes
  * model_postgres: many fixes
  * operations: publishModel 'subscribers'
  * operations: access control fixes
  * begin access control, affiliations checking
  * model_postgres: fixes
  * errors: fix error classes
  * xmpp/connection: fix
  * xmpp/connection: fix @missedServerTimeouts usage
  * model_postgres: safety checks
  * readability, notes
  * rsm_walk: fix serious errors
  * globally refactor operation from function to value
  * sync: fixes
  * add forgotten rsm_walk file
  * move syncQueue from main.coffee to fine-grained sync.syncNode
  * xmpp/connection: readability
  * xmpp/connection: track <you-missed-something/> timers with @missedServerTimeouts
  * syncServer support, wired up to <you-missed-something/> 'syncNeeded'
  * model_postgres: for an actor, getSubscriptions() shall return not only users but also listeners
  * MAM time specification
  * primitive MAM implementation
  * send <you-missed-something/>
  * operations: PushInbox TODO note
  * sync: rm request.rsm.max clamp
  * synchronization with state resetting and subscriptions/affiliations support
  * pubsub_*: fix user/jid conventions
  * ConfigSynchronization should use browse-node-info to get node config
  * synchronizing!
  * synchronization kinda works, but hits RSM loops
  * further synchronization progress
  * begin synchronization
  * main: require async
  * measure stanza size, gracefully retry with smaller result set
  * synchronization groundwork
  * don't let backend_pubsub call router.runLocally(), return errors.SeeLocal() instead
  * errors: clean up
  * normalize: add <link rel="self" href="xmpp:...?pubsub;action=retrieve;..."/>
  * operations: Publish shall allow new items with specified @id
  * nodes browsing, with RSM
  * backend_pubsub: run() should bail out early on invalid node form
  * PostgreSQL tuning
  * complete RSM implementation
  * begin RSM for all operations
  * generify RSM stuff
  * pubsub_client: RSM
  * fixes from CCCamp11
  * RSM for local items retrieving
  * begin new RSM implementation
  * pubsub_server: publish-node-items shall reply with item ids
  * model_postgres: fix getNodeListeners() SQL
  * model_postgres: nodeExists() shall check for NOT NULL
  * model_postgres: getNodeListener() replace filter by SQL
  * model_postgres: getNodeListener() filter for null
  * model_postgres: fix setSubscription() INSERT w/o listener
  * error printout
  * forms: fix
  * operations: PushInbox author fix
  * debug
  * xml child robustness
  * model_postgres: fix nodeExists()
  * fix subscription listener for local users
  * logging cleanup
  * initiate presence tracking of users
  * xmpp/connection: use send() instead of specifying from jid
  * some logging cleanup
  * operations: push-inbox does not set subscription listener
  * fixes & TODO notes
  * operations: Notify.transaction() must call cb()
  * retrieve-node-configuration
  * forms: configToResultForm -> configToForm
  * pubsub_client: RetrieveNodeConfiguration & ManageNodeConfiguration
  * operations: catch reply cb exceptions
  * create-node operation
  * package.json: scripts
  * fixes
  * fix outgoing notifications
  * generify pubsub_notifications
  * many fixes for subscription pushing
  * router: if request writes, always go remote
  * push incoming notifications to local model
  * more subclassing of EventEmitter, incoming notifications handling
  * pubsub_server: unify PubsubRequest & PubsubOwnerRequest
  * merge request.coffee into pubsub_server.coffee
  * begin remote subscription pushing to local inbox
  * backend_pubsub: PubsubBackend.notify(): readability
  * tune to use single cb() instead of req.{reply,replyError}()
  * revive normalization
  * model_postgres: setSubscription(): coearce isSet to boolean
  * model_postgres: catch lost transactions
  * pubsub_client: error reporting, fix
  * subscribe reply status
  * model_postgres: setAffiliation() should check nodeExists()
  * fix disco.authorizeFor() usage
  * pubsub_client: fix <actor/> placement
  * refactor notifications a bit
  * pubsub_client: <actor/> placement fix
  * pubsub_client: fix <actor/> placement
  * pubsub_notifications: subscriptions/affiliations/config
  * fix registration/model callback parameters
  * operations: ManageNodeAffiliations validates accessModel & publishModel
  * setting configuration
  * fixes, fixes, config
  * only RegisterSetRequest should induce presence subscription
  * FIXME note
  * model_postgres: do not use rowCount
  * operations: Register created default configuration
  * pubsub_server: pubsub/inbox identity
  * fixes, StanzaError
  * implement pubsub_client operations
  * pubsub_notifications: byOperation()
  * fixes
  * fixes
  * fixes & debugging
  * fixes
  * debugging & fixes
  * fixes
  * begin discovering locally
  * fixes
  * Router.run: fix
  * fixes
  * operations: rename channel node to "posts"
  * begin notifications
  * a bit o' twiddling w/ subscription listeners
  * refactor router for remote requests
  * operations: subscribe/unsubscribe toggle affiliation none/member
  * router: rename frontend to backend
  * rename backend_postgres to model_postgres, revive router
  * main: move iqHandler to pubsub_server
  * manage, not only retrieve, subscriptions & affiliations
  * use subscribe sender as notification listener
  * backend_pubsub: replace ternary operator
  * need to store listener in subscriptions...
  * backend_pubsub: implement RequestCache
  * new untested buddycloud discovery with backend_pubsub.coffee
  * retrieve <actor/> generalized, begin using authorizeFor
  * ns: add BUDDYCLOUD_V1 xmlns
  * postgres.sql schema: updated column for more tables, author column for items
  * retrieving node affiliations
  * retrieving node subscriptions, fixes
  * backend_postgres: syntax fixes
  * operation: Register should set affiliation & subscription
  * retrieving subscriptions & affiliations
  * retracting items
  * publishing & retrieving items works
  * begin item retrieving
  * subscribe & unsubscribe
  * fix backend_postgres (user is a Pg keyword, must be quoted as column name)
  * publishing works
  * lots of fixes
  * fix disco requests
  * fix, fix, fix
  * begin implementing register & publish implementation
  * mv src/operations.coffee src/local/operations.coffee
  * revive backend
  * primitive operations
  * mv controller.coffee operations.coffee
  * dead code TODO
  * fixes
  * rm old dead code
  * rename iqhandler to request
  * begin some refactoring
  * begin hooking up handlers with operations
  * xmpp/pubsub_server: indicate operation types
  * notes
  * pubsub_server: PubsubOwnerHandlers
  * pubsub_server: flesh out more pubsub handlers
  * add affiliations checking
  * begin interweaving with local operations
  * a tad of interconnecting
  * pubsub_server: DiscoInfoHandler.reply()
  * xmpp client 'n stuff
  * README: draw new design
  * begin router
  * xmpp: move NS_* to ns.coffee
  * xmpp: primitive disco info works
  * begin iqhandler
  * xmpp/connection: port presence tracking
  * rm main.js
  * move src files around
  * rm model_couchdb from config, add preliminary main.coffee
  * a bit new controller
  * rm old test_controller
  * some controller work
  * old controller translated to coffeescript
  * port peripheral stuff over to coffeescript
  * README: change ejabberd port to the config default one
  * model_couchdb: s/doc.subscribers/doc.subscriptions/
  * xmpp_pubsub.js: fix typo
  * model_postgres: check nodeExists before any data modification
  * preliminary RSM (XEP-0059) implementation for retrieve-items/retrieve
  * model_couchdb: stub getUpdatesByTime()
  * MAM should result in direct message, not broadcast notification to all resources
  * MAM w/ working model_postgres backend
  * begin implementing MAM
  * controller: register/register should create /user/<jid>/subscriptions node
  * normalize fixes + tests
  * normalize
  * only one child element per item
  * model_postgres: fix setConfig()
  * model_postgres: listNodesByUser()
  * model_couchdb: listNodesByUser(), simplify listNodes()
  * controller, xmpp_pubsub: browse-nodes/by-user
  * model_postgres setConfig(): fixes
  * configuration notification
  * model_postgres setConfig(): do not set fields unspecified/without defaultConfig
  * model_postgres nodeExists(): indentation
  * controller: subscribe should not require preexisting affiliation
  * xmpp_pubsub: fix manage-subscriptions/retrieve result usage
  * controller: allow retrieving subscriptions & affiliations for members
  * xmpp_pubsub: syntax fix
  * model_postgres: fix queue pushing
  * xmpp_pubsub: fix info discovery reply FORM_TYPE
  * model_postgres: config fixes
  * more on extended config
  * model_couchdb, model_postgres: more flexible config schema
  * config: description, type, creationDate; setConfig() on create-node/register
  * xmpp_pubsub: optimize presence tracking
  * controller: requiredAffiliation='member' for config-node/retrieve
  * README: OpenFire
  * controller: defaultConfig() + use in feature 'config-node'
  * xmpp_pubsub: replace isOnline() with getOnlineResources()
  * model_postgres: fix transaction dequeueing
  * model_postgres: move cb() past process.nextTick/dbIsAvailable for safety
  * model_postgres: work around empty responses
  * test_controller: retract
  * xmpp_pubsub: disco <identity/> according to discovered @node
  * test_controller: browse-nodes
  * model_couchdb: fix preload() etag extraction + error reporting
  * xmpp_pubsub: FeatureNotImplemented message
  * controller: simulate a stack for debug info
  * test_controller: retract skeleton
  * controller unsubscribe: do not fetch affiliation from database but check by node path
  * implement & test unsubscribe
  * test_controller: skeletons
  * test_controller: publishing tests
  * test_controller: more publish testing + controller fix
  * test_controller: begin test publishing
  * model_postgres: fix forgotten variable
  * model_postgres: reconnect to database upon error
  * model_postgres: oops, syntax error
  * config.js.example: postgres is actually the one with a poolSize
  * model_postgres: oops, syntax errors
  * begin test_controller
  * fixes
  * subscriptionModified <message/>
  * xmpp_pubsub: "message" & approve() fixes
  * controller: replace ownerNotification with afterTransaction
  * access_model authorize
  * package.json & README
  * errors: pull inherits() from util/utils/sys for moving node api
  * browse open nodes with service discovery items
  * controller: refactor affiliations checking
  * xmpp_pubsub: fix subscriptions format
  * controller: treat missing accessModel as 'open'
  * model_couchdb: preload() etag fix
  * .gitignore with config.js
  * xmpp_pubsub: node config on disco info
  * model_couchdb: encodeURIComponent() only for db.head() & .get()
  * main.js: #!
  * rename config.js to config.js.example
  * restore default config.js
  * main.js: on uncaughtException
  * postgres doc & config
  * model_postgres
  * model_couchdb: fix item deserialization
  * model_couchdb: rm implemented TODOs
  * README: CouchDB configuration
  * README: TODO++
  * LICENSE
  * README: markdown fix
  * README: mention buddycloud :)
  * model_couchdb: fix views initialization
  * README & config
  * jabber:iq:register
  * model_couchdb: fixes
  * errors fixing
  * rm model_persistence
  * model_couchdb: assertNodeName()
  * main: catch uncaughtException
  * controller: fix
  * bugs, readability
  * model_couchdb: fixing
  * controller: implement affiliations checking
  * xmpp_pubsub: getAffiliations() result is now Array
  * model_couchdb: setSubscription() & setAffiliation() 'none'
  * model_couchdb: consolidate subscriptions & affiliations model
  * xmpp_pubsub: send notifications with type='headline'
  * xmpp_pubsub: subscribeIfNeeded() on <create/> & <subscribe/>
  * model_couchdb: load() shortcut when already cached
  * model_couchdb: createNode() fix
  * model_couchdb: preload()
  * model_couchdb: commit read documents too for integrity
  * model_couchdb: abstract views
  * CouchDB Optimistic Concurrency Control layer
  * controller: improve error propagation
  * defined error conditions
  * untested configuration getting/setting
  * service discovery
  * modify-affiliations
  * model_couchdb: getAffiliation()
  * begin permission checking infrastructure
  * presence probes
  * xmpp_pubsub: presence tracking
  * refactoring controller complete
  * continue refactoring controller into features/operations
  * begin refactoring controller into features/operations
  * subscribers
  * getting subscriptions & affiliations
  * createNode improvements
  * controller createNode: check node
  * model_couchdb: affiliations view
  * items getting
  * much more progress
  * implement retraction, s/notifySubscriber/notify/, s/writeItems/writeItem/
  * publish notification works
  * more frontend hooking
  * begin notification hooks
  * fixes
  * begin model_couchdb transactions
  * split model
  * some progress
  * some progress
  * createNode creates owner affiliation
  * model: indexes
  [ Thomas Jost ]
  * Add @denisw to contributors
  * Upgrade required node version to 0.8
  * We actually need remote subscriptions nodes
  * Merge branch 'feature/anon-fixes' into develop
  * Merge branch 'feature/really-validate-post-times' into develop
  * Reject remote posts with invalid dates
  * Add tests for remote posts with invalid dates
  * Force anon subscriptions to be temporary
  * Set default affiliation to 'none' for anon users
  * Merge branch 'feature/anon-fixes' into develop
  * Cleanup: remove some dead code
  * Purge remote nodes with no local subscription left
  * Merge branch 'feature/recent-items' into develop
  * Merge branch 'feature/validate-remote-items' into develop
  * Sort recent items by update time
  * Merge branch 'feature/validate-remote-items' into feature/recent-items
  * Fix tests that push remote items
  * Validate remote items
  * Add (failing) tests for invalid remote items
  * Implement recent items query
  * Add (failing) test for recent items query
  * PubSub replies can include several elements
  * Merge branch 'feature/pusher' into develop
  * Workaround callback woes
  * Fix MAM for pusher component
  * Pusher: test MAM
  * test_server: move makePublishIq into TestServer
  * Pusher: test node configuration
  * Pusher: test unsubscriptions
  * Merge branch 'feature/affiliations-fixes' into develop
  * Merge branch 'feature/pubsub-disco-features' into develop
  * Cleanup
  * Expose all implemented PubSub features
  * Pusher: test affiliations
  * Merge branch 'feature/affiliations-fixes' into feature/pusher
  * Fix affiliation in /subscriptions notifications
  * Accept PubSub-compliant affiliations notifications
  * Pusher: test subscriptions
  * Merge branch 'feature/fix-98' into develop
  * Fix SQL for updating replies
  * Add failing test for issue #98
  * Fix offline user cleanup
  * DB: drop anonymous column
  * Yet another federation test
  * Check if the example config file is valid JS
  * Add tests for pusher code
  * Pusher can MAM everything
  * Pusher is a listener for all notifications
  * Add config for pusher component
  * Merge branch 'feature/mam-fixes' into develop
  * Increase the default number of items in a MAM response
  * Make MAM return an error if there are too many results
  * Use RSM in MAM
  * Test MAM RSM
  * MAM: filter bad dates out
  * Test if MAM validates dates correctly
  * Ensure the giant MAM test doesn't pollute the test environment
  * Make affiliations notifications PubSub-compliant
  * Affiliations have update timestamps too
  * Avoid temporary subscriptions in MAM results
  * Advertise support for MAM in disco#info
  * Add a giant MAM test
  * Update Travis URL in README.md
  * Merge branch 'feature/tests' into develop
  * Correctly tests that updated items don't change <in-reply-to/>
  * Move tests on updated items to a different function
  * Add tests for updates that change <in-reply-to/>
  * Use Travis to automate testing
  * Merge branch 'master' into develop
  * Add compatibility with PostgreSQL 9.1
  * Require at least one item to retract
  * Add Emacs folding marks
  * Add retrieve and retract tests
  * Fix retraction stanza sent to remote services
  * Tombstones: include Atom namespace in <updated/> element
  * Fix error when not allowed to retract an item
  * Tombstones can't be updated
  * When publishing an update, check if the actor is the original author
  * Check if original post exists before publishing a reply
  * Reject posts from non-users
  * Don't include type in <actor/>
  * Complete post/update/retract tests
  * TestServer: fix Atom in-reply-to element
  * Fail when some unwanted event happens
  * Add description for calls to "should.exist"
  * Retraction tests
  * Workaround CoffeeScript weird scoping rules
  * Add another batch of tests
  * Update test data
  * Change the way the test server emits IQ stanzas
  * Tests for posting to remote channels
  * Test server: emit event for IQs with unknown ID
  * Test server: disco info for "remote" servers
  * More post tests
  * Add helper to run tests that trigger several different stanzas
  * Test server: handle <message/> stanzas
  * Add post tests
  * Post tests: helper to check if post was successful
  * Throw an exception when getting an unexpected error IQ
  * Start adding post tests
  * Add helpers for pubsub get IQs and Atom handling
  * Helpers to add initial test data in the database
  * Add XMPP namespaces to test_server.coffee
  * Reply to presence probes
  * Don't parse Elements again
  * Use same user and server names as in sfc
  * Safe path handling in prepare-db.sh
  * Add codo-like doc to the TestServer class
  * Add helpers to build disco and pubsub IQs
  * Expose support for PubSub node creation
  * Skip a test
  * More channel creation tests
  * New tests and helpers for forms
  * Add a helper to parse disco#info replies
  * Move common disco replies to test_server.coffee
  * Start testing for channel creation
  * Test server: handle disco#items queries
  * Make tests runnable using "npm test"
  * Basic disco tests
  * Start a test suite
  * Use an existing component connection if provided in config
  * Make it possible to require() the server
  * Update config.js.example
  * Fix autosubscribeNewUsers
  * Increase the max number of items in each RSM page
  * Better shrinking of oversized stanzas
  * Include `-dirty' in version number from git
  * Remove glob from dependencies
  * Fix indentation in main.coffee
  * Prevent existing persistent subscription from being made temporary
  * Merge branch 'feature/version-number-from-git' into develop
  * Expose support for XEP-0092 (Software Version) in disco
  * Use `git describe' to get version numbers in dev branches
  * Merge branch 'master' into next
  * Restore compatibility with Node 0.6
  * Fix handling of offline users
  * Avoid race condition in disco cache
  * Shrink oversized stanzas more aggressively
  * Avoid nulls
  * Include new files in release tarball
  * Avoid race condition in disco cache
  * Merge remote-tracking branch 'upstream/tempsub' into next
  * Merge branch 'db-versioning' into next
  * buddycloud-server 0.3.5
  * Check if remote supports temporary subscription before sending a tempsub request
  * Client can check for server features before sending an IQ
  * Make server features discoverable
  * Log errors when processing incoming messages
  * Cleanup
  * Remove empty text nodes from items
  * Fix ActivityStreams verb for replies
  * Include operation name in debug message
  * Don't notify unsubscribe when it was a temporary subscription
  * Offline user cleanup: do real unsubscribe operations
  * I'm dumb
  * Don't delete temporary subscriptions during sync
  * Don't send any notification for temporary subscriptions
  * Client and server must speak the same language
  * Only send notifications about temporary subscriptions to remote listeners
  * Cleanup offline users
  * Claim we support subscription options
  * Temporary subscriptions
  * Fix updating items
  * Add help channels to default autosubscriptions
  * Merge branch 'log-fix'
  * Inspect objets in log messages
  * Fix broken log messages
  * Don't write subscription stanzas in items table
  * Merge remote-tracking branch 'lloyd/config'
  * Populate in_reply_to column when inserting new items
  * DB cleanup at startup
  * Add README for DB schema versioning
  * Upgrade DB schema
  * Check DB schema version on startup
  * Don't change <published/> when updating an existing post
  * Fix subscription to remote private channels
  * Don't fail when the default config file does not exist
  * Add Lloyd in contributors
  * Better logging for replies sent by 'proxy' components
  * Merge branch 'mam-result'
  * Include <result/> in MAM replies
  * Merge remote-tracking branch 'schnouki/atom-tombstones'
  * Fix typo
  * Merge pull request #61 from lloydwatkin/no-mod_disco
  * Also send tombstones in retract notifications
  * Use Atom tombstones for deleted items
  * xmpp: XEP-0313 compliance
  * Handle PubSub retract "notify" attribute
  * operations: fix PushInbox notification
  * Fix undefined variable when paging backwards in RSM
  [ Tuomas Koski ]
  * Merge pull request #59 from lloydwatkin/initialise-sync
  * Merge pull request #58 from lloydwatkin/master
  [ Steven Lloyd Watkin ]
  * Ensure we do not cause BC breaks
  * Make both defaults positive rather than one positive & the other negative Broke the config options down further
  * Fix build console output
  * "package" now a reserved word in node, caused failing in builds (v0.6.15+)
  [ Denis Washington ]
  * Use local CoffeeScript "cake" for "npm install"
  [ Jonas Smedegaard ]
  * Setup access rights and needed dirs when starting daemon
  * Speedup system shutdown by avoiding explicit sysV stop
  * xmpp_pubsub: check for commandEl prior usage
  [ Reginald dude ]
  * updates sent via email from vorner.cz
  * updates sent via email from vorner.cz
  [ Reginald Dude ]
  * Most confusing config file ever
  [ ▟ ▖▟ ▖ ]
  * Merge pull request #70 from lloydwatkin/fix-is-function
  * Merge pull request #63 from lloydwatkin/no-mod_disco
  * Merge pull request #62 from lloydwatkin/no-mod_disco
  * Merge pull request #57 from Schnouki/xep-0313
  * Merge pull request #54 from Schnouki/fix-notif
  * Merge pull request #52 from lloydwatkin/master
  * Merge pull request #51 from lloydwatkin/master
  [ James Tait ]
  * Ensure both the PID dir and log dir are created on startup if they do not already exist.
  [ imaginator ]
  * aligning with INSTALL instructions
  * moved instructions to wiki
  * Edited README.md via GitHub
  [ dodo ]
  * fix accessModel of geo nodes
  * always test in production
  * buddycloud-server 0.3.4
  * Merge branch 'packaging'
  * put the /etc/init.d script into tarball
  * not needed anymore
  * default options for new channels
  * bump tarballify version
  * add bin/buddycloud-server to the tarball
  * no build step in bin/buddycloud-server anymore
  * print additional info messages in gray
  * fix 'file is not defined'
  * fix 'modName is not defined'
  * colorful output for package.js
  * bump tarballify version
  * rm trailing spaces
  * no build_binary.sh needed
  * separate devDependencies
  * export name
  * use packaging script
  * buddycloud-server 0.3.3
  * pass prefix to npm to force npm to use that particular prefix
  * $PREFIX/bin/buddycloud-server can be nonexistant .. so ignore all errors when removing
  * bump node version in build script
  * merge issue #37
  * specify interal config file as defaults, not as main config
  * backports to node 0.4
  * concat cwd path to config path only when config path is relative
  * respect the cwd
  * move to the right dir before builing
  * wscript is not needed anymore
  * merged #31. symlink detection for bin/buddycloud-server thanks to @highfellow
  * fixed gitignore
  * forgot Cakefile
  * pin node version for over 0.5 to get the require json working
  * get version directly
  * new buildsystem
  * check if config.syslog has keys
  * dont load default config over opts and args
  * main: fix config loading
  * wscript fixes
  * load config via jsconfig
  * update wscript
  * upgrade build environment
  * update requirements in readme
  * cleanup files
  [ Simon Tennant ]
  * Update config.js.example
  * change to read config file from /opt/buddycloud
  * Update master
  * don't be so --quiet (will help a lot with debugging)
  * Update _etc_init.d_buddycloud-server
  * the orwell defeault was causing jdesenberg problems.
  * Fixed the permissions to run as.
  * Update _etc_init.d_buddycloud-server
  * init script
  * make it really clear what to change (and what "jid" refers to)
  * Made the ownership of tables really clear. Should help avoid the problem that DD had the other day.
  [ Lloyd Watkin ]
  * Fix for checking of child element
  * Catch error event
  * Fix for server reset
  * Updated variable names to better describe what config does.
  * Merge branch 'master' of git://github.com/buddycloud/buddycloud-server into no-mod_disco
  * Allow buddycloud server to advertise additional 'proxy' components
  * Wait to sync
  * Rename of parameter
  * Allow user to specify a port or not, changed argument name as it may not actually be remote debugging.
  * Tidy up
  * Allow node.js debugging
  [ Simon ]
  * /etc/init.d/buddycloud-server

 -- Abmar Barros (buddycloud Nightly Builds) <abmar@buddycloud.com>  Sat, 26 Jan 2013 15:23:41 -0300


buddycloud-server (0.1) unstable; urgency=medium

  [ Astro ]
  * operations: all nodes in defaultConfiguration accessModel=authorize
  * operations: posts & subscriptions accessModel=authorize in defaultConfiguration
  * buddycloud-server 0.3.2
  * Cakefile: version.js + 

  * operations: fix run notifications control flow
  * build_binary.sh: get bin/buddycloud-server out of the way before npm i
  * buddycloud-server 0.3.1
  * package.json: honor all contributors
  * Merge remote-tracking branch 'schnouki/patch-1'
  * .npmignore: exclude debian/* from npm pkgs
  * buddycloud-server 0.3.0
  * package.json: bump dep versions
  * operations: prevent unsubscribing/demoting the node owner
  * operations: fix PushInbox callback
  * operations: run notifies first, then syncs, then calls back
  * pubsub_server: lower logging
  * operations: fix PushInbox newNodes
  * operations: move PushInbox syncNode post transaction
  * operations: PushInbox should work even if syncNode had hickups
  * operations: syncNode when PushInbox created it
  * operations: fix PushInbox notification & newModerators
  * model_postgres: fix & simplify purgeNode()
  * sync: fixes
  * sync: purge node if no local subscribers
  * purge node when local unsubscription is pushed from remote
  * operations: fix generateSubscriptionsNotifications followee
  * operations: fix PushInbox newModerators nodes
  * xmpp connection: doc, serialize stanzas only once
  * operations: NewModeratorNotify needs listener, not user
  * operations: fix NewModeratorNotify listener
  * operations: log Operation name
  * model_postgres: must quote "user" column for Postgres
  * operations: NewModeratorNotify must cb()
  * operations: Notify notifies w/ node
  * operations: fix Notify otherListeners
  * pubsub_client: rm debug
  * operations: NewModeratorNotify notifies w/ node & listener
  * model_postgres: optional Transaction callbacks
  * operations: fix Notify filterSubscription & filterAffiliation invokation
  * operations: fix this binding
  * operations: no pending subscriptions in subscriptions node
  * operations: NewModeratorNotify
  * operations: doc, filter subscriptions and affiliations for non-moderators
  * operations: reorganize
  * clean up logging
  * operations: posts node defaultAffiliation='publisher'
  * sync: fix AffiliationsSynchronization typo
  * buddycloud-server 0.2.3
  * package.json: fix install script
  * build_binary.sh: bump node.js version
  * buddycloud-server 0.2.2
  * package.json: add preinstall cake build
  * operations: fix notifications
  * build_binary.sh: bump node.js version
  * buddycloud-server 0.2.1
  * operations: fix Notify subscriptios node items
  * operations: fix Notify callback result
  * operations: BrowseNodeItems for subscriptions node calls getSubscriptions not getSubscription
  * operations: syntax fixes
  * operations: Notify subscriptions fixes
  * operations: subscriptions node notifications
  * operations: BrowseNodeItems for subscriptions node
  * sync: require errors
  * sync: avoid error output when omitting local node
  * router, sync: improve logging
  * backend_pubsub: PubsubBackend.notify listener robustness
  * operations: fix Subscribe defaultAffiliation
  * operations: fix ManageNodeAffiliations control flow
  * pubsub_server: PubsubOwnerSetAffiliationsRequest syntax fix
  * operations: fix requiredAffiliation()
  * operations: requiredAffiliation can be function to allow moderators approving topic channel subscribers
  * operations: ManageNodeSubscriptions refactor for efficiency
  * operations: ManageNodeSubscriptions should set new affiliations to defaultAffiliation
  * operations: fix Notify jid/user
  * operations: Notify should notify all users pertained by a subscription
  * operations: 'unsubscribe-node' notifies unsubscribed user
  * operations, pubsub_client: there's no "unsubscribed" subscription, only "none"
  * pubsub_server: PubsubOwnerSetSubscriptionsRequest syntax fix
  * operations: Unsubscribe needs PrivilegedOperation methods
  * operations: Unsubscribed is not a PrivilegedOperation but a ModelOperation
  * operations: fix callback scope
  * pubsub_server: robustify PubsubItemsRequest
  * operations: syntax
  * pubsub_server, operations: support for RetrieveItems by itemIds
  * build_binary.sh: bump node.js version to 0.6.10
  * buddycloud-server 0.2.0
  * operations: CreateNode should not allow creation with empty nodeUser username
  * operations: fix CreateNode defaults & creationDate
  * operations: fix CreateNode isTopic switcheroo
  * router: fix autosubscribeNewUsers operation name
  * router: autosubscribeNewUsers
  * config.js.example: default checkCreateNode hook checks for a specific topic domain
  * operations: fix CreateNode node typo
  * operations: fix CreateNode config
  * pubsub_server, operations: CreateNode with optional config
  * operations: fix CreateNode setSubscription()
  * operations: CreateNode catches missing checkCreateNode hook
  * operations: CreateNode default config
  * checkCreateNode config hook
  * model_postgres: fix getOwnersByNodePrefix SQL
  * operations: fix CreateNode setAffiliation()
  * operations: fix CreateNode getOwnersByNodePrefix()
  * operations: fix ../util require, CreateNode safety check
  * implement createNode with getOwnersByNodePrefix check
  * operations: begin creating topic channels
  * model_postgres: syntax fix
  * package.json: maintainer update
  * build_binary.sh: update to node 0.6.9
  * buddycloud-server 0.1.11
  * rsm_walk: fix logging
  * operations: checkAccessModel() before checkRequiredAffiliation()!
  * operations: Unsubscribe condition syntax fix
  * package.json: muffin dependency glob seems be incompatible in v3.*
  * operations: checkRequiredAffiliation should ignore no @requiredAffiliation
  * operations: fix isAffiliationAtLeast w/ invalid affiliation
  * jsconfig 0.2.0 is out! w00t!!!
  * Cakefile: lib/version.js from package.json
  * logger: update to ain2 1.0.0
  * main: fix config loading
  * buddycloud-server 0.1.10
  * router: fix syncServer()
  * buddycloud-server 0.1.9
  * bin/buddycloud-server: fix param quoting
  * bin/buddycloud-server: fix $cwd
  * buddycloud-server 0.1.8
  * .npmignore to package up built lib/* instead of src/*
  * build_binary.sh: install devDependencies beforehand
  * build_binary.sh: bump node.js version to 0.6.7
  * util: move getNodeUser(), getUserDomain()
  * main: "server successfully started"
  * sync: fix logging
  * model_postgres: fix writeItem() SQL parameter binding
  * sync: fix PaginatedSynchronization error callback
  * sync: rm TODO note
  * model_postgres: writeItem updated_query
  * operations: logging fixes
  * writeItem: move updated extraction from operations to model_postgres
  * model_postgres: writeItem should also INSERT existing updated value
  * model_postgres: fix syntax
  * model_postgres: SQL fixes
  * operations: PushInbox copies item published date
  * postgres schema: CREATE VIEW open_nodes + usage in model_postgres
  * model_postgres: fix query result handling
  * fix getTopFollowedNodes & getTopPublishedNodes parameters
  * model_postgres: fix SQL INTERVAL syntax
  * operations: BrowseNodes.fetchNodes() needs transaction
  * operations: BrowseNodes.transaction should use @fetchNodes()
  * operations: fetchNodes() typo
  * pubsub_server: browse /top-followed-nodes & /top-published-nodes does not request a particular node
  * getTopFollowedNodes & getTopPublishedNodes w/ XMPP disco interface
  * build_binary.sh: bump to node 0.6.6
  * buddycloud-server 0.1.7
  * package.json: rm cradle dependency
  * logger: syslog only with hostname
  * replace common-logger by underscore.logger
  * update ain2 dependency for node v0.6 compatibility
  * model_postgres walkListenerArchive: replace DISTINCT with GROUP BY
  * model_postgres: fix config order/limig
  * operations: ReplayArchive sorts results before capping
  * ReplayArchive/walkListenerArchive: properly cap result set
  * operations: ReplayArchive default max=50
  * build_binary.sh: use $PREFIX from environment if present
  * package.json: req node-stringprep >=0.1.1
  * router: fix
  * buddycloud-server 0.1.6
  * update to new node-waf paths
  * build_binary.sh: switch to node 0.6.4
  * package.json: depend on 0.3.1
  * router: RSM usage fix
  * logger: open logFile for appending, fixes issue #25
  * package.json: depend on node-xmpp >= 0.3.0
  * operations ReplayArchive: fix rsm max
  * operations: ReplayArchive RSM support
  * backend_pubsub: notificationPush updates include sender & actor
  * router: detectUserType fixes
  * router: detectUserType fixes
  * logger: fix argument iteration
  * main, backend_pubsub: logging improvements
  * backend_pubsub: include user in notfound error
  * connection: loopback stanzas to ourselves
  * router: add missing util.inspect include
  * router.run: trace req
  * router: add missing rsm include
  * logger: typo
  * logger: fix level
  * logging clean-up
  * router, pubsub_{server,client}: @type in <actor/>
  * buddycloud-server 0.1.5
  * router: sync fixes
  * buddycloud-server 0.1.4
  * ManageNodeAffiliations: non-owner may not elect a new owner
  * sync: log upon completion
  * sync: transaction fix
  * move some sync logic into router, lock per node
  * operations: BrowseNodeInfo/RetrieveNodeConfiguration w/o access control
  * buddycloud-server 0.1.3
  * operations: deny Unsubscribe from own nodes
  * logger: ain2 syslog transport
  * logger: message always as string
  * main: fix --stdout kludge
  * logger: avoid log level < 0
  * config.js.example: syslog on by default
  * config.js.example: logging section
  * syslog support with ain2
  * support --stdout logging
  * replace cnlogger by common-logger
  * buddycloud-server 0.1.2
  * build_binary: npm install globally (into /opt/buddycloud-server/)
  * build_binary: dedup node & npm versions
  * build_binary: default to /opt/buddycloud-server, bin/ script
  * main: process.title fix
  * version: fix package.json path
  * version from package.json in process.title and for jabber:iq:version
  * xmpp/connection: do not subscribe in probePresence()
  * buddycloud-server 0.1.1
  * build_binary: bump node & npm versions
  * backend_pubsub: reply() must also copy 'replay' field on MaxStanzaSizeExceeded
  * connection: more stanza output when MaxStanzaSizeExceeded
  * don't send ReplayArchive notifications to all online resources
  * pubsub_client/connection: wrap error replies into StanzaError earlier
  * logging fixes
  * port to cnlogger
  * port to broken winston logging
  * xmpp connection: always tell node-xmpp to reconnect
  * async.filter iterator does not take error parameter
  * model_postgres: fix nodeExists warning
  * backend_pubsub: fix notification matching
  * sync: fix router.authorizeFor() usage
  * sync: writeItem does not need author anymore
  * operations: typo
  * model_postgres: fix getListenerAffiliations() query
  * sync: careful
  * xmpp/forms: oops, s/creationTime/creationDate/
  * xmpp/connection: fix name
  * router: check for anonymous user to be online
  * anonymous user offline tracking & clean-up
  * model_postgres: fix walkListenerArchive() node in results
  * router: fix method binding
  * model_postgres: walkListenerArchive() should include node in results
  * operations: RemoveUser & model_postgres.getUserRemoteSubscriptions() & clearUserSubscriptions()
  * BuddycloudDiscovery::detectAnonymousUser
  * backend_pubsub: gracefully handle MaxStanzaSizeExceeded for notifications
  * xmpp pubsub_server & connection: fix graceful MaxStanzaSizeExceeded handling
  * errors: MaxStanzaSizeExceeded extends Error
  * operations: s/geoloc/geo/
  * operations: /subscription items shall contain jid=owner
  * metadata buddycloud#channel_type
  * proper metadata field names
  * support for creationDate
  * operations: clarify logging
  * router: fix remote backend selection
  * operations: Unsubscribe refactor & fix
  * operations: fix Register
  * buddycloud-server 0.1.0
  * operation: print opName on commit, rm debug
  * bin/buddycloud-server: don't cd so config can be loaded relatively
  * Merge remote-tracking branch 'origin/cli'
  * operations: RetractItems should allow anyone to remove their own posts
  * operations: preserve affiliation if previously affiliated
  * operations: unify into isAffiliationAtLeast()
  * operations: rm leftover TODO note
  * operations: refactor Register; should check if authoritative for user's domain
  * router.run: return 404 for nodes not locally subscribed but discovered ourselves
  * rm explicit author handling in postgres schema, model, operations
  * main: check sender authorization for authorizationPrompt
  * operations: RetrieveItems shall not virtualize items for cache case of remote nodes
  * Revert "Made the ownership of tables really clear. Should help avoid the problem that DD had the other day."
  * s/channel-server/buddycloud-server/g
  * build_binary.sh: fix invokation hint
  * README: rm some outdated stuff
  * main: fix defaultConfig stuff
  * build_binary.sh
  * operations: RetrieveItems.retrieveSubscriptionsItems() result set sorting, affiliations
  * virtual handling of /user/.../subscriptions node items
  * MAM replays subscription authorization requests
  * more authorization stuff
  * fixes
  * small fixes
  * package.json: fix bin path
  * further authorizationPrompt work
  * backend_pubsub: missedSomething was missing
  * package.json: fix coffeescript path (./node_modules/...)
  * sending authorize notification forms
  * package.json: fix .coffee compilation stage
  * operations: PrivilegedOperation.fetchActorAffilliation fetches all listener affiliations for inbox sync
  * pubsub_notifications: fix MAM stanzas
  * operations: subscribe defaultAffiliation, fixes
  * model_postgres: many fixes
  * operations: publishModel 'subscribers'
  * operations: access control fixes
  * begin access control, affiliations checking
  * model_postgres: fixes
  * errors: fix error classes
  * xmpp/connection: fix
  * xmpp/connection: fix @missedServerTimeouts usage
  * model_postgres: safety checks
  * readability, notes
  * rsm_walk: fix serious errors
  * globally refactor operation from function to value
  * sync: fixes
  * add forgotten rsm_walk file
  * move syncQueue from main.coffee to fine-grained sync.syncNode
  * xmpp/connection: readability
  * xmpp/connection: track <you-missed-something/> timers with @missedServerTimeouts
  * syncServer support, wired up to <you-missed-something/> 'syncNeeded'
  * model_postgres: for an actor, getSubscriptions() shall return not only users but also listeners
  * MAM time specification
  * primitive MAM implementation
  * send <you-missed-something/>
  * operations: PushInbox TODO note
  * sync: rm request.rsm.max clamp
  * synchronization with state resetting and subscriptions/affiliations support
  * pubsub_*: fix user/jid conventions
  * ConfigSynchronization should use browse-node-info to get node config
  * synchronizing!
  * synchronization kinda works, but hits RSM loops
  * further synchronization progress
  * begin synchronization
  * main: require async
  * measure stanza size, gracefully retry with smaller result set
  * synchronization groundwork
  * don't let backend_pubsub call router.runLocally(), return errors.SeeLocal() instead
  * errors: clean up
  * normalize: add <link rel="self" href="xmpp:...?pubsub;action=retrieve;..."/>
  * operations: Publish shall allow new items with specified @id
  * nodes browsing, with RSM
  * backend_pubsub: run() should bail out early on invalid node form
  * PostgreSQL tuning
  * complete RSM implementation
  * begin RSM for all operations
  * generify RSM stuff
  * pubsub_client: RSM
  * fixes from CCCamp11
  * RSM for local items retrieving
  * begin new RSM implementation
  * pubsub_server: publish-node-items shall reply with item ids
  * model_postgres: fix getNodeListeners() SQL
  * model_postgres: nodeExists() shall check for NOT NULL
  * model_postgres: getNodeListener() replace filter by SQL
  * model_postgres: getNodeListener() filter for null
  * model_postgres: fix setSubscription() INSERT w/o listener
  * error printout
  * forms: fix
  * operations: PushInbox author fix
  * debug
  * xml child robustness
  * model_postgres: fix nodeExists()
  * fix subscription listener for local users
  * logging cleanup
  * initiate presence tracking of users
  * xmpp/connection: use send() instead of specifying from jid
  * some logging cleanup
  * operations: push-inbox does not set subscription listener
  * fixes & TODO notes
  * operations: Notify.transaction() must call cb()
  * retrieve-node-configuration
  * forms: configToResultForm -> configToForm
  * pubsub_client: RetrieveNodeConfiguration & ManageNodeConfiguration
  * operations: catch reply cb exceptions
  * create-node operation
  * package.json: scripts
  * fixes
  * fix outgoing notifications
  * generify pubsub_notifications
  * many fixes for subscription pushing
  * router: if request writes, always go remote
  * push incoming notifications to local model
  * more subclassing of EventEmitter, incoming notifications handling
  * pubsub_server: unify PubsubRequest & PubsubOwnerRequest
  * merge request.coffee into pubsub_server.coffee
  * begin remote subscription pushing to local inbox
  * backend_pubsub: PubsubBackend.notify(): readability
  * tune to use single cb() instead of req.{reply,replyError}()
  * revive normalization
  * model_postgres: setSubscription(): coearce isSet to boolean
  * model_postgres: catch lost transactions
  * pubsub_client: error reporting, fix
  * subscribe reply status
  * model_postgres: setAffiliation() should check nodeExists()
  * fix disco.authorizeFor() usage
  * pubsub_client: fix <actor/> placement
  * refactor notifications a bit
  * pubsub_client: <actor/> placement fix
  * pubsub_client: fix <actor/> placement
  * pubsub_notifications: subscriptions/affiliations/config
  * fix registration/model callback parameters
  * operations: ManageNodeAffiliations validates accessModel & publishModel
  * setting configuration
  * fixes, fixes, config
  * only RegisterSetRequest should induce presence subscription
  * FIXME note
  * model_postgres: do not use rowCount
  * operations: Register created default configuration
  * pubsub_server: pubsub/inbox identity
  * fixes, StanzaError
  * implement pubsub_client operations
  * pubsub_notifications: byOperation()
  * fixes
  * fixes
  * fixes & debugging
  * fixes
  * debugging & fixes
  * fixes
  * begin discovering locally
  * fixes
  * Router.run: fix
  * fixes
  * operations: rename channel node to "posts"
  * begin notifications
  * a bit o' twiddling w/ subscription listeners
  * refactor router for remote requests
  * operations: subscribe/unsubscribe toggle affiliation none/member
  * router: rename frontend to backend
  * rename backend_postgres to model_postgres, revive router
  * main: move iqHandler to pubsub_server
  * manage, not only retrieve, subscriptions & affiliations
  * use subscribe sender as notification listener
  * backend_pubsub: replace ternary operator
  * need to store listener in subscriptions...
  * backend_pubsub: implement RequestCache
  * new untested buddycloud discovery with backend_pubsub.coffee
  * retrieve <actor/> generalized, begin using authorizeFor
  * ns: add BUDDYCLOUD_V1 xmlns
  * postgres.sql schema: updated column for more tables, author column for items
  * retrieving node affiliations
  * retrieving node subscriptions, fixes
  * backend_postgres: syntax fixes
  * operation: Register should set affiliation & subscription
  * retrieving subscriptions & affiliations
  * retracting items
  * publishing & retrieving items works
  * begin item retrieving
  * subscribe & unsubscribe
  * fix backend_postgres (user is a Pg keyword, must be quoted as column name)
  * publishing works
  * lots of fixes
  * fix disco requests
  * fix, fix, fix
  * begin implementing register & publish implementation
  * mv src/operations.coffee src/local/operations.coffee
  * revive backend
  * primitive operations
  * mv controller.coffee operations.coffee
  * dead code TODO
  * fixes
  * rm old dead code
  * rename iqhandler to request
  * begin some refactoring
  * begin hooking up handlers with operations
  * xmpp/pubsub_server: indicate operation types
  * notes
  * pubsub_server: PubsubOwnerHandlers
  * pubsub_server: flesh out more pubsub handlers
  * add affiliations checking
  * begin interweaving with local operations
  * a tad of interconnecting
  * pubsub_server: DiscoInfoHandler.reply()
  * xmpp client 'n stuff
  * README: draw new design
  * begin router
  * xmpp: move NS_* to ns.coffee
  * xmpp: primitive disco info works
  * begin iqhandler
  * xmpp/connection: port presence tracking
  * rm main.js
  * move src files around
  * rm model_couchdb from config, add preliminary main.coffee
  * a bit new controller
  * rm old test_controller
  * some controller work
  * old controller translated to coffeescript
  * port peripheral stuff over to coffeescript
  * README: change ejabberd port to the config default one
  * model_couchdb: s/doc.subscribers/doc.subscriptions/
  * xmpp_pubsub.js: fix typo
  * model_postgres: check nodeExists before any data modification
  * preliminary RSM (XEP-0059) implementation for retrieve-items/retrieve
  * model_couchdb: stub getUpdatesByTime()
  * MAM should result in direct message, not broadcast notification to all resources
  * MAM w/ working model_postgres backend
  * begin implementing MAM
  * controller: register/register should create /user/<jid>/subscriptions node
  * normalize fixes + tests
  * normalize
  * only one child element per item
  * model_postgres: fix setConfig()
  * model_postgres: listNodesByUser()
  * model_couchdb: listNodesByUser(), simplify listNodes()
  * controller, xmpp_pubsub: browse-nodes/by-user
  * model_postgres setConfig(): fixes
  * configuration notification
  * model_postgres setConfig(): do not set fields unspecified/without defaultConfig
  * model_postgres nodeExists(): indentation
  * controller: subscribe should not require preexisting affiliation
  * xmpp_pubsub: fix manage-subscriptions/retrieve result usage
  * controller: allow retrieving subscriptions & affiliations for members
  * xmpp_pubsub: syntax fix
  * model_postgres: fix queue pushing
  * xmpp_pubsub: fix info discovery reply FORM_TYPE
  * model_postgres: config fixes
  * more on extended config
  * model_couchdb, model_postgres: more flexible config schema
  * config: description, type, creationDate; setConfig() on create-node/register
  * xmpp_pubsub: optimize presence tracking
  * controller: requiredAffiliation='member' for config-node/retrieve
  * README: OpenFire
  * controller: defaultConfig() + use in feature 'config-node'
  * xmpp_pubsub: replace isOnline() with getOnlineResources()
  * model_postgres: fix transaction dequeueing
  * model_postgres: move cb() past process.nextTick/dbIsAvailable for safety
  * model_postgres: work around empty responses
  * test_controller: retract
  * xmpp_pubsub: disco <identity/> according to discovered @node
  * test_controller: browse-nodes
  * model_couchdb: fix preload() etag extraction + error reporting
  * xmpp_pubsub: FeatureNotImplemented message
  * controller: simulate a stack for debug info
  * test_controller: retract skeleton
  * controller unsubscribe: do not fetch affiliation from database but check by node path
  * implement & test unsubscribe
  * test_controller: skeletons
  * test_controller: publishing tests
  * test_controller: more publish testing + controller fix
  * test_controller: begin test publishing
  * model_postgres: fix forgotten variable
  * model_postgres: reconnect to database upon error
  * model_postgres: oops, syntax error
  * config.js.example: postgres is actually the one with a poolSize
  * model_postgres: oops, syntax errors
  * begin test_controller
  * fixes
  * subscriptionModified <message/>
  * xmpp_pubsub: "message" & approve() fixes
  * controller: replace ownerNotification with afterTransaction
  * access_model authorize
  * package.json & README
  * errors: pull inherits() from util/utils/sys for moving node api
  * browse open nodes with service discovery items
  * controller: refactor affiliations checking
  * xmpp_pubsub: fix subscriptions format
  * controller: treat missing accessModel as 'open'
  * model_couchdb: preload() etag fix
  * .gitignore with config.js
  * xmpp_pubsub: node config on disco info
  * model_couchdb: encodeURIComponent() only for db.head() & .get()
  * main.js: #!
  * rename config.js to config.js.example
  * restore default config.js
  * main.js: on uncaughtException
  * postgres doc & config
  * model_postgres
  * model_couchdb: fix item deserialization
  * model_couchdb: rm implemented TODOs
  * README: CouchDB configuration
  * README: TODO++
  * LICENSE
  * README: markdown fix
  * README: mention buddycloud :)
  * model_couchdb: fix views initialization
  * README & config
  * jabber:iq:register
  * model_couchdb: fixes
  * errors fixing
  * rm model_persistence
  * model_couchdb: assertNodeName()
  * main: catch uncaughtException
  * controller: fix
  * bugs, readability
  * model_couchdb: fixing
  * controller: implement affiliations checking
  * xmpp_pubsub: getAffiliations() result is now Array
  * model_couchdb: setSubscription() & setAffiliation() 'none'
  * model_couchdb: consolidate subscriptions & affiliations model
  * xmpp_pubsub: send notifications with type='headline'
  * xmpp_pubsub: subscribeIfNeeded() on <create/> & <subscribe/>
  * model_couchdb: load() shortcut when already cached
  * model_couchdb: createNode() fix
  * model_couchdb: preload()
  * model_couchdb: commit read documents too for integrity
  * model_couchdb: abstract views
  * CouchDB Optimistic Concurrency Control layer
  * controller: improve error propagation
  * defined error conditions
  * untested configuration getting/setting
  * service discovery
  * modify-affiliations
  * model_couchdb: getAffiliation()
  * begin permission checking infrastructure
  * presence probes
  * xmpp_pubsub: presence tracking
  * refactoring controller complete
  * continue refactoring controller into features/operations
  * begin refactoring controller into features/operations
  * subscribers
  * getting subscriptions & affiliations
  * createNode improvements
  * controller createNode: check node
  * model_couchdb: affiliations view
  * items getting
  * much more progress
  * implement retraction, s/notifySubscriber/notify/, s/writeItems/writeItem/
  * publish notification works
  * more frontend hooking
  * begin notification hooks
  * fixes
  * begin model_couchdb transactions
  * split model
  * some progress
  * some progress
  * createNode creates owner affiliation
  * model: indexes
  [ Thomas Jost ]
  * Add @denisw to contributors
  * Upgrade required node version to 0.8
  * We actually need remote subscriptions nodes
  * Merge branch 'feature/anon-fixes' into develop
  * Merge branch 'feature/really-validate-post-times' into develop
  * Reject remote posts with invalid dates
  * Add tests for remote posts with invalid dates
  * Force anon subscriptions to be temporary
  * Set default affiliation to 'none' for anon users
  * Merge branch 'feature/anon-fixes' into develop
  * Cleanup: remove some dead code
  * Purge remote nodes with no local subscription left
  * Merge branch 'feature/recent-items' into develop
  * Merge branch 'feature/validate-remote-items' into develop
  * Sort recent items by update time
  * Merge branch 'feature/validate-remote-items' into feature/recent-items
  * Fix tests that push remote items
  * Validate remote items
  * Add (failing) tests for invalid remote items
  * Implement recent items query
  * Add (failing) test for recent items query
  * PubSub replies can include several elements
  * Merge branch 'feature/pusher' into develop
  * Workaround callback woes
  * Fix MAM for pusher component
  * Pusher: test MAM
  * test_server: move makePublishIq into TestServer
  * Pusher: test node configuration
  * Pusher: test unsubscriptions
  * Merge branch 'feature/affiliations-fixes' into develop
  * Merge branch 'feature/pubsub-disco-features' into develop
  * Cleanup
  * Expose all implemented PubSub features
  * Pusher: test affiliations
  * Merge branch 'feature/affiliations-fixes' into feature/pusher
  * Fix affiliation in /subscriptions notifications
  * Accept PubSub-compliant affiliations notifications
  * Pusher: test subscriptions
  * Merge branch 'feature/fix-98' into develop
  * Fix SQL for updating replies
  * Add failing test for issue #98
  * Fix offline user cleanup
  * DB: drop anonymous column
  * Yet another federation test
  * Check if the example config file is valid JS
  * Add tests for pusher code
  * Pusher can MAM everything
  * Pusher is a listener for all notifications
  * Add config for pusher component
  * Merge branch 'feature/mam-fixes' into develop
  * Increase the default number of items in a MAM response
  * Make MAM return an error if there are too many results
  * Use RSM in MAM
  * Test MAM RSM
  * MAM: filter bad dates out
  * Test if MAM validates dates correctly
  * Ensure the giant MAM test doesn't pollute the test environment
  * Make affiliations notifications PubSub-compliant
  * Affiliations have update timestamps too
  * Avoid temporary subscriptions in MAM results
  * Advertise support for MAM in disco#info
  * Add a giant MAM test
  * Update Travis URL in README.md
  * Merge branch 'feature/tests' into develop
  * Correctly tests that updated items don't change <in-reply-to/>
  * Move tests on updated items to a different function
  * Add tests for updates that change <in-reply-to/>
  * Use Travis to automate testing
  * Merge branch 'master' into develop
  * Add compatibility with PostgreSQL 9.1
  * Require at least one item to retract
  * Add Emacs folding marks
  * Add retrieve and retract tests
  * Fix retraction stanza sent to remote services
  * Tombstones: include Atom namespace in <updated/> element
  * Fix error when not allowed to retract an item
  * Tombstones can't be updated
  * When publishing an update, check if the actor is the original author
  * Check if original post exists before publishing a reply
  * Reject posts from non-users
  * Don't include type in <actor/>
  * Complete post/update/retract tests
  * TestServer: fix Atom in-reply-to element
  * Fail when some unwanted event happens
  * Add description for calls to "should.exist"
  * Retraction tests
  * Workaround CoffeeScript weird scoping rules
  * Add another batch of tests
  * Update test data
  * Change the way the test server emits IQ stanzas
  * Tests for posting to remote channels
  * Test server: emit event for IQs with unknown ID
  * Test server: disco info for "remote" servers
  * More post tests
  * Add helper to run tests that trigger several different stanzas
  * Test server: handle <message/> stanzas
  * Add post tests
  * Post tests: helper to check if post was successful
  * Throw an exception when getting an unexpected error IQ
  * Start adding post tests
  * Add helpers for pubsub get IQs and Atom handling
  * Helpers to add initial test data in the database
  * Add XMPP namespaces to test_server.coffee
  * Reply to presence probes
  * Don't parse Elements again
  * Use same user and server names as in sfc
  * Safe path handling in prepare-db.sh
  * Add codo-like doc to the TestServer class
  * Add helpers to build disco and pubsub IQs
  * Expose support for PubSub node creation
  * Skip a test
  * More channel creation tests
  * New tests and helpers for forms
  * Add a helper to parse disco#info replies
  * Move common disco replies to test_server.coffee
  * Start testing for channel creation
  * Test server: handle disco#items queries
  * Make tests runnable using "npm test"
  * Basic disco tests
  * Start a test suite
  * Use an existing component connection if provided in config
  * Make it possible to require() the server
  * Update config.js.example
  * Fix autosubscribeNewUsers
  * Increase the max number of items in each RSM page
  * Better shrinking of oversized stanzas
  * Include `-dirty' in version number from git
  * Remove glob from dependencies
  * Fix indentation in main.coffee
  * Prevent existing persistent subscription from being made temporary
  * Merge branch 'feature/version-number-from-git' into develop
  * Expose support for XEP-0092 (Software Version) in disco
  * Use `git describe' to get version numbers in dev branches
  * Merge branch 'master' into next
  * Restore compatibility with Node 0.6
  * Fix handling of offline users
  * Avoid race condition in disco cache
  * Shrink oversized stanzas more aggressively
  * Avoid nulls
  * Include new files in release tarball
  * Avoid race condition in disco cache
  * Merge remote-tracking branch 'upstream/tempsub' into next
  * Merge branch 'db-versioning' into next
  * buddycloud-server 0.3.5
  * Check if remote supports temporary subscription before sending a tempsub request
  * Client can check for server features before sending an IQ
  * Make server features discoverable
  * Log errors when processing incoming messages
  * Cleanup
  * Remove empty text nodes from items
  * Fix ActivityStreams verb for replies
  * Include operation name in debug message
  * Don't notify unsubscribe when it was a temporary subscription
  * Offline user cleanup: do real unsubscribe operations
  * I'm dumb
  * Don't delete temporary subscriptions during sync
  * Don't send any notification for temporary subscriptions
  * Client and server must speak the same language
  * Only send notifications about temporary subscriptions to remote listeners
  * Cleanup offline users
  * Claim we support subscription options
  * Temporary subscriptions
  * Fix updating items
  * Add help channels to default autosubscriptions
  * Merge branch 'log-fix'
  * Inspect objets in log messages
  * Fix broken log messages
  * Don't write subscription stanzas in items table
  * Merge remote-tracking branch 'lloyd/config'
  * Populate in_reply_to column when inserting new items
  * DB cleanup at startup
  * Add README for DB schema versioning
  * Upgrade DB schema
  * Check DB schema version on startup
  * Don't change <published/> when updating an existing post
  * Fix subscription to remote private channels
  * Don't fail when the default config file does not exist
  * Add Lloyd in contributors
  * Better logging for replies sent by 'proxy' components
  * Merge branch 'mam-result'
  * Include <result/> in MAM replies
  * Merge remote-tracking branch 'schnouki/atom-tombstones'
  * Fix typo
  * Merge pull request #61 from lloydwatkin/no-mod_disco
  * Also send tombstones in retract notifications
  * Use Atom tombstones for deleted items
  * xmpp: XEP-0313 compliance
  * Handle PubSub retract "notify" attribute
  * operations: fix PushInbox notification
  * Fix undefined variable when paging backwards in RSM
  [ Tuomas Koski ]
  * Merge pull request #59 from lloydwatkin/initialise-sync
  * Merge pull request #58 from lloydwatkin/master
  [ Steven Lloyd Watkin ]
  * Ensure we do not cause BC breaks
  * Make both defaults positive rather than one positive & the other negative Broke the config options down further
  * Fix build console output
  * "package" now a reserved word in node, caused failing in builds (v0.6.15+)
  [ Denis Washington ]
  * Use local CoffeeScript "cake" for "npm install"
  [ Jonas Smedegaard ]
  * Setup access rights and needed dirs when starting daemon
  * Speedup system shutdown by avoiding explicit sysV stop
  * xmpp_pubsub: check for commandEl prior usage
  [ Reginald dude ]
  * updates sent via email from vorner.cz
  * updates sent via email from vorner.cz
  [ Reginald Dude ]
  * Most confusing config file ever
  [ ▟ ▖▟ ▖ ]
  * Merge pull request #70 from lloydwatkin/fix-is-function
  * Merge pull request #63 from lloydwatkin/no-mod_disco
  * Merge pull request #62 from lloydwatkin/no-mod_disco
  * Merge pull request #57 from Schnouki/xep-0313
  * Merge pull request #54 from Schnouki/fix-notif
  * Merge pull request #52 from lloydwatkin/master
  * Merge pull request #51 from lloydwatkin/master
  [ James Tait ]
  * Ensure both the PID dir and log dir are created on startup if they do not already exist.
  [ imaginator ]
  * aligning with INSTALL instructions
  * moved instructions to wiki
  * Edited README.md via GitHub
  [ dodo ]
  * fix accessModel of geo nodes
  * always test in production
  * buddycloud-server 0.3.4
  * Merge branch 'packaging'
  * put the /etc/init.d script into tarball
  * not needed anymore
  * default options for new channels
  * bump tarballify version
  * add bin/buddycloud-server to the tarball
  * no build step in bin/buddycloud-server anymore
  * print additional info messages in gray
  * fix 'file is not defined'
  * fix 'modName is not defined'
  * colorful output for package.js
  * bump tarballify version
  * rm trailing spaces
  * no build_binary.sh needed
  * separate devDependencies
  * export name
  * use packaging script
  * buddycloud-server 0.3.3
  * pass prefix to npm to force npm to use that particular prefix
  * $PREFIX/bin/buddycloud-server can be nonexistant .. so ignore all errors when removing
  * bump node version in build script
  * merge issue #37
  * specify interal config file as defaults, not as main config
  * backports to node 0.4
  * concat cwd path to config path only when config path is relative
  * respect the cwd
  * move to the right dir before builing
  * wscript is not needed anymore
  * merged #31. symlink detection for bin/buddycloud-server thanks to @highfellow
  * fixed gitignore
  * forgot Cakefile
  * pin node version for over 0.5 to get the require json working
  * get version directly
  * new buildsystem
  * check if config.syslog has keys
  * dont load default config over opts and args
  * main: fix config loading
  * wscript fixes
  * load config via jsconfig
  * update wscript
  * upgrade build environment
  * update requirements in readme
  * cleanup files
  [ Simon Tennant ]
  * Update config.js.example
  * change to read config file from /opt/buddycloud
  * Update master
  * don't be so --quiet (will help a lot with debugging)
  * Update _etc_init.d_buddycloud-server
  * the orwell defeault was causing jdesenberg problems.
  * Fixed the permissions to run as.
  * Update _etc_init.d_buddycloud-server
  * init script
  * make it really clear what to change (and what "jid" refers to)
  * Made the ownership of tables really clear. Should help avoid the problem that DD had the other day.
  [ Lloyd Watkin ]
  * Fix for checking of child element
  * Catch error event
  * Fix for server reset
  * Updated variable names to better describe what config does.
  * Merge branch 'master' of git://github.com/buddycloud/buddycloud-server into no-mod_disco
  * Allow buddycloud server to advertise additional 'proxy' components
  * Wait to sync
  * Rename of parameter
  * Allow user to specify a port or not, changed argument name as it may not actually be remote debugging.
  * Tidy up
  * Allow node.js debugging
  [ Simon ]
  * /etc/init.d/buddycloud-server

 -- Abmar Barros (buddycloud Nightly Builds) <abmar@buddycloud.com>  Sat, 26 Jan 2013 15:25:10 -0300


buddycloud-server (0.1) unstable; urgency=medium

  [ Astro ]
  * operations: all nodes in defaultConfiguration accessModel=authorize
  * operations: posts & subscriptions accessModel=authorize in defaultConfiguration
  * buddycloud-server 0.3.2
  * Cakefile: version.js + 

  * operations: fix run notifications control flow
  * build_binary.sh: get bin/buddycloud-server out of the way before npm i
  * buddycloud-server 0.3.1
  * package.json: honor all contributors
  * Merge remote-tracking branch 'schnouki/patch-1'
  * .npmignore: exclude debian/* from npm pkgs
  * buddycloud-server 0.3.0
  * package.json: bump dep versions
  * operations: prevent unsubscribing/demoting the node owner
  * operations: fix PushInbox callback
  * operations: run notifies first, then syncs, then calls back
  * pubsub_server: lower logging
  * operations: fix PushInbox newNodes
  * operations: move PushInbox syncNode post transaction
  * operations: PushInbox should work even if syncNode had hickups
  * operations: syncNode when PushInbox created it
  * operations: fix PushInbox notification & newModerators
  * model_postgres: fix & simplify purgeNode()
  * sync: fixes
  * sync: purge node if no local subscribers
  * purge node when local unsubscription is pushed from remote
  * operations: fix generateSubscriptionsNotifications followee
  * operations: fix PushInbox newModerators nodes
  * xmpp connection: doc, serialize stanzas only once
  * operations: NewModeratorNotify needs listener, not user
  * operations: fix NewModeratorNotify listener
  * operations: log Operation name
  * model_postgres: must quote "user" column for Postgres
  * operations: NewModeratorNotify must cb()
  * operations: Notify notifies w/ node
  * operations: fix Notify otherListeners
  * pubsub_client: rm debug
  * operations: NewModeratorNotify notifies w/ node & listener
  * model_postgres: optional Transaction callbacks
  * operations: fix Notify filterSubscription & filterAffiliation invokation
  * operations: fix this binding
  * operations: no pending subscriptions in subscriptions node
  * operations: NewModeratorNotify
  * operations: doc, filter subscriptions and affiliations for non-moderators
  * operations: reorganize
  * clean up logging
  * operations: posts node defaultAffiliation='publisher'
  * sync: fix AffiliationsSynchronization typo
  * buddycloud-server 0.2.3
  * package.json: fix install script
  * build_binary.sh: bump node.js version
  * buddycloud-server 0.2.2
  * package.json: add preinstall cake build
  * operations: fix notifications
  * build_binary.sh: bump node.js version
  * buddycloud-server 0.2.1
  * operations: fix Notify subscriptios node items
  * operations: fix Notify callback result
  * operations: BrowseNodeItems for subscriptions node calls getSubscriptions not getSubscription
  * operations: syntax fixes
  * operations: Notify subscriptions fixes
  * operations: subscriptions node notifications
  * operations: BrowseNodeItems for subscriptions node
  * sync: require errors
  * sync: avoid error output when omitting local node
  * router, sync: improve logging
  * backend_pubsub: PubsubBackend.notify listener robustness
  * operations: fix Subscribe defaultAffiliation
  * operations: fix ManageNodeAffiliations control flow
  * pubsub_server: PubsubOwnerSetAffiliationsRequest syntax fix
  * operations: fix requiredAffiliation()
  * operations: requiredAffiliation can be function to allow moderators approving topic channel subscribers
  * operations: ManageNodeSubscriptions refactor for efficiency
  * operations: ManageNodeSubscriptions should set new affiliations to defaultAffiliation
  * operations: fix Notify jid/user
  * operations: Notify should notify all users pertained by a subscription
  * operations: 'unsubscribe-node' notifies unsubscribed user
  * operations, pubsub_client: there's no "unsubscribed" subscription, only "none"
  * pubsub_server: PubsubOwnerSetSubscriptionsRequest syntax fix
  * operations: Unsubscribe needs PrivilegedOperation methods
  * operations: Unsubscribed is not a PrivilegedOperation but a ModelOperation
  * operations: fix callback scope
  * pubsub_server: robustify PubsubItemsRequest
  * operations: syntax
  * pubsub_server, operations: support for RetrieveItems by itemIds
  * build_binary.sh: bump node.js version to 0.6.10
  * buddycloud-server 0.2.0
  * operations: CreateNode should not allow creation with empty nodeUser username
  * operations: fix CreateNode defaults & creationDate
  * operations: fix CreateNode isTopic switcheroo
  * router: fix autosubscribeNewUsers operation name
  * router: autosubscribeNewUsers
  * config.js.example: default checkCreateNode hook checks for a specific topic domain
  * operations: fix CreateNode node typo
  * operations: fix CreateNode config
  * pubsub_server, operations: CreateNode with optional config
  * operations: fix CreateNode setSubscription()
  * operations: CreateNode catches missing checkCreateNode hook
  * operations: CreateNode default config
  * checkCreateNode config hook
  * model_postgres: fix getOwnersByNodePrefix SQL
  * operations: fix CreateNode setAffiliation()
  * operations: fix CreateNode getOwnersByNodePrefix()
  * operations: fix ../util require, CreateNode safety check
  * implement createNode with getOwnersByNodePrefix check
  * operations: begin creating topic channels
  * model_postgres: syntax fix
  * package.json: maintainer update
  * build_binary.sh: update to node 0.6.9
  * buddycloud-server 0.1.11
  * rsm_walk: fix logging
  * operations: checkAccessModel() before checkRequiredAffiliation()!
  * operations: Unsubscribe condition syntax fix
  * package.json: muffin dependency glob seems be incompatible in v3.*
  * operations: checkRequiredAffiliation should ignore no @requiredAffiliation
  * operations: fix isAffiliationAtLeast w/ invalid affiliation
  * jsconfig 0.2.0 is out! w00t!!!
  * Cakefile: lib/version.js from package.json
  * logger: update to ain2 1.0.0
  * main: fix config loading
  * buddycloud-server 0.1.10
  * router: fix syncServer()
  * buddycloud-server 0.1.9
  * bin/buddycloud-server: fix param quoting
  * bin/buddycloud-server: fix $cwd
  * buddycloud-server 0.1.8
  * .npmignore to package up built lib/* instead of src/*
  * build_binary.sh: install devDependencies beforehand
  * build_binary.sh: bump node.js version to 0.6.7
  * util: move getNodeUser(), getUserDomain()
  * main: "server successfully started"
  * sync: fix logging
  * model_postgres: fix writeItem() SQL parameter binding
  * sync: fix PaginatedSynchronization error callback
  * sync: rm TODO note
  * model_postgres: writeItem updated_query
  * operations: logging fixes
  * writeItem: move updated extraction from operations to model_postgres
  * model_postgres: writeItem should also INSERT existing updated value
  * model_postgres: fix syntax
  * model_postgres: SQL fixes
  * operations: PushInbox copies item published date
  * postgres schema: CREATE VIEW open_nodes + usage in model_postgres
  * model_postgres: fix query result handling
  * fix getTopFollowedNodes & getTopPublishedNodes parameters
  * model_postgres: fix SQL INTERVAL syntax
  * operations: BrowseNodes.fetchNodes() needs transaction
  * operations: BrowseNodes.transaction should use @fetchNodes()
  * operations: fetchNodes() typo
  * pubsub_server: browse /top-followed-nodes & /top-published-nodes does not request a particular node
  * getTopFollowedNodes & getTopPublishedNodes w/ XMPP disco interface
  * build_binary.sh: bump to node 0.6.6
  * buddycloud-server 0.1.7
  * package.json: rm cradle dependency
  * logger: syslog only with hostname
  * replace common-logger by underscore.logger
  * update ain2 dependency for node v0.6 compatibility
  * model_postgres walkListenerArchive: replace DISTINCT with GROUP BY
  * model_postgres: fix config order/limig
  * operations: ReplayArchive sorts results before capping
  * ReplayArchive/walkListenerArchive: properly cap result set
  * operations: ReplayArchive default max=50
  * build_binary.sh: use $PREFIX from environment if present
  * package.json: req node-stringprep >=0.1.1
  * router: fix
  * buddycloud-server 0.1.6
  * update to new node-waf paths
  * build_binary.sh: switch to node 0.6.4
  * package.json: depend on 0.3.1
  * router: RSM usage fix
  * logger: open logFile for appending, fixes issue #25
  * package.json: depend on node-xmpp >= 0.3.0
  * operations ReplayArchive: fix rsm max
  * operations: ReplayArchive RSM support
  * backend_pubsub: notificationPush updates include sender & actor
  * router: detectUserType fixes
  * router: detectUserType fixes
  * logger: fix argument iteration
  * main, backend_pubsub: logging improvements
  * backend_pubsub: include user in notfound error
  * connection: loopback stanzas to ourselves
  * router: add missing util.inspect include
  * router.run: trace req
  * router: add missing rsm include
  * logger: typo
  * logger: fix level
  * logging clean-up
  * router, pubsub_{server,client}: @type in <actor/>
  * buddycloud-server 0.1.5
  * router: sync fixes
  * buddycloud-server 0.1.4
  * ManageNodeAffiliations: non-owner may not elect a new owner
  * sync: log upon completion
  * sync: transaction fix
  * move some sync logic into router, lock per node
  * operations: BrowseNodeInfo/RetrieveNodeConfiguration w/o access control
  * buddycloud-server 0.1.3
  * operations: deny Unsubscribe from own nodes
  * logger: ain2 syslog transport
  * logger: message always as string
  * main: fix --stdout kludge
  * logger: avoid log level < 0
  * config.js.example: syslog on by default
  * config.js.example: logging section
  * syslog support with ain2
  * support --stdout logging
  * replace cnlogger by common-logger
  * buddycloud-server 0.1.2
  * build_binary: npm install globally (into /opt/buddycloud-server/)
  * build_binary: dedup node & npm versions
  * build_binary: default to /opt/buddycloud-server, bin/ script
  * main: process.title fix
  * version: fix package.json path
  * version from package.json in process.title and for jabber:iq:version
  * xmpp/connection: do not subscribe in probePresence()
  * buddycloud-server 0.1.1
  * build_binary: bump node & npm versions
  * backend_pubsub: reply() must also copy 'replay' field on MaxStanzaSizeExceeded
  * connection: more stanza output when MaxStanzaSizeExceeded
  * don't send ReplayArchive notifications to all online resources
  * pubsub_client/connection: wrap error replies into StanzaError earlier
  * logging fixes
  * port to cnlogger
  * port to broken winston logging
  * xmpp connection: always tell node-xmpp to reconnect
  * async.filter iterator does not take error parameter
  * model_postgres: fix nodeExists warning
  * backend_pubsub: fix notification matching
  * sync: fix router.authorizeFor() usage
  * sync: writeItem does not need author anymore
  * operations: typo
  * model_postgres: fix getListenerAffiliations() query
  * sync: careful
  * xmpp/forms: oops, s/creationTime/creationDate/
  * xmpp/connection: fix name
  * router: check for anonymous user to be online
  * anonymous user offline tracking & clean-up
  * model_postgres: fix walkListenerArchive() node in results
  * router: fix method binding
  * model_postgres: walkListenerArchive() should include node in results
  * operations: RemoveUser & model_postgres.getUserRemoteSubscriptions() & clearUserSubscriptions()
  * BuddycloudDiscovery::detectAnonymousUser
  * backend_pubsub: gracefully handle MaxStanzaSizeExceeded for notifications
  * xmpp pubsub_server & connection: fix graceful MaxStanzaSizeExceeded handling
  * errors: MaxStanzaSizeExceeded extends Error
  * operations: s/geoloc/geo/
  * operations: /subscription items shall contain jid=owner
  * metadata buddycloud#channel_type
  * proper metadata field names
  * support for creationDate
  * operations: clarify logging
  * router: fix remote backend selection
  * operations: Unsubscribe refactor & fix
  * operations: fix Register
  * buddycloud-server 0.1.0
  * operation: print opName on commit, rm debug
  * bin/buddycloud-server: don't cd so config can be loaded relatively
  * Merge remote-tracking branch 'origin/cli'
  * operations: RetractItems should allow anyone to remove their own posts
  * operations: preserve affiliation if previously affiliated
  * operations: unify into isAffiliationAtLeast()
  * operations: rm leftover TODO note
  * operations: refactor Register; should check if authoritative for user's domain
  * router.run: return 404 for nodes not locally subscribed but discovered ourselves
  * rm explicit author handling in postgres schema, model, operations
  * main: check sender authorization for authorizationPrompt
  * operations: RetrieveItems shall not virtualize items for cache case of remote nodes
  * Revert "Made the ownership of tables really clear. Should help avoid the problem that DD had the other day."
  * s/channel-server/buddycloud-server/g
  * build_binary.sh: fix invokation hint
  * README: rm some outdated stuff
  * main: fix defaultConfig stuff
  * build_binary.sh
  * operations: RetrieveItems.retrieveSubscriptionsItems() result set sorting, affiliations
  * virtual handling of /user/.../subscriptions node items
  * MAM replays subscription authorization requests
  * more authorization stuff
  * fixes
  * small fixes
  * package.json: fix bin path
  * further authorizationPrompt work
  * backend_pubsub: missedSomething was missing
  * package.json: fix coffeescript path (./node_modules/...)
  * sending authorize notification forms
  * package.json: fix .coffee compilation stage
  * operations: PrivilegedOperation.fetchActorAffilliation fetches all listener affiliations for inbox sync
  * pubsub_notifications: fix MAM stanzas
  * operations: subscribe defaultAffiliation, fixes
  * model_postgres: many fixes
  * operations: publishModel 'subscribers'
  * operations: access control fixes
  * begin access control, affiliations checking
  * model_postgres: fixes
  * errors: fix error classes
  * xmpp/connection: fix
  * xmpp/connection: fix @missedServerTimeouts usage
  * model_postgres: safety checks
  * readability, notes
  * rsm_walk: fix serious errors
  * globally refactor operation from function to value
  * sync: fixes
  * add forgotten rsm_walk file
  * move syncQueue from main.coffee to fine-grained sync.syncNode
  * xmpp/connection: readability
  * xmpp/connection: track <you-missed-something/> timers with @missedServerTimeouts
  * syncServer support, wired up to <you-missed-something/> 'syncNeeded'
  * model_postgres: for an actor, getSubscriptions() shall return not only users but also listeners
  * MAM time specification
  * primitive MAM implementation
  * send <you-missed-something/>
  * operations: PushInbox TODO note
  * sync: rm request.rsm.max clamp
  * synchronization with state resetting and subscriptions/affiliations support
  * pubsub_*: fix user/jid conventions
  * ConfigSynchronization should use browse-node-info to get node config
  * synchronizing!
  * synchronization kinda works, but hits RSM loops
  * further synchronization progress
  * begin synchronization
  * main: require async
  * measure stanza size, gracefully retry with smaller result set
  * synchronization groundwork
  * don't let backend_pubsub call router.runLocally(), return errors.SeeLocal() instead
  * errors: clean up
  * normalize: add <link rel="self" href="xmpp:...?pubsub;action=retrieve;..."/>
  * operations: Publish shall allow new items with specified @id
  * nodes browsing, with RSM
  * backend_pubsub: run() should bail out early on invalid node form
  * PostgreSQL tuning
  * complete RSM implementation
  * begin RSM for all operations
  * generify RSM stuff
  * pubsub_client: RSM
  * fixes from CCCamp11
  * RSM for local items retrieving
  * begin new RSM implementation
  * pubsub_server: publish-node-items shall reply with item ids
  * model_postgres: fix getNodeListeners() SQL
  * model_postgres: nodeExists() shall check for NOT NULL
  * model_postgres: getNodeListener() replace filter by SQL
  * model_postgres: getNodeListener() filter for null
  * model_postgres: fix setSubscription() INSERT w/o listener
  * error printout
  * forms: fix
  * operations: PushInbox author fix
  * debug
  * xml child robustness
  * model_postgres: fix nodeExists()
  * fix subscription listener for local users
  * logging cleanup
  * initiate presence tracking of users
  * xmpp/connection: use send() instead of specifying from jid
  * some logging cleanup
  * operations: push-inbox does not set subscription listener
  * fixes & TODO notes
  * operations: Notify.transaction() must call cb()
  * retrieve-node-configuration
  * forms: configToResultForm -> configToForm
  * pubsub_client: RetrieveNodeConfiguration & ManageNodeConfiguration
  * operations: catch reply cb exceptions
  * create-node operation
  * package.json: scripts
  * fixes
  * fix outgoing notifications
  * generify pubsub_notifications
  * many fixes for subscription pushing
  * router: if request writes, always go remote
  * push incoming notifications to local model
  * more subclassing of EventEmitter, incoming notifications handling
  * pubsub_server: unify PubsubRequest & PubsubOwnerRequest
  * merge request.coffee into pubsub_server.coffee
  * begin remote subscription pushing to local inbox
  * backend_pubsub: PubsubBackend.notify(): readability
  * tune to use single cb() instead of req.{reply,replyError}()
  * revive normalization
  * model_postgres: setSubscription(): coearce isSet to boolean
  * model_postgres: catch lost transactions
  * pubsub_client: error reporting, fix
  * subscribe reply status
  * model_postgres: setAffiliation() should check nodeExists()
  * fix disco.authorizeFor() usage
  * pubsub_client: fix <actor/> placement
  * refactor notifications a bit
  * pubsub_client: <actor/> placement fix
  * pubsub_client: fix <actor/> placement
  * pubsub_notifications: subscriptions/affiliations/config
  * fix registration/model callback parameters
  * operations: ManageNodeAffiliations validates accessModel & publishModel
  * setting configuration
  * fixes, fixes, config
  * only RegisterSetRequest should induce presence subscription
  * FIXME note
  * model_postgres: do not use rowCount
  * operations: Register created default configuration
  * pubsub_server: pubsub/inbox identity
  * fixes, StanzaError
  * implement pubsub_client operations
  * pubsub_notifications: byOperation()
  * fixes
  * fixes
  * fixes & debugging
  * fixes
  * debugging & fixes
  * fixes
  * begin discovering locally
  * fixes
  * Router.run: fix
  * fixes
  * operations: rename channel node to "posts"
  * begin notifications
  * a bit o' twiddling w/ subscription listeners
  * refactor router for remote requests
  * operations: subscribe/unsubscribe toggle affiliation none/member
  * router: rename frontend to backend
  * rename backend_postgres to model_postgres, revive router
  * main: move iqHandler to pubsub_server
  * manage, not only retrieve, subscriptions & affiliations
  * use subscribe sender as notification listener
  * backend_pubsub: replace ternary operator
  * need to store listener in subscriptions...
  * backend_pubsub: implement RequestCache
  * new untested buddycloud discovery with backend_pubsub.coffee
  * retrieve <actor/> generalized, begin using authorizeFor
  * ns: add BUDDYCLOUD_V1 xmlns
  * postgres.sql schema: updated column for more tables, author column for items
  * retrieving node affiliations
  * retrieving node subscriptions, fixes
  * backend_postgres: syntax fixes
  * operation: Register should set affiliation & subscription
  * retrieving subscriptions & affiliations
  * retracting items
  * publishing & retrieving items works
  * begin item retrieving
  * subscribe & unsubscribe
  * fix backend_postgres (user is a Pg keyword, must be quoted as column name)
  * publishing works
  * lots of fixes
  * fix disco requests
  * fix, fix, fix
  * begin implementing register & publish implementation
  * mv src/operations.coffee src/local/operations.coffee
  * revive backend
  * primitive operations
  * mv controller.coffee operations.coffee
  * dead code TODO
  * fixes
  * rm old dead code
  * rename iqhandler to request
  * begin some refactoring
  * begin hooking up handlers with operations
  * xmpp/pubsub_server: indicate operation types
  * notes
  * pubsub_server: PubsubOwnerHandlers
  * pubsub_server: flesh out more pubsub handlers
  * add affiliations checking
  * begin interweaving with local operations
  * a tad of interconnecting
  * pubsub_server: DiscoInfoHandler.reply()
  * xmpp client 'n stuff
  * README: draw new design
  * begin router
  * xmpp: move NS_* to ns.coffee
  * xmpp: primitive disco info works
  * begin iqhandler
  * xmpp/connection: port presence tracking
  * rm main.js
  * move src files around
  * rm model_couchdb from config, add preliminary main.coffee
  * a bit new controller
  * rm old test_controller
  * some controller work
  * old controller translated to coffeescript
  * port peripheral stuff over to coffeescript
  * README: change ejabberd port to the config default one
  * model_couchdb: s/doc.subscribers/doc.subscriptions/
  * xmpp_pubsub.js: fix typo
  * model_postgres: check nodeExists before any data modification
  * preliminary RSM (XEP-0059) implementation for retrieve-items/retrieve
  * model_couchdb: stub getUpdatesByTime()
  * MAM should result in direct message, not broadcast notification to all resources
  * MAM w/ working model_postgres backend
  * begin implementing MAM
  * controller: register/register should create /user/<jid>/subscriptions node
  * normalize fixes + tests
  * normalize
  * only one child element per item
  * model_postgres: fix setConfig()
  * model_postgres: listNodesByUser()
  * model_couchdb: listNodesByUser(), simplify listNodes()
  * controller, xmpp_pubsub: browse-nodes/by-user
  * model_postgres setConfig(): fixes
  * configuration notification
  * model_postgres setConfig(): do not set fields unspecified/without defaultConfig
  * model_postgres nodeExists(): indentation
  * controller: subscribe should not require preexisting affiliation
  * xmpp_pubsub: fix manage-subscriptions/retrieve result usage
  * controller: allow retrieving subscriptions & affiliations for members
  * xmpp_pubsub: syntax fix
  * model_postgres: fix queue pushing
  * xmpp_pubsub: fix info discovery reply FORM_TYPE
  * model_postgres: config fixes
  * more on extended config
  * model_couchdb, model_postgres: more flexible config schema
  * config: description, type, creationDate; setConfig() on create-node/register
  * xmpp_pubsub: optimize presence tracking
  * controller: requiredAffiliation='member' for config-node/retrieve
  * README: OpenFire
  * controller: defaultConfig() + use in feature 'config-node'
  * xmpp_pubsub: replace isOnline() with getOnlineResources()
  * model_postgres: fix transaction dequeueing
  * model_postgres: move cb() past process.nextTick/dbIsAvailable for safety
  * model_postgres: work around empty responses
  * test_controller: retract
  * xmpp_pubsub: disco <identity/> according to discovered @node
  * test_controller: browse-nodes
  * model_couchdb: fix preload() etag extraction + error reporting
  * xmpp_pubsub: FeatureNotImplemented message
  * controller: simulate a stack for debug info
  * test_controller: retract skeleton
  * controller unsubscribe: do not fetch affiliation from database but check by node path
  * implement & test unsubscribe
  * test_controller: skeletons
  * test_controller: publishing tests
  * test_controller: more publish testing + controller fix
  * test_controller: begin test publishing
  * model_postgres: fix forgotten variable
  * model_postgres: reconnect to database upon error
  * model_postgres: oops, syntax error
  * config.js.example: postgres is actually the one with a poolSize
  * model_postgres: oops, syntax errors
  * begin test_controller
  * fixes
  * subscriptionModified <message/>
  * xmpp_pubsub: "message" & approve() fixes
  * controller: replace ownerNotification with afterTransaction
  * access_model authorize
  * package.json & README
  * errors: pull inherits() from util/utils/sys for moving node api
  * browse open nodes with service discovery items
  * controller: refactor affiliations checking
  * xmpp_pubsub: fix subscriptions format
  * controller: treat missing accessModel as 'open'
  * model_couchdb: preload() etag fix
  * .gitignore with config.js
  * xmpp_pubsub: node config on disco info
  * model_couchdb: encodeURIComponent() only for db.head() & .get()
  * main.js: #!
  * rename config.js to config.js.example
  * restore default config.js
  * main.js: on uncaughtException
  * postgres doc & config
  * model_postgres
  * model_couchdb: fix item deserialization
  * model_couchdb: rm implemented TODOs
  * README: CouchDB configuration
  * README: TODO++
  * LICENSE
  * README: markdown fix
  * README: mention buddycloud :)
  * model_couchdb: fix views initialization
  * README & config
  * jabber:iq:register
  * model_couchdb: fixes
  * errors fixing
  * rm model_persistence
  * model_couchdb: assertNodeName()
  * main: catch uncaughtException
  * controller: fix
  * bugs, readability
  * model_couchdb: fixing
  * controller: implement affiliations checking
  * xmpp_pubsub: getAffiliations() result is now Array
  * model_couchdb: setSubscription() & setAffiliation() 'none'
  * model_couchdb: consolidate subscriptions & affiliations model
  * xmpp_pubsub: send notifications with type='headline'
  * xmpp_pubsub: subscribeIfNeeded() on <create/> & <subscribe/>
  * model_couchdb: load() shortcut when already cached
  * model_couchdb: createNode() fix
  * model_couchdb: preload()
  * model_couchdb: commit read documents too for integrity
  * model_couchdb: abstract views
  * CouchDB Optimistic Concurrency Control layer
  * controller: improve error propagation
  * defined error conditions
  * untested configuration getting/setting
  * service discovery
  * modify-affiliations
  * model_couchdb: getAffiliation()
  * begin permission checking infrastructure
  * presence probes
  * xmpp_pubsub: presence tracking
  * refactoring controller complete
  * continue refactoring controller into features/operations
  * begin refactoring controller into features/operations
  * subscribers
  * getting subscriptions & affiliations
  * createNode improvements
  * controller createNode: check node
  * model_couchdb: affiliations view
  * items getting
  * much more progress
  * implement retraction, s/notifySubscriber/notify/, s/writeItems/writeItem/
  * publish notification works
  * more frontend hooking
  * begin notification hooks
  * fixes
  * begin model_couchdb transactions
  * split model
  * some progress
  * some progress
  * createNode creates owner affiliation
  * model: indexes
  [ Thomas Jost ]
  * Add @denisw to contributors
  * Upgrade required node version to 0.8
  * We actually need remote subscriptions nodes
  * Merge branch 'feature/anon-fixes' into develop
  * Merge branch 'feature/really-validate-post-times' into develop
  * Reject remote posts with invalid dates
  * Add tests for remote posts with invalid dates
  * Force anon subscriptions to be temporary
  * Set default affiliation to 'none' for anon users
  * Merge branch 'feature/anon-fixes' into develop
  * Cleanup: remove some dead code
  * Purge remote nodes with no local subscription left
  * Merge branch 'feature/recent-items' into develop
  * Merge branch 'feature/validate-remote-items' into develop
  * Sort recent items by update time
  * Merge branch 'feature/validate-remote-items' into feature/recent-items
  * Fix tests that push remote items
  * Validate remote items
  * Add (failing) tests for invalid remote items
  * Implement recent items query
  * Add (failing) test for recent items query
  * PubSub replies can include several elements
  * Merge branch 'feature/pusher' into develop
  * Workaround callback woes
  * Fix MAM for pusher component
  * Pusher: test MAM
  * test_server: move makePublishIq into TestServer
  * Pusher: test node configuration
  * Pusher: test unsubscriptions
  * Merge branch 'feature/affiliations-fixes' into develop
  * Merge branch 'feature/pubsub-disco-features' into develop
  * Cleanup
  * Expose all implemented PubSub features
  * Pusher: test affiliations
  * Merge branch 'feature/affiliations-fixes' into feature/pusher
  * Fix affiliation in /subscriptions notifications
  * Accept PubSub-compliant affiliations notifications
  * Pusher: test subscriptions
  * Merge branch 'feature/fix-98' into develop
  * Fix SQL for updating replies
  * Add failing test for issue #98
  * Fix offline user cleanup
  * DB: drop anonymous column
  * Yet another federation test
  * Check if the example config file is valid JS
  * Add tests for pusher code
  * Pusher can MAM everything
  * Pusher is a listener for all notifications
  * Add config for pusher component
  * Merge branch 'feature/mam-fixes' into develop
  * Increase the default number of items in a MAM response
  * Make MAM return an error if there are too many results
  * Use RSM in MAM
  * Test MAM RSM
  * MAM: filter bad dates out
  * Test if MAM validates dates correctly
  * Ensure the giant MAM test doesn't pollute the test environment
  * Make affiliations notifications PubSub-compliant
  * Affiliations have update timestamps too
  * Avoid temporary subscriptions in MAM results
  * Advertise support for MAM in disco#info
  * Add a giant MAM test
  * Update Travis URL in README.md
  * Merge branch 'feature/tests' into develop
  * Correctly tests that updated items don't change <in-reply-to/>
  * Move tests on updated items to a different function
  * Add tests for updates that change <in-reply-to/>
  * Use Travis to automate testing
  * Merge branch 'master' into develop
  * Add compatibility with PostgreSQL 9.1
  * Require at least one item to retract
  * Add Emacs folding marks
  * Add retrieve and retract tests
  * Fix retraction stanza sent to remote services
  * Tombstones: include Atom namespace in <updated/> element
  * Fix error when not allowed to retract an item
  * Tombstones can't be updated
  * When publishing an update, check if the actor is the original author
  * Check if original post exists before publishing a reply
  * Reject posts from non-users
  * Don't include type in <actor/>
  * Complete post/update/retract tests
  * TestServer: fix Atom in-reply-to element
  * Fail when some unwanted event happens
  * Add description for calls to "should.exist"
  * Retraction tests
  * Workaround CoffeeScript weird scoping rules
  * Add another batch of tests
  * Update test data
  * Change the way the test server emits IQ stanzas
  * Tests for posting to remote channels
  * Test server: emit event for IQs with unknown ID
  * Test server: disco info for "remote" servers
  * More post tests
  * Add helper to run tests that trigger several different stanzas
  * Test server: handle <message/> stanzas
  * Add post tests
  * Post tests: helper to check if post was successful
  * Throw an exception when getting an unexpected error IQ
  * Start adding post tests
  * Add helpers for pubsub get IQs and Atom handling
  * Helpers to add initial test data in the database
  * Add XMPP namespaces to test_server.coffee
  * Reply to presence probes
  * Don't parse Elements again
  * Use same user and server names as in sfc
  * Safe path handling in prepare-db.sh
  * Add codo-like doc to the TestServer class
  * Add helpers to build disco and pubsub IQs
  * Expose support for PubSub node creation
  * Skip a test
  * More channel creation tests
  * New tests and helpers for forms
  * Add a helper to parse disco#info replies
  * Move common disco replies to test_server.coffee
  * Start testing for channel creation
  * Test server: handle disco#items queries
  * Make tests runnable using "npm test"
  * Basic disco tests
  * Start a test suite
  * Use an existing component connection if provided in config
  * Make it possible to require() the server
  * Update config.js.example
  * Fix autosubscribeNewUsers
  * Increase the max number of items in each RSM page
  * Better shrinking of oversized stanzas
  * Include `-dirty' in version number from git
  * Remove glob from dependencies
  * Fix indentation in main.coffee
  * Prevent existing persistent subscription from being made temporary
  * Merge branch 'feature/version-number-from-git' into develop
  * Expose support for XEP-0092 (Software Version) in disco
  * Use `git describe' to get version numbers in dev branches
  * Merge branch 'master' into next
  * Restore compatibility with Node 0.6
  * Fix handling of offline users
  * Avoid race condition in disco cache
  * Shrink oversized stanzas more aggressively
  * Avoid nulls
  * Include new files in release tarball
  * Avoid race condition in disco cache
  * Merge remote-tracking branch 'upstream/tempsub' into next
  * Merge branch 'db-versioning' into next
  * buddycloud-server 0.3.5
  * Check if remote supports temporary subscription before sending a tempsub request
  * Client can check for server features before sending an IQ
  * Make server features discoverable
  * Log errors when processing incoming messages
  * Cleanup
  * Remove empty text nodes from items
  * Fix ActivityStreams verb for replies
  * Include operation name in debug message
  * Don't notify unsubscribe when it was a temporary subscription
  * Offline user cleanup: do real unsubscribe operations
  * I'm dumb
  * Don't delete temporary subscriptions during sync
  * Don't send any notification for temporary subscriptions
  * Client and server must speak the same language
  * Only send notifications about temporary subscriptions to remote listeners
  * Cleanup offline users
  * Claim we support subscription options
  * Temporary subscriptions
  * Fix updating items
  * Add help channels to default autosubscriptions
  * Merge branch 'log-fix'
  * Inspect objets in log messages
  * Fix broken log messages
  * Don't write subscription stanzas in items table
  * Merge remote-tracking branch 'lloyd/config'
  * Populate in_reply_to column when inserting new items
  * DB cleanup at startup
  * Add README for DB schema versioning
  * Upgrade DB schema
  * Check DB schema version on startup
  * Don't change <published/> when updating an existing post
  * Fix subscription to remote private channels
  * Don't fail when the default config file does not exist
  * Add Lloyd in contributors
  * Better logging for replies sent by 'proxy' components
  * Merge branch 'mam-result'
  * Include <result/> in MAM replies
  * Merge remote-tracking branch 'schnouki/atom-tombstones'
  * Fix typo
  * Merge pull request #61 from lloydwatkin/no-mod_disco
  * Also send tombstones in retract notifications
  * Use Atom tombstones for deleted items
  * xmpp: XEP-0313 compliance
  * Handle PubSub retract "notify" attribute
  * operations: fix PushInbox notification
  * Fix undefined variable when paging backwards in RSM
  [ Tuomas Koski ]
  * Merge pull request #59 from lloydwatkin/initialise-sync
  * Merge pull request #58 from lloydwatkin/master
  [ Steven Lloyd Watkin ]
  * Ensure we do not cause BC breaks
  * Make both defaults positive rather than one positive & the other negative Broke the config options down further
  * Fix build console output
  * "package" now a reserved word in node, caused failing in builds (v0.6.15+)
  [ Denis Washington ]
  * Use local CoffeeScript "cake" for "npm install"
  [ Jonas Smedegaard ]
  * Setup access rights and needed dirs when starting daemon
  * Speedup system shutdown by avoiding explicit sysV stop
  * xmpp_pubsub: check for commandEl prior usage
  [ Reginald dude ]
  * updates sent via email from vorner.cz
  * updates sent via email from vorner.cz
  [ Reginald Dude ]
  * Most confusing config file ever
  [ ▟ ▖▟ ▖ ]
  * Merge pull request #70 from lloydwatkin/fix-is-function
  * Merge pull request #63 from lloydwatkin/no-mod_disco
  * Merge pull request #62 from lloydwatkin/no-mod_disco
  * Merge pull request #57 from Schnouki/xep-0313
  * Merge pull request #54 from Schnouki/fix-notif
  * Merge pull request #52 from lloydwatkin/master
  * Merge pull request #51 from lloydwatkin/master
  [ James Tait ]
  * Ensure both the PID dir and log dir are created on startup if they do not already exist.
  [ imaginator ]
  * aligning with INSTALL instructions
  * moved instructions to wiki
  * Edited README.md via GitHub
  [ dodo ]
  * fix accessModel of geo nodes
  * always test in production
  * buddycloud-server 0.3.4
  * Merge branch 'packaging'
  * put the /etc/init.d script into tarball
  * not needed anymore
  * default options for new channels
  * bump tarballify version
  * add bin/buddycloud-server to the tarball
  * no build step in bin/buddycloud-server anymore
  * print additional info messages in gray
  * fix 'file is not defined'
  * fix 'modName is not defined'
  * colorful output for package.js
  * bump tarballify version
  * rm trailing spaces
  * no build_binary.sh needed
  * separate devDependencies
  * export name
  * use packaging script
  * buddycloud-server 0.3.3
  * pass prefix to npm to force npm to use that particular prefix
  * $PREFIX/bin/buddycloud-server can be nonexistant .. so ignore all errors when removing
  * bump node version in build script
  * merge issue #37
  * specify interal config file as defaults, not as main config
  * backports to node 0.4
  * concat cwd path to config path only when config path is relative
  * respect the cwd
  * move to the right dir before builing
  * wscript is not needed anymore
  * merged #31. symlink detection for bin/buddycloud-server thanks to @highfellow
  * fixed gitignore
  * forgot Cakefile
  * pin node version for over 0.5 to get the require json working
  * get version directly
  * new buildsystem
  * check if config.syslog has keys
  * dont load default config over opts and args
  * main: fix config loading
  * wscript fixes
  * load config via jsconfig
  * update wscript
  * upgrade build environment
  * update requirements in readme
  * cleanup files
  [ Simon Tennant ]
  * Update config.js.example
  * change to read config file from /opt/buddycloud
  * Update master
  * don't be so --quiet (will help a lot with debugging)
  * Update _etc_init.d_buddycloud-server
  * the orwell defeault was causing jdesenberg problems.
  * Fixed the permissions to run as.
  * Update _etc_init.d_buddycloud-server
  * init script
  * make it really clear what to change (and what "jid" refers to)
  * Made the ownership of tables really clear. Should help avoid the problem that DD had the other day.
  [ Lloyd Watkin ]
  * Fix for checking of child element
  * Catch error event
  * Fix for server reset
  * Updated variable names to better describe what config does.
  * Merge branch 'master' of git://github.com/buddycloud/buddycloud-server into no-mod_disco
  * Allow buddycloud server to advertise additional 'proxy' components
  * Wait to sync
  * Rename of parameter
  * Allow user to specify a port or not, changed argument name as it may not actually be remote debugging.
  * Tidy up
  * Allow node.js debugging
  [ Simon ]
  * /etc/init.d/buddycloud-server

 -- Abmar Barros (buddycloud Nightly Builds) <abmar@buddycloud.com>  Sat, 26 Jan 2013 15:54:34 -0300


buddycloud-server (0.1) unstable; urgency=medium

  [ Astro ]
  * operations: all nodes in defaultConfiguration accessModel=authorize
  * operations: posts & subscriptions accessModel=authorize in defaultConfiguration
  * buddycloud-server 0.3.2
  * Cakefile: version.js + 

  * operations: fix run notifications control flow
  * build_binary.sh: get bin/buddycloud-server out of the way before npm i
  * buddycloud-server 0.3.1
  * package.json: honor all contributors
  * Merge remote-tracking branch 'schnouki/patch-1'
  * .npmignore: exclude debian/* from npm pkgs
  * buddycloud-server 0.3.0
  * package.json: bump dep versions
  * operations: prevent unsubscribing/demoting the node owner
  * operations: fix PushInbox callback
  * operations: run notifies first, then syncs, then calls back
  * pubsub_server: lower logging
  * operations: fix PushInbox newNodes
  * operations: move PushInbox syncNode post transaction
  * operations: PushInbox should work even if syncNode had hickups
  * operations: syncNode when PushInbox created it
  * operations: fix PushInbox notification & newModerators
  * model_postgres: fix & simplify purgeNode()
  * sync: fixes
  * sync: purge node if no local subscribers
  * purge node when local unsubscription is pushed from remote
  * operations: fix generateSubscriptionsNotifications followee
  * operations: fix PushInbox newModerators nodes
  * xmpp connection: doc, serialize stanzas only once
  * operations: NewModeratorNotify needs listener, not user
  * operations: fix NewModeratorNotify listener
  * operations: log Operation name
  * model_postgres: must quote "user" column for Postgres
  * operations: NewModeratorNotify must cb()
  * operations: Notify notifies w/ node
  * operations: fix Notify otherListeners
  * pubsub_client: rm debug
  * operations: NewModeratorNotify notifies w/ node & listener
  * model_postgres: optional Transaction callbacks
  * operations: fix Notify filterSubscription & filterAffiliation invokation
  * operations: fix this binding
  * operations: no pending subscriptions in subscriptions node
  * operations: NewModeratorNotify
  * operations: doc, filter subscriptions and affiliations for non-moderators
  * operations: reorganize
  * clean up logging
  * operations: posts node defaultAffiliation='publisher'
  * sync: fix AffiliationsSynchronization typo
  * buddycloud-server 0.2.3
  * package.json: fix install script
  * build_binary.sh: bump node.js version
  * buddycloud-server 0.2.2
  * package.json: add preinstall cake build
  * operations: fix notifications
  * build_binary.sh: bump node.js version
  * buddycloud-server 0.2.1
  * operations: fix Notify subscriptios node items
  * operations: fix Notify callback result
  * operations: BrowseNodeItems for subscriptions node calls getSubscriptions not getSubscription
  * operations: syntax fixes
  * operations: Notify subscriptions fixes
  * operations: subscriptions node notifications
  * operations: BrowseNodeItems for subscriptions node
  * sync: require errors
  * sync: avoid error output when omitting local node
  * router, sync: improve logging
  * backend_pubsub: PubsubBackend.notify listener robustness
  * operations: fix Subscribe defaultAffiliation
  * operations: fix ManageNodeAffiliations control flow
  * pubsub_server: PubsubOwnerSetAffiliationsRequest syntax fix
  * operations: fix requiredAffiliation()
  * operations: requiredAffiliation can be function to allow moderators approving topic channel subscribers
  * operations: ManageNodeSubscriptions refactor for efficiency
  * operations: ManageNodeSubscriptions should set new affiliations to defaultAffiliation
  * operations: fix Notify jid/user
  * operations: Notify should notify all users pertained by a subscription
  * operations: 'unsubscribe-node' notifies unsubscribed user
  * operations, pubsub_client: there's no "unsubscribed" subscription, only "none"
  * pubsub_server: PubsubOwnerSetSubscriptionsRequest syntax fix
  * operations: Unsubscribe needs PrivilegedOperation methods
  * operations: Unsubscribed is not a PrivilegedOperation but a ModelOperation
  * operations: fix callback scope
  * pubsub_server: robustify PubsubItemsRequest
  * operations: syntax
  * pubsub_server, operations: support for RetrieveItems by itemIds
  * build_binary.sh: bump node.js version to 0.6.10
  * buddycloud-server 0.2.0
  * operations: CreateNode should not allow creation with empty nodeUser username
  * operations: fix CreateNode defaults & creationDate
  * operations: fix CreateNode isTopic switcheroo
  * router: fix autosubscribeNewUsers operation name
  * router: autosubscribeNewUsers
  * config.js.example: default checkCreateNode hook checks for a specific topic domain
  * operations: fix CreateNode node typo
  * operations: fix CreateNode config
  * pubsub_server, operations: CreateNode with optional config
  * operations: fix CreateNode setSubscription()
  * operations: CreateNode catches missing checkCreateNode hook
  * operations: CreateNode default config
  * checkCreateNode config hook
  * model_postgres: fix getOwnersByNodePrefix SQL
  * operations: fix CreateNode setAffiliation()
  * operations: fix CreateNode getOwnersByNodePrefix()
  * operations: fix ../util require, CreateNode safety check
  * implement createNode with getOwnersByNodePrefix check
  * operations: begin creating topic channels
  * model_postgres: syntax fix
  * package.json: maintainer update
  * build_binary.sh: update to node 0.6.9
  * buddycloud-server 0.1.11
  * rsm_walk: fix logging
  * operations: checkAccessModel() before checkRequiredAffiliation()!
  * operations: Unsubscribe condition syntax fix
  * package.json: muffin dependency glob seems be incompatible in v3.*
  * operations: checkRequiredAffiliation should ignore no @requiredAffiliation
  * operations: fix isAffiliationAtLeast w/ invalid affiliation
  * jsconfig 0.2.0 is out! w00t!!!
  * Cakefile: lib/version.js from package.json
  * logger: update to ain2 1.0.0
  * main: fix config loading
  * buddycloud-server 0.1.10
  * router: fix syncServer()
  * buddycloud-server 0.1.9
  * bin/buddycloud-server: fix param quoting
  * bin/buddycloud-server: fix $cwd
  * buddycloud-server 0.1.8
  * .npmignore to package up built lib/* instead of src/*
  * build_binary.sh: install devDependencies beforehand
  * build_binary.sh: bump node.js version to 0.6.7
  * util: move getNodeUser(), getUserDomain()
  * main: "server successfully started"
  * sync: fix logging
  * model_postgres: fix writeItem() SQL parameter binding
  * sync: fix PaginatedSynchronization error callback
  * sync: rm TODO note
  * model_postgres: writeItem updated_query
  * operations: logging fixes
  * writeItem: move updated extraction from operations to model_postgres
  * model_postgres: writeItem should also INSERT existing updated value
  * model_postgres: fix syntax
  * model_postgres: SQL fixes
  * operations: PushInbox copies item published date
  * postgres schema: CREATE VIEW open_nodes + usage in model_postgres
  * model_postgres: fix query result handling
  * fix getTopFollowedNodes & getTopPublishedNodes parameters
  * model_postgres: fix SQL INTERVAL syntax
  * operations: BrowseNodes.fetchNodes() needs transaction
  * operations: BrowseNodes.transaction should use @fetchNodes()
  * operations: fetchNodes() typo
  * pubsub_server: browse /top-followed-nodes & /top-published-nodes does not request a particular node
  * getTopFollowedNodes & getTopPublishedNodes w/ XMPP disco interface
  * build_binary.sh: bump to node 0.6.6
  * buddycloud-server 0.1.7
  * package.json: rm cradle dependency
  * logger: syslog only with hostname
  * replace common-logger by underscore.logger
  * update ain2 dependency for node v0.6 compatibility
  * model_postgres walkListenerArchive: replace DISTINCT with GROUP BY
  * model_postgres: fix config order/limig
  * operations: ReplayArchive sorts results before capping
  * ReplayArchive/walkListenerArchive: properly cap result set
  * operations: ReplayArchive default max=50
  * build_binary.sh: use $PREFIX from environment if present
  * package.json: req node-stringprep >=0.1.1
  * router: fix
  * buddycloud-server 0.1.6
  * update to new node-waf paths
  * build_binary.sh: switch to node 0.6.4
  * package.json: depend on 0.3.1
  * router: RSM usage fix
  * logger: open logFile for appending, fixes issue #25
  * package.json: depend on node-xmpp >= 0.3.0
  * operations ReplayArchive: fix rsm max
  * operations: ReplayArchive RSM support
  * backend_pubsub: notificationPush updates include sender & actor
  * router: detectUserType fixes
  * router: detectUserType fixes
  * logger: fix argument iteration
  * main, backend_pubsub: logging improvements
  * backend_pubsub: include user in notfound error
  * connection: loopback stanzas to ourselves
  * router: add missing util.inspect include
  * router.run: trace req
  * router: add missing rsm include
  * logger: typo
  * logger: fix level
  * logging clean-up
  * router, pubsub_{server,client}: @type in <actor/>
  * buddycloud-server 0.1.5
  * router: sync fixes
  * buddycloud-server 0.1.4
  * ManageNodeAffiliations: non-owner may not elect a new owner
  * sync: log upon completion
  * sync: transaction fix
  * move some sync logic into router, lock per node
  * operations: BrowseNodeInfo/RetrieveNodeConfiguration w/o access control
  * buddycloud-server 0.1.3
  * operations: deny Unsubscribe from own nodes
  * logger: ain2 syslog transport
  * logger: message always as string
  * main: fix --stdout kludge
  * logger: avoid log level < 0
  * config.js.example: syslog on by default
  * config.js.example: logging section
  * syslog support with ain2
  * support --stdout logging
  * replace cnlogger by common-logger
  * buddycloud-server 0.1.2
  * build_binary: npm install globally (into /opt/buddycloud-server/)
  * build_binary: dedup node & npm versions
  * build_binary: default to /opt/buddycloud-server, bin/ script
  * main: process.title fix
  * version: fix package.json path
  * version from package.json in process.title and for jabber:iq:version
  * xmpp/connection: do not subscribe in probePresence()
  * buddycloud-server 0.1.1
  * build_binary: bump node & npm versions
  * backend_pubsub: reply() must also copy 'replay' field on MaxStanzaSizeExceeded
  * connection: more stanza output when MaxStanzaSizeExceeded
  * don't send ReplayArchive notifications to all online resources
  * pubsub_client/connection: wrap error replies into StanzaError earlier
  * logging fixes
  * port to cnlogger
  * port to broken winston logging
  * xmpp connection: always tell node-xmpp to reconnect
  * async.filter iterator does not take error parameter
  * model_postgres: fix nodeExists warning
  * backend_pubsub: fix notification matching
  * sync: fix router.authorizeFor() usage
  * sync: writeItem does not need author anymore
  * operations: typo
  * model_postgres: fix getListenerAffiliations() query
  * sync: careful
  * xmpp/forms: oops, s/creationTime/creationDate/
  * xmpp/connection: fix name
  * router: check for anonymous user to be online
  * anonymous user offline tracking & clean-up
  * model_postgres: fix walkListenerArchive() node in results
  * router: fix method binding
  * model_postgres: walkListenerArchive() should include node in results
  * operations: RemoveUser & model_postgres.getUserRemoteSubscriptions() & clearUserSubscriptions()
  * BuddycloudDiscovery::detectAnonymousUser
  * backend_pubsub: gracefully handle MaxStanzaSizeExceeded for notifications
  * xmpp pubsub_server & connection: fix graceful MaxStanzaSizeExceeded handling
  * errors: MaxStanzaSizeExceeded extends Error
  * operations: s/geoloc/geo/
  * operations: /subscription items shall contain jid=owner
  * metadata buddycloud#channel_type
  * proper metadata field names
  * support for creationDate
  * operations: clarify logging
  * router: fix remote backend selection
  * operations: Unsubscribe refactor & fix
  * operations: fix Register
  * buddycloud-server 0.1.0
  * operation: print opName on commit, rm debug
  * bin/buddycloud-server: don't cd so config can be loaded relatively
  * Merge remote-tracking branch 'origin/cli'
  * operations: RetractItems should allow anyone to remove their own posts
  * operations: preserve affiliation if previously affiliated
  * operations: unify into isAffiliationAtLeast()
  * operations: rm leftover TODO note
  * operations: refactor Register; should check if authoritative for user's domain
  * router.run: return 404 for nodes not locally subscribed but discovered ourselves
  * rm explicit author handling in postgres schema, model, operations
  * main: check sender authorization for authorizationPrompt
  * operations: RetrieveItems shall not virtualize items for cache case of remote nodes
  * Revert "Made the ownership of tables really clear. Should help avoid the problem that DD had the other day."
  * s/channel-server/buddycloud-server/g
  * build_binary.sh: fix invokation hint
  * README: rm some outdated stuff
  * main: fix defaultConfig stuff
  * build_binary.sh
  * operations: RetrieveItems.retrieveSubscriptionsItems() result set sorting, affiliations
  * virtual handling of /user/.../subscriptions node items
  * MAM replays subscription authorization requests
  * more authorization stuff
  * fixes
  * small fixes
  * package.json: fix bin path
  * further authorizationPrompt work
  * backend_pubsub: missedSomething was missing
  * package.json: fix coffeescript path (./node_modules/...)
  * sending authorize notification forms
  * package.json: fix .coffee compilation stage
  * operations: PrivilegedOperation.fetchActorAffilliation fetches all listener affiliations for inbox sync
  * pubsub_notifications: fix MAM stanzas
  * operations: subscribe defaultAffiliation, fixes
  * model_postgres: many fixes
  * operations: publishModel 'subscribers'
  * operations: access control fixes
  * begin access control, affiliations checking
  * model_postgres: fixes
  * errors: fix error classes
  * xmpp/connection: fix
  * xmpp/connection: fix @missedServerTimeouts usage
  * model_postgres: safety checks
  * readability, notes
  * rsm_walk: fix serious errors
  * globally refactor operation from function to value
  * sync: fixes
  * add forgotten rsm_walk file
  * move syncQueue from main.coffee to fine-grained sync.syncNode
  * xmpp/connection: readability
  * xmpp/connection: track <you-missed-something/> timers with @missedServerTimeouts
  * syncServer support, wired up to <you-missed-something/> 'syncNeeded'
  * model_postgres: for an actor, getSubscriptions() shall return not only users but also listeners
  * MAM time specification
  * primitive MAM implementation
  * send <you-missed-something/>
  * operations: PushInbox TODO note
  * sync: rm request.rsm.max clamp
  * synchronization with state resetting and subscriptions/affiliations support
  * pubsub_*: fix user/jid conventions
  * ConfigSynchronization should use browse-node-info to get node config
  * synchronizing!
  * synchronization kinda works, but hits RSM loops
  * further synchronization progress
  * begin synchronization
  * main: require async
  * measure stanza size, gracefully retry with smaller result set
  * synchronization groundwork
  * don't let backend_pubsub call router.runLocally(), return errors.SeeLocal() instead
  * errors: clean up
  * normalize: add <link rel="self" href="xmpp:...?pubsub;action=retrieve;..."/>
  * operations: Publish shall allow new items with specified @id
  * nodes browsing, with RSM
  * backend_pubsub: run() should bail out early on invalid node form
  * PostgreSQL tuning
  * complete RSM implementation
  * begin RSM for all operations
  * generify RSM stuff
  * pubsub_client: RSM
  * fixes from CCCamp11
  * RSM for local items retrieving
  * begin new RSM implementation
  * pubsub_server: publish-node-items shall reply with item ids
  * model_postgres: fix getNodeListeners() SQL
  * model_postgres: nodeExists() shall check for NOT NULL
  * model_postgres: getNodeListener() replace filter by SQL
  * model_postgres: getNodeListener() filter for null
  * model_postgres: fix setSubscription() INSERT w/o listener
  * error printout
  * forms: fix
  * operations: PushInbox author fix
  * debug
  * xml child robustness
  * model_postgres: fix nodeExists()
  * fix subscription listener for local users
  * logging cleanup
  * initiate presence tracking of users
  * xmpp/connection: use send() instead of specifying from jid
  * some logging cleanup
  * operations: push-inbox does not set subscription listener
  * fixes & TODO notes
  * operations: Notify.transaction() must call cb()
  * retrieve-node-configuration
  * forms: configToResultForm -> configToForm
  * pubsub_client: RetrieveNodeConfiguration & ManageNodeConfiguration
  * operations: catch reply cb exceptions
  * create-node operation
  * package.json: scripts
  * fixes
  * fix outgoing notifications
  * generify pubsub_notifications
  * many fixes for subscription pushing
  * router: if request writes, always go remote
  * push incoming notifications to local model
  * more subclassing of EventEmitter, incoming notifications handling
  * pubsub_server: unify PubsubRequest & PubsubOwnerRequest
  * merge request.coffee into pubsub_server.coffee
  * begin remote subscription pushing to local inbox
  * backend_pubsub: PubsubBackend.notify(): readability
  * tune to use single cb() instead of req.{reply,replyError}()
  * revive normalization
  * model_postgres: setSubscription(): coearce isSet to boolean
  * model_postgres: catch lost transactions
  * pubsub_client: error reporting, fix
  * subscribe reply status
  * model_postgres: setAffiliation() should check nodeExists()
  * fix disco.authorizeFor() usage
  * pubsub_client: fix <actor/> placement
  * refactor notifications a bit
  * pubsub_client: <actor/> placement fix
  * pubsub_client: fix <actor/> placement
  * pubsub_notifications: subscriptions/affiliations/config
  * fix registration/model callback parameters
  * operations: ManageNodeAffiliations validates accessModel & publishModel
  * setting configuration
  * fixes, fixes, config
  * only RegisterSetRequest should induce presence subscription
  * FIXME note
  * model_postgres: do not use rowCount
  * operations: Register created default configuration
  * pubsub_server: pubsub/inbox identity
  * fixes, StanzaError
  * implement pubsub_client operations
  * pubsub_notifications: byOperation()
  * fixes
  * fixes
  * fixes & debugging
  * fixes
  * debugging & fixes
  * fixes
  * begin discovering locally
  * fixes
  * Router.run: fix
  * fixes
  * operations: rename channel node to "posts"
  * begin notifications
  * a bit o' twiddling w/ subscription listeners
  * refactor router for remote requests
  * operations: subscribe/unsubscribe toggle affiliation none/member
  * router: rename frontend to backend
  * rename backend_postgres to model_postgres, revive router
  * main: move iqHandler to pubsub_server
  * manage, not only retrieve, subscriptions & affiliations
  * use subscribe sender as notification listener
  * backend_pubsub: replace ternary operator
  * need to store listener in subscriptions...
  * backend_pubsub: implement RequestCache
  * new untested buddycloud discovery with backend_pubsub.coffee
  * retrieve <actor/> generalized, begin using authorizeFor
  * ns: add BUDDYCLOUD_V1 xmlns
  * postgres.sql schema: updated column for more tables, author column for items
  * retrieving node affiliations
  * retrieving node subscriptions, fixes
  * backend_postgres: syntax fixes
  * operation: Register should set affiliation & subscription
  * retrieving subscriptions & affiliations
  * retracting items
  * publishing & retrieving items works
  * begin item retrieving
  * subscribe & unsubscribe
  * fix backend_postgres (user is a Pg keyword, must be quoted as column name)
  * publishing works
  * lots of fixes
  * fix disco requests
  * fix, fix, fix
  * begin implementing register & publish implementation
  * mv src/operations.coffee src/local/operations.coffee
  * revive backend
  * primitive operations
  * mv controller.coffee operations.coffee
  * dead code TODO
  * fixes
  * rm old dead code
  * rename iqhandler to request
  * begin some refactoring
  * begin hooking up handlers with operations
  * xmpp/pubsub_server: indicate operation types
  * notes
  * pubsub_server: PubsubOwnerHandlers
  * pubsub_server: flesh out more pubsub handlers
  * add affiliations checking
  * begin interweaving with local operations
  * a tad of interconnecting
  * pubsub_server: DiscoInfoHandler.reply()
  * xmpp client 'n stuff
  * README: draw new design
  * begin router
  * xmpp: move NS_* to ns.coffee
  * xmpp: primitive disco info works
  * begin iqhandler
  * xmpp/connection: port presence tracking
  * rm main.js
  * move src files around
  * rm model_couchdb from config, add preliminary main.coffee
  * a bit new controller
  * rm old test_controller
  * some controller work
  * old controller translated to coffeescript
  * port peripheral stuff over to coffeescript
  * README: change ejabberd port to the config default one
  * model_couchdb: s/doc.subscribers/doc.subscriptions/
  * xmpp_pubsub.js: fix typo
  * model_postgres: check nodeExists before any data modification
  * preliminary RSM (XEP-0059) implementation for retrieve-items/retrieve
  * model_couchdb: stub getUpdatesByTime()
  * MAM should result in direct message, not broadcast notification to all resources
  * MAM w/ working model_postgres backend
  * begin implementing MAM
  * controller: register/register should create /user/<jid>/subscriptions node
  * normalize fixes + tests
  * normalize
  * only one child element per item
  * model_postgres: fix setConfig()
  * model_postgres: listNodesByUser()
  * model_couchdb: listNodesByUser(), simplify listNodes()
  * controller, xmpp_pubsub: browse-nodes/by-user
  * model_postgres setConfig(): fixes
  * configuration notification
  * model_postgres setConfig(): do not set fields unspecified/without defaultConfig
  * model_postgres nodeExists(): indentation
  * controller: subscribe should not require preexisting affiliation
  * xmpp_pubsub: fix manage-subscriptions/retrieve result usage
  * controller: allow retrieving subscriptions & affiliations for members
  * xmpp_pubsub: syntax fix
  * model_postgres: fix queue pushing
  * xmpp_pubsub: fix info discovery reply FORM_TYPE
  * model_postgres: config fixes
  * more on extended config
  * model_couchdb, model_postgres: more flexible config schema
  * config: description, type, creationDate; setConfig() on create-node/register
  * xmpp_pubsub: optimize presence tracking
  * controller: requiredAffiliation='member' for config-node/retrieve
  * README: OpenFire
  * controller: defaultConfig() + use in feature 'config-node'
  * xmpp_pubsub: replace isOnline() with getOnlineResources()
  * model_postgres: fix transaction dequeueing
  * model_postgres: move cb() past process.nextTick/dbIsAvailable for safety
  * model_postgres: work around empty responses
  * test_controller: retract
  * xmpp_pubsub: disco <identity/> according to discovered @node
  * test_controller: browse-nodes
  * model_couchdb: fix preload() etag extraction + error reporting
  * xmpp_pubsub: FeatureNotImplemented message
  * controller: simulate a stack for debug info
  * test_controller: retract skeleton
  * controller unsubscribe: do not fetch affiliation from database but check by node path
  * implement & test unsubscribe
  * test_controller: skeletons
  * test_controller: publishing tests
  * test_controller: more publish testing + controller fix
  * test_controller: begin test publishing
  * model_postgres: fix forgotten variable
  * model_postgres: reconnect to database upon error
  * model_postgres: oops, syntax error
  * config.js.example: postgres is actually the one with a poolSize
  * model_postgres: oops, syntax errors
  * begin test_controller
  * fixes
  * subscriptionModified <message/>
  * xmpp_pubsub: "message" & approve() fixes
  * controller: replace ownerNotification with afterTransaction
  * access_model authorize
  * package.json & README
  * errors: pull inherits() from util/utils/sys for moving node api
  * browse open nodes with service discovery items
  * controller: refactor affiliations checking
  * xmpp_pubsub: fix subscriptions format
  * controller: treat missing accessModel as 'open'
  * model_couchdb: preload() etag fix
  * .gitignore with config.js
  * xmpp_pubsub: node config on disco info
  * model_couchdb: encodeURIComponent() only for db.head() & .get()
  * main.js: #!
  * rename config.js to config.js.example
  * restore default config.js
  * main.js: on uncaughtException
  * postgres doc & config
  * model_postgres
  * model_couchdb: fix item deserialization
  * model_couchdb: rm implemented TODOs
  * README: CouchDB configuration
  * README: TODO++
  * LICENSE
  * README: markdown fix
  * README: mention buddycloud :)
  * model_couchdb: fix views initialization
  * README & config
  * jabber:iq:register
  * model_couchdb: fixes
  * errors fixing
  * rm model_persistence
  * model_couchdb: assertNodeName()
  * main: catch uncaughtException
  * controller: fix
  * bugs, readability
  * model_couchdb: fixing
  * controller: implement affiliations checking
  * xmpp_pubsub: getAffiliations() result is now Array
  * model_couchdb: setSubscription() & setAffiliation() 'none'
  * model_couchdb: consolidate subscriptions & affiliations model
  * xmpp_pubsub: send notifications with type='headline'
  * xmpp_pubsub: subscribeIfNeeded() on <create/> & <subscribe/>
  * model_couchdb: load() shortcut when already cached
  * model_couchdb: createNode() fix
  * model_couchdb: preload()
  * model_couchdb: commit read documents too for integrity
  * model_couchdb: abstract views
  * CouchDB Optimistic Concurrency Control layer
  * controller: improve error propagation
  * defined error conditions
  * untested configuration getting/setting
  * service discovery
  * modify-affiliations
  * model_couchdb: getAffiliation()
  * begin permission checking infrastructure
  * presence probes
  * xmpp_pubsub: presence tracking
  * refactoring controller complete
  * continue refactoring controller into features/operations
  * begin refactoring controller into features/operations
  * subscribers
  * getting subscriptions & affiliations
  * createNode improvements
  * controller createNode: check node
  * model_couchdb: affiliations view
  * items getting
  * much more progress
  * implement retraction, s/notifySubscriber/notify/, s/writeItems/writeItem/
  * publish notification works
  * more frontend hooking
  * begin notification hooks
  * fixes
  * begin model_couchdb transactions
  * split model
  * some progress
  * some progress
  * createNode creates owner affiliation
  * model: indexes
  [ Thomas Jost ]
  * Add @denisw to contributors
  * Upgrade required node version to 0.8
  * We actually need remote subscriptions nodes
  * Merge branch 'feature/anon-fixes' into develop
  * Merge branch 'feature/really-validate-post-times' into develop
  * Reject remote posts with invalid dates
  * Add tests for remote posts with invalid dates
  * Force anon subscriptions to be temporary
  * Set default affiliation to 'none' for anon users
  * Merge branch 'feature/anon-fixes' into develop
  * Cleanup: remove some dead code
  * Purge remote nodes with no local subscription left
  * Merge branch 'feature/recent-items' into develop
  * Merge branch 'feature/validate-remote-items' into develop
  * Sort recent items by update time
  * Merge branch 'feature/validate-remote-items' into feature/recent-items
  * Fix tests that push remote items
  * Validate remote items
  * Add (failing) tests for invalid remote items
  * Implement recent items query
  * Add (failing) test for recent items query
  * PubSub replies can include several elements
  * Merge branch 'feature/pusher' into develop
  * Workaround callback woes
  * Fix MAM for pusher component
  * Pusher: test MAM
  * test_server: move makePublishIq into TestServer
  * Pusher: test node configuration
  * Pusher: test unsubscriptions
  * Merge branch 'feature/affiliations-fixes' into develop
  * Merge branch 'feature/pubsub-disco-features' into develop
  * Cleanup
  * Expose all implemented PubSub features
  * Pusher: test affiliations
  * Merge branch 'feature/affiliations-fixes' into feature/pusher
  * Fix affiliation in /subscriptions notifications
  * Accept PubSub-compliant affiliations notifications
  * Pusher: test subscriptions
  * Merge branch 'feature/fix-98' into develop
  * Fix SQL for updating replies
  * Add failing test for issue #98
  * Fix offline user cleanup
  * DB: drop anonymous column
  * Yet another federation test
  * Check if the example config file is valid JS
  * Add tests for pusher code
  * Pusher can MAM everything
  * Pusher is a listener for all notifications
  * Add config for pusher component
  * Merge branch 'feature/mam-fixes' into develop
  * Increase the default number of items in a MAM response
  * Make MAM return an error if there are too many results
  * Use RSM in MAM
  * Test MAM RSM
  * MAM: filter bad dates out
  * Test if MAM validates dates correctly
  * Ensure the giant MAM test doesn't pollute the test environment
  * Make affiliations notifications PubSub-compliant
  * Affiliations have update timestamps too
  * Avoid temporary subscriptions in MAM results
  * Advertise support for MAM in disco#info
  * Add a giant MAM test
  * Update Travis URL in README.md
  * Merge branch 'feature/tests' into develop
  * Correctly tests that updated items don't change <in-reply-to/>
  * Move tests on updated items to a different function
  * Add tests for updates that change <in-reply-to/>
  * Use Travis to automate testing
  * Merge branch 'master' into develop
  * Add compatibility with PostgreSQL 9.1
  * Require at least one item to retract
  * Add Emacs folding marks
  * Add retrieve and retract tests
  * Fix retraction stanza sent to remote services
  * Tombstones: include Atom namespace in <updated/> element
  * Fix error when not allowed to retract an item
  * Tombstones can't be updated
  * When publishing an update, check if the actor is the original author
  * Check if original post exists before publishing a reply
  * Reject posts from non-users
  * Don't include type in <actor/>
  * Complete post/update/retract tests
  * TestServer: fix Atom in-reply-to element
  * Fail when some unwanted event happens
  * Add description for calls to "should.exist"
  * Retraction tests
  * Workaround CoffeeScript weird scoping rules
  * Add another batch of tests
  * Update test data
  * Change the way the test server emits IQ stanzas
  * Tests for posting to remote channels
  * Test server: emit event for IQs with unknown ID
  * Test server: disco info for "remote" servers
  * More post tests
  * Add helper to run tests that trigger several different stanzas
  * Test server: handle <message/> stanzas
  * Add post tests
  * Post tests: helper to check if post was successful
  * Throw an exception when getting an unexpected error IQ
  * Start adding post tests
  * Add helpers for pubsub get IQs and Atom handling
  * Helpers to add initial test data in the database
  * Add XMPP namespaces to test_server.coffee
  * Reply to presence probes
  * Don't parse Elements again
  * Use same user and server names as in sfc
  * Safe path handling in prepare-db.sh
  * Add codo-like doc to the TestServer class
  * Add helpers to build disco and pubsub IQs
  * Expose support for PubSub node creation
  * Skip a test
  * More channel creation tests
  * New tests and helpers for forms
  * Add a helper to parse disco#info replies
  * Move common disco replies to test_server.coffee
  * Start testing for channel creation
  * Test server: handle disco#items queries
  * Make tests runnable using "npm test"
  * Basic disco tests
  * Start a test suite
  * Use an existing component connection if provided in config
  * Make it possible to require() the server
  * Update config.js.example
  * Fix autosubscribeNewUsers
  * Increase the max number of items in each RSM page
  * Better shrinking of oversized stanzas
  * Include `-dirty' in version number from git
  * Remove glob from dependencies
  * Fix indentation in main.coffee
  * Prevent existing persistent subscription from being made temporary
  * Merge branch 'feature/version-number-from-git' into develop
  * Expose support for XEP-0092 (Software Version) in disco
  * Use `git describe' to get version numbers in dev branches
  * Merge branch 'master' into next
  * Restore compatibility with Node 0.6
  * Fix handling of offline users
  * Avoid race condition in disco cache
  * Shrink oversized stanzas more aggressively
  * Avoid nulls
  * Include new files in release tarball
  * Avoid race condition in disco cache
  * Merge remote-tracking branch 'upstream/tempsub' into next
  * Merge branch 'db-versioning' into next
  * buddycloud-server 0.3.5
  * Check if remote supports temporary subscription before sending a tempsub request
  * Client can check for server features before sending an IQ
  * Make server features discoverable
  * Log errors when processing incoming messages
  * Cleanup
  * Remove empty text nodes from items
  * Fix ActivityStreams verb for replies
  * Include operation name in debug message
  * Don't notify unsubscribe when it was a temporary subscription
  * Offline user cleanup: do real unsubscribe operations
  * I'm dumb
  * Don't delete temporary subscriptions during sync
  * Don't send any notification for temporary subscriptions
  * Client and server must speak the same language
  * Only send notifications about temporary subscriptions to remote listeners
  * Cleanup offline users
  * Claim we support subscription options
  * Temporary subscriptions
  * Fix updating items
  * Add help channels to default autosubscriptions
  * Merge branch 'log-fix'
  * Inspect objets in log messages
  * Fix broken log messages
  * Don't write subscription stanzas in items table
  * Merge remote-tracking branch 'lloyd/config'
  * Populate in_reply_to column when inserting new items
  * DB cleanup at startup
  * Add README for DB schema versioning
  * Upgrade DB schema
  * Check DB schema version on startup
  * Don't change <published/> when updating an existing post
  * Fix subscription to remote private channels
  * Don't fail when the default config file does not exist
  * Add Lloyd in contributors
  * Better logging for replies sent by 'proxy' components
  * Merge branch 'mam-result'
  * Include <result/> in MAM replies
  * Merge remote-tracking branch 'schnouki/atom-tombstones'
  * Fix typo
  * Merge pull request #61 from lloydwatkin/no-mod_disco
  * Also send tombstones in retract notifications
  * Use Atom tombstones for deleted items
  * xmpp: XEP-0313 compliance
  * Handle PubSub retract "notify" attribute
  * operations: fix PushInbox notification
  * Fix undefined variable when paging backwards in RSM
  [ Tuomas Koski ]
  * Merge pull request #59 from lloydwatkin/initialise-sync
  * Merge pull request #58 from lloydwatkin/master
  [ Steven Lloyd Watkin ]
  * Ensure we do not cause BC breaks
  * Make both defaults positive rather than one positive & the other negative Broke the config options down further
  * Fix build console output
  * "package" now a reserved word in node, caused failing in builds (v0.6.15+)
  [ Denis Washington ]
  * Use local CoffeeScript "cake" for "npm install"
  [ Jonas Smedegaard ]
  * Setup access rights and needed dirs when starting daemon
  * Speedup system shutdown by avoiding explicit sysV stop
  * xmpp_pubsub: check for commandEl prior usage
  [ Reginald dude ]
  * updates sent via email from vorner.cz
  * updates sent via email from vorner.cz
  [ Reginald Dude ]
  * Most confusing config file ever
  [ ▟ ▖▟ ▖ ]
  * Merge pull request #70 from lloydwatkin/fix-is-function
  * Merge pull request #63 from lloydwatkin/no-mod_disco
  * Merge pull request #62 from lloydwatkin/no-mod_disco
  * Merge pull request #57 from Schnouki/xep-0313
  * Merge pull request #54 from Schnouki/fix-notif
  * Merge pull request #52 from lloydwatkin/master
  * Merge pull request #51 from lloydwatkin/master
  [ James Tait ]
  * Ensure both the PID dir and log dir are created on startup if they do not already exist.
  [ imaginator ]
  * aligning with INSTALL instructions
  * moved instructions to wiki
  * Edited README.md via GitHub
  [ dodo ]
  * fix accessModel of geo nodes
  * always test in production
  * buddycloud-server 0.3.4
  * Merge branch 'packaging'
  * put the /etc/init.d script into tarball
  * not needed anymore
  * default options for new channels
  * bump tarballify version
  * add bin/buddycloud-server to the tarball
  * no build step in bin/buddycloud-server anymore
  * print additional info messages in gray
  * fix 'file is not defined'
  * fix 'modName is not defined'
  * colorful output for package.js
  * bump tarballify version
  * rm trailing spaces
  * no build_binary.sh needed
  * separate devDependencies
  * export name
  * use packaging script
  * buddycloud-server 0.3.3
  * pass prefix to npm to force npm to use that particular prefix
  * $PREFIX/bin/buddycloud-server can be nonexistant .. so ignore all errors when removing
  * bump node version in build script
  * merge issue #37
  * specify interal config file as defaults, not as main config
  * backports to node 0.4
  * concat cwd path to config path only when config path is relative
  * respect the cwd
  * move to the right dir before builing
  * wscript is not needed anymore
  * merged #31. symlink detection for bin/buddycloud-server thanks to @highfellow
  * fixed gitignore
  * forgot Cakefile
  * pin node version for over 0.5 to get the require json working
  * get version directly
  * new buildsystem
  * check if config.syslog has keys
  * dont load default config over opts and args
  * main: fix config loading
  * wscript fixes
  * load config via jsconfig
  * update wscript
  * upgrade build environment
  * update requirements in readme
  * cleanup files
  [ Simon Tennant ]
  * Update config.js.example
  * change to read config file from /opt/buddycloud
  * Update master
  * don't be so --quiet (will help a lot with debugging)
  * Update _etc_init.d_buddycloud-server
  * the orwell defeault was causing jdesenberg problems.
  * Fixed the permissions to run as.
  * Update _etc_init.d_buddycloud-server
  * init script
  * make it really clear what to change (and what "jid" refers to)
  * Made the ownership of tables really clear. Should help avoid the problem that DD had the other day.
  [ Lloyd Watkin ]
  * Fix for checking of child element
  * Catch error event
  * Fix for server reset
  * Updated variable names to better describe what config does.
  * Merge branch 'master' of git://github.com/buddycloud/buddycloud-server into no-mod_disco
  * Allow buddycloud server to advertise additional 'proxy' components
  * Wait to sync
  * Rename of parameter
  * Allow user to specify a port or not, changed argument name as it may not actually be remote debugging.
  * Tidy up
  * Allow node.js debugging
  [ Simon ]
  * /etc/init.d/buddycloud-server

 -- Abmar Barros (buddycloud Nightly Builds) <abmar@buddycloud.com>  Sun, 27 Jan 2013 03:35:44 -0300


